KIDS Distribution saved on Feb 19, 2013@12:06:32
CPRS29V21 AND REQUIRED PATCHES
**KIDS**:OR GMPL GMTS XU 29 1.0^GMPL*2.0*36^GMTS*2.7*86^OR*3.0*306^XU*8.0*609^

**INSTALL NAME**
OR GMPL GMTS XU 29 1.0
"BLD",8128,0)
OR GMPL GMTS XU 29 1.0^^1^3130219^y
"BLD",8128,6.3)
34
"BLD",8128,10,0)
^9.63^4^4
"BLD",8128,10,1,0)
GMPL*2.0*36^1
"BLD",8128,10,2,0)
GMTS*2.7*86^1
"BLD",8128,10,3,0)
OR*3.0*306^1
"BLD",8128,10,4,0)
XU*8.0*609^1
"BLD",8128,10,"B","GMPL*2.0*36",1)

"BLD",8128,10,"B","GMTS*2.7*86",2)

"BLD",8128,10,"B","OR*3.0*306",3)

"BLD",8128,10,"B","XU*8.0*609",4)

"BLD",8128,"INID")

"BLD",8128,"PRE")

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
GMPL*2.0*36
"BLD",7028,0)
GMPL*2.0*36^PROBLEM LIST^0^3130219^y
"BLD",7028,1,0)
^^2^2^3121130^
"BLD",7028,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",7028,1,2,0)
under GMPL*2.0*36.
"BLD",7028,4,0)
^9.64PA^9000011^3
"BLD",7028,4,125.12,0)
125.12
"BLD",7028,4,125.12,2,0)
^9.641^125.12^1
"BLD",7028,4,125.12,2,125.12,0)
PROBLEM SELECTION CATEGORY CONTENTS  (File-top level)
"BLD",7028,4,125.12,2,125.12,1,0)
^9.6411^6^2
"BLD",7028,4,125.12,2,125.12,1,5,0)
SNOMED CT CONCEPT CODE
"BLD",7028,4,125.12,2,125.12,1,6,0)
SNOMED CT DESIGNATION CODE
"BLD",7028,4,125.12,222)
y^n^p^^^^n^^n
"BLD",7028,4,125.12,224)

"BLD",7028,4,125.99,0)
125.99
"BLD",7028,4,125.99,2,0)
^9.641^125.99^1
"BLD",7028,4,125.99,2,125.99,0)
PROBLEM LIST SITE PARAMETERS  (File-top level)
"BLD",7028,4,125.99,2,125.99,1,0)
^9.6411^3^1
"BLD",7028,4,125.99,2,125.99,1,3,0)
*USE CLINICAL LEXICON
"BLD",7028,4,125.99,222)
y^n^p^^^^n^^n
"BLD",7028,4,125.99,224)

"BLD",7028,4,9000011,0)
9000011
"BLD",7028,4,9000011,222)
y^n^f^^^^n
"BLD",7028,4,"APDD",125.12,125.12)

"BLD",7028,4,"APDD",125.12,125.12,5)

"BLD",7028,4,"APDD",125.12,125.12,6)

"BLD",7028,4,"APDD",125.99,125.99)

"BLD",7028,4,"APDD",125.99,125.99,3)

"BLD",7028,4,"B",125.12,125.12)

"BLD",7028,4,"B",125.99,125.99)

"BLD",7028,4,"B",9000011,9000011)

"BLD",7028,6)
1^
"BLD",7028,6.3)
65
"BLD",7028,"ABPKG")
n
"BLD",7028,"INI")

"BLD",7028,"INIT")
POST^GMPLY36
"BLD",7028,"KRN",0)
^9.67PA^8989.52^19
"BLD",7028,"KRN",.4,0)
.4
"BLD",7028,"KRN",.401,0)
.401
"BLD",7028,"KRN",.402,0)
.402
"BLD",7028,"KRN",.403,0)
.403
"BLD",7028,"KRN",.5,0)
.5
"BLD",7028,"KRN",.84,0)
.84
"BLD",7028,"KRN",3.6,0)
3.6
"BLD",7028,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",7028,"KRN",3.6,"NM",1,0)
GMPL PROBLEM NTRT BULLETIN^^0
"BLD",7028,"KRN",3.6,"NM","B","GMPL PROBLEM NTRT BULLETIN",1)

"BLD",7028,"KRN",3.8,0)
3.8
"BLD",7028,"KRN",9.2,0)
9.2
"BLD",7028,"KRN",9.8,0)
9.8
"BLD",7028,"KRN",9.8,"NM",0)
^9.68A^21^21
"BLD",7028,"KRN",9.8,"NM",1,0)
GMPLBLD1^^0^B34149613
"BLD",7028,"KRN",9.8,"NM",2,0)
GMPLDISP^^0^B41666174
"BLD",7028,"KRN",9.8,"NM",3,0)
GMPLEDT3^^0^B29964655
"BLD",7028,"KRN",9.8,"NM",4,0)
GMPLMGR^^0^B26246096
"BLD",7028,"KRN",9.8,"NM",5,0)
GMPLMGR2^^0^B27300832
"BLD",7028,"KRN",9.8,"NM",6,0)
GMPLSAVE^^0^B95717448
"BLD",7028,"KRN",9.8,"NM",7,0)
GMPLUTL2^^0^B80938362
"BLD",7028,"KRN",9.8,"NM",8,0)
GMPLX^^0^B82126474
"BLD",7028,"KRN",9.8,"NM",9,0)
GMPLHS^^0^B20917122
"BLD",7028,"KRN",9.8,"NM",10,0)
GMPLX1^^0^B78242398
"BLD",7028,"KRN",9.8,"NM",11,0)
GMPLPRNT^^0^B33959958
"BLD",7028,"KRN",9.8,"NM",12,0)
GMPLUTL3^^0^B16541154
"BLD",7028,"KRN",9.8,"NM",13,0)
GMPLBLD2^^0^B50049989
"BLD",7028,"KRN",9.8,"NM",14,0)
GMPLBLDC^^0^B36845008
"BLD",7028,"KRN",9.8,"NM",15,0)
GMPLUTL^^0^B51218894
"BLD",7028,"KRN",9.8,"NM",16,0)
GMPLENFM^^0^B31415115
"BLD",7028,"KRN",9.8,"NM",17,0)
GMPLHIST^^0^B17659917
"BLD",7028,"KRN",9.8,"NM",18,0)
GMPLBLD^^0^B39542631
"BLD",7028,"KRN",9.8,"NM",19,0)
GMPLUTL1^^0^B58284693
"BLD",7028,"KRN",9.8,"NM",20,0)
GMPLNTRT^^0^B91442393
"BLD",7028,"KRN",9.8,"NM",21,0)
GMPLNTFT^^0^B57123267
"BLD",7028,"KRN",9.8,"NM","B","GMPLBLD",18)

"BLD",7028,"KRN",9.8,"NM","B","GMPLBLD1",1)

"BLD",7028,"KRN",9.8,"NM","B","GMPLBLD2",13)

"BLD",7028,"KRN",9.8,"NM","B","GMPLBLDC",14)

"BLD",7028,"KRN",9.8,"NM","B","GMPLDISP",2)

"BLD",7028,"KRN",9.8,"NM","B","GMPLEDT3",3)

"BLD",7028,"KRN",9.8,"NM","B","GMPLENFM",16)

"BLD",7028,"KRN",9.8,"NM","B","GMPLHIST",17)

"BLD",7028,"KRN",9.8,"NM","B","GMPLHS",9)

"BLD",7028,"KRN",9.8,"NM","B","GMPLMGR",4)

"BLD",7028,"KRN",9.8,"NM","B","GMPLMGR2",5)

"BLD",7028,"KRN",9.8,"NM","B","GMPLNTFT",21)

"BLD",7028,"KRN",9.8,"NM","B","GMPLNTRT",20)

"BLD",7028,"KRN",9.8,"NM","B","GMPLPRNT",11)

"BLD",7028,"KRN",9.8,"NM","B","GMPLSAVE",6)

"BLD",7028,"KRN",9.8,"NM","B","GMPLUTL",15)

"BLD",7028,"KRN",9.8,"NM","B","GMPLUTL1",19)

"BLD",7028,"KRN",9.8,"NM","B","GMPLUTL2",7)

"BLD",7028,"KRN",9.8,"NM","B","GMPLUTL3",12)

"BLD",7028,"KRN",9.8,"NM","B","GMPLX",8)

"BLD",7028,"KRN",9.8,"NM","B","GMPLX1",10)

"BLD",7028,"KRN",19,0)
19
"BLD",7028,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",7028,"KRN",19,"NM",1,0)
GMPL USER LOOK-UP FILTER^^0
"BLD",7028,"KRN",19,"NM",2,0)
GMPL USER LOOK-UP DISPLAY^^0
"BLD",7028,"KRN",19,"NM",3,0)
GMPL USER LOOK-UP VOCABULARY^^0
"BLD",7028,"KRN",19,"NM",4,0)
GMPL NTRT F/U RPT^^0
"BLD",7028,"KRN",19,"NM",5,0)
GMPL MGT MENU^^2
"BLD",7028,"KRN",19,"NM",6,0)
GMPL FREETEXT F/U REPORT^^0
"BLD",7028,"KRN",19,"NM","B","GMPL FREETEXT F/U REPORT",6)

"BLD",7028,"KRN",19,"NM","B","GMPL MGT MENU",5)

"BLD",7028,"KRN",19,"NM","B","GMPL NTRT F/U RPT",4)

"BLD",7028,"KRN",19,"NM","B","GMPL USER LOOK-UP DISPLAY",2)

"BLD",7028,"KRN",19,"NM","B","GMPL USER LOOK-UP FILTER",1)

"BLD",7028,"KRN",19,"NM","B","GMPL USER LOOK-UP VOCABULARY",3)

"BLD",7028,"KRN",19.1,0)
19.1
"BLD",7028,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7028,"KRN",101,0)
101
"BLD",7028,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",7028,"KRN",101,"NM",1,0)
GMPL EVENT^^0
"BLD",7028,"KRN",101,"NM","B","GMPL EVENT",1)

"BLD",7028,"KRN",409.61,0)
409.61
"BLD",7028,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",7028,"KRN",771,0)
771
"BLD",7028,"KRN",870,0)
870
"BLD",7028,"KRN",8989.51,0)
8989.51
"BLD",7028,"KRN",8989.52,0)
8989.52
"BLD",7028,"KRN",8994,0)
8994
"BLD",7028,"KRN","B",.4,.4)

"BLD",7028,"KRN","B",.401,.401)

"BLD",7028,"KRN","B",.402,.402)

"BLD",7028,"KRN","B",.403,.403)

"BLD",7028,"KRN","B",.5,.5)

"BLD",7028,"KRN","B",.84,.84)

"BLD",7028,"KRN","B",3.6,3.6)

"BLD",7028,"KRN","B",3.8,3.8)

"BLD",7028,"KRN","B",9.2,9.2)

"BLD",7028,"KRN","B",9.8,9.8)

"BLD",7028,"KRN","B",19,19)

"BLD",7028,"KRN","B",19.1,19.1)

"BLD",7028,"KRN","B",101,101)

"BLD",7028,"KRN","B",409.61,409.61)

"BLD",7028,"KRN","B",771,771)

"BLD",7028,"KRN","B",870,870)

"BLD",7028,"KRN","B",8989.51,8989.51)

"BLD",7028,"KRN","B",8989.52,8989.52)

"BLD",7028,"KRN","B",8994,8994)

"BLD",7028,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7028,"QUES",0)
^9.62^^
"BLD",7028,"REQB",0)
^9.611^11^10
"BLD",7028,"REQB",1,0)
GMPL*2.0*26^2
"BLD",7028,"REQB",2,0)
GMPL*2.0*27^2
"BLD",7028,"REQB",3,0)
GMPL*2.0*28^2
"BLD",7028,"REQB",4,0)
GMPL*2.0*31^2
"BLD",7028,"REQB",5,0)
GMPL*2.0*35^2
"BLD",7028,"REQB",6,0)
GMPL*2.0*38^2
"BLD",7028,"REQB",8,0)
LEX*2.0*51^2
"BLD",7028,"REQB",9,0)
LEX*2.0*58^2
"BLD",7028,"REQB",10,0)
ICD*18.0*6^2
"BLD",7028,"REQB",11,0)
GMPL*2.0*39^2
"BLD",7028,"REQB","B","GMPL*2.0*26",1)

"BLD",7028,"REQB","B","GMPL*2.0*27",2)

"BLD",7028,"REQB","B","GMPL*2.0*28",3)

"BLD",7028,"REQB","B","GMPL*2.0*31",4)

"BLD",7028,"REQB","B","GMPL*2.0*35",5)

"BLD",7028,"REQB","B","GMPL*2.0*38",6)

"BLD",7028,"REQB","B","GMPL*2.0*39",11)

"BLD",7028,"REQB","B","ICD*18.0*6",10)

"BLD",7028,"REQB","B","LEX*2.0*51",8)

"BLD",7028,"REQB","B","LEX*2.0*58",9)

"FIA",125.12)
PROBLEM SELECTION CATEGORY CONTENTS
"FIA",125.12,0)
^GMPL(125.12,
"FIA",125.12,0,0)
125.12P
"FIA",125.12,0,1)
y^n^p^^^^n^^n
"FIA",125.12,0,10)

"FIA",125.12,0,11)

"FIA",125.12,0,"RLRO")

"FIA",125.12,0,"VR")
2.0^GMPL
"FIA",125.12,125.12)
1
"FIA",125.12,125.12,5)

"FIA",125.12,125.12,6)

"FIA",125.99)
PROBLEM LIST SITE PARAMETERS
"FIA",125.99,0)
^GMPL(125.99,
"FIA",125.99,0,0)
125.99
"FIA",125.99,0,1)
y^n^p^^^^n^^n
"FIA",125.99,0,10)

"FIA",125.99,0,11)

"FIA",125.99,0,"RLRO")

"FIA",125.99,0,"VR")
2.0^GMPL
"FIA",125.99,125.99)
1
"FIA",125.99,125.99,3)

"FIA",9000011)
PROBLEM
"FIA",9000011,0)
^AUPNPROB(
"FIA",9000011,0,0)
9000011IP
"FIA",9000011,0,1)
y^n^f^^^^n
"FIA",9000011,0,10)

"FIA",9000011,0,11)

"FIA",9000011,0,"RLRO")

"FIA",9000011,0,"VR")
2.0^GMPL
"FIA",9000011,9000011)
0
"FIA",9000011,9000011.11)
0
"FIA",9000011,9000011.1111)
0
"FIA",9000011,9000011.803)
0
"INIT")
POST^GMPLY36
"IX",9000011,9000011,"ACR",0)
9000011^ACR^Clinical Reminders index for ICD9 lookup.^MU^^R^IR^I^9000011^^^^^A
"IX",9000011,9000011,"ACR",.1,0)
^^17^17^3041209
"IX",9000011,9000011,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000011,9000011,"ACR",.1,2,0)
all patients with a particular ICD9 code and one for
"IX",9000011,9000011,"ACR",.1,3,0)
finding all the ICD9 codes a patient has. The indexes are
"IX",9000011,9000011,"ACR",.1,4,0)
stored in the Clinical Reminders index global as:
"IX",9000011,9000011,"ACR",.1,5,0)
 ^PXRMINDX(9000011,"ISPP",ICD9,STATUS,PRIORITY,DFN,DLM,DAS)
"IX",9000011,9000011,"ACR",.1,6,0)
 ^PXRMINDX(9000011,"PSPI",DFN,STATUS,PRIORITY,ICD9,DLM,DAS)
"IX",9000011,9000011,"ACR",.1,7,0)
respectively.
"IX",9000011,9000011,"ACR",.1,8,0)
 
"IX",9000011,9000011,"ACR",.1,9,0)
STATUS can be "A" for active or "I" for inactive.
"IX",9000011,9000011,"ACR",.1,10,0)
PRIORITY can be "A" for acute or "C" for chronic. If
"IX",9000011,9000011,"ACR",.1,11,0)
PRIORITY is missing then a "U" will be stored in the index.
"IX",9000011,9000011,"ACR",.1,12,0)
For Problems whose PRIORITY is "C" Clinical Reminders uses
"IX",9000011,9000011,"ACR",.1,13,0)
today's date for the date of the Problem. In all other
"IX",9000011,9000011,"ACR",.1,14,0)
cases Clinical Reminders uses DLM where DLM is the date last modified.
"IX",9000011,9000011,"ACR",.1,15,0)
When Problems are "removed" then CONDITION is set
"IX",9000011,9000011,"ACR",.1,16,0)
to "H" for hidden. Hidden Problems are not indexed.
"IX",9000011,9000011,"ACR",.1,17,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000011,9000011,"ACR",1)
D SPROB^GMPLPXRM(.X,.DA)
"IX",9000011,9000011,"ACR",2)
D KPROB^GMPLPXRM(.X,.DA)
"IX",9000011,9000011,"ACR",2.5)
K ^PXRMINDX(9000011)
"IX",9000011,9000011,"ACR",11.1,0)
^.114IA^6^6
"IX",9000011,9000011,"ACR",11.1,1,0)
1^F^9000011^.01^^1^F
"IX",9000011,9000011,"ACR",11.1,2,0)
2^F^9000011^.02^^2^F
"IX",9000011,9000011,"ACR",11.1,3,0)
3^F^9000011^.03^^3^F
"IX",9000011,9000011,"ACR",11.1,4,0)
4^F^9000011^.12^^4^F
"IX",9000011,9000011,"ACR",11.1,5,0)
5^F^9000011^1.14
"IX",9000011,9000011,"ACR",11.1,6,0)
6^F^9000011^1.02
"IX",9000011,9000011,"DM",0)
9000011^DM^Index on Date Entered & Map Status^R^^R^IR^I^9000011^^^^^LS
"IX",9000011,9000011,"DM",.1,0)
^^2^2^3120607^
"IX",9000011,9000011,"DM",.1,1,0)
This REGULAR new-style index on Date Entered and SNOMED CT to ICD Map 
"IX",9000011,9000011,"DM",.1,2,0)
Status will facilitate the Mapping Follow-up Report.
"IX",9000011,9000011,"DM",1)
S ^AUPNPROB("DM",X(1),X(2),DA)=""
"IX",9000011,9000011,"DM",2)
K ^AUPNPROB("DM",X(1),X(2),DA)
"IX",9000011,9000011,"DM",2.5)
K ^AUPNPROB("DM")
"IX",9000011,9000011,"DM",11.1,0)
^.114IA^2^2
"IX",9000011,9000011,"DM",11.1,1,0)
1^F^9000011^.08^^1^F
"IX",9000011,9000011,"DM",11.1,1,3)

"IX",9000011,9000011,"DM",11.1,2,0)
2^F^9000011^80005^^2^F
"IX",9000011,9000011,"DM",11.1,2,3)

"KRN",3.6,275,-1)
0^1
"KRN",3.6,275,0)
GMPL PROBLEM NTRT BULLETIN^UNMAPPED PROBLEM/DIAGNOSIS NTRT REQUEST^
"KRN",3.6,275,1,0)
^3.61A^41^41^3111003^^^^
"KRN",3.6,275,1,1,0)
             *** Unmapped Problem/Diagnosis NTRT Request ***
"KRN",3.6,275,1,2,0)
 
"KRN",3.6,275,1,3,0)
Selected SNOMED CT term: |1|
"KRN",3.6,275,1,4,0)
  Selected SNOMED CT ID: |2|
"KRN",3.6,275,1,5,0)
      Name of requester: |3|
"KRN",3.6,275,1,6,0)
   Date/Time of request: |4|
"KRN",3.6,275,1,7,0)
                Service: |5|
"KRN",3.6,275,1,8,0)
               Location: |6|
"KRN",3.6,275,1,9,0)
         Search History: |7|
"KRN",3.6,275,1,10,0)
 
"KRN",3.6,275,1,11,0)
A New Term Rapid Turnaround (NTRT) mail message has been sent to the 
"KRN",3.6,275,1,12,0)
Standards & Terminology Services (STS) team, and the site coordinator has 
"KRN",3.6,275,1,13,0)
been copied on the message thread. This is informational only and no work 
"KRN",3.6,275,1,14,0)
is required by the site coordinator for processing of this request.
"KRN",3.6,275,1,15,0)
 
"KRN",3.6,275,1,16,0)
This request is generated when a user from the listed facility selects a 
"KRN",3.6,275,1,17,0)
valid SNOMED CT problem/diagnosis from the extended search option when 
"KRN",3.6,275,1,18,0)
the initial search does not find a suitable term. The selected 
"KRN",3.6,275,1,19,0)
problem/diagnosis already has a SNOMED CT ID, but it will be assigned a 
"KRN",3.6,275,1,20,0)
temporary ICD-9-CM code of 799.9 until a correct ICD-9-CM code is 
"KRN",3.6,275,1,21,0)
assigned 
"KRN",3.6,275,1,22,0)
 
"KRN",3.6,275,1,23,0)
After the SNOMED CT problem/diagnosis term is mapped to a valid ICD-9-CM 
"KRN",3.6,275,1,24,0)
code or set of codes, it will be deployed through the NTRT process and 
"KRN",3.6,275,1,25,0)
become available for selection by all users who use the search function 
"KRN",3.6,275,1,26,0)
within the Problem List application. The ICD-9-CM code 799.9 will be 
"KRN",3.6,275,1,27,0)
automatically updated to the correct ICD-9-CM code after the NTRT 
"KRN",3.6,275,1,28,0)
deployment and will display in the detail view of the patient's problem 
"KRN",3.6,275,1,29,0)
on the Problem List tab. 
"KRN",3.6,275,1,30,0)
 
"KRN",3.6,275,1,31,0)
The status and progress of this request may be monitored by accessing the 
"KRN",3.6,275,1,32,0)
NTRT Web site at http://vista.domain.ext/ntrt/. Follow the link to 
"KRN",3.6,275,1,33,0)
Access the NTRT Request Web Site. This mail message is provided to site
"KRN",3.6,275,1,34,0)
coordinators as information only, since the Problem List domain steward
"KRN",3.6,275,1,35,0)
will be responsible for resolving the unmapped problem/diagnoses requests.
"KRN",3.6,275,1,36,0)
 
"KRN",3.6,275,1,37,0)
If you have questions, need more information, or are having accessibility 
"KRN",3.6,275,1,38,0)
problems with this Web site, please contact STS by Exchange email: [VHA 
"KRN",3.6,275,1,39,0)
OI HDI STS NTRT].
"KRN",3.6,275,1,40,0)
 
"KRN",3.6,275,1,41,0)
Thank you.
"KRN",3.6,275,3,0)
^3.63^7^7^3111025^^^^
"KRN",3.6,275,3,1,0)
This bulletin will be delivered to the G.PROBLEM LIST NTRT Mail Group on
"KRN",3.6,275,3,2,0)
FORUM.  It informs the group that a user at a given facility failed to
"KRN",3.6,275,3,3,0)
find a suitable term in either the Problem List or Clinical Findings
"KRN",3.6,275,3,4,0)
hierarchy of SNOMED CT. The NTRT Terminology Stewards for the Problem List
"KRN",3.6,275,3,5,0)
Domain will consider the request, and inform the facility of their
"KRN",3.6,275,3,6,0)
decision as to whether the new term should be added to the Enterprise
"KRN",3.6,275,3,7,0)
Terminology.
"KRN",3.6,275,4,0)
^3.64A^7^7
"KRN",3.6,275,4,1,0)
1
"KRN",3.6,275,4,1,1,0)
^3.65^1^1^3110413^^^
"KRN",3.6,275,4,1,1,1,0)
Text of the selected SNOMED CT Term.
"KRN",3.6,275,4,2,0)
2
"KRN",3.6,275,4,2,1,0)
^3.65^1^1^3110413^^^
"KRN",3.6,275,4,2,1,1,0)
Selected SNOMED CT ID.
"KRN",3.6,275,4,3,0)
3
"KRN",3.6,275,4,3,1,0)
^3.65^1^1^3110413^^^^
"KRN",3.6,275,4,3,1,1,0)
Name of the Requester.
"KRN",3.6,275,4,4,0)
4
"KRN",3.6,275,4,4,1,0)
^3.65^1^1^3110413^^^^
"KRN",3.6,275,4,4,1,1,0)
Date/Time of the request.
"KRN",3.6,275,4,5,0)
5
"KRN",3.6,275,4,5,1,0)
^3.65^1^1^3110413^^^^
"KRN",3.6,275,4,5,1,1,0)
This is the Hospital Service with which the requester is associated.
"KRN",3.6,275,4,6,0)
6
"KRN",3.6,275,4,6,1,0)
^3.65^1^1^3110413^^^^
"KRN",3.6,275,4,6,1,1,0)
This is the Location (i.e., facility) where the request originated.
"KRN",3.6,275,4,7,0)
7
"KRN",3.6,275,4,7,1,0)
^3.65^1^1^3111003^^^^
"KRN",3.6,275,4,7,1,1,0)
This is the text that the user actually entered.
"KRN",19,8487,-1)
2^5
"KRN",19,8487,0)
GMPL MGT MENU^Problem List Mgt Menu^^M^.5^^^^^^^402^^1^1
"KRN",19,8487,10,0)
^19.01IP^11^11
"KRN",19,8487,10,10,0)
14087^7^7
"KRN",19,8487,10,10,"^")
GMPL NTRT F/U RPT
"KRN",19,8487,10,11,0)
14093^8^8
"KRN",19,8487,10,11,"^")
GMPL FREETEXT F/U REPORT
"KRN",19,8487,"U")
PROBLEM LIST MGT MENU
"KRN",19,10070,-1)
0^1
"KRN",19,10070,0)
GMPL USER LOOK-UP FILTER^Filter^This option is temporarily Out-Of-Order in preparation for the Problem List Prototype.^R^^^^^^^^
"KRN",19,10070,1,0)
^^2^2^2960510^^^^
"KRN",19,10070,1,1,0)
This option lets the user either select or create a filter to use while
"KRN",19,10070,1,2,0)
searching the Lexicon.
"KRN",19,10070,25)
EN1^LEXDFL(4)
"KRN",19,10070,"U")
FILTER
"KRN",19,10071,-1)
0^2
"KRN",19,10071,0)
GMPL USER LOOK-UP DISPLAY^Display^This option is temporarily Out-Of-Order in preparation for the Problem List Prototype.^R^^^^^^^^
"KRN",19,10071,1,0)
^^2^2^2960510^^^
"KRN",19,10071,1,1,0)
This option lets the user either select or create a display format to be used
"KRN",19,10071,1,2,0)
in presenting the selection list during search of the Lexicon.
"KRN",19,10071,25)
EN1^LEXDCC(4)
"KRN",19,10071,"U")
DISPLAY
"KRN",19,10072,-1)
0^3
"KRN",19,10072,0)
GMPL USER LOOK-UP VOCABULARY^Vocabulary^This option is temporarily Out-Of-Order in preparation for the Problem List Prototype.^R^^^^^^^^
"KRN",19,10072,1,0)
^^2^2^2950706^^
"KRN",19,10072,1,1,0)
This option lets the user select a default vocabulary (subset) of the
"KRN",19,10072,1,2,0)
Lexicon to be used during searches (i.e., Nursing, Social Work, etc.).
"KRN",19,10072,25)
EN1^LEXDVO(4)
"KRN",19,10072,"U")
VOCABULARY
"KRN",19,14087,-1)
0^4
"KRN",19,14087,0)
GMPL NTRT F/U RPT^Problem List NTRT Follow-up Report^^A^^^^^^^^PROBLEM LIST^^1
"KRN",19,14087,1,0)
^^5^5^3120510^
"KRN",19,14087,1,1,0)
This report allows sites to evaluate problems with valid SNOMED CT Concept
"KRN",19,14087,1,2,0)
codes, which were unmapped to ICD at the time of entry.
"KRN",19,14087,1,3,0)
 
"KRN",19,14087,1,4,0)
The report may be filtered by Medical Center Division, Provider(s), and 
"KRN",19,14087,1,5,0)
Time Interval.
"KRN",19,14087,20)
D MAIN^GMPLNTRT
"KRN",19,14087,"U")
PROBLEM LIST NTRT FOLLOW-UP RE
"KRN",19,14093,-1)
0^6
"KRN",19,14093,0)
GMPL FREETEXT F/U REPORT^Problem List Freetext Follow-up Report^^A^^^^^^^^PROBLEM LIST^^1
"KRN",19,14093,1,0)
^^2^2^3120510^
"KRN",19,14093,1,1,0)
This report allows sites to evaluate uncoded freetext problems that have
"KRN",19,14093,1,2,0)
been entered by one or more providers over a specified time interval.
"KRN",19,14093,20)
D MAIN^GMPLNTFT
"KRN",19,14093,"U")
PROBLEM LIST FREETEXT FOLLOW-U
"KRN",101,5809,-1)
0^1
"KRN",101,5809,0)
GMPL EVENT^Problem List Update Event^^X^^^^^^^^PROBLEM LIST
"KRN",101,5809,1,0)
^^8^8^3110824^
"KRN",101,5809,1,1,0)
This protocol will be invoked whenever a problem is added or modified via
"KRN",101,5809,1,2,0)
Problem List options or RPC's. It is triggered by setting the Date Last
"KRN",101,5809,1,3,0)
Modified field #.03 of the Problem file #9000011, in the DTMOD^GMPLX
"KRN",101,5809,1,4,0)
function.  The following variables will be available to read and use, but 
"KRN",101,5809,1,5,0)
do NOT kill:
"KRN",101,5809,1,6,0)
 
"KRN",101,5809,1,7,0)
   DFN    = Patient ien, file #2 
"KRN",101,5809,1,8,0)
   GMPIFN = Problem ien, file #9000011 
"KRN",101,5809,10,0)
^101.01PA
"KRN",101,5809,99)
62636,43315
"MBREQ")
1
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",402,-1)
1^1
"PKG",402,0)
PROBLEM LIST^GMPL^Automated Patient Problem List
"PKG",402,20,0)
^9.402P^^
"PKG",402,22,0)
^9.49I^1^1
"PKG",402,22,1,0)
2.0^2940825^2941216
"PKG",402,22,1,"PAH",1,0)
36^3130219^10000000196
"PKG",402,22,1,"PAH",1,1,0)
^^2^2^3130219
"PKG",402,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",402,22,1,"PAH",1,1,2,0)
under GMPL*2.0*36.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","GMPLBLD")
0^18^B39542631
"RTN","GMPLBLD",1,0)
GMPLBLD ; SLC/MKB -- Build Problem Selection Lists ;09/22/11  15:14
"RTN","GMPLBLD",2,0)
 ;;2.0;Problem List;**3,28,33,36**;Aug 25, 1994;Build 65
"RTN","GMPLBLD",3,0)
 ;
"RTN","GMPLBLD",4,0)
 ;This routine invokes IA #3991
"RTN","GMPLBLD",5,0)
 ;
"RTN","GMPLBLD",6,0)
EN ; -- main entry point
"RTN","GMPLBLD",7,0)
 D EN^VALM("GMPL SELECTION LIST BUILD")
"RTN","GMPLBLD",8,0)
 Q
"RTN","GMPLBLD",9,0)
 ;
"RTN","GMPLBLD",10,0)
HDR ; -- header code
"RTN","GMPLBLD",11,0)
 N NAME,NUM,DATE
"RTN","GMPLBLD",12,0)
 S NUM=+^TMP("GMPLST",$J,0)_" categor"_$S(+^TMP("GMPLST",$J,0)'=1:"ies",1:"y")
"RTN","GMPLBLD",13,0)
 S DATE="Last Modified: "_$S(+$P(GMPLSLST,U,3):$$FMTE^XLFDT($P(GMPLSLST,U,3)),1:"<new list>")
"RTN","GMPLBLD",14,0)
 S VALMHDR(1)=DATE_$J(NUM,79-$L(DATE))
"RTN","GMPLBLD",15,0)
 S NAME=$P(GMPLSLST,U,2),VALMHDR(2)=$J(NAME,$L(NAME)\2+41)
"RTN","GMPLBLD",16,0)
 Q
"RTN","GMPLBLD",17,0)
 ;
"RTN","GMPLBLD",18,0)
INIT ; -- init variables and list array
"RTN","GMPLBLD",19,0)
 S GMPLSLST=$$LIST^GMPLBLD2("L") I GMPLSLST="^" S VALMQUIT=1 Q
"RTN","GMPLBLD",20,0)
 L +^GMPL(125,+GMPLSLST,0):1 I '$T D  G INIT
"RTN","GMPLBLD",21,0)
 . W $C(7),!!,"This list is currently being edited by another user!",!
"RTN","GMPLBLD",22,0)
 S GMPLMODE="E",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD",23,0)
 D GETLIST,BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE)
"RTN","GMPLBLD",24,0)
 D LENGTH
"RTN","GMPLBLD",25,0)
 Q
"RTN","GMPLBLD",26,0)
 ;
"RTN","GMPLBLD",27,0)
GETLIST ; Build ^TMP("GMPLIST",$J,#)
"RTN","GMPLBLD",28,0)
 N IFN,SEQ,GRP,ITEM,CNT K ^TMP("GMPLIST",$J) S CNT=0
"RTN","GMPLBLD",29,0)
 W !,"Searching for the list ..."
"RTN","GMPLBLD",30,0)
 F IFN=0:0 S IFN=$O(^GMPL(125.1,"B",+GMPLSLST,IFN)) Q:IFN'>0  D
"RTN","GMPLBLD",31,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0)),SEQ=$P(ITEM,U,2),GRP=$P(ITEM,U,3)
"RTN","GMPLBLD",32,0)
 . S ^TMP("GMPLIST",$J,IFN)=$P(ITEM,U,2,5),CNT=CNT+1 ; seq ^ group ^ subhdr ^ probs
"RTN","GMPLBLD",33,0)
 . S (^TMP("GMPLIST",$J,"GRP",GRP),^TMP("GMPLIST",$J,"SEQ",SEQ))=IFN
"RTN","GMPLBLD",34,0)
 S ^TMP("GMPLIST",$J,0)=CNT
"RTN","GMPLBLD",35,0)
 Q
"RTN","GMPLBLD",36,0)
 ;
"RTN","GMPLBLD",37,0)
BUILD(LIST,MODE) ; Build ^TMP("GMPLST",$J,)
"RTN","GMPLBLD",38,0)
 N SEQ,LCNT,NUM,HDR,GROUP,IFN,ITEM,PSEQ D CLEAN^VALM10
"RTN","GMPLBLD",39,0)
 S:'$D(^TMP("GMPLIST",$J,0)) ^TMP("GMPLIST",$J,0)=0
"RTN","GMPLBLD",40,0)
 I $P($G(^TMP("GMPLIST",$J,0)),U,1)'>0 S ^TMP("GMPLST",$J,1,0)="   ",^TMP("GMPLST",$J,2,0)="No items available.",^TMP("GMPLST",$J,0)="0^2",VALMCNT=2 Q
"RTN","GMPLBLD",41,0)
 S (LCNT,NUM,SEQ)=0
"RTN","GMPLBLD",42,0)
 F  S SEQ=$O(^TMP("GMPLIST",$J,"SEQ",SEQ)) Q:SEQ'>0  D
"RTN","GMPLBLD",43,0)
 . S IFN=^TMP("GMPLIST",$J,"SEQ",SEQ),LCNT=LCNT+1,NUM=NUM+1
"RTN","GMPLBLD",44,0)
 . S GROUP=$P(^TMP("GMPLIST",$J,IFN),U,2),HDR=$P(^TMP("GMPLIST",$J,IFN),U,3)
"RTN","GMPLBLD",45,0)
 . S:'$L(HDR) HDR="<no header>"
"RTN","GMPLBLD",46,0)
 . I LCNT>1,+$P(^TMP("GMPLIST",$J,IFN),U,4),^TMP("GMPLST",$J,LCNT-1,0)'="   " S LCNT=LCNT+1,^TMP("GMPLST",$J,LCNT,0)="   "
"RTN","GMPLBLD",47,0)
 . S ^TMP("GMPLST",$J,LCNT,0)=$S(MODE="I":$J("<"_SEQ_">",8),1:"        ")_$J(NUM,4)_" "_HDR,^TMP("GMPLST",$J,"B",NUM)=IFN
"RTN","GMPLBLD",48,0)
 . D CNTRL^VALM10(LCNT,9,5,IOINHI,IOINORM)
"RTN","GMPLBLD",49,0)
 . Q:'+$P(^TMP("GMPLIST",$J,IFN),U,4)
"RTN","GMPLBLD",50,0)
 . D CNTRL^VALM10(LCNT,14,$L(HDR),IOUON,IOUOFF)
"RTN","GMPLBLD",51,0)
 . F PSEQ=0:0 S PSEQ=$O(^GMPL(125.12,"C",+GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","GMPLBLD",52,0)
 .. S IFN=$O(^GMPL(125.12,"C",+GROUP,PSEQ,0)),LCNT=LCNT+1
"RTN","GMPLBLD",53,0)
 .. S ITEM=$G(^GMPL(125.12,IFN,0)),^TMP("GMPLST",$J,LCNT,0)="             "_$P(ITEM,U,4)
"RTN","GMPLBLD",54,0)
 .. I $L($P(ITEM,U,5)) D
"RTN","GMPLBLD",55,0)
 ... N GMI
"RTN","GMPLBLD",56,0)
 ... S ^TMP("GMPLST",$J,LCNT,0)=^TMP("GMPLST",$J,LCNT,0)_" ("_$P(ITEM,U,5)_")"
"RTN","GMPLBLD",57,0)
 ... F GMI=1:1:$L($P(ITEM,U,5),"/") D
"RTN","GMPLBLD",58,0)
 .... I $$STATCHK^ICDAPIU($P($P(ITEM,U,5),"/",GMI),DT) Q  ; code is active
"RTN","GMPLBLD",59,0)
 .... S ^TMP("GMPLST",$J,LCNT,0)=^TMP("GMPLST",$J,LCNT,0)_"    <INACTIVE CODE>"
"RTN","GMPLBLD",60,0)
 . S LCNT=LCNT+1,^TMP("GMPLST",$J,LCNT,0)="   "
"RTN","GMPLBLD",61,0)
 S ^TMP("GMPLST",$J,0)=NUM_U_LCNT,VALMCNT=LCNT
"RTN","GMPLBLD",62,0)
 Q
"RTN","GMPLBLD",63,0)
 ;
"RTN","GMPLBLD",64,0)
HELP ; -- help code
"RTN","GMPLBLD",65,0)
 N X
"RTN","GMPLBLD",66,0)
 W !!?4,"You may take a variety of actions to update this selection list."
"RTN","GMPLBLD",67,0)
 W !?4,"New categories may be added to this list, or an existing one"
"RTN","GMPLBLD",68,0)
 W !?4,"removed; Edit Category will allow you to change the contents of"
"RTN","GMPLBLD",69,0)
 W !?4,"a category, or create a new one that may be added to this list."
"RTN","GMPLBLD",70,0)
 W !?4,"You may also change how each category appears in this list,"
"RTN","GMPLBLD",71,0)
 W !?4,"view each category's sequence number to facilitate resequencing,"
"RTN","GMPLBLD",72,0)
 W !?4,"assign this list to a clinic or user(s), or edit a different list."
"RTN","GMPLBLD",73,0)
 W !!,"Press <return> to continue ..." R X:DTIME
"RTN","GMPLBLD",74,0)
 S VALMSG=$$MSG^GMPLX,VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLBLD",75,0)
 Q
"RTN","GMPLBLD",76,0)
 ;
"RTN","GMPLBLD",77,0)
EXIT ; -- exit code
"RTN","GMPLBLD",78,0)
 I $D(GMPLSAVE),$$CKSAVE^GMPLBLD2 D
"RTN","GMPLBLD",79,0)
 . D SAVE^GMPLBLD2
"RTN","GMPLBLD",80,0)
 . S ^GMPL(125,+GMPLSLST,0)=$P(GMPLSLST,U,2)_U_DT_U_$P(GMPLSLST,U,4)
"RTN","GMPLBLD",81,0)
 L -^GMPL(125,+GMPLSLST,0)
"RTN","GMPLBLD",82,0)
 K GMPLIST,GMPLST,GMPLMODE,GMPLSLST,GMPLSAVE,GMPREBLD,GMPQUIT,RT,TMPLST
"RTN","GMPLBLD",83,0)
 K ^TMP("GMPLIST",$J),^TMP("GMPLST",$J)
"RTN","GMPLBLD",84,0)
 Q
"RTN","GMPLBLD",85,0)
 ;
"RTN","GMPLBLD",86,0)
ADD ; Add group(s)
"RTN","GMPLBLD",87,0)
 N SEQ,GROUP,HDR,IFN,GMPQUIT,GMPREBLD D FULL^VALM1
"RTN","GMPLBLD",88,0)
 F  D  Q:$D(GMPQUIT)  W !
"RTN","GMPLBLD",89,0)
 . S GROUP=$$GROUP^GMPLBLD2("") I GROUP="^" S GMPQUIT=1 Q
"RTN","GMPLBLD",90,0)
 . I $D(^TMP("GMPLIST",$J,"GRP",+GROUP)) W !?4,">>>  This category is already part of this list!" Q
"RTN","GMPLBLD",91,0)
 . I '$$VALGRP^GMPLBLD2(+GROUP) D  Q
"RTN","GMPLBLD",92,0)
 .. D FULL^VALM1
"RTN","GMPLBLD",93,0)
 .. W !!,$C(7),"This category contains one or more problems with inactive ICD-9 codes. "
"RTN","GMPLBLD",94,0)
 .. W !,"These codes must be updated before adding the category to a selection list."
"RTN","GMPLBLD",95,0)
 .. N DIR,DTOUT,DIRUT,DUOUT,X,Y
"RTN","GMPLBLD",96,0)
 .. S DIR(0)="E" D ^DIR
"RTN","GMPLBLD",97,0)
 .. S VALMBCK="R"
"RTN","GMPLBLD",98,0)
 . S HDR=$$HDR^GMPLBLD1($P(GROUP,U,2)) I HDR="^" S GMPQUIT=1 Q
"RTN","GMPLBLD",99,0)
 . S RT="^TMP(""GMPLIST"",$J,""SEQ"",",SEQ=+$$LAST^GMPLBLD2(RT)+1
"RTN","GMPLBLD",100,0)
 . S SEQ=$$SEQ^GMPLBLD1(SEQ) I SEQ="^" S GMPQUIT=1 Q
"RTN","GMPLBLD",101,0)
 . S IFN=$$TMPIFN^GMPLBLD1,^TMP("GMPLIST",$J,IFN)=SEQ_U_+GROUP_U_HDR_"^1"
"RTN","GMPLBLD",102,0)
 . S (^TMP("GMPLIST",$J,"GRP",+GROUP),^TMP("GMPLIST",$J,"SEQ",SEQ))=IFN,^TMP("GMPLIST",$J,0)=^TMP("GMPLIST",$J,0)+1,GMPREBLD=1
"RTN","GMPLBLD",103,0)
 I $D(GMPREBLD) S VALMBCK="R",GMPLSAVE=1 D BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR
"RTN","GMPLBLD",104,0)
 S VALMBCK="R",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD",105,0)
 Q
"RTN","GMPLBLD",106,0)
 ;
"RTN","GMPLBLD",107,0)
EDIT ; Edit category contents
"RTN","GMPLBLD",108,0)
 N GMPLIST,GMPLST,GMPLMODE,GMPLGRP,GMPLSAVE
"RTN","GMPLBLD",109,0)
 D EN^VALM("GMPL SELECTION GROUP BUILD")
"RTN","GMPLBLD",110,0)
 S GMPLMODE="E"
"RTN","GMPLBLD",111,0)
 D GETLIST,BUILD("TMP(""GMPLIST"",$J)",GMPLMODE)
"RTN","GMPLBLD",112,0)
 S VALMBCK="R",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD",113,0)
 Q
"RTN","GMPLBLD",114,0)
 ;
"RTN","GMPLBLD",115,0)
REMOVE ; Remove group
"RTN","GMPLBLD",116,0)
 N NUM,IFN,SEQ,GRP,DIR,X,Y S VALMBCK=""
"RTN","GMPLBLD",117,0)
 S NUM=$$SEL1^GMPLBLD1 G:NUM="^" RMQ
"RTN","GMPLBLD",118,0)
 S IFN=$G(^TMP("GMPLST",$J,"B",NUM)) G:+IFN'>0 RMQ
"RTN","GMPLBLD",119,0)
 I "@"[$G(^TMP("GMPLIST",$J,IFN)) W $C(7),!!,"Category is not part of this list!" H 2 G RMQ
"RTN","GMPLBLD",120,0)
 S DIR("A")="Are you sure you want to remove '"_$P(^TMP("GMPLIST",$J,IFN),U,3)_"'? "
"RTN","GMPLBLD",121,0)
 S DIR("?")="Enter YES to delete this category from the current list; enter NO to exit."
"RTN","GMPLBLD",122,0)
 S DIR(0)="YA",DIR("B")="NO" D ^DIR
"RTN","GMPLBLD",123,0)
 I 'Y W !?5,"< Nothing removed! >" H 1 G RMQ
"RTN","GMPLBLD",124,0)
 D DELETE^GMPLBLD1(IFN) S VALMBCK="R",GMPLSAVE=1
"RTN","GMPLBLD",125,0)
 D BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR
"RTN","GMPLBLD",126,0)
RMQ S:'VALMCC VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD",127,0)
 Q
"RTN","GMPLBLD",128,0)
 ;
"RTN","GMPLBLD",129,0)
LENGTH ;SHORTEN THE ICD9'S DESCRIPTION TO FIT SCREEN
"RTN","GMPLBLD",130,0)
 S LLCNT=0
"RTN","GMPLBLD",131,0)
 F  S LLCNT=$O(^TMP("GMPLST",$J,LLCNT)) Q:LLCNT=""  Q:LLCNT'?1N.N  D
"RTN","GMPLBLD",132,0)
 .; I '$D(^TMP("GMPLST",$J,LLCNT,O)) Q
"RTN","GMPLBLD",133,0)
 . S ICD9VAR=^TMP("GMPLST",$J,LLCNT,0) I $L(ICD9VAR)>50 D
"RTN","GMPLBLD",134,0)
 .. S ICD9VAR=$P(ICD9VAR,"(",1)
"RTN","GMPLBLD",135,0)
 .. S ICD9VAR=$E(ICD9VAR,1,50)_" ("_$P(^TMP("GMPLST",$J,LLCNT,0),"(",2)
"RTN","GMPLBLD",136,0)
 .. S ^TMP("GMPLST",$J,LLCNT,0)=ICD9VAR
"RTN","GMPLBLD",137,0)
 Q
"RTN","GMPLBLD1")
0^1^B34149613
"RTN","GMPLBLD1",1,0)
GMPLBLD1 ; ISL/MKB,JER - Bld PL Selection Lists cont ;09/22/11  14:40
"RTN","GMPLBLD1",2,0)
 ;;2.0;Problem List;**3,28,36**;Aug 25, 1994;Build 65
"RTN","GMPLBLD1",3,0)
 ;
"RTN","GMPLBLD1",4,0)
 ; This routine invokes IA #3991,#10082
"RTN","GMPLBLD1",5,0)
 ;
"RTN","GMPLBLD1",6,0)
SEL() ; Select item(s) from list
"RTN","GMPLBLD1",7,0)
 N DIR,X,Y,MAX,GRP S GRP=$D(GMPLGRP) ; =1 if editing groups, 0 if lists
"RTN","GMPLBLD1",8,0)
 S MAX=$P($G(^TMP("GMPLST",$J,0)),U,1) I MAX'>0 Q "^"
"RTN","GMPLBLD1",9,0)
 S DIR(0)="LAO^1:"_MAX,DIR("A")="Select "_$S('GRP:"Category",1:"Problem")_"(s)"
"RTN","GMPLBLD1",10,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLBLD1",11,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLBLD1",12,0)
 S DIR("?")="Enter the "_$S('GRP:"categories",1:"problems")_" you wish to select, as a range or list of numbers"
"RTN","GMPLBLD1",13,0)
 D ^DIR S:$D(DTOUT)!(X="") Y="^"
"RTN","GMPLBLD1",14,0)
 Q Y
"RTN","GMPLBLD1",15,0)
 ;
"RTN","GMPLBLD1",16,0)
SEL1() ; Select item from list
"RTN","GMPLBLD1",17,0)
 N DIR,X,Y,MAX,GRP S GRP=$D(GMPLGRP) ; =1 if editing groups, 0 if lists
"RTN","GMPLBLD1",18,0)
 S MAX=$P($G(^TMP("GMPLST",$J,0)),U,1) I MAX'>0 Q "^"
"RTN","GMPLBLD1",19,0)
 S DIR(0)="NAO^1:"_MAX_":0",DIR("A")="Select "_$S('GRP:"Category",1:"Problem")
"RTN","GMPLBLD1",20,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLBLD1",21,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLBLD1",22,0)
 S DIR("?")="Enter the "_$S('GRP:"category",1:"problem")_" you wish to select, by number"
"RTN","GMPLBLD1",23,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLBLD1",24,0)
 Q Y
"RTN","GMPLBLD1",25,0)
 ;
"RTN","GMPLBLD1",26,0)
SEQ(NUM) ; Enter/edit seq #, returns new #
"RTN","GMPLBLD1",27,0)
 N DIR,X,Y,GRP S GRP=$D(GMPLGRP) ; =1 if editing groups, 0 if lists
"RTN","GMPLBLD1",28,0)
 S DIR(0)="NA^.01:999.99:2",DIR("A")="SEQUENCE: " S:NUM DIR("B")=NUM
"RTN","GMPLBLD1",29,0)
 S DIR("?",1)="Enter a number indicating the sequence of this item in the "_$S('GRP:"list;",1:"category;")
"RTN","GMPLBLD1",30,0)
 S DIR("?")="up to 2 decimal places may be used, to order these items."
"RTN","GMPLBLD1",31,0)
SQ D ^DIR I $D(DTOUT)!(X="^") Q "^"
"RTN","GMPLBLD1",32,0)
 I X?1"^".E W $C(7),$$NOJUMP G SQ
"RTN","GMPLBLD1",33,0)
 I Y=NUM Q NUM
"RTN","GMPLBLD1",34,0)
 I $D(^TMP("GMPLIST",$J,"SEQ",Y)) D  G SQ
"RTN","GMPLBLD1",35,0)
 . W $C(7),!!,"Sequence number already in use!  Please enter another number."
"RTN","GMPLBLD1",36,0)
 . W !,"Use the 'Change View' option to display the current sequence numbers.",!
"RTN","GMPLBLD1",37,0)
 Q Y
"RTN","GMPLBLD1",38,0)
 ;
"RTN","GMPLBLD1",39,0)
HDR(TEXT) ; Enter/edit group subheader text in list
"RTN","GMPLBLD1",40,0)
 N DIR,X,Y S:$L(TEXT) DIR("B")=TEXT
"RTN","GMPLBLD1",41,0)
 S DIR(0)="FAO^2:30",DIR("A")="HEADER: "
"RTN","GMPLBLD1",42,0)
 S DIR("?")="Enter the text you wish displayed as a header for this category of problems"
"RTN","GMPLBLD1",43,0)
 S:$D(DIR("B")) DIR("?",1)=DIR("?")_";",DIR("?")="enter '@' if no header text is desired."
"RTN","GMPLBLD1",44,0)
H1 D ^DIR I $D(DTOUT)!(X="^") Q "^"
"RTN","GMPLBLD1",45,0)
 I X?1"^".E W $C(7),$$NOJUMP G H1
"RTN","GMPLBLD1",46,0)
 I X="@" Q:$$SURE^GMPLX "" G H1
"RTN","GMPLBLD1",47,0)
 Q Y
"RTN","GMPLBLD1",48,0)
 ;
"RTN","GMPLBLD1",49,0)
TEXT(TEXT) ; Edit problem text
"RTN","GMPLBLD1",50,0)
 N DIR,X,Y S:$L(TEXT) DIR("B")=TEXT
"RTN","GMPLBLD1",51,0)
 S DIR(0)="FAO^2:80",DIR("A")=" DISPLAY TEXT: "
"RTN","GMPLBLD1",52,0)
 S DIR("?")="Enter the text you wish presented here for this problem."
"RTN","GMPLBLD1",53,0)
T1 D ^DIR I $D(DTOUT)!("^"[X) S Y="^" G TQ
"RTN","GMPLBLD1",54,0)
 I X?1"^".E W $C(7),$$NOJUMP G T1
"RTN","GMPLBLD1",55,0)
 I X="@" G:'$$SURE^GMPLX T1 S Y="@" G TQ
"RTN","GMPLBLD1",56,0)
TQ Q Y
"RTN","GMPLBLD1",57,0)
 ;
"RTN","GMPLBLD1",58,0)
CODE(SCTCODE,ICDCODE) ; Confirm problem codes
"RTN","GMPLBLD1",59,0)
 N DIR,X,Y,CODESYS
"RTN","GMPLBLD1",60,0)
 S CODESYS="ICD-9-CM"
"RTN","GMPLBLD1",61,0)
 W !!?2,"The following ",$S(SCTCODE]"":"SNOMED CT & ",1:""),CODESYS," Code(s) are associated with the problem",!?2,"you selected:"
"RTN","GMPLBLD1",62,0)
 I SCTCODE]"" W !!?2,"SNOMED CT: ",SCTCODE,?24,CODESYS,": ",ICDCODE,!
"RTN","GMPLBLD1",63,0)
 E  W !!?2,CODESYS,": ",ICDCODE,!
"RTN","GMPLBLD1",64,0)
 S DIR(0)="YA",DIR("A")="  ... Ok? "
"RTN","GMPLBLD1",65,0)
 S DIR("?")="Please indicate ((Y)es or (N)o) whether the problem/code(s) specified are appropriate."
"RTN","GMPLBLD1",66,0)
C1 D ^DIR I $D(DTOUT)!(X="^") S Y="^" G CQ
"RTN","GMPLBLD1",67,0)
 I X?1"^".E W $C(7),$$NOJUMP G C1
"RTN","GMPLBLD1",68,0)
 I X="@" G:'$$SURE^GMPLX C1 S Y=""
"RTN","GMPLBLD1",69,0)
 S:+Y'>0 Y="" S:+Y>0 Y=ICDCODE
"RTN","GMPLBLD1",70,0)
 W !
"RTN","GMPLBLD1",71,0)
CQ Q Y
"RTN","GMPLBLD1",72,0)
 ;
"RTN","GMPLBLD1",73,0)
FLAG(DFLT) ; Edit category flag
"RTN","GMPLBLD1",74,0)
 N DIR,X,Y S DIR(0)="YAO",DIR("B")=$S(+DFLT:"YES",1:"NO")
"RTN","GMPLBLD1",75,0)
 S DIR("A")="SHOW PROBLEMS AUTOMATICALLY? "
"RTN","GMPLBLD1",76,0)
 S DIR("?",1)="Enter YES if you wish the problems contained in this category to be",DIR("?",2)="automatically displayed upon entry to this list; NO will display only the",DIR("?")="category header until the user selects it to view."
"RTN","GMPLBLD1",77,0)
F1 D ^DIR I $D(DTOUT)!(X="^") Q "^"
"RTN","GMPLBLD1",78,0)
 I X?1"^".E W $C(7),$$NOJUMP G F1
"RTN","GMPLBLD1",79,0)
 Q Y
"RTN","GMPLBLD1",80,0)
 ;
"RTN","GMPLBLD1",81,0)
NOJUMP() ; Message
"RTN","GMPLBLD1",82,0)
 Q "   ^-jumping not allowed!"
"RTN","GMPLBLD1",83,0)
 ;
"RTN","GMPLBLD1",84,0)
RETURN() ; End of page prompt
"RTN","GMPLBLD1",85,0)
 N DIR,X,Y
"RTN","GMPLBLD1",86,0)
 S DIR(0)="E" D ^DIR
"RTN","GMPLBLD1",87,0)
 Q +Y
"RTN","GMPLBLD1",88,0)
 ;
"RTN","GMPLBLD1",89,0)
TMPIFN() ; Get temporary IFN ("#N") for ^TMP("GMPLIST",$J,)
"RTN","GMPLBLD1",90,0)
 N I,LAST S (I,LAST)=0
"RTN","GMPLBLD1",91,0)
 F  S I=$O(^TMP("GMPLIST",$J,I)) Q:+I'>0  S:I?1.N1"N" LAST=+I
"RTN","GMPLBLD1",92,0)
 S I=LAST+1,I=$E("0000",1,4-$L(I))_I
"RTN","GMPLBLD1",93,0)
TMPQ Q I_"N"
"RTN","GMPLBLD1",94,0)
 ;
"RTN","GMPLBLD1",95,0)
DELETE(IFN) ; Kill entry in ^TMP("GMPLIST",$J,)
"RTN","GMPLBLD1",96,0)
 N SEQ,ITEM S ^TMP("GMPLIST",$J,0)=^TMP("GMPLIST",$J,0)-1
"RTN","GMPLBLD1",97,0)
 S SEQ=+^TMP("GMPLIST",$J,IFN),ITEM=$P(^TMP("GMPLIST",$J,IFN),U,2),^TMP("GMPLIST",$J,IFN)="@"
"RTN","GMPLBLD1",98,0)
 K ^TMP("GMPLIST",$J,"SEQ",SEQ),^TMP("GMPLIST",$J,"PROB",ITEM),^TMP("GMPLIST",$J,"GRP",ITEM)
"RTN","GMPLBLD1",99,0)
 K:IFN?1.N1"N" ^TMP("GMPLIST",$J,IFN)
"RTN","GMPLBLD1",100,0)
 Q
"RTN","GMPLBLD1",101,0)
 ;
"RTN","GMPLBLD1",102,0)
RESEQ ; Resequence items
"RTN","GMPLBLD1",103,0)
 N SEL,NUM,SEQ,NSEQ,PIECE,IFN,GMPQUIT S VALMBCK=""
"RTN","GMPLBLD1",104,0)
 S SEL=$$SEL G:SEL="^" RSQ
"RTN","GMPLBLD1",105,0)
 F PIECE=1:1:$L(SEL,",") D  Q:$D(GMPQUIT)  W !
"RTN","GMPLBLD1",106,0)
 . S NUM=$P(SEL,",",PIECE) Q:NUM'>0
"RTN","GMPLBLD1",107,0)
 . S IFN=$P($G(^TMP("GMPLST",$J,"B",NUM)),U,1) Q:+IFN'>0  S SEQ=$P(^TMP("GMPLIST",$J,IFN),U,1)
"RTN","GMPLBLD1",108,0)
 . W !!,$P(^TMP("GMPLIST",$J,IFN),U,3)
"RTN","GMPLBLD1",109,0)
 . S NSEQ=$$SEQ(SEQ) I NSEQ="^" S GMPQUIT=1 Q
"RTN","GMPLBLD1",110,0)
 .I SEQ'=NSEQ S ^TMP("GMPLIST",$J,IFN)=NSEQ_U_$P(^TMP("GMPLIST",$J,IFN),U,2,$L(^TMP("GMPLIST",$J,IFN),U)),^TMP("GMPLIST",$J,"SEQ",NSEQ)=IFN,GMPREBLD=1 K ^TMP("GMPLIST",$J,"SEQ",SEQ)
"RTN","GMPLBLD1",111,0)
 I $D(GMPREBLD) S VALMBCK="R",GMPLSAVE=1 ; D BUILD in exit action
"RTN","GMPLBLD1",112,0)
RSQ S:'VALMCC VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD1",113,0)
 Q
"RTN","GMPLBLD1",114,0)
 ;
"RTN","GMPLBLD1",115,0)
EDIT ; Edit category display
"RTN","GMPLBLD1",116,0)
 N GRPS,NUM,IFN,HDR,FLG,PIECE,GMPQUIT,GMPREBLD S VALMBCK=""
"RTN","GMPLBLD1",117,0)
 S GRPS=$$SEL G:GRPS="^" EDQ
"RTN","GMPLBLD1",118,0)
 F PIECE=1:1:$L(GRPS,",") D  Q:$D(GMPQUIT)  W !
"RTN","GMPLBLD1",119,0)
 . S NUM=$P(GRPS,",",PIECE) Q:NUM'>0
"RTN","GMPLBLD1",120,0)
 .S IFN=$P($G(^TMP("GMPLST",$J,"B",NUM)),U,1) Q:+IFN'>0
"RTN","GMPLBLD1",121,0)
 . S HDR=$P(^TMP("GMPLIST",$J,IFN),U,3),FLG=$P(^TMP("GMPLIST",$J,IFN),U,4)
"RTN","GMPLBLD1",122,0)
 . S HDR=$$HDR(HDR) I HDR="^" S GMPQUIT=1 Q
"RTN","GMPLBLD1",123,0)
 . S FLG=$$FLAG(FLG) I FLG="^" S GMPQUIT=1 Q
"RTN","GMPLBLD1",124,0)
 . S $P(^TMP("GMPLIST",$J,IFN),U,3,4)=HDR_U_FLG,GMPREBLD=1
"RTN","GMPLBLD1",125,0)
 I $D(GMPREBLD) S VALMBCK="R",GMPLSAVE=1 D BUILD^GMPLBLD("^TMP(""GMPLIST"",$J)",GMPLMODE)
"RTN","GMPLBLD1",126,0)
EDQ S:'VALMCC VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD1",127,0)
 Q
"RTN","GMPLBLD2")
0^13^B50049989
"RTN","GMPLBLD2",1,0)
GMPLBLD2 ; SLC/MKB,JFR -- Bld PL Selection Lists cont ;09/21/11  16:33
"RTN","GMPLBLD2",2,0)
 ;;2.0;Problem List;**3,28,36**;Aug 25, 1994;Build 65
"RTN","GMPLBLD2",3,0)
 ;
"RTN","GMPLBLD2",4,0)
 ; This routine invokes IA #3991
"RTN","GMPLBLD2",5,0)
 ;
"RTN","GMPLBLD2",6,0)
NEWGRP ; Change problem groups
"RTN","GMPLBLD2",7,0)
 N NEWGRP D FULL^VALM1
"RTN","GMPLBLD2",8,0)
 I $D(GMPLSAVE),$$CKSAVE D SAVE
"RTN","GMPLBLD2",9,0)
NG1 S NEWGRP=$$GROUP("L") G:+NEWGRP'>0 NGQ G:+NEWGRP=+GMPLGRP NGQ
"RTN","GMPLBLD2",10,0)
 L +^GMPL(125.11,+NEWGRP,0):1 I '$T D  G NG1
"RTN","GMPLBLD2",11,0)
 . W $C(7),!!,"This category is currently being edited by another user!",!
"RTN","GMPLBLD2",12,0)
 L -^GMPL(125.11,+GMPLGRP,0) S GMPLGRP=NEWGRP
"RTN","GMPLBLD2",13,0)
 D GETLIST^GMPLBLDC,BUILD^GMPLBLDC("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR^GMPLBLDC
"RTN","GMPLBLD2",14,0)
NGQ S VALMBCK="R",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD2",15,0)
 Q
"RTN","GMPLBLD2",16,0)
 ;
"RTN","GMPLBLD2",17,0)
GROUP(L) ; Lookup into Problem Selection Group file #125.11
"RTN","GMPLBLD2",18,0)
 N DIC,X,Y,DLAYGO ; L = "" or "L", if LAYGO is [not] allowed
"RTN","GMPLBLD2",19,0)
 S DIC="^GMPL(125.11,",DIC(0)="AEQMZ"_L,DIC("A")="Select CATEGORY NAME: "
"RTN","GMPLBLD2",20,0)
 S:DIC(0)["L" DLAYGO=125.11
"RTN","GMPLBLD2",21,0)
 D ^DIC S:Y'>0 Y="^" S:Y'="^" Y=+Y_U_Y(0)
"RTN","GMPLBLD2",22,0)
 Q Y
"RTN","GMPLBLD2",23,0)
 ;
"RTN","GMPLBLD2",24,0)
NEWLST ; Change selection lists
"RTN","GMPLBLD2",25,0)
 N NEWLST D FULL^VALM1
"RTN","GMPLBLD2",26,0)
 I $D(GMPLSAVE),$$CKSAVE D SAVE
"RTN","GMPLBLD2",27,0)
NL1 S NEWLST=$$LIST("L") G:+NEWLST'>0 NLQ G:+NEWLST=+GMPLSLST NLQ
"RTN","GMPLBLD2",28,0)
 L +^GMPL(125,+NEWLST,0):1 I '$T D  G NL1
"RTN","GMPLBLD2",29,0)
 . W $C(7),!!,"This list is currently being edited by another user!",!
"RTN","GMPLBLD2",30,0)
 L -^GMPL(125,+GMPLSLST,0) S GMPLSLST=NEWLST
"RTN","GMPLBLD2",31,0)
 D GETLIST^GMPLBLD,BUILD^GMPLBLD("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR^GMPLBLD
"RTN","GMPLBLD2",32,0)
NLQ S VALMBCK="R",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLD2",33,0)
 Q
"RTN","GMPLBLD2",34,0)
 ;
"RTN","GMPLBLD2",35,0)
LIST(L) ; Lookup into Problem Selection List file #125
"RTN","GMPLBLD2",36,0)
 N DIC,X,Y,DLAYGO ; L="" or "L" if LAYGO [not] allowed
"RTN","GMPLBLD2",37,0)
 S DIC="^GMPL(125,",DIC(0)="AEQMZ"_L,DIC("A")="Select LIST NAME: "
"RTN","GMPLBLD2",38,0)
 S:DIC(0)["L" DLAYGO=125
"RTN","GMPLBLD2",39,0)
 D ^DIC S:Y'>0 Y="^" S:Y'="^" Y=+Y_U_Y(0)
"RTN","GMPLBLD2",40,0)
 Q Y
"RTN","GMPLBLD2",41,0)
 ;
"RTN","GMPLBLD2",42,0)
LAST(ROOT) ; Returns last subscript
"RTN","GMPLBLD2",43,0)
 N I,J S (I,J)=""
"RTN","GMPLBLD2",44,0)
 F  S I=$O(@(ROOT_"I)")) Q:I=""  S J=I
"RTN","GMPLBLD2",45,0)
 Q J
"RTN","GMPLBLD2",46,0)
 ;
"RTN","GMPLBLD2",47,0)
CKSAVE() ; Save [changes] ??
"RTN","GMPLBLD2",48,0)
 N DIR,X,Y,TEXT S TEXT=$S($D(GMPLGRP):"category",1:"list")
"RTN","GMPLBLD2",49,0)
 S DIR("A")="Save the changes to this "_TEXT_"? ",DIR("B")="YES"
"RTN","GMPLBLD2",50,0)
 S DIR("?",1)="Enter YES to save the changes that have been made to this "_TEXT,DIR("?")="before exiting it; NO will leave this "_TEXT_" unchanged."
"RTN","GMPLBLD2",51,0)
 S DIR(0)="YA" D ^DIR
"RTN","GMPLBLD2",52,0)
 Q +Y
"RTN","GMPLBLD2",53,0)
 ;
"RTN","GMPLBLD2",54,0)
SAVE ; Save changes to group/list
"RTN","GMPLBLD2",55,0)
 N GMPLQT,LABEL,DA
"RTN","GMPLBLD2",56,0)
 S GMPLQT=0
"RTN","GMPLBLD2",57,0)
 I $D(GMPLGRP) D  I GMPLQT Q
"RTN","GMPLBLD2",58,0)
 . N ITM,CODE
"RTN","GMPLBLD2",59,0)
 . S ITM=0
"RTN","GMPLBLD2",60,0)
 . F  S ITM=$O(^TMP("GMPLIST",$J,ITM)) Q:'ITM!(GMPLQT)  D
"RTN","GMPLBLD2",61,0)
 .. N GMI
"RTN","GMPLBLD2",62,0)
 .. S CODE=$P(^TMP("GMPLIST",$J,ITM),U,4) Q:'$L(CODE)
"RTN","GMPLBLD2",63,0)
 .. F GMI=1:1:$L(CODE,"/") I '$$STATCHK^ICDAPIU($P(CODE,"/",GMI),DT) S GMPLQT=1 Q
"RTN","GMPLBLD2",64,0)
 . I 'GMPLQT Q  ;no inactive codes in the category
"RTN","GMPLBLD2",65,0)
 . D FULL^VALM1
"RTN","GMPLBLD2",66,0)
 . W !!,$C(7),"This Group contains problems with inactive ICD9 codes associated with them."
"RTN","GMPLBLD2",67,0)
 . W !,"The codes must be edited and corrected before the group can be saved."
"RTN","GMPLBLD2",68,0)
 . N DIR,DUOUT,DTOUT,DIRUT
"RTN","GMPLBLD2",69,0)
 . S DIR(0)="E" D ^DIR
"RTN","GMPLBLD2",70,0)
 . S VALMBCK="R",GMPLQT=1
"RTN","GMPLBLD2",71,0)
 . Q
"RTN","GMPLBLD2",72,0)
 ;
"RTN","GMPLBLD2",73,0)
 I '$D(GMPLGRP),$D(GMPLSLST) D  I GMPLQT Q
"RTN","GMPLBLD2",74,0)
 . N GRP
"RTN","GMPLBLD2",75,0)
 . S GRP=0
"RTN","GMPLBLD2",76,0)
 . F  S GRP=$O(^TMP("GMPLIST",$J,"GRP",GRP)) Q:'GRP!(GMPLQT)  D
"RTN","GMPLBLD2",77,0)
 .. I $$VALGRP(GRP) Q  ;no inactive codes in the GROUP
"RTN","GMPLBLD2",78,0)
 .. S GMPLQT=1
"RTN","GMPLBLD2",79,0)
 . I 'GMPLQT Q  ; all groups and problems OK
"RTN","GMPLBLD2",80,0)
 . D FULL^VALM1
"RTN","GMPLBLD2",81,0)
 . W !!,$C(7),"This Selection List contains problems with inactive ICD9 codes associated with"
"RTN","GMPLBLD2",82,0)
 . W !,"them. The codes must be edited and corrected before the list can be saved."
"RTN","GMPLBLD2",83,0)
 . N DIR,DUOUT,DTOUT,DIRUT
"RTN","GMPLBLD2",84,0)
 . S DIR(0)="E" D ^DIR
"RTN","GMPLBLD2",85,0)
 . S VALMBCK="R",GMPLQT=1
"RTN","GMPLBLD2",86,0)
 . Q
"RTN","GMPLBLD2",87,0)
 W !!,"Saving ..."
"RTN","GMPLBLD2",88,0)
 S DA=0,LABEL=$S($D(GMPLGRP):"SAVGRP",1:"SAVLST")
"RTN","GMPLBLD2",89,0)
 F  S DA=$O(^TMP("GMPLIST",$J,DA)) Q:+DA'>0  D @LABEL
"RTN","GMPLBLD2",90,0)
 K GMPLSAVE S:$D(GMPLGRP) GMPSAVED=1
"RTN","GMPLBLD2",91,0)
 S VALMBCK="Q" W " done." H 1
"RTN","GMPLBLD2",92,0)
 Q
"RTN","GMPLBLD2",93,0)
SAVGRP ; Save changes to existing group
"RTN","GMPLBLD2",94,0)
 N DIK,DIE,DR,ITEM,TMPITEM
"RTN","GMPLBLD2",95,0)
 S DIK="^GMPL(125.12,"
"RTN","GMPLBLD2",96,0)
 I +DA'=DA D  Q
"RTN","GMPLBLD2",97,0)
 . Q:"@"[$G(^TMP("GMPLIST",$J,DA))  ; nothing to save
"RTN","GMPLBLD2",98,0)
 . S TMPITEM=^TMP("GMPLIST",$J,DA) D NEW(DIK,+GMPLGRP,TMPITEM)
"RTN","GMPLBLD2",99,0)
 I "@"[$G(^TMP("GMPLIST",$J,DA)) D ^DIK Q
"RTN","GMPLBLD2",100,0)
 S ITEM=$P($G(^GMPL(125.12,DA,0)),U,2,7)
"RTN","GMPLBLD2",101,0)
 I ITEM'=^TMP("GMPLIST",$J,DA) D
"RTN","GMPLBLD2",102,0)
 . S DR="",DIE=DIK
"RTN","GMPLBLD2",103,0)
 . F I=1:1:6 D
"RTN","GMPLBLD2",104,0)
 .. S:$P(^TMP("GMPLIST",$J,DA),U,I)'=$P(ITEM,U,I) DR=DR_";"_I_"////"_$S($P(^TMP("GMPLIST",$J,DA),U,I)="":"@",1:$P(^TMP("GMPLIST",$J,DA),U,I))
"RTN","GMPLBLD2",105,0)
 . S:$E(DR)=";" DR=$E(DR,2,999) D ^DIE
"RTN","GMPLBLD2",106,0)
 Q
"RTN","GMPLBLD2",107,0)
 ;
"RTN","GMPLBLD2",108,0)
SAVLST ; Save changes to existing list
"RTN","GMPLBLD2",109,0)
 N DIK,DIE,DR,ITEM,TMPLST
"RTN","GMPLBLD2",110,0)
 S DIK="^GMPL(125.1,"
"RTN","GMPLBLD2",111,0)
 I +DA'=DA D  Q  ; new link
"RTN","GMPLBLD2",112,0)
 . Q:"@"[$G(^TMP("GMPLIST",$J,DA))  ; nothing to save
"RTN","GMPLBLD2",113,0)
 . S TMPLST=^TMP("GMPLIST",$J,DA) D NEW(DIK,+GMPLSLST,TMPLST)
"RTN","GMPLBLD2",114,0)
 I "@"[$G(^TMP("GMPLIST",$J,DA)) D ^DIK Q
"RTN","GMPLBLD2",115,0)
 S ITEM=$P($G(^GMPL(125.1,DA,0)),U,2,5)
"RTN","GMPLBLD2",116,0)
 I ITEM'=^TMP("GMPLIST",$J,DA) D
"RTN","GMPLBLD2",117,0)
 . S DR="",DIE=DIK
"RTN","GMPLBLD2",118,0)
 . F I=1,2,3,4 D
"RTN","GMPLBLD2",119,0)
 .. S:$P(^TMP("GMPLIST",$J,DA),U,I)'=$P(ITEM,U,I) DR=DR_";"_I_"////"_$S($P(^TMP("GMPLIST",$J,DA),U,I)="":"@",1:$P(^TMP("GMPLIST",$J,DA),U,I))
"RTN","GMPLBLD2",120,0)
 . S:$E(DR)=";" DR=$E(DR,2,999) D ^DIE
"RTN","GMPLBLD2",121,0)
 Q
"RTN","GMPLBLD2",122,0)
 ;
"RTN","GMPLBLD2",123,0)
NEW(DIK,LIST,ITEM) ; Create new entry in Contents file #125.1 or #125.12
"RTN","GMPLBLD2",124,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","GMPLBLD2",125,0)
 S HDR=$G(@(DIK_"0)")),LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLBLD2",126,0)
 F I=(LAST+1):1 Q:'$D(@(DIK_"I,0)"))
"RTN","GMPLBLD2",127,0)
 S DA=I,@(DIK_"DA,0)")=LIST_U_ITEM
"RTN","GMPLBLD2",128,0)
 S $P(@(DIK_"0)"),U,3,4)=DA_U_(TOTAL+1)
"RTN","GMPLBLD2",129,0)
 D IX1^DIK ; set Xrefs
"RTN","GMPLBLD2",130,0)
 Q
"RTN","GMPLBLD2",131,0)
 ;
"RTN","GMPLBLD2",132,0)
DELETE ; Delete problem group
"RTN","GMPLBLD2",133,0)
 N DIR,X,Y,DA,DIK,IFN S VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLBLD2",134,0)
 I $D(^GMPL(125.1,"G",+GMPLGRP)) W $C(7),!!,">>>  This category belongs to at least one problem selection list!",!,"     CANNOT DELETE" H 2 Q
"RTN","GMPLBLD2",135,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="Are you sure you want to delete the entire '"_$P(GMPLGRP,U,2)_"' category? "
"RTN","GMPLBLD2",136,0)
 S DIR("?")="Enter YES to completely remove this category and all its items."
"RTN","GMPLBLD2",137,0)
 D ^DIR Q:'Y
"RTN","GMPLBLD2",138,0)
DEL1 ; Ok, go for it ...
"RTN","GMPLBLD2",139,0)
 W !!,"Deleting category items ..."
"RTN","GMPLBLD2",140,0)
 F IFN=0:0 S IFN=$O(^GMPL(125.12,"B",+GMPLGRP,IFN)) Q:IFN'>0  S DA=IFN,DIK="^GMPL(125.12," D ^DIK W "."
"RTN","GMPLBLD2",141,0)
 S DA=+GMPLGRP,DIK="^GMPL(125.11," D ^DIK W "."
"RTN","GMPLBLD2",142,0)
 L -^GMPL(125.11,+GMPLGRP,0) S GMPLGRP=0 K GMPLSAVE W " <done>"
"RTN","GMPLBLD2",143,0)
 D NEWGRP S:+GMPLGRP'>0 VALMBCK="Q"
"RTN","GMPLBLD2",144,0)
 Q
"RTN","GMPLBLD2",145,0)
 ;
"RTN","GMPLBLD2",146,0)
VALGRP(GMPLCAT) ; check all problems in the category for inactive codes
"RTN","GMPLBLD2",147,0)
 ; Input:
"RTN","GMPLBLD2",148,0)
 ;    GMPLCAT  = ien from file 125.11
"RTN","GMPLBLD2",149,0)
 ;
"RTN","GMPLBLD2",150,0)
 ; Output:
"RTN","GMPLBLD2",151,0)
 ;    1     = category has no problems with inactive codes
"RTN","GMPLBLD2",152,0)
 ;    0     = category has one or more problems with inactive codes
"RTN","GMPLBLD2",153,0)
 ;    O^ERR = category is invalid^error message
"RTN","GMPLBLD2",154,0)
 ;
"RTN","GMPLBLD2",155,0)
 I '$G(GMPLCAT) Q "0^No category selected"
"RTN","GMPLBLD2",156,0)
 N PROB,GMPLVALC
"RTN","GMPLBLD2",157,0)
 S GMPLVALC=1,PROB=0
"RTN","GMPLBLD2",158,0)
 F  S PROB=$O(^GMPL(125.12,"B",GMPLCAT,PROB)) Q:'PROB!('GMPLVALC)  D
"RTN","GMPLBLD2",159,0)
 . N GMPLCOD,GMI
"RTN","GMPLBLD2",160,0)
 . S GMPLCOD=$P(^GMPL(125.12,PROB,0),U,5)
"RTN","GMPLBLD2",161,0)
 . Q:'$L(GMPLCOD)  ; no code there
"RTN","GMPLBLD2",162,0)
 . F GMI=1:1:$L(GMPLCOD,"/") I '$$STATCHK^ICDAPIU($P(GMPLCOD,"/",GMI),DT) S GMPLVALC=0
"RTN","GMPLBLD2",163,0)
 . Q
"RTN","GMPLBLD2",164,0)
 Q GMPLVALC
"RTN","GMPLBLD2",165,0)
 ;
"RTN","GMPLBLD2",166,0)
VALLIST(LIST) ;check all categories in list for probs w/ inactive codes
"RTN","GMPLBLD2",167,0)
 ; Input:
"RTN","GMPLBLD2",168,0)
 ;   LIST = ien from file 125
"RTN","GMPLBLD2",169,0)
 ;
"RTN","GMPLBLD2",170,0)
 ; Output:
"RTN","GMPLBLD2",171,0)
 ;    1     = list has no problems with inactive codes
"RTN","GMPLBLD2",172,0)
 ;    0     = list has one or more problems with inactive codes
"RTN","GMPLBLD2",173,0)
 ;    O^ERR = list is invalid^error message
"RTN","GMPLBLD2",174,0)
 ;
"RTN","GMPLBLD2",175,0)
 N GMPLIEN,GMPLVAL
"RTN","GMPLBLD2",176,0)
 I '$G(LIST) Q 0
"RTN","GMPLBLD2",177,0)
 S GMPLIEN=0,GMPLVAL=1
"RTN","GMPLBLD2",178,0)
 F  S GMPLIEN=$O(^GMPL(125.1,"B",LIST,GMPLIEN)) Q:'GMPLIEN!('GMPLVAL)  D
"RTN","GMPLBLD2",179,0)
 . N GMPLCAT
"RTN","GMPLBLD2",180,0)
 . S GMPLCAT=$P(^GMPL(125.1,GMPLIEN,0),U,3) I 'GMPLCAT Q
"RTN","GMPLBLD2",181,0)
 . I '$$VALGRP(GMPLCAT) S GMPLVAL=0
"RTN","GMPLBLD2",182,0)
 . Q
"RTN","GMPLBLD2",183,0)
 Q GMPLVAL
"RTN","GMPLBLD2",184,0)
 ;
"RTN","GMPLBLD2",185,0)
ASSIGN ; allow lookup of PROB SEL LIST and assign to users
"RTN","GMPLBLD2",186,0)
 ;
"RTN","GMPLBLD2",187,0)
 N DIC,X,Y,DUOUT,DTOUT,GMPLSLST
"RTN","GMPLBLD2",188,0)
 S DIC="^GMPL(125,",DIC(0)="AEQMZ",DIC("A")="Select LIST NAME: "
"RTN","GMPLBLD2",189,0)
 D ^DIC
"RTN","GMPLBLD2",190,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","GMPLBLD2",191,0)
 Q:Y<0
"RTN","GMPLBLD2",192,0)
 I '$$VALLIST(+Y) D  G ASSIGN
"RTN","GMPLBLD2",193,0)
 . W !!,$C(7),"This Selection List contains problems with inactive ICD9 codes associated with"
"RTN","GMPLBLD2",194,0)
 . W !,"them. The codes must be edited and corrected before the list can be assigned to",!,"users.",!!
"RTN","GMPLBLD2",195,0)
 ;
"RTN","GMPLBLD2",196,0)
 S GMPLSLST=+Y
"RTN","GMPLBLD2",197,0)
 D USERS^GMPLBLD3("1")
"RTN","GMPLBLD2",198,0)
 Q
"RTN","GMPLBLDC")
0^14^B36845008
"RTN","GMPLBLDC",1,0)
GMPLBLDC ; SLC/MKB -- Build Problem Selection Categories ;09/22/11  14:31
"RTN","GMPLBLDC",2,0)
 ;;2.0;Problem List;**3,7,28,36**;Aug 25, 1994;Build 65
"RTN","GMPLBLDC",3,0)
 ;
"RTN","GMPLBLDC",4,0)
 ; This routine invokes IA #3991
"RTN","GMPLBLDC",5,0)
 ;
"RTN","GMPLBLDC",6,0)
EN ; -- main entry point for GMPL SELECTION GROUP BUILD
"RTN","GMPLBLDC",7,0)
 D EN^VALM("GMPL SELECTION GROUP BUILD")
"RTN","GMPLBLDC",8,0)
 Q
"RTN","GMPLBLDC",9,0)
 ;
"RTN","GMPLBLDC",10,0)
HDR ; -- header code
"RTN","GMPLBLDC",11,0)
 N NAME,NUM,DATE S NUM=+^TMP("GMPLST",$J,0)_" problem"_$S(+^TMP("GMPLST",$J,0)'=1:"s",1:"")
"RTN","GMPLBLDC",12,0)
 S DATE="Last Modified: "_$S(+$P(GMPLGRP,U,3):$$FMTE^XLFDT($P(GMPLGRP,U,3)),1:"<new category>")
"RTN","GMPLBLDC",13,0)
 S VALMHDR(1)=DATE_$J(NUM,79-$L(DATE))
"RTN","GMPLBLDC",14,0)
 S NAME=$P(GMPLGRP,U,2),VALMHDR(2)=$J(NAME,$L(NAME)\2+41)
"RTN","GMPLBLDC",15,0)
 Q
"RTN","GMPLBLDC",16,0)
 ;
"RTN","GMPLBLDC",17,0)
INIT ; -- init variables and list array
"RTN","GMPLBLDC",18,0)
 S GMPLGRP=$$GROUP^GMPLBLD2("L") I GMPLGRP="^" S VALMQUIT=1 Q
"RTN","GMPLBLDC",19,0)
 L +^GMPL(125.11,+GMPLGRP,0):1 I '$T D  G INIT
"RTN","GMPLBLDC",20,0)
 . W $C(7),!!,"This category is currently being edited by another user!",!
"RTN","GMPLBLDC",21,0)
 S GMPLMODE="E",VALMSG=$$MSG^GMPLX
"RTN","GMPLBLDC",22,0)
 D GETLIST,BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE)
"RTN","GMPLBLDC",23,0)
 Q
"RTN","GMPLBLDC",24,0)
 ;
"RTN","GMPLBLDC",25,0)
GETLIST ; Build ^TMP("GMPLIST",$J,#) of problems
"RTN","GMPLBLDC",26,0)
 N SEQ,IFN,ITEM,PROB,CNT K ^TMP("GMPLIST",$J) S CNT=0
"RTN","GMPLBLDC",27,0)
 W !,"Searching for the problems ..."
"RTN","GMPLBLDC",28,0)
 F IFN=0:0 S IFN=$O(^GMPL(125.12,"B",+GMPLGRP,IFN)) Q:IFN'>0  D
"RTN","GMPLBLDC",29,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0)),SEQ=$P(ITEM,U,2),PROB=$P(ITEM,U,3)
"RTN","GMPLBLDC",30,0)
 . S ^TMP("GMPLIST",$J,IFN)=$P(ITEM,U,2,7),CNT=CNT+1 ; seq ^ prob ^ text ^ code ^ snomed ct concept ^ snomed ct designation
"RTN","GMPLBLDC",31,0)
 . S (^TMP("GMPLIST",$J,"PROB",PROB),^TMP("GMPLIST",$J,"SEQ",SEQ))=IFN ; Xrefs
"RTN","GMPLBLDC",32,0)
 S ^TMP("GMPLIST",$J,0)=CNT
"RTN","GMPLBLDC",33,0)
 Q
"RTN","GMPLBLDC",34,0)
 ;
"RTN","GMPLBLDC",35,0)
BUILD(LIST,MODE) ; Build ^TMP("GMPLST",$J,) of current items in LIST for display
"RTN","GMPLBLDC",36,0)
 N SEQ,LCNT,NUM,PROB,TEXT,IFN,ITEM,CODE D CLEAN^VALM10
"RTN","GMPLBLDC",37,0)
 I $P($G(^TMP("GMPLIST",$J,0)),U,1)'>0 S ^TMP("GMPLST",$J,1,0)="   ",^TMP("GMPLST",$J,2,0)="No items available.",^TMP("GMPLST",$J,0)="0^2",VALMCNT=2 Q
"RTN","GMPLBLDC",38,0)
 S (LCNT,NUM,SEQ)=0
"RTN","GMPLBLDC",39,0)
 F  S SEQ=$O(^TMP("GMPLIST",$J,"SEQ",SEQ)) Q:SEQ'>0  D
"RTN","GMPLBLDC",40,0)
 . N GMI
"RTN","GMPLBLDC",41,0)
 . S IFN=^TMP("GMPLIST",$J,"SEQ",SEQ),LCNT=LCNT+1,NUM=NUM+1
"RTN","GMPLBLDC",42,0)
 . S PROB=$P(^TMP("GMPLIST",$J,IFN),U,2),TEXT=$P(^TMP("GMPLIST",$J,IFN),U,3),CODE=$P(^TMP("GMPLIST",$J,IFN),U,4)
"RTN","GMPLBLDC",43,0)
 . S ^TMP("GMPLST",$J,LCNT,0)=$S(MODE="I":$J("<"_SEQ_">",8),1:"        ")_$J(NUM,4)_" "_TEXT
"RTN","GMPLBLDC",44,0)
 . I $L(CODE) D
"RTN","GMPLBLDC",45,0)
 .. S ^TMP("GMPLST",$J,LCNT,0)=^TMP("GMPLST",$J,LCNT,0)_" ("_CODE_")"
"RTN","GMPLBLDC",46,0)
 .. F GMI=1:1:$L(CODE,"/") D
"RTN","GMPLBLDC",47,0)
 ... I $$STATCHK^ICDAPIU($P(CODE,"/",GMI),DT) Q  ; OK - code is active
"RTN","GMPLBLDC",48,0)
 ... S ^TMP("GMPLST",$J,LCNT,0)=^TMP("GMPLST",$J,LCNT,0)_"     <INACTIVE CODE>"
"RTN","GMPLBLDC",49,0)
 . D CNTRL^VALM10(LCNT,9,5,IOINHI,IOINORM)
"RTN","GMPLBLDC",50,0)
 . S ^TMP("GMPLST",$J,"B",NUM)=IFN
"RTN","GMPLBLDC",51,0)
 S ^TMP("GMPLST",$J,0)=NUM_U_LCNT,VALMCNT=LCNT
"RTN","GMPLBLDC",52,0)
 Q
"RTN","GMPLBLDC",53,0)
 ;
"RTN","GMPLBLDC",54,0)
HELP ; -- help code
"RTN","GMPLBLDC",55,0)
 N X
"RTN","GMPLBLDC",56,0)
 W !!?4,"You may take a variety of actions from this prompt.  To update"
"RTN","GMPLBLDC",57,0)
 W !?4,"this category you may add new problems or remove an existing"
"RTN","GMPLBLDC",58,0)
 W !?4,"one; you may also change the text or code displayed, or the order"
"RTN","GMPLBLDC",59,0)
 W !?4,"in which each problem is displayed.  Select View w/wo Seq Numbers"
"RTN","GMPLBLDC",60,0)
 W !?4,"to toggle seeing the sequence number in addition to the display"
"RTN","GMPLBLDC",61,0)
 W !?4,"number per problem.  If necessary, the current category may be"
"RTN","GMPLBLDC",62,0)
 W !?4,"deleted; you may change to a different category to continue editing."
"RTN","GMPLBLDC",63,0)
 W !!,"Press <return> to continue ..." R X:DTIME
"RTN","GMPLBLDC",64,0)
 S VALMSG=$$MSG^GMPLX,VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLBLDC",65,0)
 Q
"RTN","GMPLBLDC",66,0)
 ;
"RTN","GMPLBLDC",67,0)
EXIT ; -- exit code
"RTN","GMPLBLDC",68,0)
 I $D(GMPLSAVE),$$CKSAVE^GMPLBLD2 D
"RTN","GMPLBLDC",69,0)
 . D SAVE^GMPLBLD2
"RTN","GMPLBLDC",70,0)
 . S ^GMPL(125.11,+GMPLGRP,0)=$P(GMPLGRP,U,2)_U_DT
"RTN","GMPLBLDC",71,0)
 L -^GMPL(125.11,+GMPLGRP,0)
"RTN","GMPLBLDC",72,0)
 K GMPLIST,GMPLST,GMPLMODE,GMPLGRP,GMPLSAVE,GMPREBLD,GMPQUIT,RT1,TMPITEM
"RTN","GMPLBLDC",73,0)
 K VALMBCK,VALMCNT,VALMSG,VALMHDR
"RTN","GMPLBLDC",74,0)
 K ^TMP("GMPLIST",$J),^TMP("GMPLST",$J)
"RTN","GMPLBLDC",75,0)
 Q
"RTN","GMPLBLDC",76,0)
 ;
"RTN","GMPLBLDC",77,0)
ADD ; Add new problem(s)
"RTN","GMPLBLDC",78,0)
 N GMPVOCAB,GMPQUIT,GMPREBLD S VALMBCK="" D FULL^VALM1
"RTN","GMPLBLDC",79,0)
 S GMPVOCAB="" ; $$VOCAB^GMPLX1 Q:GMPVOCAB="^"
"RTN","GMPLBLDC",80,0)
 F  D  Q:$D(GMPQUIT)  W !!
"RTN","GMPLBLDC",81,0)
 . N X,Y,SEQ,CODE,IFN,SCTS,SCTT,SCTC,SCTD
"RTN","GMPLBLDC",82,0)
 . S (X,Y,SCTS,SCTT,SCTC,SCTD)="" D SEARCH^GMPLX(.X,.Y,"PROBLEM: ","1",GMPVOCAB)
"RTN","GMPLBLDC",83,0)
 . I +Y'>0 S GMPQUIT=1 Q
"RTN","GMPLBLDC",84,0)
 . I X["(SCT" D
"RTN","GMPLBLDC",85,0)
 . . S SCTS=X
"RTN","GMPLBLDC",86,0)
 . . S SCTT=$P(SCTS," (SCT ")
"RTN","GMPLBLDC",87,0)
 . . S SCTC=$P($P(SCTS,"SCT ",2),")")
"RTN","GMPLBLDC",88,0)
 . . S SCTD=$$GETDES^LEXTRAN1("SCT",SCTT)
"RTN","GMPLBLDC",89,0)
 . . S SCTD=$S(+SCTD=1:$P(SCTD,U,2),1:"")
"RTN","GMPLBLDC",90,0)
 . S X=$$TEXT^GMPLBLD1(X) I X="^" S GMPQUIT=1 Q
"RTN","GMPLBLDC",91,0)
 . S CODE=$$CODE^GMPLBLD1($G(SCTC),$G(Y(1))) I CODE']"" S GMPQUIT=1 Q
"RTN","GMPLBLDC",92,0)
 . S RT1="^TMP(""GMPLIST"",$J,""SEQ"",",SEQ=+$$LAST^GMPLBLD2(RT1)+1 ; dflt = next #
"RTN","GMPLBLDC",93,0)
 . S SEQ=$$SEQ^GMPLBLD1(SEQ) I SEQ="^" S GMPQUIT=1 Q
"RTN","GMPLBLDC",94,0)
 . S IFN=$$TMPIFN^GMPLBLD1,^TMP("GMPLIST",$J,0)=^TMP("GMPLIST",$J,0)+1
"RTN","GMPLBLDC",95,0)
 . S ^TMP("GMPLIST",$J,IFN)=SEQ_U_+Y_U_X_U_CODE_U_SCTC_U_SCTD ; seq ^ # ^ text ^ code
"RTN","GMPLBLDC",96,0)
 . S (^TMP("GMPLIST",$J,"PROB",+Y),^TMP("GMPLIST",$J,"SEQ",SEQ))=IFN,GMPREBLD=1
"RTN","GMPLBLDC",97,0)
 I $D(GMPREBLD) S VALMBCK="R",GMPLSAVE=1 D BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR
"RTN","GMPLBLDC",98,0)
 S VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLDC",99,0)
 Q
"RTN","GMPLBLDC",100,0)
 ;
"RTN","GMPLBLDC",101,0)
REMOVE ; Remove problem from group
"RTN","GMPLBLDC",102,0)
 N NUM,IFN S VALMBCK=""
"RTN","GMPLBLDC",103,0)
 S NUM=$$SEL1^GMPLBLD1 G:NUM="^" RMQ
"RTN","GMPLBLDC",104,0)
 S IFN=$P($G(^TMP("GMPLST",$J,"B",NUM)),U,1) G:+IFN'>0 RMQ
"RTN","GMPLBLDC",105,0)
 I "@"[$G(^TMP("GMPLIST",$J,IFN)) W $C(7),!!,"Problem does not exist in this category!" H 2 G RMQ
"RTN","GMPLBLDC",106,0)
 I '$$SURE^GMPLX W !?5,"< Nothing removed! >" H 1 G RMQ
"RTN","GMPLBLDC",107,0)
 D DELETE^GMPLBLD1(IFN) S VALMBCK="R",GMPLSAVE=1
"RTN","GMPLBLDC",108,0)
 D BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE),HDR
"RTN","GMPLBLDC",109,0)
RMQ S:'VALMCC VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLDC",110,0)
 Q
"RTN","GMPLBLDC",111,0)
 ;
"RTN","GMPLBLDC",112,0)
EDIT ; Edit problem text and code
"RTN","GMPLBLDC",113,0)
 N NUM,SEL,IFN,PIECE,CODE,PROB,PROBLEM,GMPQUIT,GMPREBLD S VALMBCK="" D FULL^VALM1
"RTN","GMPLBLDC",114,0)
 S SEL=$$SEL^GMPLBLD1 G:SEL="^" EDQ
"RTN","GMPLBLDC",115,0)
 F PIECE=1:1:$L(SEL,",") D  Q:$D(GMPQUIT)  W !
"RTN","GMPLBLDC",116,0)
 . S NUM=$P(SEL,",",PIECE) Q:NUM'>0
"RTN","GMPLBLDC",117,0)
 . S IFN=$P($G(^TMP("GMPLST",$J,"B",NUM)),U,1) Q:IFN'>0
"RTN","GMPLBLDC",118,0)
 . I "@"[$G(^TMP("GMPLIST",$J,IFN)) W $C(7),!!,"Problem #"_NUM_" does not exist in this category!" H 2 Q
"RTN","GMPLBLDC",119,0)
 . W !!,">>>  Problem #"_NUM S PROBLEM=^TMP("GMPLIST",$J,IFN)
"RTN","GMPLBLDC",120,0)
 . W:$P(PROBLEM,U,2)>1 " = "_$G(^LEX(757.01,+$P(PROBLEM,U,2),0)) W ! ; KER
"RTN","GMPLBLDC",121,0)
 . S PROB=$$TEXT^GMPLBLD1($P(PROBLEM,U,3)) I PROB="^" S GMPQUIT=1 Q
"RTN","GMPLBLDC",122,0)
 . I PROB="@" D DELETE^GMPLBLD1(IFN) S GMPREBLD=1 Q
"RTN","GMPLBLDC",123,0)
 . S CODE=$$CODE^GMPLBLD1($P(PROBLEM,U,5),$P(PROBLEM,U,4)) I CODE="^" S GMPQUIT=1 Q
"RTN","GMPLBLDC",124,0)
 . S ^TMP("GMPLIST",$J,IFN)=$P(PROBLEM,U,1,2)_U_PROB_U_CODE_U_$P(PROBLEM,U,5,6),GMPREBLD=1
"RTN","GMPLBLDC",125,0)
 I $D(GMPREBLD) S VALMBCK="R",GMPLSAVE=1 D BUILD("^TMP(""GMPLIST"",$J)",GMPLMODE)
"RTN","GMPLBLDC",126,0)
EDQ S:'VALMCC VALMBCK="R" S VALMSG=$$MSG^GMPLX
"RTN","GMPLBLDC",127,0)
 Q
"RTN","GMPLDISP")
0^2^B41666174
"RTN","GMPLDISP",1,0)
GMPLDISP ; ISL/MKB,JER,TC - Problem List detailed display ;06/08/12  15:10
"RTN","GMPLDISP",2,0)
 ;;2.0;Problem List;**21,26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLDISP",3,0)
 ;
"RTN","GMPLDISP",4,0)
 ; External References
"RTN","GMPLDISP",5,0)
 ;   DBIA  3106  ^DIC(49
"RTN","GMPLDISP",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLDISP",7,0)
 ;   DBIA 10040  ^SC(  file 44
"RTN","GMPLDISP",8,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLDISP",9,0)
 ;   DBIA 10116  $$SETSTR^VALM1
"RTN","GMPLDISP",10,0)
 ;   DBIA 10117  CLEAN^VALM10
"RTN","GMPLDISP",11,0)
 ;   DBIA 10117  CNTRL^VALM10
"RTN","GMPLDISP",12,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","GMPLDISP",13,0)
 ;   DBIA 10103  $$HTFM^XLFDT
"RTN","GMPLDISP",14,0)
 ;   DBIA 10104  $$REPEAT^XLFSTR
"RTN","GMPLDISP",15,0)
 ;
"RTN","GMPLDISP",16,0)
EN ; Init Variables (need GMPLSEL,GMPLNO) and List Array
"RTN","GMPLDISP",17,0)
 G:'$D(GMPLSEL) ERROR G:'$G(GMPLNO) ERROR
"RTN","GMPLDISP",18,0)
 S GMPI=+$G(GMPI)+1 I GMPI>GMPLNO D  Q
"RTN","GMPLDISP",19,0)
 . W !!,"There are no more problems that have been selected to view!",! S VALMBCK="" H 2
"RTN","GMPLDISP",20,0)
 S GMPLNUM=$P(GMPLSEL,",",GMPI) G:GMPLNUM'>0 ERROR
"RTN","GMPLDISP",21,0)
 S GMPIFN=$P($G(^TMP("GMPLIDX",$J,+GMPLNUM)),U,2) G:GMPIFN'>0 ERROR
"RTN","GMPLDISP",22,0)
 W !!,"Retrieving current data for problem #"_GMPLNUM_" ...",!
"RTN","GMPLDISP",23,0)
 ;
"RTN","GMPLDISP",24,0)
PROB ; Display problem GMPIFN
"RTN","GMPLDISP",25,0)
 N LINE,STR,I,J,L,TEXT,NOTE,GMPLDT,GMPL0,GMPL1,GMPL800,GMPL803,X,Y,IDT,FAC,AIFN,SP,LCNT
"RTN","GMPLDISP",26,0)
 N NIFN,SCTC,SCTD,SCTT,PROVNAR,ICDDESC,DESCR,ICD,PNTXT
"RTN","GMPLDISP",27,0)
 G:'$G(GMPIFN) ERROR D CLEAN^VALM10
"RTN","GMPLDISP",28,0)
 S GMPL0=$G(^AUPNPROB(GMPIFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)),GMPL803=$G(^(803,0)),LCNT=1,SP=""
"RTN","GMPLDISP",29,0)
 S GMPLDT=$S(+$P(GMPL1,U,9):$P(GMPL1,U,9),+$P(GMPL0,U,8):$P(GMPL0,U,8),1:DT)
"RTN","GMPLDISP",30,0)
 F I=11,12,13,15,16,17,18 S:+$P(GMPL1,U,I) SP=SP_$S(I=11:"AGENT ORANGE",I=12:"RADIATION",I=13:"ENV CONTAMINANTS",I=15:"HEAD/NECK CANCER",I=16:"MIL SEXUAL TRAUMA",I=17:"COMBAT VET",1:"SHAD")_U
"RTN","GMPLDISP",31,0)
 F  Q:$E(SP,$L(SP))'="^"  S SP=$E(SP,1,($L(SP)-1))
"RTN","GMPLDISP",32,0)
 S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2)  ;ICD=ICD-9-CM Code
"RTN","GMPLDISP",33,0)
 S PROVNAR=$$PROBTEXT^GMPLX(GMPIFN)  ;PROVNAR=Provider Narrative
"RTN","GMPLDISP",34,0)
 S ICDDESC=$$ICDDESC^GMPLUTL2($G(ICD),$P(GMPL0,U,8))  ;ICDDESC=ICD Description
"RTN","GMPLDISP",35,0)
 S SCTC=$P(GMPL800,U),SCTD=$P(GMPL800,U,2)  ;SCTC=SNOMED-CT Concept Code,SCTD=SNOMED-CT Designation Code
"RTN","GMPLDISP",36,0)
 S:(PROVNAR["SCT") PNTXT=$P(PROVNAR," (SCT")
"RTN","GMPLDISP",37,0)
 D WRAP^GMPLX($G(PROVNAR),65,.TEXT)
"RTN","GMPLDISP",38,0)
 I TEXT=1 S GMPDT(LCNT,0)="  Problem: "_TEXT(1)
"RTN","GMPLDISP",39,0)
 E  I TEXT>1 D
"RTN","GMPLDISP",40,0)
 . S GMPDT(LCNT,0)="  Problem: "_TEXT(1)
"RTN","GMPLDISP",41,0)
 . F I=2:1:TEXT S LCNT=LCNT+1,GMPDT(LCNT,0)=$S($L($G(SCTC))!$L($G(SCTD)):"           ",1:"               ")_TEXT(I)
"RTN","GMPLDISP",42,0)
 I $L($G(SCTC)) S SCTT=$$SCTTEXT^GMPLUTL2(SCTC,$P(GMPL0,U,8))  ;SCTT=SNOMED-CT Preferred Text
"RTN","GMPLDISP",43,0)
 I $L($G(SCTC))!$L($G(SCTD)) D
"RTN","GMPLDISP",44,0)
 . I ($L($G(SCTT))>0)&(PNTXT'=$G(SCTT)) D
"RTN","GMPLDISP",45,0)
 . . D WRAP^GMPLX($G(SCTT),65,.SCTTTXT) S LCNT=LCNT+1,GMPDT(LCNT,0)="SNOMED-CT: "_SCTTTXT(1)
"RTN","GMPLDISP",46,0)
 . . I SCTTTXT>1 F L=2:1:SCTTTXT S LCNT=LCNT+1,GMPDT(LCNT,0)="           "_SCTTTXT(L)
"RTN","GMPLDISP",47,0)
 . I $L($G(ICD)) S LCNT=LCNT+1,GMPDT(LCNT,0)=" ICD-9-CM: "_$G(ICD)_" ["_$G(ICDDESC)_"]"
"RTN","GMPLDISP",48,0)
 E  D
"RTN","GMPLDISP",49,0)
 . D WRAP^GMPLX($G(ICDDESC),65,.DESCR) S LCNT=LCNT+1,GMPDT(LCNT,0)="ICD-9-CM TEXT: "_DESCR(1)
"RTN","GMPLDISP",50,0)
 . I DESCR>1 F J=2:1:DESCR S LCNT=LCNT+1,GMPDT(LCNT,0)="               "_DESCR(J)
"RTN","GMPLDISP",51,0)
 I $L($G(GMPL803))>0 D
"RTN","GMPLDISP",52,0)
 . N DA S DA=0 F  S DA=$O(^AUPNPROB(GMPIFN,803,DA)) Q:'+DA  D
"RTN","GMPLDISP",53,0)
 . . N ICDN,ICDNDX S ICDN=$P($G(^AUPNPROB(GMPIFN,803,DA,0)),U),ICDNDX=$$ICDDESC^GMPLUTL2($G(ICDN))
"RTN","GMPLDISP",54,0)
 . . S LCNT=LCNT+1,GMPDT(LCNT,0)="         : "_$G(ICDN)_$$PAD^GMPLX(ICDN,6)_" ["_$G(ICDNDX)_"]"
"RTN","GMPLDISP",55,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="       "
"RTN","GMPLDISP",56,0)
PR1 ; Onset
"RTN","GMPLDISP",57,0)
 ;   SC Condition
"RTN","GMPLDISP",58,0)
 ;   Status
"RTN","GMPLDISP",59,0)
 ;   Exposure
"RTN","GMPLDISP",60,0)
 ;   Provider
"RTN","GMPLDISP",61,0)
 ;   Service/Clinic
"RTN","GMPLDISP",62,0)
 S LINE="    Onset: "_$S($P(GMPL0,U,13):$$EXTDT^GMPLX($P(GMPL0,U,13)),1:"date unknown"),STR=""
"RTN","GMPLDISP",63,0)
 S:GMPVA STR="SC Condition: "_$S(+$P(GMPL1,U,10):"YES",$P(GMPL1,U,10)=0:"NO",1:"unknown")
"RTN","GMPLDISP",64,0)
 S LINE=$$SETSTR^VALM1(STR,LINE,49,30),LCNT=LCNT+1,GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",65,0)
 S X=$P(GMPL0,U,12),LINE="   Status: "_$S(X="A":"ACTIVE",1:"INACTIVE")
"RTN","GMPLDISP",66,0)
 I X="A",$L($P(GMPL1,U,14)) S LINE=LINE_"/"_$S($P(GMPL1,U,14)="A":"ACUTE",1:"CHRONIC")
"RTN","GMPLDISP",67,0)
 I X="I",$P(GMPL1,U,7) S LINE=LINE_", Resolved "_$$EXTDT^GMPLX($P(GMPL1,U,7))
"RTN","GMPLDISP",68,0)
 S STR="",LCNT=LCNT+1
"RTN","GMPLDISP",69,0)
 S:GMPVA STR="    Exposure: "_$S('$L(SP):"none",1:$P(SP,U))
"RTN","GMPLDISP",70,0)
 S LINE=$$SETSTR^VALM1(STR,LINE,49,30),GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",71,0)
 S LINE=" Provider: "_$P($G(^VA(200,+$P(GMPL1,U,5),0)),U),LCNT=LCNT+1,STR=""
"RTN","GMPLDISP",72,0)
 I GMPVA,$L(SP,U)>1 S STR=$P(SP,U,2)
"RTN","GMPLDISP",73,0)
 S LINE=$$SETSTR^VALM1(STR,LINE,63,16),GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",74,0)
 I $E(GMPLVIEW("VIEW"))="S" S LINE="  Service: "_$P($G(^DIC(49,+$P(GMPL1,U,6),0)),U)
"RTN","GMPLDISP",75,0)
 E  S LINE="   Clinic: "_$P($G(^SC(+$P(GMPL1,U,8),0)),U)
"RTN","GMPLDISP",76,0)
 S LCNT=LCNT+1,STR="" I GMPVA,$L(SP,U)>2 S STR=$P(SP,U,3)
"RTN","GMPLDISP",77,0)
 S LINE=$$SETSTR^VALM1(STR,LINE,63,16),GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",78,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="       "
"RTN","GMPLDISP",79,0)
PR2 ; Recorded
"RTN","GMPLDISP",80,0)
 ;   Entered
"RTN","GMPLDISP",81,0)
 ;   Provider Narrative
"RTN","GMPLDISP",82,0)
 ;   ICD code
"RTN","GMPLDISP",83,0)
 S LINE=" Recorded: "_$S($P(GMPL1,U,9):$$EXTDT^GMPLX($P(GMPL1,U,9)),1:"date unknown")
"RTN","GMPLDISP",84,0)
 S:$P(GMPL1,U,4) LINE=LINE_", by "_$P($G(^VA(200,+$P(GMPL1,U,4),0)),U)
"RTN","GMPLDISP",85,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",86,0)
 S LINE="  Entered: "_$$EXTDT^GMPLX($P(GMPL0,U,8))
"RTN","GMPLDISP",87,0)
 S LINE=LINE_", by "_$P($G(^VA(200,+$P(GMPL1,U,3),0)),U),LCNT=LCNT+1
"RTN","GMPLDISP",88,0)
 S:GMPARAM("VER")&($P(GMPL1,U,2)="T") LINE=LINE_"  <unconfirmed>"
"RTN","GMPLDISP",89,0)
 S GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",90,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="       "
"RTN","GMPLDISP",91,0)
PR3 ; Comments
"RTN","GMPLDISP",92,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="Comments:"
"RTN","GMPLDISP",93,0)
 D CNTRL^VALM10(LCNT,1,8,IOUON,IOUOFF)
"RTN","GMPLDISP",94,0)
 ;     By Facility
"RTN","GMPLDISP",95,0)
 F FAC=0:0 S FAC=$O(^AUPNPROB(GMPIFN,11,FAC)) Q:+FAC'>0  D
"RTN","GMPLDISP",96,0)
 . I 'FAC S LCNT=LCNT+1,GMPDT(LCNT,0)="   <None>" G PR4
"RTN","GMPLDISP",97,0)
 . F NIFN=0:0 S NIFN=$O(^AUPNPROB(GMPIFN,11,FAC,11,NIFN)) Q:+NIFN'>0  D
"RTN","GMPLDISP",98,0)
 . . S NOTE=$G(^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0)) Q:NOTE=""
"RTN","GMPLDISP",99,0)
 . . S LINE=$J($$EXTDT^GMPLX($P(NOTE,U,5)),10)_": "_$P(NOTE,U,3)
"RTN","GMPLDISP",100,0)
 . . S LCNT=LCNT+1,GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",101,0)
 . . I $P(NOTE,U,6) S LINE="            "_$P($G(^VA(200,+$P(NOTE,U,6),0)),U),LCNT=LCNT+1,GMPDT(LCNT,0)=LINE
"RTN","GMPLDISP",102,0)
 S:'($G(NOTE)) LCNT=LCNT+1,GMPDT(LCNT,0)="   <None>"
"RTN","GMPLDISP",103,0)
PR4 ; Audit Trail
"RTN","GMPLDISP",104,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="       "
"RTN","GMPLDISP",105,0)
 S LCNT=LCNT+1,GMPDT(LCNT,0)="History:"
"RTN","GMPLDISP",106,0)
 D CNTRL^VALM10(LCNT,1,7,IOUON,IOUOFF)
"RTN","GMPLDISP",107,0)
 I '$D(^GMPL(125.8,"B",GMPIFN)) S LCNT=LCNT+1,GMPDT(LCNT,0)="   <No changes>" G PRQ
"RTN","GMPLDISP",108,0)
 F IDT=0:0 S IDT=$O(^GMPL(125.8,"AD",GMPIFN,IDT)) Q:IDT'>0  D
"RTN","GMPLDISP",109,0)
 . F AIFN=0:0 S AIFN=$O(^GMPL(125.8,"AD",GMPIFN,IDT,AIFN)) Q:AIFN'>0  D DT^GMPLHIST
"RTN","GMPLDISP",110,0)
PRQ ; Header Node
"RTN","GMPLDISP",111,0)
 S VALMCNT=LCNT,GMPDT(0)=VALMCNT,VALMSG=$$MSG^GMPLX,VALMBG=1,VALMBCK="R"
"RTN","GMPLDISP",112,0)
 Q
"RTN","GMPLDISP",113,0)
 ;
"RTN","GMPLDISP",114,0)
HDR ; Header Code (uses GMPDFN, GMPIFN)
"RTN","GMPLDISP",115,0)
 N LASTMOD,PAT S PAT=$P(GMPDFN,U,2)_"  ("_$P(GMPDFN,U,3)_")"
"RTN","GMPLDISP",116,0)
 S LASTMOD=$S($G(GMPIFN):$P(^AUPNPROB(GMPIFN,0),U,3),1:$E($$HTFM^XLFDT($H),1,12))
"RTN","GMPLDISP",117,0)
 S LASTMOD="Last Updated: "_$$FMTE^XLFDT(LASTMOD)
"RTN","GMPLDISP",118,0)
 S VALMHDR(1)=PAT_$$REPEAT^XLFSTR(" ",(79-$L(PAT)-$L(LASTMOD)))_LASTMOD
"RTN","GMPLDISP",119,0)
 Q
"RTN","GMPLDISP",120,0)
 ;
"RTN","GMPLDISP",121,0)
HELP ; Help Code
"RTN","GMPLDISP",122,0)
 N X W !!?4,"You may view detailed information here on this problem;"
"RTN","GMPLDISP",123,0)
 W !?4,"more data may be available by entering 'Next Screen'."
"RTN","GMPLDISP",124,0)
 W !?4,"If you have selected multiple problems to view, you may"
"RTN","GMPLDISP",125,0)
 W !?4,"enter 'Continue to Next Selected Problem'; to return to"
"RTN","GMPLDISP",126,0)
 W !?4,"the patient's problem list, enter 'Quit to Problem List'."
"RTN","GMPLDISP",127,0)
 W !!,"Press <return> to continue ... " R X:DTIME
"RTN","GMPLDISP",128,0)
 S VALMSG=$$MSG^GMPLX,VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLDISP",129,0)
 Q
"RTN","GMPLDISP",130,0)
 ;
"RTN","GMPLDISP",131,0)
DEFLT() ; Default Action, using GMPI and GMPLNO
"RTN","GMPLDISP",132,0)
 I GMPI<GMPLNO Q "Continue to Next Selected Problem"
"RTN","GMPLDISP",133,0)
 Q "Quit to Problem List"
"RTN","GMPLDISP",134,0)
 ;
"RTN","GMPLDISP",135,0)
ERROR ; Error Message - drop into EXIT
"RTN","GMPLDISP",136,0)
 W !!,"ERROR -- Cannot continue ... Returning to Problem List.",!
"RTN","GMPLDISP",137,0)
 S VALMBCK="Q" H 1
"RTN","GMPLDISP",138,0)
EXIT ; Exit Code
"RTN","GMPLDISP",139,0)
 K GMPDT Q
"RTN","GMPLEDT3")
0^3^B29964655
"RTN","GMPLEDT3",1,0)
GMPLEDT3 ; ISL/MKB,KER,JER -- Problem List edit utilities ;08/17/12  16:49
"RTN","GMPLEDT3",2,0)
 ;;2.0;Problem List;**26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLEDT3",3,0)
 ;
"RTN","GMPLEDT3",4,0)
 ; External References
"RTN","GMPLEDT3",5,0)
 ;   DBIA   872  ^ORD(101
"RTN","GMPLEDT3",6,0)
 ;   DBIA 10026  ^XUSEC("GMPL ICD CODE"
"RTN","GMPLEDT3",7,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","GMPLEDT3",8,0)
 ;   DBIA 10026  ^DIR
"RTN","GMPLEDT3",9,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","GMPLEDT3",10,0)
 ;
"RTN","GMPLEDT3",11,0)
MSG() ; List Manager Message Bar
"RTN","GMPLEDT3",12,0)
 Q "Enter the number of the item(s) you wish to change"
"RTN","GMPLEDT3",13,0)
 ;
"RTN","GMPLEDT3",14,0)
KEYS ; Setup XQORM("KEY") array
"RTN","GMPLEDT3",15,0)
 ;   Numbers ref'd also in IN4^-EDIT, NTES^-EDT4
"RTN","GMPLEDT3",16,0)
 N I,PROTCL,NUM,ICD
"RTN","GMPLEDT3",17,0)
 S ICD=$S($D(^XUSEC("GMPL ICD CODE",DUZ)):1,1:0)
"RTN","GMPLEDT3",18,0)
 S XQORM("KEY","1")=$O(^ORD(101,"B","GMPL EDIT REFORMULATE",0))_"^1"
"RTN","GMPLEDT3",19,0)
 S XQORM("KEY","2")=$O(^ORD(101,"B","GMPL EDIT ONSET",0))_"^1"
"RTN","GMPLEDT3",20,0)
 S XQORM("KEY","3")=$O(^ORD(101,"B","GMPL EDIT STATUS",0))_"^1"
"RTN","GMPLEDT3",21,0)
 S XQORM("KEY","4")=$O(^ORD(101,"B","GMPL EDIT PROVIDER",0))_"^1"
"RTN","GMPLEDT3",22,0)
 S XQORM("KEY","5")=$O(^ORD(101,"B","GMPL EDIT SERVICE",0))_"^1",NUM=5
"RTN","GMPLEDT3",23,0)
 S:ICD XQORM("KEY","6")=$O(^ORD(101,"B","GMPL EDIT ICD",0))_"^1",NUM=6
"RTN","GMPLEDT3",24,0)
 I GMPVA D
"RTN","GMPLEDT3",25,0)
 . S NUM=NUM+1,XQORM("KEY",NUM)=$O(^ORD(101,"B","GMPL EDIT SC",0))_"^1"
"RTN","GMPLEDT3",26,0)
 . S NUM=NUM+1,XQORM("KEY",NUM)=$O(^ORD(101,"B","GMPL EDIT SP",0))_"^1"
"RTN","GMPLEDT3",27,0)
 S PROTCL=$O(^ORD(101,"B","GMPL EDIT NOTES",0))_"^1"
"RTN","GMPLEDT3",28,0)
 I GMPFLD(10,0) F I=1:1:GMPFLD(10,0) S NUM=NUM+1,XQORM("KEY",NUM)=PROTCL
"RTN","GMPLEDT3",29,0)
 S XQORM("KEY",NUM+1)=$O(^ORD(101,"B","GMPL EDIT NEW NOTE",0))_"^1"
"RTN","GMPLEDT3",30,0)
 S:$G(GMPARAM("VER"))&$D(GMPLUSER) XQORM("KEY","$")=$O(^ORD(101,"B","GMPL EDIT VERIFY",0))_"^1"
"RTN","GMPLEDT3",31,0)
 S XQORM("KEY","=")=$O(^ORD(101,"B","VALM NEXT SCREEN",0))_"^1"
"RTN","GMPLEDT3",32,0)
 S VALMSG=$$MSG
"RTN","GMPLEDT3",33,0)
 Q
"RTN","GMPLEDT3",34,0)
 ;
"RTN","GMPLEDT3",35,0)
GETFLDS(DA) ; Define GMPFLD(#) and GMPORIG(#) Arrays with Current Values
"RTN","GMPLEDT3",36,0)
 N DIC,DIQ,DR,I,GMPL,CNT,NIFN,FAC,EXT
"RTN","GMPLEDT3",37,0)
 S DIC="^AUPNPROB(",DIQ="GMPL",DIQ(0)="IE"
"RTN","GMPLEDT3",38,0)
 S DR=".01;.03;.05;.08:1.02;1.05:1.18;80001:80005" D EN^DIQ1
"RTN","GMPLEDT3",39,0)
 F I=.01,.03,.05,.08,.12,.13,1.01,1.02,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,80001,80002,80003,80004,80005 D
"RTN","GMPLEDT3",40,0)
 . S GMPORIG(I)=$G(GMPL(9000011,DA,I,"I")),EXT=""
"RTN","GMPLEDT3",41,0)
 . I I=1.01,GMPL(9000011,DA,I,"I")'>1 S GMPORIG(I)="" Q
"RTN","GMPLEDT3",42,0)
 . Q:(GMPORIG(I)="")!(I=1.02)
"RTN","GMPLEDT3",43,0)
 . I "^.01^.05^.12^1.01^1.05^1.06^1.08^1.1^1.14^80001^80002^80003^80004^80005^"[(U_I_U) S EXT=GMPL(9000011,DA,I,"E")
"RTN","GMPLEDT3",44,0)
 . I "^.03^.08^.13^1.07^1.09^"[(U_I_U) S EXT=$$EXTDT^GMPLX(GMPORIG(I))
"RTN","GMPLEDT3",45,0)
 . I "^1.11^1.12^1.13^"[(U_I_U) S EXT=$S(I=1.11:"AGENT ORANGE",I=1.12:"RADIATION",1:"ENV CONTAMINANTS")
"RTN","GMPLEDT3",46,0)
 . I "^1.15^1.16^1.17^1.18^"[(U_I_U) S EXT=$S(I=1.15:"HEAD/NECK CANCER",1=1.16:"MIL SEXUAL TRAUMA",1=1.17:"COMBAT VET",1:"SHAD")
"RTN","GMPLEDT3",47,0)
 . S GMPORIG(I)=GMPORIG(I)_U_EXT
"RTN","GMPLEDT3",48,0)
 I $D(^AUPNPROB(DA,803))=10 D
"RTN","GMPLEDT3",49,0)
 . N CODE S CODE=$P(GMPORIG(.01),U,2)
"RTN","GMPLEDT3",50,0)
 . S I=0 F  S I=$O(^AUPNPROB(DA,803,I)) Q:+I'>0  D
"RTN","GMPLEDT3",51,0)
 . . S $P(CODE,"/",(I+1))=$P($G(^AUPNPROB(DA,803,I,0)),U)
"RTN","GMPLEDT3",52,0)
 . S $P(GMPORIG(.01),U,2)=CODE
"RTN","GMPLEDT3",53,0)
 S I=0 F  S I=$O(GMPORIG(I)) Q:I'>0  S GMPFLD(I)=GMPORIG(I)
"RTN","GMPLEDT3",54,0)
 S (CNT,GMPORIG(10,0),GMPFLD(10,0))=0
"RTN","GMPLEDT3",55,0)
 S FAC=$O(^AUPNPROB(DA,11,"B",+GMPVAMC,0)) Q:'FAC
"RTN","GMPLEDT3",56,0)
 F NIFN=0:0 S NIFN=$O(^AUPNPROB(DA,11,FAC,11,"B",NIFN)) Q:NIFN'>0  D
"RTN","GMPLEDT3",57,0)
 . I '$D(GMPLMGR),$P($G(^AUPNPROB(DA,11,FAC,11,NIFN,0)),U,6)'=+GMPROV Q
"RTN","GMPLEDT3",58,0)
 . S CNT=CNT+1,GMPORIG(10,CNT)=$G(^AUPNPROB(DA,11,FAC,11,NIFN,0))
"RTN","GMPLEDT3",59,0)
 . S $P(GMPORIG(10,CNT),U,2)=FAC
"RTN","GMPLEDT3",60,0)
 . S GMPFLD(10,CNT)=GMPORIG(10,CNT)
"RTN","GMPLEDT3",61,0)
 S (GMPORIG(10,0),GMPFLD(10,0))=CNT
"RTN","GMPLEDT3",62,0)
 Q
"RTN","GMPLEDT3",63,0)
 ;
"RTN","GMPLEDT3",64,0)
FLDS ; Define GMPFLD("FLD") Array for Editing
"RTN","GMPLEDT3",65,0)
 S (GMPFLD("FLD",2),GMPFLD("FLD",6),GMPFLD("FLD",7))="Q"
"RTN","GMPLEDT3",66,0)
 S GMPFLD("FLD",1)="TERM",GMPFLD("FLD","PROBLEM")=1
"RTN","GMPLEDT3",67,0)
 S:$D(^XUSEC("GMPL ICD CODE",DUZ)) GMPFLD("FLD",2)="ICD",GMPFLD("FLD","ICD CODE")=2
"RTN","GMPLEDT3",68,0)
 S GMPFLD("FLD",3)="NOTE",GMPFLD("FLD","COMMENT")=3
"RTN","GMPLEDT3",69,0)
 S GMPFLD("FLD",4)="ONSET",GMPFLD("FLD","DATE OF ONSET")=4
"RTN","GMPLEDT3",70,0)
 S GMPFLD("FLD",5)="STATUS",GMPFLD("FLD","STATUS")=5
"RTN","GMPLEDT3",71,0)
 S:GMPSC GMPFLD("FLD",6)="SC",GMPFLD("FLD","IS THIS PROBLEM RELATED TO A SERVICE-CONNECTED CONDITION?")=6
"RTN","GMPLEDT3",72,0)
 S:GMPAGTOR GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO AGENT ORANGE EXPOSURE?")=7
"RTN","GMPLEDT3",73,0)
 S:GMPION GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO RADIATION EXPOSURE?")=7
"RTN","GMPLEDT3",74,0)
 S:GMPGULF GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO ENVIRONMENTAL CONTAMINANTS EXPOSURE?")=7
"RTN","GMPLEDT3",75,0)
 S:GMPHNC GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO DIAGNOSED HEAD AND/OR NECK CANCER?")=7
"RTN","GMPLEDT3",76,0)
 S:GMPMST GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO REPORTED MILITARY SEXUAL TRAUMA?")=7
"RTN","GMPLEDT3",77,0)
 S:GMPCV GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO REPORTED COMBAT VET?")=7
"RTN","GMPLEDT3",78,0)
 S:GMPSHD GMPFLD("FLD",7)="SP",GMPFLD("FLD","IS THIS PROBLEM RELATED TO REPORTED SHIPBOARD HAZARD AND DEFENSE?")=7
"RTN","GMPLEDT3",79,0)
 S GMPFLD("FLD",8)="PROV",GMPFLD("FLD","RESPONSIBLE PROVIDER")=8
"RTN","GMPLEDT3",80,0)
 S GMPFLD("FLD",9)="SOURCE"
"RTN","GMPLEDT3",81,0)
 S:$E(GMPLVIEW("VIEW"))="C" GMPFLD("FLD","CLINIC")=9
"RTN","GMPLEDT3",82,0)
 S:$E(GMPLVIEW("VIEW"))'="C" GMPFLD("FLD","SERVICE")=9
"RTN","GMPLEDT3",83,0)
 S GMPFLD("FLD",10)="RECORDED",GMPFLD("FLD","DATE RECORDED")=10
"RTN","GMPLEDT3",84,0)
 S GMPFLD("FLD",11)="AUTHOR",GMPFLD("FLD","RECORDING PROVIDER")=11
"RTN","GMPLEDT3",85,0)
 S GMPFLD("FLD",0)=11
"RTN","GMPLEDT3",86,0)
 Q
"RTN","GMPLEDT3",87,0)
 ;
"RTN","GMPLEDT3",88,0)
JUMP(XFLD) ; Resolve ^- Jump Out of Field Order in Edit
"RTN","GMPLEDT3",89,0)
 N I,MATCH,CNT,PROMPT,DIR,X,Y,DTOUT,DUOUT
"RTN","GMPLEDT3",90,0)
 ;   Passed in as ^XXX
"RTN","GMPLEDT3",91,0)
 S XFLD=$$UP^XLFSTR($P(XFLD,U,2))
"RTN","GMPLEDT3",92,0)
 I (XFLD="")!(XFLD["^") S GMPQUIT=1 Q
"RTN","GMPLEDT3",93,0)
 I '$D(GMPLJUMP) W $C(7),"  ^-jumping not allowed now!" S GMPLJUMP=0 Q
"RTN","GMPLEDT3",94,0)
 ;   Field is Exact
"RTN","GMPLEDT3",95,0)
 I $G(GMPFLD("FLD",XFLD)) S GMPLJUMP=GMPFLD("FLD",XFLD) Q
"RTN","GMPLEDT3",96,0)
 S CNT=0,PROMPT=" "
"RTN","GMPLEDT3",97,0)
 F  S PROMPT=$O(GMPFLD("FLD",PROMPT)) Q:PROMPT=""  D
"RTN","GMPLEDT3",98,0)
 . Q:$E(PROMPT,1,$L(XFLD))'=XFLD
"RTN","GMPLEDT3",99,0)
 . S CNT=CNT+1,MATCH(CNT)=GMPFLD("FLD",PROMPT)_U_PROMPT
"RTN","GMPLEDT3",100,0)
 I CNT=0 W $C(7),"  ??" Q
"RTN","GMPLEDT3",101,0)
 I CNT=1 S PROMPT=$P(MATCH(1),U,2),GMPLJUMP=+MATCH(1) W $E(PROMPT,$L(XFLD)+1,$L(PROMPT)) Q
"RTN","GMPLEDT3",102,0)
 ;   Select which Field to Jump To.
"RTN","GMPLEDT3",103,0)
 F I=1:1:CNT S DIR("A",I)=I_"  "_$P(MATCH(I),U,2)
"RTN","GMPLEDT3",104,0)
 S DIR("A")="Select 1-"_CNT_": ",DIR(0)="NAO^1:"_CNT
"RTN","GMPLEDT3",105,0)
 S DIR("?")="Select the field you wish to jump to, by number"
"RTN","GMPLEDT3",106,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT))!(Y="") Q
"RTN","GMPLEDT3",107,0)
 S GMPLJUMP=+MATCH(+Y)
"RTN","GMPLEDT3",108,0)
 Q
"RTN","GMPLEDT3",109,0)
 ;
"RTN","GMPLEDT3",110,0)
CK ; Check whether to Stop Processing
"RTN","GMPLEDT3",111,0)
 ;   Called from Exit Action of GMPL EDIT XXX Protocols
"RTN","GMPLEDT3",112,0)
 S:$D(GMPQUIT) XQORPOP=1 S:'$D(GMPQUIT) GMPREBLD=1 K GMPQUIT
"RTN","GMPLEDT3",113,0)
 I $D(DTOUT)!($G(VALMBCK)="Q") S VALMBCK="Q" Q
"RTN","GMPLEDT3",114,0)
 S VALMBCK="R",VALMSG=$$MSG
"RTN","GMPLEDT3",115,0)
 Q
"RTN","GMPLENFM")
0^16^B31415115
"RTN","GMPLENFM",1,0)
GMPLENFM ; SLC/MKB/KER -- Problem List Enc Form utilities ;11/20/12  15:03
"RTN","GMPLENFM",2,0)
 ;;2.0;Problem List;**3,4,7,26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLENFM",3,0)
 ;
"RTN","GMPLENFM",4,0)
 ; External References
"RTN","GMPLENFM",5,0)
 ;   DBIA  1609  CONFIG^LEXSET
"RTN","GMPLENFM",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLENFM",7,0)
 ;   DBIA 10006  ^DIC
"RTN","GMPLENFM",8,0)
 ;
"RTN","GMPLENFM",9,0)
ACTIVE ; List of Active Problems for DFN
"RTN","GMPLENFM",10,0)
 ;   Input variables:
"RTN","GMPLENFM",11,0)
 ;             DFN               Patient ID (Required)
"RTN","GMPLENFM",12,0)
 ;             [GMPLINDT]        Date of Interest (Optional - defaults to today)
"RTN","GMPLENFM",13,0)
 ;                                 This is the date to use for evalutation of the
"RTN","GMPLENFM",14,0)
 ;                                 Activation status of ICD-9-CM and SNOMED CT codes
"RTN","GMPLENFM",15,0)
 ;
"RTN","GMPLENFM",16,0)
 ;   Sets Global Array:
"RTN","GMPLENFM",17,0)
 ;   ^TMP("IB",$J,"INTERFACES",DFN,"GMP PATIENT ACTIVE PROBLEMS",#) =
"RTN","GMPLENFM",18,0)
 ;
"RTN","GMPLENFM",19,0)
 ;   Piece 1:  Problem text
"RTN","GMPLENFM",20,0)
 ;         2:  ICD code
"RTN","GMPLENFM",21,0)
 ;         3:  Date of Onset     00/00/00 format
"RTN","GMPLENFM",22,0)
 ;         4:  SC/NSC/""         serv-conn/not sc/unknown
"RTN","GMPLENFM",23,0)
 ;         5:  Y/N/""            serv-conn/not sc/unknown
"RTN","GMPLENFM",24,0)
 ;         6:  A/I/E/H/M/C/S/""  If problem is flagged as:
"RTN","GMPLENFM",25,0)
 ;                               A - Agent Orange
"RTN","GMPLENFM",26,0)
 ;                               I - Ionizing Radiation
"RTN","GMPLENFM",27,0)
 ;                               E - Environmental Contaminants
"RTN","GMPLENFM",28,0)
 ;                               H - Head/Neck Cancer
"RTN","GMPLENFM",29,0)
 ;                               M - Mil Sexual Trauma
"RTN","GMPLENFM",30,0)
 ;                               C - Combat Vet
"RTN","GMPLENFM",31,0)
 ;                               S - SHAD
"RTN","GMPLENFM",32,0)
 ;                                 - None
"RTN","GMPLENFM",33,0)
 ;         7:  Special Exposure  Full text of piece 6
"RTN","GMPLENFM",34,0)
 ;         8:  SNOMED-CT Concept Code
"RTN","GMPLENFM",35,0)
 ;         9:  SNOMED-CT Designation Code
"RTN","GMPLENFM",36,0)
 ;        10:  VHAT Concept VUID
"RTN","GMPLENFM",37,0)
 ;        11:  VHAT Designation VUID
"RTN","GMPLENFM",38,0)
 ;        12:  Code Status (#  -> ICD code inactive, $ -> SNOMED CT inactive,
"RTN","GMPLENFM",39,0)
 ;                          #$ -> Both ICD & SNOMED CT inactive, else "")
"RTN","GMPLENFM",40,0)
 ;
"RTN","GMPLENFM",41,0)
 N IFN,PROB,CNT,SC,NUM,GMPLIST,GMPARAM,GMPLVIEW,GMPTOTAL
"RTN","GMPLENFM",42,0)
 N GMPDFN,NODE,GMPDT
"RTN","GMPLENFM",43,0)
 Q:$G(DFN)'>0  S GMPDFN=DFN,CNT=0,NODE=$G(^GMPL(125.99,1,0))
"RTN","GMPLENFM",44,0)
 S GMPDT=$G(GMPINDT,$$DT^XLFDT)
"RTN","GMPLENFM",45,0)
 S GMPARAM("VER")=$P(NODE,U,2),GMPARAM("REV")=$P(NODE,U,5)="R",GMPARAM("QUIET")=1
"RTN","GMPLENFM",46,0)
 S GMPLVIEW("ACT")="A",GMPLVIEW("PROV")=0,GMPLVIEW("VIEW")=""
"RTN","GMPLENFM",47,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLENFM",48,0)
 F NUM=0:0 S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D
"RTN","GMPLENFM",49,0)
 . N GMPL0,GMPL1,GMPL800,CODESTAT,ICDC,ICDI,SCTC,SCTD,VHATC,VHATD
"RTN","GMPLENFM",50,0)
 . S IFN=GMPLIST(NUM) Q:IFN'>0
"RTN","GMPLENFM",51,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)),CODESTAT=""
"RTN","GMPLENFM",52,0)
 . S ICDC=$P($$ICDDX^ICDCODE(+GMPL0),U,2),CODESTAT=CODESTAT_$S(+$$STATCHK^ICDAPIU(ICDC,GMPDT):"",1:"#")
"RTN","GMPLENFM",53,0)
 . S ICDI=0 F  S ICDI=$O(^AUPNPROB(IFN,803,ICDI)) Q:+ICDI'>0  D
"RTN","GMPLENFM",54,0)
 .. N ICDMC S ICDMC=$P($G(^AUPNPROB(IFN,803,ICDI,0)),U)
"RTN","GMPLENFM",55,0)
 .. S ICDC=ICDC_"/"_ICDMC
"RTN","GMPLENFM",56,0)
 .. I CODESTAT'["#" S CODESTAT=CODESTAT_$S(+$$STATCHK^ICDAPIU(ICDMC,GMPDT):"",1:"#")
"RTN","GMPLENFM",57,0)
 . S SCTC=$P(GMPL800,U),SCTD=$P(GMPL800,U,2),VHATC=$P(GMPL800,U,3),VHATD=$P(GMPL800,U,4)
"RTN","GMPLENFM",58,0)
 . S CODESTAT=CODESTAT_$S(+$$STATCHK^LEXSRC2(SCTC,GMPDT):"",1:"$")
"RTN","GMPLENFM",59,0)
 . S PROB=$$PROBTEXT^GMPLX(IFN),CNT=CNT+1
"RTN","GMPLENFM",60,0)
 . I GMPARAM("VER"),$P(GMPL1,U,2)="T" S PROB="$"_PROB
"RTN","GMPLENFM",61,0)
 . S PROB=PROB_U_ICDC
"RTN","GMPLENFM",62,0)
 . S PROB=PROB_U_$$EXTDT^GMPLX($P(GMPL0,U,13)),SC=$P(GMPL1,U,10)
"RTN","GMPLENFM",63,0)
 . S PROB=PROB_U_$S(+SC:"SC^Y",SC=0:"NSC^N",1:"^")
"RTN","GMPLENFM",64,0)
 . S PROB=PROB_U_$$TXFCTR(GMPL1)_U_SCTC_U_SCTD_U_VHATC_U_VHATD_U_CODESTAT
"RTN","GMPLENFM",65,0)
 . S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"GMP PATIENT ACTIVE PROBLEMS",CNT)=PROB
"RTN","GMPLENFM",66,0)
 S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"GMP PATIENT ACTIVE PROBLEMS",0)=CNT
"RTN","GMPLENFM",67,0)
 Q
"RTN","GMPLENFM",68,0)
 ;
"RTN","GMPLENFM",69,0)
SELECT ; Select Common Problems
"RTN","GMPLENFM",70,0)
 ;   Sets Global Array:
"RTN","GMPLENFM",71,0)
 ;   ^TMP("IB",$J,"INTERFACES","GMP SELECT CLINIC COMMON PROBLEMS")
"RTN","GMPLENFM",72,0)
 ;   Piece 1:  Pointer to Clinical Lexicon
"RTN","GMPLENFM",73,0)
 ;         2:  Problem Text
"RTN","GMPLENFM",74,0)
 ;         3:  ICD Code (null if unknown)
"RTN","GMPLENFM",75,0)
 ;
"RTN","GMPLENFM",76,0)
 N X,Y,DIC,PROB D CONFIG^LEXSET("","PLS")
"RTN","GMPLENFM",77,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT CLINIC COMMON PROBLEMS")
"RTN","GMPLENFM",78,0)
 S DIC("A")="Select PROBLEM: ",DIC(0)="AEQM",DIC="^LEX(757.01,"
"RTN","GMPLENFM",79,0)
 D ^DIC Q:+Y<0  S PROB=Y I +Y'>1 S PROB=+Y_U_X
"RTN","GMPLENFM",80,0)
 S PROB=PROB_U_$G(Y(1))
"RTN","GMPLENFM",81,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT CLINIC COMMON PROBLEMS")=PROB
"RTN","GMPLENFM",82,0)
 Q
"RTN","GMPLENFM",83,0)
 ;
"RTN","GMPLENFM",84,0)
DSELECT ; List of Active Problems for DFN
"RTN","GMPLENFM",85,0)
 ;   Input variables:
"RTN","GMPLENFM",86,0)
 ;             DFN               Patient ID (Required)
"RTN","GMPLENFM",87,0)
 ;             [GMPLINDT]        Date of Interest (Optional - defaults to today)
"RTN","GMPLENFM",88,0)
 ;                                 This is the date to use for evalutation of the
"RTN","GMPLENFM",89,0)
 ;                                 Activation status of ICD-9-CM and SNOMED CT codes
"RTN","GMPLENFM",90,0)
 ;
"RTN","GMPLENFM",91,0)
 ;   Sets Global Array"
"RTN","GMPLENFM",92,0)
 ;   ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",#) =
"RTN","GMPLENFM",93,0)
 ;
"RTN","GMPLENFM",94,0)
 ;   Piece 1:  Problem IEN
"RTN","GMPLENFM",95,0)
 ;         2:  Problem Text
"RTN","GMPLENFM",96,0)
 ;         3:  ICD code
"RTN","GMPLENFM",97,0)
 ;         4:  Date of Onset     00/00/00 format
"RTN","GMPLENFM",98,0)
 ;         5:  SC/NSC/""         serv-conn/not sc/unknown
"RTN","GMPLENFM",99,0)
 ;         6:  Y/N/""            serv-conn/not sc/unknown
"RTN","GMPLENFM",100,0)
 ;         7:  A/I/E/H/M/C/S/""  If problem is flagged as:
"RTN","GMPLENFM",101,0)
 ;                               A - Agent Orange
"RTN","GMPLENFM",102,0)
 ;                               I - Ionizing Radiation
"RTN","GMPLENFM",103,0)
 ;                               E - Environmental Contaminants
"RTN","GMPLENFM",104,0)
 ;                               H - Head/Neck Cancer
"RTN","GMPLENFM",105,0)
 ;                               M - Mil Sexual Trauma
"RTN","GMPLENFM",106,0)
 ;                               C - Combat Vet
"RTN","GMPLENFM",107,0)
 ;                               S - SHAD
"RTN","GMPLENFM",108,0)
 ;                                 - None
"RTN","GMPLENFM",109,0)
 ;         8:  Special Exposure  Full text of piece 6
"RTN","GMPLENFM",110,0)
 ;         9:  SNOMED-CT Concept Code
"RTN","GMPLENFM",111,0)
 ;        10:  SNOMED-CT Designation Code
"RTN","GMPLENFM",112,0)
 ;        11:  VHAT Concept VUID
"RTN","GMPLENFM",113,0)
 ;        12:  VHAT Designation VUID
"RTN","GMPLENFM",114,0)
 ;        13:  Code Status (#  -> ICD code inactive, $ -> SNOMED CT inactive,
"RTN","GMPLENFM",115,0)
 ;                          #$ -> Both ICD & SNOMED CT inactive, else "")
"RTN","GMPLENFM",116,0)
 ;
"RTN","GMPLENFM",117,0)
 N IFN,PROB,CNT,SC,NUM,GMPLIST,GMPARAM,GMPLVIEW,GMPTOTAL,GMPDFN,NODE,GMPDT
"RTN","GMPLENFM",118,0)
 Q:$G(DFN)'>0  S GMPDFN=DFN,CNT=0,NODE=$G(^GMPL(125.99,1,0))
"RTN","GMPLENFM",119,0)
 S GMPDT=$G(GMPINDT,$$DT^XLFDT)
"RTN","GMPLENFM",120,0)
 S GMPARAM("VER")=$P(NODE,U,2),GMPARAM("REV")=$P(NODE,U,5)="R",GMPARAM("QUIET")=1
"RTN","GMPLENFM",121,0)
 S GMPLVIEW("ACT")="A",GMPLVIEW("PROV")=0,GMPLVIEW("VIEW")=""
"RTN","GMPLENFM",122,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLENFM",123,0)
 F NUM=0:0 S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D
"RTN","GMPLENFM",124,0)
 . N GMPL0,GMPL1,GMPL800,CODESTAT,ICDC,ICDI,SCTC,SCTD,VHATC,VHATD
"RTN","GMPLENFM",125,0)
 . S IFN=GMPLIST(NUM) Q:IFN'>0
"RTN","GMPLENFM",126,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)),CODESTAT=""
"RTN","GMPLENFM",127,0)
 . S ICDC=$P($$ICDDX^ICDCODE(+GMPL0),U,2)
"RTN","GMPLENFM",128,0)
 . S:ICDC]"" CODESTAT=CODESTAT_$S(+$$STATCHK^ICDAPIU(ICDC,GMPDT):"",1:"#")
"RTN","GMPLENFM",129,0)
 . S ICDI=0 F  S ICDI=$O(^AUPNPROB(IFN,803,ICDI)) Q:+ICDI'>0  D
"RTN","GMPLENFM",130,0)
 .. N ICDMC S ICDMC=$P($G(^AUPNPROB(IFN,803,ICDI,0)),U) Q:ICDMC']""
"RTN","GMPLENFM",131,0)
 .. S ICDC=ICDC_"/"_ICDMC
"RTN","GMPLENFM",132,0)
 .. I CODESTAT'["#" S CODESTAT=CODESTAT_$S(+$$STATCHK^ICDAPIU(ICDMC,GMPDT):"",1:"#")
"RTN","GMPLENFM",133,0)
 . S SCTC=$P(GMPL800,U),SCTD=$P(GMPL800,U,2),VHATC=$P(GMPL800,U,3),VHATD=$P(GMPL800,U,4)
"RTN","GMPLENFM",134,0)
 . S:SCTC]"" CODESTAT=CODESTAT_$S(+$$STATCHK^LEXSRC2(SCTC,GMPDT):"",1:"$")
"RTN","GMPLENFM",135,0)
 . S PROB=$$PROBTEXT^GMPLX(IFN),CNT=CNT+1
"RTN","GMPLENFM",136,0)
 . I GMPARAM("VER"),$P(GMPL1,U,2)="T" S PROB="$"_PROB
"RTN","GMPLENFM",137,0)
 . S PROB=IFN_U_PROB
"RTN","GMPLENFM",138,0)
 . S PROB=PROB_U_ICDC
"RTN","GMPLENFM",139,0)
 . S PROB=PROB_U_$$EXTDT^GMPLX($P(GMPL0,U,13)),SC=$P(GMPL1,U,10)
"RTN","GMPLENFM",140,0)
 . S PROB=PROB_U_$S(+SC:"SC^Y",SC=0:"NSC^N",1:"^")
"RTN","GMPLENFM",141,0)
 . S PROB=PROB_U_$$TXFCTR(GMPL1)_U_SCTC_U_SCTD_U_VHATC_U_VHATD_U_CODESTAT
"RTN","GMPLENFM",142,0)
 . S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",CNT)=PROB
"RTN","GMPLENFM",143,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=CNT
"RTN","GMPLENFM",144,0)
 Q
"RTN","GMPLENFM",145,0)
 ;
"RTN","GMPLENFM",146,0)
TXFCTR(GMPL1) ;Determine Treatment Factor, if any
"RTN","GMPLENFM",147,0)
 N NXTTF,TXFACTOR
"RTN","GMPLENFM",148,0)
 S TXFACTOR="^"
"RTN","GMPLENFM",149,0)
 F NXTTF=11,12,13,15,16,17,18 I $P(GMPL1,U,NXTTF) S TXFACTOR=$P("A^Agent Orange;I^Ionizing Radiation;E^Env. Contaminants;;H^Head/Neck Cancer;M^Mil Sexual Trauma;C^Combat Vet;S^SHAD",";",NXTTF-10) Q
"RTN","GMPLENFM",150,0)
 Q TXFACTOR
"RTN","GMPLHIST")
0^17^B17659917
"RTN","GMPLHIST",1,0)
GMPLHIST ; SLC/MKB/KER -- Problem List Historical data ;06/08/12  13:37
"RTN","GMPLHIST",2,0)
 ;;2.0;Problem List;**7,26,31,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLHIST",3,0)
 ;
"RTN","GMPLHIST",4,0)
 ; External References
"RTN","GMPLHIST",5,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLHIST",6,0)
 ;
"RTN","GMPLHIST",7,0)
DT ; Add historical data (audit trail) to DT list
"RTN","GMPLHIST",8,0)
 ;   Called from ^GMPLDISP, requires AIFN and adds to GMPDT()
"RTN","GMPLHIST",9,0)
 N NODE,DATE,FLD,PROV,OLD,NEW,ROOT,CHNGE
"RTN","GMPLHIST",10,0)
 S NODE=$G(^GMPL(125.8,AIFN,0)) Q:NODE=""
"RTN","GMPLHIST",11,0)
 S DATE=$$EXTDT^GMPLX($P(NODE,U,3)),FLD=+$P(NODE,U,2),PROV=+$P(NODE,U,8)
"RTN","GMPLHIST",12,0)
 S:'PROV PROV=$P(NODE,U,4)
"RTN","GMPLHIST",13,0)
 S PROV=$S(PROV=".5":"NTRT",1:$P($G(^VA(200,PROV,0)),U))
"RTN","GMPLHIST",14,0)
 S FLD=FLD_U_$$FLDNAME(+FLD)
"RTN","GMPLHIST",15,0)
 S OLD=$P(NODE,U,5),NEW=$P(NODE,U,6),LCNT=LCNT+1
"RTN","GMPLHIST",16,0)
 I +FLD=1101 D  Q
"RTN","GMPLHIST",17,0)
 . N REASON
"RTN","GMPLHIST",18,0)
 . S REASON=" removed by "
"RTN","GMPLHIST",19,0)
 . S:OLD="C" REASON=" changed by "
"RTN","GMPLHIST",20,0)
 . S NODE=$G(^GMPL(125.8,AIFN,1))
"RTN","GMPLHIST",21,0)
 . S GMPDT(LCNT,0)=$J(DATE,10)_": NOTE "_$$EXTDT^GMPLX($P(NODE,U,5))_REASON_PROV_":"
"RTN","GMPLHIST",22,0)
 . S LCNT=LCNT+1,GMPDT(LCNT,0)="            "_$P(NODE,U,3)
"RTN","GMPLHIST",23,0)
 I +FLD=1.02 D  Q
"RTN","GMPLHIST",24,0)
 . S CHNGE=$S(NEW="H":"removed",OLD="T":"verified",1:"placed back on list")
"RTN","GMPLHIST",25,0)
 . S GMPDT(LCNT,0)=$J(DATE,10)_": PROBLEM "_CHNGE_" by "_PROV
"RTN","GMPLHIST",26,0)
 S GMPDT(LCNT,0)=$J(DATE,10)_": "_$P(FLD,U,2)_$S(OLD]"":" changed",1:" added")_" by "_PROV,LCNT=LCNT+1
"RTN","GMPLHIST",27,0)
 I +FLD=.12 S GMPDT(LCNT,0)=$J("from ",17)_$S(OLD="A":"ACTIVE",OLD="I":"INACTIVE",1:"UNKNOWN")_" to "_$S(NEW="A":"ACTIVE",NEW="I":"INACTIVE",1:"UNKNOWN") Q
"RTN","GMPLHIST",28,0)
 I (+FLD=.13)!(+FLD=1.07) S GMPDT(LCNT,0)=$J("from ",17)_$$EXTDT^GMPLX(OLD)_" to "_$$EXTDT^GMPLX(NEW) Q
"RTN","GMPLHIST",29,0)
 I +FLD=1.14 S GMPDT(LCNT,0)=$J("from ",17)_$S(OLD="A":"ACUTE",OLD="C":"CHRONIC",1:"UNSPECIFIED")_" to "_$S(NEW="A":"ACUTE",NEW="C":"CHRONIC",1:"UNSPECIFIED") Q
"RTN","GMPLHIST",30,0)
 I +FLD=80005 S GMPDT(LCNT,0)=$J("from ",17)_$S(OLD=1:"PENDING",OLD=2:"COMPLETED",1:"N/A")_" to "_$S(NEW=1:"PENDING",NEW="2":"COMPLETED",1:"N/A") Q
"RTN","GMPLHIST",31,0)
 I +FLD=302 D  Q
"RTN","GMPLHIST",32,0)
 . I NEW]"" D
"RTN","GMPLHIST",33,0)
 . . I OLD="" S GMPDT(LCNT,0)=$J(" as ",17)_NEW
"RTN","GMPLHIST",34,0)
 . . E  S GMPDT(LCNT,0)=$J("from ",17)_OLD_$$PAD^GMPLX(OLD,6)_" to "_NEW
"RTN","GMPLHIST",35,0)
 . E  S GMPDT(LCNT,0)=$J(OLD_$$PAD^GMPLX(OLD,6),23)_" removed."
"RTN","GMPLHIST",36,0)
 I +FLD>1.09 S GMPDT(LCNT,0)=$J("from ",17)_$S(+OLD:"YES",OLD=0:"NO",1:"UNKNOWN")_" to "_$S(+NEW:"YES",NEW=0:"NO",1:"UNKNOWN") Q
"RTN","GMPLHIST",37,0)
 I "^.01^.05^1.01^1.04^1.05^1.06^1.08^"[(U_+FLD_U) D
"RTN","GMPLHIST",38,0)
 . S ROOT=$S(+FLD=.01:"ICD9(",+FLD=.05:"AUTNPOV(",+FLD=1.01:"LEX(757.01,",(+FLD=1.04)!(+FLD=1.05):"VA(200,",+FLD=1.06:"DIC(49,",+FLD=1.08:"SC(",1:"") Q:ROOT=""
"RTN","GMPLHIST",39,0)
 . S GMPDT(LCNT,0)=$J("from ",17)_$S(OLD:$P(@(U_ROOT_OLD_",0)"),U)_$$PAD^GMPLX($P(@(U_ROOT_OLD_",0)"),U),6),1:"UNSPECIFIED")
"RTN","GMPLHIST",40,0)
 . S LCNT=LCNT+1,GMPDT(LCNT,0)=$J("to ",17)_$S(NEW:$P(@(U_ROOT_NEW_",0)"),U),1:"UNSPECIFIED")
"RTN","GMPLHIST",41,0)
 Q
"RTN","GMPLHIST",42,0)
 ;
"RTN","GMPLHIST",43,0)
FLDNAME(NUM) ; Returns Field Name for Display
"RTN","GMPLHIST",44,0)
 N NAME,NM1,NM2,I,J S J=0,NAME="" D NUM(.NM1),ALP(.NM2) S:+($G(NM1(+NUM)))=+NUM J=+NUM
"RTN","GMPLHIST",45,0)
 S:$L($G(NM2(+J))) NAME=$G(NM2(+J))
"RTN","GMPLHIST",46,0)
 Q NAME
"RTN","GMPLHIST",47,0)
ALP(X) ; Alpha Field Names
"RTN","GMPLHIST",48,0)
 S X(.01)="DIAGNOSIS",X(.02)="PATIENT NAME",X(.03)="DATE LAST MODIFIED",X(.04)="CLASS",X(.05)="PROVIDER NARRATIVE"
"RTN","GMPLHIST",49,0)
 S X(.06)="FACILITY",X(.07)="NUMBER",X(.08)="DATE ENTERED",X(.12)="STATUS",X(.13)="DATE OF ONSET",X(1.01)="PROBLEM",X(1.02)="CONDITION"
"RTN","GMPLHIST",50,0)
 S X(1.03)="ENTERED BY",X(1.04)="RECORDING PROVIDER",X(1.05)="RESPONSIBLE PROVIDER",X(1.06)="SERVICE",X(1.07)="DATE RESOLVED"
"RTN","GMPLHIST",51,0)
 S X(1.08)="CLINIC",X(1.09)="DATE RECORDED",X(1.1)="SERVICE CONNECTED",X(1.11)="AGENT ORANGE EXP",X(1.12)="RADIATION EXP",X(1.13)="ENV CONTAMINANTS EXP"
"RTN","GMPLHIST",52,0)
 S X(1.14)="IMMEDIACY",X(1.15)="HEAD/NECK CANCER",X(1.16)="MIL SEXUAL TRAUMA",X(1.17)="COMBAT VET",X(1.18)="SHAD",X(80001)="SNOMED CT CONCEPT",X(80002)="SNOMED CT DESIGNATION"
"RTN","GMPLHIST",53,0)
 S X(80003)="VHAT CONCEPT",X(80004)="VHAT DESIGNATION",X(80005)="MAP STATUS"
"RTN","GMPLHIST",54,0)
 S X(302)="SECONDARY DIAGNOSIS",X(1101)="NOTE"
"RTN","GMPLHIST",55,0)
 Q
"RTN","GMPLHIST",56,0)
NUM(X) ; Numeric Field Designations
"RTN","GMPLHIST",57,0)
 N FN F FN=.01:.01:.08 S X(+FN)=+FN
"RTN","GMPLHIST",58,0)
 F FN=.12:.01:.13 S X(+FN)=+FN
"RTN","GMPLHIST",59,0)
 F FN=1.01:.01:1.18 S X(+FN)=+FN
"RTN","GMPLHIST",60,0)
 F FN=80001:1:80005 S X(+FN)=+FN
"RTN","GMPLHIST",61,0)
 S X(1101)=1101,X(302)=302
"RTN","GMPLHIST",62,0)
 Q
"RTN","GMPLHS")
0^9^B20917122
"RTN","GMPLHS",1,0)
GMPLHS ; SLC/MKB/KER/TC - Extract Prob List Health Summary ;06/08/12  13:40
"RTN","GMPLHS",2,0)
 ;;2.0;Problem List;**22,26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLHS",3,0)
 ;
"RTN","GMPLHS",4,0)
 ; External References
"RTN","GMPLHS",5,0)
 ;   DBIA  3106  ^DIC(49
"RTN","GMPLHS",6,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLHS",7,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","GMPLHS",8,0)
 ;
"RTN","GMPLHS",9,0)
GETLIST(GMPDFN,STATUS) ; Define List
"RTN","GMPLHS",10,0)
 N GMPLIST,GMPLVIEW,GMPARAM,GMPTOTAL K ^TMP("GMPLHS",$J) Q:+GMPDFN'>0
"RTN","GMPLHS",11,0)
 S GMPARAM("QUIET")=1,GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","GMPLHS",12,0)
 S GMPLVIEW("ACT")=STATUS,GMPLVIEW("PROV")=0,GMPLVIEW("VIEW")=""
"RTN","GMPLHS",13,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLHS",14,0)
BUILD ; Build list for selected patient
"RTN","GMPLHS",15,0)
 ;   Sets Global Array:
"RTN","GMPLHS",16,0)
 ;   ^TMP("GMPLHS",$J,STATUS,0)
"RTN","GMPLHS",17,0)
 ;
"RTN","GMPLHS",18,0)
 ;   Piece 1:  GMPCNT     # of entries extracted
"RTN","GMPLHS",19,0)
 ;         2:  GMPTOTAL   # of entries that exist
"RTN","GMPLHS",20,0)
 N IFN,GMPCNT,NUM S (NUM,GMPCNT)=0 F  S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D
"RTN","GMPLHS",21,0)
 . S IFN=+GMPLIST(NUM) Q:IFN'>0  D GETPROB(IFN)
"RTN","GMPLHS",22,0)
 I $G(GMPCNT)'>0 K ^TMP("GMPLHS",$J) Q
"RTN","GMPLHS",23,0)
 S ^TMP("GMPLHS",$J,STATUS,0)=GMPCNT_U_GMPTOTAL
"RTN","GMPLHS",24,0)
 Q
"RTN","GMPLHS",25,0)
GETPROB(IFN) ; Get problem data and set it to ^TMP array
"RTN","GMPLHS",26,0)
 ;   Sets Global Arrays:
"RTN","GMPLHS",27,0)
 ;   ^TMP("GMPLHS",$J,CNT,0)
"RTN","GMPLHS",28,0)
 ;   Piece 1:  Pointer to ICD9 file #80
"RTN","GMPLHS",29,0)
 ;         2:  Internal Date Last Modified
"RTN","GMPLHS",30,0)
 ;         3:  Facility Name
"RTN","GMPLHS",31,0)
 ;         4:  Internal Date Entered
"RTN","GMPLHS",32,0)
 ;         5:  Internal Status (A/I/"")
"RTN","GMPLHS",33,0)
 ;         6:  Internal Date of Onset
"RTN","GMPLHS",34,0)
 ;         7:  Responsible Provider Name
"RTN","GMPLHS",35,0)
 ;         8:  Service Name
"RTN","GMPLHS",36,0)
 ;         9:  Service Abbreviation
"RTN","GMPLHS",37,0)
 ;        10:  Internal Date Resolved
"RTN","GMPLHS",38,0)
 ;        11:  Clinic Name
"RTN","GMPLHS",39,0)
 ;        12:  Internal Date Recorded
"RTN","GMPLHS",40,0)
 ;        13:  Problem Term (from Lexicon)
"RTN","GMPLHS",41,0)
 ;        14:  Exposure String (AO/IR/EC/HNC/MST/CV/SHD)
"RTN","GMPLHS",42,0)
 ;        15:  SNOMED-CT Concept Code
"RTN","GMPLHS",43,0)
 ;        16:  SNOMED-CT Preferred Text
"RTN","GMPLHS",44,0)
 ;        17:  Primary ICD Code
"RTN","GMPLHS",45,0)
 ;        18:  Primary ICD Description
"RTN","GMPLHS",46,0)
 ;        19:  VHAT Concept Code
"RTN","GMPLHS",47,0)
 ;        20:  VHAT Preferred Text
"RTN","GMPLHS",48,0)
 ;
"RTN","GMPLHS",49,0)
 ;   ^TMP("GMPLHS",$J,CNT,#,"ICD9") <-Multiple ICD-9-CM codes mapped to a SNOMED-CT concept
"RTN","GMPLHS",50,0)
 ;   Piece 1: Secondary ICD-9-CM Code
"RTN","GMPLHS",51,0)
 ;   Piece 2: Secondary ICD-9-CM Description
"RTN","GMPLHS",52,0)
 ;
"RTN","GMPLHS",53,0)
 ;   ^TMP("GMPLHS",$J,CNT,"N")
"RTN","GMPLHS",54,0)
 ;   Piece 1:  Provider Narrative
"RTN","GMPLHS",55,0)
 ;
"RTN","GMPLHS",56,0)
 ;   ^TMP("GMPLHS",$J,CNT,"IEN")
"RTN","GMPLHS",57,0)
 ;   Piece 1:  Pointer to Problem file 9000011
"RTN","GMPLHS",58,0)
 ;
"RTN","GMPLHS",59,0)
 N DIC,DIQ,DR,DA,REC,DIAG,LASTMDT,NARR,SITE,ENTDT,STAT,ONSETDT,RPROV,T,VHATC,VHATT
"RTN","GMPLHS",60,0)
 N SERV,SERVABB,RESDT,CLIN,RECDT,LEXI,LEX,PG,AO,EXP,HNC,MST,CV,SHD,IR,SCS,SCTC,SCTT,ICD,ICDD
"RTN","GMPLHS",61,0)
 S DIC=9000011,DA=IFN,DIQ="REC(",DIQ(0)="IE"
"RTN","GMPLHS",62,0)
 S DR=".01;.03;.05;.06;.08;.12;.13;1.01;1.05;1.06;1.07;1.08;1.09;1.11;1.12;1.13;1.15;1.16;1.17;1.18;80001;80003"
"RTN","GMPLHS",63,0)
 D EN^DIQ1
"RTN","GMPLHS",64,0)
 S ICD=REC(9000011,DA,.01,"E")
"RTN","GMPLHS",65,0)
 S DIAG=REC(9000011,DA,.01,"I"),LASTMDT=REC(9000011,DA,.03,"I")
"RTN","GMPLHS",66,0)
 S NARR=REC(9000011,DA,.05,"E"),SITE=REC(9000011,DA,.06,"E")
"RTN","GMPLHS",67,0)
 S ENTDT=REC(9000011,DA,.08,"I"),STAT=REC(9000011,DA,.12,"I")
"RTN","GMPLHS",68,0)
 S ONSETDT=REC(9000011,DA,.13,"I")
"RTN","GMPLHS",69,0)
 S LEXI=REC(9000011,DA,1.01,"I")
"RTN","GMPLHS",70,0)
 S LEX=REC(9000011,DA,1.01,"E")
"RTN","GMPLHS",71,0)
 S RPROV=REC(9000011,DA,1.05,"E")
"RTN","GMPLHS",72,0)
 S SERV=REC(9000011,DA,1.06,"E")
"RTN","GMPLHS",73,0)
 S SERVABB=$$SERV(REC(9000011,DA,1.06,"I"),SERV)
"RTN","GMPLHS",74,0)
 S RESDT=REC(9000011,DA,1.07,"I")
"RTN","GMPLHS",75,0)
 S CLIN=REC(9000011,DA,1.08,"E")
"RTN","GMPLHS",76,0)
 S RECDT=REC(9000011,DA,1.09,"I")
"RTN","GMPLHS",77,0)
 S AO=+REC(9000011,DA,1.11,"I")
"RTN","GMPLHS",78,0)
 S IR=+REC(9000011,DA,1.12,"I")
"RTN","GMPLHS",79,0)
 S PG=+REC(9000011,DA,1.13,"I")
"RTN","GMPLHS",80,0)
 S HNC=+REC(9000011,DA,1.15,"I")
"RTN","GMPLHS",81,0)
 S MST=+REC(9000011,DA,1.16,"I")
"RTN","GMPLHS",82,0)
 S CV=+REC(9000011,DA,1.17,"I")
"RTN","GMPLHS",83,0)
 S SHD=+REC(9000011,DA,1.18,"I")
"RTN","GMPLHS",84,0)
 S SCTC=REC(9000011,DA,80001,"I")
"RTN","GMPLHS",85,0)
 S VHATC=REC(9000011,DA,80003,"I")
"RTN","GMPLHS",86,0)
 I $L($G(SCTC)) S SCTT=$$SCTTEXT^GMPLUTL2($G(SCTC),$G(ENTDT),"SCT")
"RTN","GMPLHS",87,0)
 I $L($G(VHATC)) S VHATT=$$SCTTEXT^GMPLUTL2($G(VHATC),$G(ENTDT),"VHAT")
"RTN","GMPLHS",88,0)
 S ICDD=$$ICDDESC^GMPLUTL2($G(ICD),$G(ENTDT))
"RTN","GMPLHS",89,0)
 K SCS D SCS^GMPLX1(DA,.SCS) S EXP=$G(SCS(1))
"RTN","GMPLHS",90,0)
 S GMPCNT=+$G(GMPCNT)+1,^TMP("GMPLHS",$J,GMPCNT,0)=DIAG_U_LASTMDT_U_SITE_U_ENTDT_U_STAT_U_ONSETDT_U_RPROV_U_SERV_U_SERVABB_U_RESDT_U_CLIN_U_RECDT_U_LEX_U_EXP_U_SCTC_U_$G(SCTT)_U_$G(ICD)_U_$G(ICDD)_U_VHATC_U_$G(VHATT)
"RTN","GMPLHS",91,0)
 S ^TMP("GMPLHS",$J,GMPCNT,"N")=NARR,^TMP("GMPLHS",$J,GMPCNT,"IEN")=IFN
"RTN","GMPLHS",92,0)
 S:+LEXI>0 ^TMP("GMPLHS",$J,GMPCNT,"L")=LEXI_"^"_LEX
"RTN","GMPLHS",93,0)
 D DETAIL^GMPLUTL2(IFN,.GMPL)
"RTN","GMPLHS",94,0)
 I GMPL("ICD9MLTP")'="" F T=1:1:GMPL("ICD9MLTP") D
"RTN","GMPLHS",95,0)
 . S ^TMP("GMPLHS",$J,GMPCNT,0,"ICD9")=GMPL("ICD9MLTP")
"RTN","GMPLHS",96,0)
 . S ^TMP("GMPLHS",$J,GMPCNT,T,"ICD9")=$P($G(GMPL("ICD9MLTP",T)),U)_U_$P($G(GMPL("ICD9MLTP",T)),U,2)
"RTN","GMPLHS",97,0)
 E  S ^TMP("GMPLHS",$J,GMPCNT,0,"ICD9")=""
"RTN","GMPLHS",98,0)
 D GETCOMM(IFN,GMPCNT)
"RTN","GMPLHS",99,0)
 Q
"RTN","GMPLHS",100,0)
GETCOMM(IFN,CNT) ; Get Active Comments for a Note
"RTN","GMPLHS",101,0)
 ;   Sets Global Array:
"RTN","GMPLHS",102,0)
 ;   ^TMP("GMPLHS",$J,CNT,"C",LOCATION,NOTE NMBR,0)
"RTN","GMPLHS",103,0)
 ;
"RTN","GMPLHS",104,0)
 ;   Piece 1:  Note Narrative
"RTN","GMPLHS",105,0)
 ;         2:  Internal Date Note Added
"RTN","GMPLHS",106,0)
 ;         3;  Name of Note's Author
"RTN","GMPLHS",107,0)
 ;
"RTN","GMPLHS",108,0)
 N IFN2,IFN3,LOC,NODE S LOC=0 Q:$D(^AUPNPROB(IFN,11))'>0  S IFN2=0
"RTN","GMPLHS",109,0)
 F  S IFN2=$O(^AUPNPROB(IFN,11,IFN2)) Q:IFN2'>0  D
"RTN","GMPLHS",110,0)
 . Q:$D(^AUPNPROB(IFN,11,IFN2,11))'>0
"RTN","GMPLHS",111,0)
 . S LOC=+$G(^AUPNPROB(IFN,11,IFN2,0)),IFN3=0
"RTN","GMPLHS",112,0)
 . F  S IFN3=$O(^AUPNPROB(IFN,11,IFN2,11,IFN3)) Q:IFN3'>0  D
"RTN","GMPLHS",113,0)
 . . S NODE=$G(^AUPNPROB(IFN,11,IFN2,11,IFN3,0)) Q:$P(NODE,U,4)']""
"RTN","GMPLHS",114,0)
 . . S ^TMP("GMPLHS",$J,CNT,"C",LOC,$P(NODE,U),0)=$P(NODE,U,3)_U_$P(NODE,U,5)_U_$P($G(^VA(200,+$P(NODE,U,6),0)),U)
"RTN","GMPLHS",115,0)
 Q
"RTN","GMPLHS",116,0)
SERV(X,SERV) ; Returns Service Name Abbreviation
"RTN","GMPLHS",117,0)
 N ABBREV S ABBREV=$P($G(^DIC(49,+X,0)),U,2) S:ABBREV="" ABBREV=$E($G(SERV),1,5)
"RTN","GMPLHS",118,0)
 Q ABBREV
"RTN","GMPLMGR")
0^4^B26246096
"RTN","GMPLMGR",1,0)
GMPLMGR ; ISL/MKB,AJB,JER,TC - Problem List VALM Utilities ;06/08/12  15:56
"RTN","GMPLMGR",2,0)
 ;;2.0;Problem List;**21,28,36**;Aug 25, 1994;Build 65
"RTN","GMPLMGR",3,0)
 ; 28 Feb 00 - MA added view comments accross Divisions
"RTN","GMPLMGR",4,0)
 ;
"RTN","GMPLMGR",5,0)
 ; External References
"RTN","GMPLMGR",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLMGR",7,0)
 ;
"RTN","GMPLMGR",8,0)
INIT ; -- init variables, list array
"RTN","GMPLMGR",9,0)
 S:'$G(GMPDFN) GMPDFN=$$PAT^GMPLX1 I +GMPDFN'>0 K GMPDFN S VALMQUIT=1 Q
"RTN","GMPLMGR",10,0)
 S GMPROV=$$REQPROV^GMPLX1 I +GMPROV'>0 K GMPDFN,GMPROV S VALMQUIT=1 Q
"RTN","GMPLMGR",11,0)
IN1 S GMPVA=$S($G(DUZ("AG"))="V":1,1:0),GMPVAMC=+$G(DUZ(2))
"RTN","GMPLMGR",12,0)
 S (GMPSC,GMPAGTOR,GMPION,GMPGULF)=0 D:GMPVA VADPT^GMPLX1(+GMPDFN) ;reset
"RTN","GMPLMGR",13,0)
 S GMPLVIEW("ACT")="A",GMPLVIEW("PROV")=0
"RTN","GMPLMGR",14,0)
 S GMPLVIEW("VIEW")=$$VIEW^GMPLX1(DUZ)
"RTN","GMPLMGR",15,0)
 S X=$G(^GMPL(125.99,1,0)),GMPARAM("VER")=+$P(X,U,2),GMPARAM("PRT")=+$P(X,U,3),GMPARAM("CLU")=+$P(X,U,4),GMPARAM("REV")=$S($P(X,U,5)="R":1,1:0) K X
"RTN","GMPLMGR",16,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW),BUILD(.GMPLIST)
"RTN","GMPLMGR",17,0)
 D:$E(GMPLVIEW("VIEW"))="S" CHGCAP^VALM("CLINIC","Service/Provider")
"RTN","GMPLMGR",18,0)
 S VALMSG=$$MSG^GMPLX
"RTN","GMPLMGR",19,0)
 Q
"RTN","GMPLMGR",20,0)
 ;
"RTN","GMPLMGR",21,0)
BUILD(PLIST) ; -- build list array
"RTN","GMPLMGR",22,0)
 N I D CLEAN^VALM10 K ^TMP("GMPLIDX",$J) S (I,GMPCOUNT,VALMCNT)=0
"RTN","GMPLMGR",23,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Monitor
"RTN","GMPLMGR",24,0)
 F  S I=$O(PLIST(I)) Q:I'>0  D:$D(GMPLUSER) BLDPROB(+PLIST(I)) D:'$D(GMPLUSER) BLDPROB^GMPLMGR2(+PLIST(I))
"RTN","GMPLMGR",25,0)
 S ^TMP("GMPL",$J,0)=+$G(GMPCOUNT)_U_+$G(VALMCNT) ; # entries^# lines
"RTN","GMPLMGR",26,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","GMPLMGR",27,0)
 I $G(GMPCOUNT)'>0 S ^TMP("GMPL",$J,1,0)="   ",^TMP("GMPL",$J,2,0)="    No data available meeting criteria."
"RTN","GMPLMGR",28,0)
 Q
"RTN","GMPLMGR",29,0)
BLDPROB(IFN) ; Add problem line
"RTN","GMPLMGR",30,0)
 N GMPL0,GMPL1,GMPL800,DATE,TEXT,NAME,LINE,ACTIVE,I,NOTE,FAC,PROBLEM,NIFN,DELETED,ICD,SCTC
"RTN","GMPLMGR",31,0)
 S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)) Q:'$L(GMPL0)
"RTN","GMPLMGR",32,0)
 S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2),SCTC=$P(GMPL800,U)
"RTN","GMPLMGR",33,0)
 S DELETED=$S($P(GMPL1,U,2)="H":1,1:0) ; flag if prob was deleted
"RTN","GMPLMGR",34,0)
 S ACTIVE=$P(GMPL0,U,12),DATE=$J($$EXTDT^GMPLX($P(GMPL0,U,3)),8)
"RTN","GMPLMGR",35,0)
 S PROBLEM=$S(DELETED:"< DELETED >",1:$$PROBTEXT^GMPLX(IFN))
"RTN","GMPLMGR",36,0)
 I ACTIVE="A",$P(GMPL0,U,13),'DELETED S PROBLEM=PROBLEM_", Onset "_$$EXTDT^GMPLX($P(GMPL0,U,13))
"RTN","GMPLMGR",37,0)
 I ACTIVE="I",$P(GMPL1,U,7),'DELETED S PROBLEM=PROBLEM_", Resolved "_$$EXTDT^GMPLX($P(GMPL1,U,7))
"RTN","GMPLMGR",38,0)
 D WRAP^GMPLX(PROBLEM,40,.TEXT) ; format text to 41 chr
"RTN","GMPLMGR",39,0)
 I $E(GMPLVIEW("VIEW"))="S" S NAME=$$SERV^GMPLX1($P(GMPL1,U,6))_$$NAME^GMPLX1($P(GMPL1,U,5))
"RTN","GMPLMGR",40,0)
 E  S NAME=$P($G(^SC(+$P(GMPL1,U,8),0)),U)
"RTN","GMPLMGR",41,0)
BLD1 S GMPCOUNT=+$G(GMPCOUNT)+1
"RTN","GMPLMGR",42,0)
 S LINE=$$SETFLD^VALM1(GMPCOUNT,"","NUMBER")
"RTN","GMPLMGR",43,0)
 S:ACTIVE="A" ACTIVE=$S($P(GMPL1,U,14)="A":"*",1:"") ; reset for priority
"RTN","GMPLMGR",44,0)
 S LINE=$$SETFLD^VALM1(ACTIVE,LINE,"STATUS")
"RTN","GMPLMGR",45,0)
 S LINE=$$SETFLD^VALM1(TEXT(1),LINE,"PROBLEM")
"RTN","GMPLMGR",46,0)
 S LINE=$$SETFLD^VALM1(DATE,LINE,"DATE")
"RTN","GMPLMGR",47,0)
 S LINE=$$SETFLD^VALM1(NAME,LINE,"CLINIC"),VALMCNT=+$G(VALMCNT)+1
"RTN","GMPLMGR",48,0)
 S ^TMP("GMPL",$J,VALMCNT,0)=LINE,^TMP("GMPL",$J,"IDX",VALMCNT,GMPCOUNT)=""
"RTN","GMPLMGR",49,0)
 S ^TMP("GMPLIDX",$J,GMPCOUNT)=VALMCNT_U_IFN
"RTN","GMPLMGR",50,0)
 I GMPARAM("VER"),$P(GMPL1,U,2)="T",'DELETED S LINE=$E(LINE,1,4)_"$"_$E(LINE,6,79),^TMP("GMPL",$J,VALMCNT,0)=LINE D CNTRL^VALM10(VALMCNT,5,1,IOINHI,IOINORM)
"RTN","GMPLMGR",51,0)
 ; added for Code Set Versioning (CSV) - annotates inactive ICD code with #
"RTN","GMPLMGR",52,0)
 I '$$CODESTS^GMPLX(IFN,DT) S LINE=$E(LINE,1,4)_"#"_$E(LINE,6,79),^TMP("GMPL",$J,VALMCNT,0)=LINE D CNTRL^VALM10(VALMCNT,5,1,IOINHI,IOINORM)
"RTN","GMPLMGR",53,0)
 Q:DELETED
"RTN","GMPLMGR",54,0)
BLD2 I TEXT>1 F I=2:1:TEXT D
"RTN","GMPLMGR",55,0)
 . S LINE="",LINE=$$SETFLD^VALM1(TEXT(I),LINE,"PROBLEM")
"RTN","GMPLMGR",56,0)
 . S VALMCNT=VALMCNT+1,^TMP("GMPL",$J,VALMCNT,0)=LINE
"RTN","GMPLMGR",57,0)
 . S ^TMP("GMPL",$J,"IDX",VALMCNT,GMPCOUNT)=""
"RTN","GMPLMGR",58,0)
 ;Q:'$D(^AUPNPROB(IFN,11,"B",+GMPVAMC))  ; display current user's notes
"RTN","GMPLMGR",59,0)
 ; Routine has been changed to show all Problem List Comments for
"RTN","GMPLMGR",60,0)
 ; Divisions per Clinical Workgroup decision 26 Jan 2000
"RTN","GMPLMGR",61,0)
 F FAC=0:0 S FAC=$O(^AUPNPROB(IFN,11,FAC)) Q:+FAC'>0  D
"RTN","GMPLMGR",62,0)
 . F NIFN=0:0  S NIFN=$O(^AUPNPROB(IFN,11,FAC,11,NIFN)) Q:+NIFN'>0  D
"RTN","GMPLMGR",63,0)
 . . S NOTE=$P($G(^AUPNPROB(IFN,11,FAC,11,NIFN,0)),U,3)
"RTN","GMPLMGR",64,0)
 . . S VALMCNT=VALMCNT+1,^TMP("GMPL",$J,"IDX",VALMCNT,GMPCOUNT)=""
"RTN","GMPLMGR",65,0)
 . . S ^TMP("GMPL",$J,VALMCNT,0)="        "_NOTE
"RTN","GMPLMGR",66,0)
 Q
"RTN","GMPLMGR",67,0)
 ;
"RTN","GMPLMGR",68,0)
HDR ; -- header code
"RTN","GMPLMGR",69,0)
 N HDR,LNM,FNM,PAT,NUM
"RTN","GMPLMGR",70,0)
 S PAT=$P(GMPDFN,U,2)_"  ("_$P(GMPDFN,U,3)_")"
"RTN","GMPLMGR",71,0)
 S NUM=GMPCOUNT S:GMPTOTAL>GMPCOUNT NUM=NUM_" of "_GMPTOTAL
"RTN","GMPLMGR",72,0)
 S NUM=NUM_$S(GMPLVIEW("ACT")="A":" active",GMPLVIEW("ACT")="I":" inactive",1:"")_" problems"
"RTN","GMPLMGR",73,0)
 S VALMHDR(1)=PAT_$J(NUM,79-$L(PAT))
"RTN","GMPLMGR",74,0)
 S HDR=$S(GMPLVIEW("ACT")="I":"INACTIVE",GMPLVIEW("ACT")="A":"ACTIVE",1:"ALL")
"RTN","GMPLMGR",75,0)
 I $L(GMPLVIEW("VIEW"))>2 S HDR=HDR_$S($E(GMPLVIEW("VIEW"))="S":" SERVICE",1:" CLINIC") ; screened
"RTN","GMPLMGR",76,0)
 S HDR=HDR_" PROBLEMS"
"RTN","GMPLMGR",77,0)
 S:GMPLVIEW("PROV") LNM=$P($P(GMPLVIEW("PROV"),U,2),","),FNM=$P($P(GMPLVIEW("PROV"),U,2),",",2),HDR=HDR_" BY "_FNM_" "_LNM
"RTN","GMPLMGR",78,0)
 S VALMHDR(2)=$J(HDR,$L(HDR)\2+41)
"RTN","GMPLMGR",79,0)
 Q
"RTN","GMPLMGR",80,0)
 ;
"RTN","GMPLMGR",81,0)
HELP ; -- help code
"RTN","GMPLMGR",82,0)
 N X
"RTN","GMPLMGR",83,0)
 W !!?4,"To update the problem list first select from Add, Remove, Edit,"
"RTN","GMPLMGR",84,0)
 W !?4 W:GMPARAM("VER") "Verify, "
"RTN","GMPLMGR",85,0)
 W "Inactivate, or Comment, then enter the problem number(s)."
"RTN","GMPLMGR",86,0)
 W !?4,"If you need more information on a problem, select Detailed"
"RTN","GMPLMGR",87,0)
 W !?4,"Display; to change whether all or only selected problems for this"
"RTN","GMPLMGR",88,0)
 W !?4,"patient are listed, choose Select View.  Enter ?? to see more"
"RTN","GMPLMGR",89,0)
 W !?4,"actions for facilitating navigation of the list."
"RTN","GMPLMGR",90,0)
 W !?4,"Problem statuses: *-Acute I-Inactive #-Inactive ICD Code"
"RTN","GMPLMGR",91,0)
 W:GMPARAM("VER") " $-Unverified"
"RTN","GMPLMGR",92,0)
 W !!,"Press <return> to continue ... " R X:DTIME
"RTN","GMPLMGR",93,0)
 S VALMSG=$$MSG^GMPLX,VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLMGR",94,0)
 Q
"RTN","GMPLMGR2")
0^5^B27300832
"RTN","GMPLMGR2",1,0)
GMPLMGR2 ; ISL/MKB,KER,AJB - Problem List VALM Utilities cont ;08/17/12  16:55
"RTN","GMPLMGR2",2,0)
 ;;2.0;Problem List;**26,28,36**;Aug 25, 1994;Build 65
"RTN","GMPLMGR2",3,0)
 ;
"RTN","GMPLMGR2",4,0)
 ; External References
"RTN","GMPLMGR2",5,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLMGR2",6,0)
 ;   DBIA   872  ^ORD(101
"RTN","GMPLMGR2",7,0)
 ;   DBIA 10026  ^DIR
"RTN","GMPLMGR2",8,0)
 ;   DBIA 10116  $$SETFLD^VALM1
"RTN","GMPLMGR2",9,0)
 ;   DBIA 10116  CLEAR^VALM1
"RTN","GMPLMGR2",10,0)
 ;   DBIA 10140  EN^XQORM
"RTN","GMPLMGR2",11,0)
 ;
"RTN","GMPLMGR2",12,0)
BLDPROB(IFN) ; Build Line for Problem in List
"RTN","GMPLMGR2",13,0)
 ;   Input INF   Pointer to Problem file 9000011
"RTN","GMPLMGR2",14,0)
 ;   Expects GMPCOUNT
"RTN","GMPLMGR2",15,0)
 N GMPL0,GMPL1,GMPL800,RESOLVED,TEXT,I,LINE,STR,SC,SP,ICD,ONSET,PROBLEM,STATUS,SCTC
"RTN","GMPLMGR2",16,0)
 Q:'$D(GMPCOUNT)  S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)) Q:'$L(GMPL0)
"RTN","GMPLMGR2",17,0)
 S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2),SCTC=$P(GMPL800,U)
"RTN","GMPLMGR2",18,0)
 S SC=$P(GMPL1,U,10),SP=$P(GMPL1,U,11,13)_"^"_$P(GMPL1,U,15,16),STATUS=$P(GMPL0,U,12)
"RTN","GMPLMGR2",19,0)
 S:$P(GMPL1,U,2)="H" PROBLEM="< DELETED >" I $P(GMPL1,U,2)'="H" D
"RTN","GMPLMGR2",20,0)
 . S PROBLEM=$$PROBTEXT^GMPLX(IFN),ONSET=$P(GMPL0,U,13)
"RTN","GMPLMGR2",21,0)
 . I ONSET S PROBLEM=PROBLEM_", Onset "_$$EXTDT^GMPLX(ONSET)
"RTN","GMPLMGR2",22,0)
 S RESOLVED=$J($$EXTDT^GMPLX($P(GMPL1,U,7)),8)
"RTN","GMPLMGR2",23,0)
 S GMPCOUNT=GMPCOUNT+1
"RTN","GMPLMGR2",24,0)
 D WRAP^GMPLX(PROBLEM,40,.TEXT)
"RTN","GMPLMGR2",25,0)
 S LINE=$$SETFLD^VALM1(GMPCOUNT,"","NUMBER")
"RTN","GMPLMGR2",26,0)
 ; added for Code Set Versioning (CSV) - checks ICD code - # if inactive
"RTN","GMPLMGR2",27,0)
 I '$$CODESTS^GMPLX(IFN,DT) D
"RTN","GMPLMGR2",28,0)
 . I STATUS="A" S LINE=$$SETFLD^VALM1(" #",LINE,"STATUS")
"RTN","GMPLMGR2",29,0)
 . I STATUS="I" S LINE=$$SETFLD^VALM1(STATUS_"#",LINE,"STATUS")
"RTN","GMPLMGR2",30,0)
 E  S:STATUS="I" LINE=$$SETFLD^VALM1(STATUS,LINE,"STATUS")
"RTN","GMPLMGR2",31,0)
 ; S:STATUS="I" LINE=$$SETFLD^VALM1(STATUS,LINE,"STATUS")
"RTN","GMPLMGR2",32,0)
 S LINE=$$SETFLD^VALM1(TEXT(1),LINE,"PROBLEM")
"RTN","GMPLMGR2",33,0)
 S LINE=$$SETFLD^VALM1(ICD,LINE,"ICD")
"RTN","GMPLMGR2",34,0)
 I $L(SC) D
"RTN","GMPLMGR2",35,0)
 . S STR=$S(+SC:"YES",SC=0:"NO",1:"   ")
"RTN","GMPLMGR2",36,0)
 . S LINE=$$SETFLD^VALM1(STR,LINE,"SERV CONNECTED")
"RTN","GMPLMGR2",37,0)
 I $L(SP) D
"RTN","GMPLMGR2",38,0)
 . S STR=$S(+$P(SP,U):"Agent Orange",+$P(SP,U,2):"Radiation",+$P(SP,U,3):"Contaminants",+$P(SP,U,4):"Head/Neck Cancer",+$P(SP,U,5):"Mil Sexual Trauma",1:"")
"RTN","GMPLMGR2",39,0)
 . S LINE=$$SETFLD^VALM1(STR,LINE,"EXPOSURE")
"RTN","GMPLMGR2",40,0)
 S LINE=$$SETFLD^VALM1(RESOLVED,LINE,"RESOLVED")
"RTN","GMPLMGR2",41,0)
 S VALMCNT=VALMCNT+1,^TMP("GMPL",$J,VALMCNT,0)=LINE
"RTN","GMPLMGR2",42,0)
 S ^TMP("GMPLIDX",$J,GMPCOUNT)=VALMCNT_U_IFN
"RTN","GMPLMGR2",43,0)
 I TEXT>1 F I=2:1:TEXT D
"RTN","GMPLMGR2",44,0)
 . S LINE="",LINE=$$SETFLD^VALM1(TEXT(I),LINE,"PROBLEM")
"RTN","GMPLMGR2",45,0)
 . S VALMCNT=VALMCNT+1,^TMP("GMPL",$J,VALMCNT,0)=LINE
"RTN","GMPLMGR2",46,0)
 Q
"RTN","GMPLMGR2",47,0)
 ;
"RTN","GMPLMGR2",48,0)
HELP ; Help Code
"RTN","GMPLMGR2",49,0)
 N X W !!?4,"You may take a variety of actions from this prompt.  To update"
"RTN","GMPLMGR2",50,0)
 W !?4,"the problem list select from Add, Remove, Edit, Inactivate,"
"RTN","GMPLMGR2",51,0)
 W !?4,"and Enter Comment; you will then be prompted for the problem"
"RTN","GMPLMGR2",52,0)
 W !?4,"number.  To see all of this patient's problems, both active and"
"RTN","GMPLMGR2",53,0)
 W !?4,"inactive, select Show All Problems; select Print to print the"
"RTN","GMPLMGR2",54,0)
 W !?4,"same complete list in a chartable format.  To see a listing of"
"RTN","GMPLMGR2",55,0)
 W !?4,"actions that facilitate navigating the list, enter '??'."
"RTN","GMPLMGR2",56,0)
 W !!,"Press <return> to continue ... " R X:DTIME
"RTN","GMPLMGR2",57,0)
 S VALMSG=$$MSG^GMPLX,VALMBCK=$S(VALMCC:"",1:"R")
"RTN","GMPLMGR2",58,0)
 Q
"RTN","GMPLMGR2",59,0)
 ;
"RTN","GMPLMGR2",60,0)
EXIT ; Exit Code
"RTN","GMPLMGR2",61,0)
 I GMPARAM("PRT"),$D(GMPRINT) D AUTO
"RTN","GMPLMGR2",62,0)
 K ^TMP("GMPL",$J),^TMP("GMPLIDX",$J)
"RTN","GMPLMGR2",63,0)
 K XQORM("KEY","="),XQORM("XLATE")
"RTN","GMPLMGR2",64,0)
 K GMPDFN,GMPROV,GMPLVIEW,GMPARAM,VALMBCK,VALMHDR,VALMCNT,GMPCOUNT,GMPLUSER,GMPSC,VALMSG,GMPVAMC,GMPLIST,GMPAGTOR,GMPION,GMPGULF,GMPVA,GMPTOTAL,GMPRINT,AUPNSEX,GMPCLIN
"RTN","GMPLMGR2",65,0)
 Q
"RTN","GMPLMGR2",66,0)
 ;
"RTN","GMPLMGR2",67,0)
AUTO ; Print Problem List when Exiting Patient?
"RTN","GMPLMGR2",68,0)
 ;   Called from EXIT,NEWPAT^GMPLMGR1
"RTN","GMPLMGR2",69,0)
 N DIR,X,Y,DUOUT,DTOUT Q:'GMPARAM("PRT")  Q:'$D(GMPRINT)
"RTN","GMPLMGR2",70,0)
 S DIR(0)="YA",DIR("A")="Print a new problem list? ",DIR("B")="YES"
"RTN","GMPLMGR2",71,0)
 S DIR("?",1)="Press <return> to generate a new complete problem list for this patient;",DIR("?")="enter NO to continue without printing."
"RTN","GMPLMGR2",72,0)
 W $C(7),!!,">>>  THIS PATIENT'S PROBLEM LIST HAS CHANGED!"
"RTN","GMPLMGR2",73,0)
 D ^DIR I $D(DTOUT)!($D(DTOUT)) S GMPQUIT=1 Q
"RTN","GMPLMGR2",74,0)
 Q:'Y  D VAF^GMPLPRNT,DEVICE^GMPLPRNT G:$D(GMPQUIT) AUTQ
"RTN","GMPLMGR2",75,0)
 D CLEAR^VALM1,PRT^GMPLPRNT
"RTN","GMPLMGR2",76,0)
AUTQ ; Quit Auto-Print
"RTN","GMPLMGR2",77,0)
 D KILL^GMPLX
"RTN","GMPLMGR2",78,0)
 Q
"RTN","GMPLMGR2",79,0)
 ;
"RTN","GMPLMGR2",80,0)
SHOW ; Show Current View of List
"RTN","GMPLMGR2",81,0)
 N VIEW,NUM,NAME S VIEW=$E(GMPLVIEW("VIEW")),NUM=$L(GMPLVIEW("VIEW"),"/")
"RTN","GMPLMGR2",82,0)
 W !!,"CURRENT VIEW: "_$S(VIEW="S":"Inpatient, ",1:"Outpatient, ")
"RTN","GMPLMGR2",83,0)
 I '((NUM>2)!($L(GMPLVIEW("ACT")))!(GMPLVIEW("PROV"))) W "all problems" Q
"RTN","GMPLMGR2",84,0)
 W $S(GMPLVIEW("ACT")="A":"active",GMPLVIEW("ACT")="I":"inactive",1:"all")_" problems"
"RTN","GMPLMGR2",85,0)
 I NUM>2 W " from "_$S(GMPLVIEW("VIEW")=$$VIEW^GMPLX1(DUZ):"preferred",1:"selected")_$S(VIEW="S":" services",1:" clinics")
"RTN","GMPLMGR2",86,0)
 I GMPLVIEW("PROV") S NAME=$$NAME^GMPLX1(GMPLVIEW("PROV")) W:($X+$L(NAME)+4>80) ! W " by "_NAME
"RTN","GMPLMGR2",87,0)
 Q
"RTN","GMPLMGR2",88,0)
 ;
"RTN","GMPLMGR2",89,0)
ENVIEW ; Entry Action to Display Appropriate View Menu
"RTN","GMPLMGR2",90,0)
 N XQORM,X,Y,GMPLX S GMPLX=0 D SHOW S X="GMPL VIEW "_$S($E(GMPLVIEW("VIEW"))="S":"INPAT",1:"OUTPAT")
"RTN","GMPLMGR2",91,0)
 S XQORM=+$O(^ORD(101,"B",X,0))_";ORD(101,",XQORM(0)="3AD"
"RTN","GMPLMGR2",92,0)
 W !,"You may change your view of this patient's problem list by selecting one or",!,"more of the following attributes to alter:",!
"RTN","GMPLMGR2",93,0)
 D EN^XQORM F  S GMPLX=$O(Y(GMPLX)) Q:GMPLX'>0  X:$D(^ORD(101,+$P(Y(GMPLX),U,2),20)) ^(20)
"RTN","GMPLMGR2",94,0)
 Q
"RTN","GMPLMGR2",95,0)
 ;
"RTN","GMPLMGR2",96,0)
EXVIEW ; Exit Action to Rebuild List w/New View
"RTN","GMPLMGR2",97,0)
 S VALMBCK=$S(VALMCC:"",1:"R") I '$D(GMPQUIT),$G(GMPREBLD) D
"RTN","GMPLMGR2",98,0)
 . S VALMBG=1,VALMBCK="R" D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLMGR2",99,0)
 . D BUILD^GMPLMGR(.GMPLIST),HDR^GMPLMGR
"RTN","GMPLMGR2",100,0)
 K GMPQUIT,GMPREBLD S VALMSG=$$MSG^GMPLX
"RTN","GMPLMGR2",101,0)
 Q
"RTN","GMPLNTFT")
0^21^B57123267
"RTN","GMPLNTFT",1,0)
GMPLNTFT ;ISL/JER - Freetext Problem Follow-up Report ;07/09/12  11:45
"RTN","GMPLNTFT",2,0)
 ;;2.0;Problem List;**36**;Aug 25, 1994;Build 65
"RTN","GMPLNTFT",3,0)
 ;
"RTN","GMPLNTFT",4,0)
 ; ICR #2055     - $$EXTERNAL^DILFD
"RTN","GMPLNTFT",5,0)
 ;     #2056     - $$GET1^DIQ
"RTN","GMPLNTFT",6,0)
 ;     #3799     - $$FMTE^XLFDT
"RTN","GMPLNTFT",7,0)
 ;     #4558     - $$LEAP^XLFDT3
"RTN","GMPLNTFT",8,0)
 ;     #4631     - $$NOW^XLFDT
"RTN","GMPLNTFT",9,0)
 ;     #10000    - %, %I, %T, %Y Local vars
"RTN","GMPLNTFT",10,0)
 ;     #10063    - ^%ZTLOAD
"RTN","GMPLNTFT",11,0)
 ;     #10086    - ^%ZIS Routine & IO, IOF, ION, IOSL, & IOST Local Vars
"RTN","GMPLNTFT",12,0)
 ;     #10089    - ^%ZISC Routine & IO("Q") Local Var
"RTN","GMPLNTFT",13,0)
 ;     #10104    - $$LOW^XLFSTR, $$UP^XLFSTR
"RTN","GMPLNTFT",14,0)
 ;     #10112    - $$NAME^VASITE, $$SITE^VASITE
"RTN","GMPLNTFT",15,0)
 ;     #10114    - %ZIS Local Var
"RTN","GMPLNTFT",16,0)
 ;
"RTN","GMPLNTFT",17,0)
MAIN ; Main subroutine
"RTN","GMPLNTFT",18,0)
 N DIC,DIRUT,BADDIV,SELDIV,GMPLEDT,GMPLLDT,GMPLDI,VAUTD,ZTRTN,%I,%T,%Y,POP,GMPL1PR,GMPLPR,GMPLPCOM
"RTN","GMPLNTFT",19,0)
 S GMPLPR=0
"RTN","GMPLNTFT",20,0)
 W !!,$$CENTER^GMPLUTL1("--- Problem List Freetext Follow-up Report ---"),!
"RTN","GMPLNTFT",21,0)
 D SELDIV^GMPLNTRT(.GMPLDI) Q:'$D(GMPLDI)!$D(DIRUT)
"RTN","GMPLNTFT",22,0)
 W !
"RTN","GMPLNTFT",23,0)
 S GMPL1PR=$$READ^GMPLUTL1("YA","Specific Provider(s)? ","NO","Indicate whether you would like to run the report for one or more specific Providers.")
"RTN","GMPLNTFT",24,0)
 I $D(DIRUT) Q
"RTN","GMPLNTFT",25,0)
 I +GMPL1PR D PROVSEL^GMPLNTRT(.GMPLPR) Q:'+$G(GMPLPR)!+$G(DIROUT)
"RTN","GMPLNTFT",26,0)
 W !
"RTN","GMPLNTFT",27,0)
 S GMPLPCOM=$$READ^GMPLUTL1("YA","Print Comments? ","YES","Indicate whether you would like to see the users' comments for New Term Requests.")
"RTN","GMPLNTFT",28,0)
 I $D(DIRUT) Q
"RTN","GMPLNTFT",29,0)
 W !
"RTN","GMPLNTFT",30,0)
 S GMPLEDT=+$$EDATE^GMPLUTL1("Modification","","T-30")
"RTN","GMPLNTFT",31,0)
 W !
"RTN","GMPLNTFT",32,0)
 I GMPLEDT'>0 Q
"RTN","GMPLNTFT",33,0)
 S GMPLLDT=+$$LDATE^GMPLUTL1("Modification","","NOW")
"RTN","GMPLNTFT",34,0)
 W !
"RTN","GMPLNTFT",35,0)
 I GMPLLDT'>0 Q
"RTN","GMPLNTFT",36,0)
 S ZTRTN="ENTRY^GMPLNTFT"
"RTN","GMPLNTFT",37,0)
DEVICE ; Device handling
"RTN","GMPLNTFT",38,0)
 ; Call with: ZTRTN
"RTN","GMPLNTFT",39,0)
 N %ZIS
"RTN","GMPLNTFT",40,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","GMPLNTFT",41,0)
 G:$D(IO("Q")) QUE
"RTN","GMPLNTFT",42,0)
NOQUE ; Call report directly
"RTN","GMPLNTFT",43,0)
 D @ZTRTN
"RTN","GMPLNTFT",44,0)
 Q
"RTN","GMPLNTFT",45,0)
QUE ; Queue output
"RTN","GMPLNTFT",46,0)
 N %,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","GMPLNTFT",47,0)
 Q:'$D(ZTRTN)
"RTN","GMPLNTFT",48,0)
 K IO("Q") F %="DA","DFN","GMPL*" S ZTSAVE(%)=""
"RTN","GMPLNTFT",49,0)
 S:'$D(ZTDESC) ZTDESC="PRINT NTRT FOLLOW-UP REPORT" S ZTIO=ION
"RTN","GMPLNTFT",50,0)
 D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued!",1:"Request Cancelled!")
"RTN","GMPLNTFT",51,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","GMPLNTFT",52,0)
 D HOME^%ZIS
"RTN","GMPLNTFT",53,0)
 Q
"RTN","GMPLNTFT",54,0)
 ;
"RTN","GMPLNTFT",55,0)
ENTRY ; Build & Print Report
"RTN","GMPLNTFT",56,0)
 N GMPLA
"RTN","GMPLNTFT",57,0)
 S GMPLA=$NA(^TMP("GMPLNTRT",$J))
"RTN","GMPLNTFT",58,0)
 U IO
"RTN","GMPLNTFT",59,0)
 D GATHER(.GMPLDI,GMPLA,GMPLEDT,GMPLLDT,.GMPLPR)
"RTN","GMPLNTFT",60,0)
 D REPORT(GMPLA,GMPLEDT,GMPLLDT,GMPLPCOM)
"RTN","GMPLNTFT",61,0)
 K @GMPLA
"RTN","GMPLNTFT",62,0)
 D ^%ZISC
"RTN","GMPLNTFT",63,0)
 Q
"RTN","GMPLNTFT",64,0)
GATHER(GMPLDI,GMPLA,GMPLEDT,GMPLLDT,GMPLPR) ; Gather records that satisfy criteria
"RTN","GMPLNTFT",65,0)
 N GMPLDA,GMPLNOS,GMPLPOP  K @GMPLA
"RTN","GMPLNTFT",66,0)
 S GMPLNOS=+$$NOS^GMPLX,GMPLDA="",GMPLPOP=0
"RTN","GMPLNTFT",67,0)
 ; Insure inclusive early date/time by subtracting one minute before $ORDER
"RTN","GMPLNTFT",68,0)
 ;S GMPLTDT=$$FMADD^XLFDT(GMPLEDT,0,0,-1)
"RTN","GMPLNTFT",69,0)
 ; Insure inclusive end date/time by appending time of 23:59 if time not indicated
"RTN","GMPLNTFT",70,0)
 I $L(GMPLLDT,".")=1 S $P(GMPLLDT,".",2)="2359"
"RTN","GMPLNTFT",71,0)
 F  S GMPLDA=$O(^AUPNPROB("B",GMPLNOS,GMPLDA),-1) Q:+GMPLPOP!(+GMPLDA'>0)  D
"RTN","GMPLNTFT",72,0)
 . N GMPLD0,GMPLD1,GMPLD800,GMPLD8015,GMPLDIV,GMPLMDT,GMPLRPR,GMPLPTNM,GMPLPTL4,GMPLNARR
"RTN","GMPLNTFT",73,0)
 . N GMPLSVC,GMPLSVCA,GMPLSVCN,GMPLCL,GMPLCLA,GMPLCLN,GMPLNTRT,GMPLNTC
"RTN","GMPLNTFT",74,0)
 . S GMPLD0=$G(^AUPNPROB(GMPLDA,0)),GMPLD1=$G(^(1)),GMPLD800=$G(^(800)),GMPLD801=$G(^(801))
"RTN","GMPLNTFT",75,0)
 . ; Filter problems with unmapped SCT Concepts
"RTN","GMPLNTFT",76,0)
 . Q:+GMPLD800>0
"RTN","GMPLNTFT",77,0)
 . S GMPLMDT=$P(GMPLD0,U,3)
"RTN","GMPLNTFT",78,0)
 . I GMPLMDT<GMPLEDT S GMPLPOP=1 Q
"RTN","GMPLNTFT",79,0)
 . I GMPLMDT>GMPLLDT Q
"RTN","GMPLNTFT",80,0)
 . S GMPLRPR=$P(GMPLD1,U,5),GMPLDIV=$P(GMPLD0,U,6),GMPLPTNM=$P(GMPLD0,U,2)
"RTN","GMPLNTFT",81,0)
 . I +$G(GMPLPR),'$D(GMPLPR("I",+GMPLRPR)) Q
"RTN","GMPLNTFT",82,0)
 . I $S(GMPLDI("ENTRIES")="ALL DIVISIONS":0,$D(GMPLDI("INST",+GMPLDIV)):0,1:1) Q
"RTN","GMPLNTFT",83,0)
 . S GMPLSVC=$P(GMPLD1,U,6),GMPLCL=$P(GMPLD1,U,8)
"RTN","GMPLNTFT",84,0)
 . S GMPLSVCA=$S(GMPLSVC]"":$E($$GET1^DIQ(49,GMPLSVC,1),1,6),1:"n/a")
"RTN","GMPLNTFT",85,0)
 . S GMPLSVCN=$S(GMPLSVC]"":$E($$GET1^DIQ(49,GMPLSVC,.01),1,6),1:"n/a")
"RTN","GMPLNTFT",86,0)
 . S GMPLSVCA=$S(GMPLSVCA]"":GMPLSVCA,1:GMPLSVCN)
"RTN","GMPLNTFT",87,0)
 . S GMPLCLA=$S(GMPLCL]"":$E($$GET1^DIQ(44,GMPLCL,1),1,6),1:"n/a")
"RTN","GMPLNTFT",88,0)
 . S GMPLCLN=$S(GMPLCL]"":$E($$GET1^DIQ(44,GMPLCL,.01),1,6),1:"n/a")
"RTN","GMPLNTFT",89,0)
 . S GMPLCLA=$S(GMPLCLA]"":GMPLCLA,1:GMPLCLN)
"RTN","GMPLNTFT",90,0)
 . S GMPLDIV=$S(GMPLDIV]"":$$EXTERNAL^DILFD(9000011,.06,"",GMPLDIV),1:"DIVISION UNKNOWN")
"RTN","GMPLNTFT",91,0)
 . S GMPLRPR=$S(GMPLRPR]"":$$EXTERNAL^DILFD(9000011,1.05,"",GMPLRPR),1:"n/a")
"RTN","GMPLNTFT",92,0)
 . S GMPLNARR=$$EXTERNAL^DILFD(9000011,.05,"",$P(GMPLD0,U,5))
"RTN","GMPLNTFT",93,0)
 . S GMPLPTL4=$E($$GET1^DIQ(2,$P(GMPLD0,U,2),.09),6,9) S:GMPLPTL4']"" GMPLPTL4="UNKN"
"RTN","GMPLNTFT",94,0)
 . S GMPLPTNM=$$EXTERNAL^DILFD(9000011,.02,"",$P(GMPLD0,U,2))_"|"_GMPLPTL4
"RTN","GMPLNTFT",95,0)
 . S GMPLNTRT=$S(+$P(GMPLD801,U):"True",1:"False"),GMPLNTC=$P(GMPLD801,U,2)
"RTN","GMPLNTFT",96,0)
 . S @GMPLA@(GMPLDIV,GMPLRPR,GMPLPTNM,GMPLMDT,GMPLDA)=GMPLNARR_U_GMPLSVCA_U_GMPLCLA_U_GMPLNTRT_U_GMPLNTC
"RTN","GMPLNTFT",97,0)
 Q
"RTN","GMPLNTFT",98,0)
REPORT(GMPLA,GMPLEDT,GMPLLDT,GMPLPCOM) ; Generate report
"RTN","GMPLNTFT",99,0)
 N GMPLDIV,GMPLRTM,DIRUT,DTOUT,DUOUT,GMPLSITE,GMPLCAT,GMPLI,GMPLPG
"RTN","GMPLNTFT",100,0)
 N GMPLSHDR,EQLN S $P(EQLN,"-",11)="",GMPLPG=0,GMPLPCOM=+$G(GMPLPCOM)
"RTN","GMPLNTFT",101,0)
 I $D(ZTQUEUED) S ZTREQ="@" ; Tell TaskMan to delete Task log entry
"RTN","GMPLNTFT",102,0)
 U IO
"RTN","GMPLNTFT",103,0)
 S GMPLRTM=$$NOW^XLFDT,GMPLSITE=$S($$NAME^VASITE]"":$$NAME^VASITE,1:$P($$SITE^VASITE,U,2))
"RTN","GMPLNTFT",104,0)
 I '$D(@GMPLA) D  Q
"RTN","GMPLNTFT",105,0)
 . D HEADER("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTFT",106,0)
 . W:$$CONTINUE("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG) !
"RTN","GMPLNTFT",107,0)
 . W:$$CONTINUE("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG) "No Freetext Problems found for selected parameters...",!
"RTN","GMPLNTFT",108,0)
 . I ($E(IOST)="C"),($E(IOSL,1,3)'=999) S:'+$$STOP^GMPLUTL1("",1) DIRUT=1
"RTN","GMPLNTFT",109,0)
 S GMPLDIV=0
"RTN","GMPLNTFT",110,0)
 F  S GMPLDIV=$O(@GMPLA@(GMPLDIV)) Q:GMPLDIV']""  D  Q:$D(DIRUT)
"RTN","GMPLNTFT",111,0)
 . N GMPLRPR S GMPLRPR=""
"RTN","GMPLNTFT",112,0)
 . D HEADER(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTFT",113,0)
 . F  S GMPLRPR=$O(@GMPLA@(GMPLDIV,GMPLRPR)) Q:GMPLRPR']""  D  Q:$D(DIRUT)
"RTN","GMPLNTFT",114,0)
 . . N GMPLPT S GMPLPT=0
"RTN","GMPLNTFT",115,0)
 . . F  S GMPLPT=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT)) Q:GMPLPT']""  D  Q:$D(DIRUT)
"RTN","GMPLNTFT",116,0)
 . . . N GMPLMDT S GMPLMDT=0
"RTN","GMPLNTFT",117,0)
 . . . F  S GMPLMDT=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT)) Q:+GMPLMDT'>0  D  Q:$D(DIRUT)
"RTN","GMPLNTFT",118,0)
 . . . . N GMPLDA S GMPLDA=0
"RTN","GMPLNTFT",119,0)
 . . . . F  S GMPLDA=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT,GMPLDA)) Q:+GMPLDA'>0  D  Q:$D(DIRUT)
"RTN","GMPLNTFT",120,0)
 . . . . . N GMPLD,GMPLNARR,GMPLPRNM,GMPLPTNM,GMPLSVC,GMPLCLOC,GMPLNTRT,GMPLNTC
"RTN","GMPLNTFT",121,0)
 . . . . . S GMPLD=$G(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT,GMPLDA))
"RTN","GMPLNTFT",122,0)
 . . . . . S GMPLNARR=$P(GMPLD,U),GMPLSVC=$P(GMPLD,U,2),GMPLCLOC=$P(GMPLD,U,3),GMPLNTRT=$P(GMPLD,U,4),GMPLNTC=$P(GMPLD,U,5)
"RTN","GMPLNTFT",123,0)
 . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTFT",124,0)
 . . . . . W $E($$NAME^GMPLUTL1(GMPLRPR,"LAST"),1,10),$$NAME^GMPLUTL1(GMPLRPR,",FI MI")
"RTN","GMPLNTFT",125,0)
 . . . . . W ?16,$E($$NAME^GMPLUTL1($P(GMPLPT,"|"),"LAST"),1,10),$$NAME^GMPLUTL1($P(GMPLPT,"|"),",FI MI"),?31," (",$P(GMPLPT,"|",2),")"
"RTN","GMPLNTFT",126,0)
 . . . . . W ?40,$$DATE^GMPLUTL1(GMPLMDT,"MM/DD/YY"),?50,GMPLSVC,?58,GMPLCLOC,?70,GMPLNTRT,!
"RTN","GMPLNTFT",127,0)
 . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTFT",128,0)
 . . . . . W ?2,GMPLNARR,!
"RTN","GMPLNTFT",129,0)
 . . . . . Q:$D(DIRUT)
"RTN","GMPLNTFT",130,0)
 . . . . . I GMPLPCOM,(GMPLNTC]"") D
"RTN","GMPLNTFT",131,0)
 . . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTFT",132,0)
 . . . . . . W "Comments: ",!
"RTN","GMPLNTFT",133,0)
 . . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTFT",134,0)
 . . . . . . W GMPLNTC,!
"RTN","GMPLNTFT",135,0)
 . . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTFT",136,0)
 . . . . . . W !
"RTN","GMPLNTFT",137,0)
 . . . . . E  Q:(+$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0)!$D(DIRUT)  W !
"RTN","GMPLNTFT",138,0)
 . Q:$D(DIRUT)
"RTN","GMPLNTFT",139,0)
 . I ($E(IOST)="C"),($E(IOSL,1,3)'=999) S:'+$$STOP^GMPLUTL1("",1) DIRUT=1
"RTN","GMPLNTFT",140,0)
 Q
"RTN","GMPLNTFT",141,0)
CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,GMPLPG) ; Evaluate relative page position
"RTN","GMPLNTFT",142,0)
 N GMPLY S GMPLY=1
"RTN","GMPLNTFT",143,0)
 I $Y'>(IOSL-3) G CONTX
"RTN","GMPLNTFT",144,0)
 I $E(IOST)="C" S GMPLY=+$$READ^GMPLUTL1("E") S:$D(DIRUT) GMPLY=0
"RTN","GMPLNTFT",145,0)
 I GMPLY'>0 G CONTX
"RTN","GMPLNTFT",146,0)
 D HEADER(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTFT",147,0)
CONTX Q GMPLY
"RTN","GMPLNTFT",148,0)
HEADER(DIVISION,GMPLRTM,GMPLEDT,GMPLLDT,GMPLPG) ; Write Report Header
"RTN","GMPLNTFT",149,0)
 N GMPLLINE,GMPLDTR S $P(GMPLLINE,"=",81)="",GMPLDTR=$$DATE^GMPLUTL1(GMPLEDT,"MM/DD/CCYY")_" to "_$$DATE^GMPLUTL1(GMPLLDT,"MM/DD/CCYY")
"RTN","GMPLNTFT",150,0)
 S GMPLPG=GMPLPG+1
"RTN","GMPLNTFT",151,0)
 W @IOF D JUSTIFY^GMPLUTL1("Page "_GMPLPG,"R") W !
"RTN","GMPLNTFT",152,0)
 W GMPLLINE,! D JUSTIFY^GMPLUTL1($$TITLE^GMPLUTL1("PROBLEM LIST FREETEXT FOLLOW-UP REPORT"),"C") W !
"RTN","GMPLNTFT",153,0)
 D JUSTIFY^GMPLUTL1(DIVISION,"C")
"RTN","GMPLNTFT",154,0)
 W !
"RTN","GMPLNTFT",155,0)
 W "for Problems Modified: ",GMPLDTR,?55,"Printed: ",$$DATE^GMPLUTL1(GMPLRTM,"MM/DD/CCYY HR:MIN"),!
"RTN","GMPLNTFT",156,0)
 W !
"RTN","GMPLNTFT",157,0)
 W "Provider",?16,"Patient",?40,"Modified",?50,"Service",?58,"Clinic",?70,"NTRT",!
"RTN","GMPLNTFT",158,0)
 W ?2,"Narrative",?70,"Requested",!
"RTN","GMPLNTFT",159,0)
 W GMPLLINE,!
"RTN","GMPLNTFT",160,0)
 Q
"RTN","GMPLNTRT")
0^20^B91442393
"RTN","GMPLNTRT",1,0)
GMPLNTRT ;ISL/JER - Problem List NTRT Mapping Follow-up Report ;06/08/12  13:55
"RTN","GMPLNTRT",2,0)
 ;;2.0;Problem List;**36**;Aug 25, 1994;Build 65
"RTN","GMPLNTRT",3,0)
 ;
"RTN","GMPLNTRT",4,0)
 ; ICR #2055     - $$EXTERNAL^DILFD
"RTN","GMPLNTRT",5,0)
 ;     #2056     - $$GET1^DIQ
"RTN","GMPLNTRT",6,0)
 ;     #3799     - $$FMTE^XLFDT
"RTN","GMPLNTRT",7,0)
 ;     #4558     - $$LEAP^XLFDT3
"RTN","GMPLNTRT",8,0)
 ;     #4631     - $$NOW^XLFDT
"RTN","GMPLNTRT",9,0)
 ;     #10000    - %, %I, %T, %Y Local vars
"RTN","GMPLNTRT",10,0)
 ;     #10063    - ^%ZTLOAD
"RTN","GMPLNTRT",11,0)
 ;     #10086    - ^%ZIS Routine & IO, IOF, ION, IOSL, & IOST Local Vars
"RTN","GMPLNTRT",12,0)
 ;     #10089    - ^%ZISC Routine & IO("Q") Local Var
"RTN","GMPLNTRT",13,0)
 ;     #10104    - $$LOW^XLFSTR, $$UP^XLFSTR
"RTN","GMPLNTRT",14,0)
 ;     #10112    - $$NAME^VASITE, $$SITE^VASITE
"RTN","GMPLNTRT",15,0)
 ;     #10114    - %ZIS Local Var
"RTN","GMPLNTRT",16,0)
 ;
"RTN","GMPLNTRT",17,0)
MAIN ; Main subroutine
"RTN","GMPLNTRT",18,0)
 N DIC,DIRUT,BADDIV,SELDIV,GMPLEDT,GMPLLDT,GMPLNTST,GMPLDI,VAUTD,ZTRTN,%I,%T,%Y,POP,GMPL1PR,GMPLPR,GMPLPCOM
"RTN","GMPLNTRT",19,0)
 S GMPLPR=0
"RTN","GMPLNTRT",20,0)
 W !!,$$CENTER^GMPLUTL1("--- Problem List NTRT Mapping Follow-up Report ---"),!
"RTN","GMPLNTRT",21,0)
 D SELDIV(.GMPLDI) Q:'$D(GMPLDI)!$D(DIRUT)
"RTN","GMPLNTRT",22,0)
 W !
"RTN","GMPLNTRT",23,0)
 S GMPLNTST=$P($$READ^GMPLUTL1("SA^0:All;1:Pending;2:Completed","NTRT Status? ","ALL","Indicate the NTRT Status for the report."),U)
"RTN","GMPLNTRT",24,0)
 I $D(DIRUT) Q
"RTN","GMPLNTRT",25,0)
 W !
"RTN","GMPLNTRT",26,0)
 S GMPL1PR=$$READ^GMPLUTL1("YA","Specific Provider(s)? ","NO","Indicate whether you would like to run the report for one or more specific Providers.")
"RTN","GMPLNTRT",27,0)
 I $D(DIRUT) Q
"RTN","GMPLNTRT",28,0)
 I +GMPL1PR D PROVSEL(.GMPLPR) Q:'+$G(GMPLPR)!+$G(DIROUT)
"RTN","GMPLNTRT",29,0)
 W !
"RTN","GMPLNTRT",30,0)
 S GMPLEDT=+$$EDATE^GMPLUTL1("Modification","","T-30")
"RTN","GMPLNTRT",31,0)
 W !
"RTN","GMPLNTRT",32,0)
 I GMPLEDT'>0 Q
"RTN","GMPLNTRT",33,0)
 S GMPLLDT=+$$LDATE^GMPLUTL1("Modification","","NOW")
"RTN","GMPLNTRT",34,0)
 W !
"RTN","GMPLNTRT",35,0)
 I GMPLLDT'>0 Q
"RTN","GMPLNTRT",36,0)
 S ZTRTN="ENTRY^GMPLNTRT"
"RTN","GMPLNTRT",37,0)
DEVICE ; Device handling
"RTN","GMPLNTRT",38,0)
 ; Call with: ZTRTN
"RTN","GMPLNTRT",39,0)
 N %ZIS
"RTN","GMPLNTRT",40,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","GMPLNTRT",41,0)
 G:$D(IO("Q")) QUE
"RTN","GMPLNTRT",42,0)
NOQUE ; Call report directly
"RTN","GMPLNTRT",43,0)
 D @ZTRTN
"RTN","GMPLNTRT",44,0)
 Q
"RTN","GMPLNTRT",45,0)
QUE ; Queue output
"RTN","GMPLNTRT",46,0)
 N %,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","GMPLNTRT",47,0)
 Q:'$D(ZTRTN)
"RTN","GMPLNTRT",48,0)
 K IO("Q") F %="DA","DFN","GMPL*" S ZTSAVE(%)=""
"RTN","GMPLNTRT",49,0)
 S:'$D(ZTDESC) ZTDESC="PRINT NTRT FOLLOW-UP REPORT" S ZTIO=ION
"RTN","GMPLNTRT",50,0)
 D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued!",1:"Request Cancelled!")
"RTN","GMPLNTRT",51,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","GMPLNTRT",52,0)
 D HOME^%ZIS
"RTN","GMPLNTRT",53,0)
 Q
"RTN","GMPLNTRT",54,0)
PROVSEL(GMPLY) ; Select Providers
"RTN","GMPLNTRT",55,0)
 N DIRUT,GMPLQUIT,GMPLPRSN,GMPLI,GMPLPRMT,GMPLVBCUC,GMPLSCRN,GMPLHLP S (GMPLY,GMPLI,GMPLQUIT)=0
"RTN","GMPLNTRT",56,0)
 ; Identify User Class for VBC Line Count
"RTN","GMPLNTRT",57,0)
 S GMPLHLP="Please choose a KNOWN Provider (Duplicates not allowed)."
"RTN","GMPLNTRT",58,0)
 S GMPLSCRN="I '$D(GMPLY(""I"",+Y)),$$CLINUSER^ORQQPL1(+Y)"
"RTN","GMPLNTRT",59,0)
 W !!,"Select Provider(s):",!
"RTN","GMPLNTRT",60,0)
 F  D  Q:+GMPLQUIT
"RTN","GMPLNTRT",61,0)
 . S GMPLI=GMPLI+1,GMPLPRMT=$J(GMPLI,3)_")  "
"RTN","GMPLNTRT",62,0)
 . S GMPLPRSN=$$READ^GMPLUTL1("PAO^200:AEMQ",GMPLPRMT,"",GMPLHLP,GMPLSCRN)
"RTN","GMPLNTRT",63,0)
 . I +GMPLPRSN'>0 S GMPLQUIT=1 Q
"RTN","GMPLNTRT",64,0)
 . S GMPLY=GMPLI,GMPLY(GMPLI)=GMPLPRSN,GMPLY("I",+GMPLPRSN)=GMPLI
"RTN","GMPLNTRT",65,0)
 W !
"RTN","GMPLNTRT",66,0)
 Q
"RTN","GMPLNTRT",67,0)
SELDIV(GMPLDI) ; Select divisions
"RTN","GMPLNTRT",68,0)
 ;
"RTN","GMPLNTRT",69,0)
 ; Output - SELDIV  -1= user ^ at prompt if multidivisional
"RTN","GMPLNTRT",70,0)
 ;                   0= institution file pointer missing for
"RTN","GMPLNTRT",71,0)
 ;                      division entry
"RTN","GMPLNTRT",72,0)
 ;                   1= successful division selection
"RTN","GMPLNTRT",73,0)
 ;          BADDIV    = comma-delimited list of bad divisions (if any)
"RTN","GMPLNTRT",74,0)
 ;          GMPLDI(  undefined= user <cr> for all divisions or ^ at prompt
"RTN","GMPLNTRT",75,0)
 ;                             if multidivisional
"RTN","GMPLNTRT",76,0)
 ;                  defined= user selected one or more divisions if
"RTN","GMPLNTRT",77,0)
 ;                           multidivisional, or pre-selection of
"RTN","GMPLNTRT",78,0)
 ;                           division file entry if not multidivisional;
"RTN","GMPLNTRT",79,0)
 ;                           i.e.: GMPLDI(file #40.8 ien)= Institution
"RTN","GMPLNTRT",80,0)
 ;                           file pointer for file #40.8 entry
"RTN","GMPLNTRT",81,0)
 N DIRUT,DTOUT,DUOUT,GMPLI,VAUTD,Y
"RTN","GMPLNTRT",82,0)
 K SELDIV,GMPLDI,BADDIV
"RTN","GMPLNTRT",83,0)
 ; -- Determine if facility is multidivisional
"RTN","GMPLNTRT",84,0)
 I $P($G(^DG(43,1,"GL")),U,2) D
"RTN","GMPLNTRT",85,0)
 . D DIVISION^VAUTOMA
"RTN","GMPLNTRT",86,0)
 . I Y<0 S SELDIV=-1 Q
"RTN","GMPLNTRT",87,0)
 . I VAUTD=1 S SELDIV=1 Q
"RTN","GMPLNTRT",88,0)
 . S GMPLI=0 F  S GMPLI=$O(VAUTD(GMPLI)) Q:'GMPLI  D ONE(GMPLI,.VAUTD,.GMPLDI)
"RTN","GMPLNTRT",89,0)
 E  S GMPLI=$$PRIM^VASITE D ONE(GMPLI,.VAUTD)
"RTN","GMPLNTRT",90,0)
 Q:SELDIV=-1
"RTN","GMPLNTRT",91,0)
 I +SELDIV=0 D  Q:'$D(GMPLDI)
"RTN","GMPLNTRT",92,0)
 . W !!,"Inconsistencies found between the MEDICAL CENTER DIVISION FILE, the INSTITUTION"
"RTN","GMPLNTRT",93,0)
 . W !,"FILE and/or STATION NUMBER (TIME SENSITIVE) FILE for the:",!!,$S($G(BADDIV)]"":BADDIV_" division"_$S($L(BADDIV,",")>1:"s",1:""),1:"a division you selected"),"."
"RTN","GMPLNTRT",94,0)
 . W !!,"Please contact the National Support team."
"RTN","GMPLNTRT",95,0)
 . I '$D(GMPLDI) W ! S:'$$READ^GMPLUTL1("E") DIRUT=1
"RTN","GMPLNTRT",96,0)
 I $D(GMPLDI) D
"RTN","GMPLNTRT",97,0)
 . N GMPLK
"RTN","GMPLNTRT",98,0)
 . S GMPLK=0 F  S GMPLK=$O(GMPLDI(GMPLK)) Q:'GMPLK  D
"RTN","GMPLNTRT",99,0)
 . . S GMPLDI("INST",GMPLDI(GMPLK))=GMPLK
"RTN","GMPLNTRT",100,0)
 . . S GMPLDI("ENTRIES")=$G(GMPLDI("ENTRIES"))_GMPLK_";"
"RTN","GMPLNTRT",101,0)
 E  S GMPLDI("ENTRIES")="ALL DIVISIONS"
"RTN","GMPLNTRT",102,0)
 Q
"RTN","GMPLNTRT",103,0)
 ;
"RTN","GMPLNTRT",104,0)
ONE(GMPLI,VAUTD,GMPLDI) ; Input - GMPLI  Medical Center Division file (#40.8) IEN
"RTN","GMPLNTRT",105,0)
 N GMPLIFP
"RTN","GMPLNTRT",106,0)
 S GMPLIFP=$P($$SITE^VASITE(,GMPLI),U) I GMPLIFP>0 D
"RTN","GMPLNTRT",107,0)
 . S GMPLDI(GMPLI)=GMPLIFP,SELDIV=1
"RTN","GMPLNTRT",108,0)
 E  D
"RTN","GMPLNTRT",109,0)
 . S SELDIV=0,BADDIV=$G(BADDIV)_$S($L($G(BADDIV)):", ",1:"")_$G(VAUTD(GMPLI))
"RTN","GMPLNTRT",110,0)
 Q
"RTN","GMPLNTRT",111,0)
 ;
"RTN","GMPLNTRT",112,0)
ENTRY ; Build & Print Report
"RTN","GMPLNTRT",113,0)
 N GMPLA
"RTN","GMPLNTRT",114,0)
 S GMPLA=$NA(^TMP("GMPLNTRT",$J))
"RTN","GMPLNTRT",115,0)
 U IO
"RTN","GMPLNTRT",116,0)
 D GATHER(.GMPLDI,GMPLA,GMPLEDT,GMPLLDT,GMPLNTST,.GMPLPR)
"RTN","GMPLNTRT",117,0)
 D REPORT(GMPLA,GMPLEDT,GMPLLDT)
"RTN","GMPLNTRT",118,0)
 K @GMPLA
"RTN","GMPLNTRT",119,0)
 D ^%ZISC
"RTN","GMPLNTRT",120,0)
 Q
"RTN","GMPLNTRT",121,0)
GATHER(GMPLDI,GMPLA,GMPLEDT,GMPLLDT,GMPLNTST,GMPLPR) ; Gather records that satisfy criteria
"RTN","GMPLNTRT",122,0)
 N GMPLDA,GMPLDT,GMPLNOS,GMPLPOP,GMPLST0,GMPLST1  K @GMPLA
"RTN","GMPLNTRT",123,0)
 S GMPLNOS=+$$NOS^GMPLX,GMPLDA="",GMPLPOP=0
"RTN","GMPLNTRT",124,0)
 S GMPLST0=$S(GMPLNTST=0:1,1:GMPLNTST),GMPLST1=$S(GMPLNTST=0:2,1:GMPLNTST)
"RTN","GMPLNTRT",125,0)
 ; Insure inclusive early date/time by subtracting one minute before $ORDER
"RTN","GMPLNTRT",126,0)
 S GMPLDT=$$FMADD^XLFDT(GMPLEDT,0,0,-1)
"RTN","GMPLNTRT",127,0)
 ; Insure inclusive end date/time by appending time of 23:59 if time not indicated
"RTN","GMPLNTRT",128,0)
 I $L(GMPLLDT,".")=1 S $P(GMPLLDT,".",2)="2359"
"RTN","GMPLNTRT",129,0)
 F  S GMPLDT=$O(^AUPNPROB("DM",GMPLDT)) Q:(+GMPLDT>GMPLLDT)!(+GMPLDT'>0)  D  Q:+GMPLPOP
"RTN","GMPLNTRT",130,0)
 . N GMPLSTI F GMPLSTI=GMPLST0:1:GMPLST1 D  Q:+GMPLPOP
"RTN","GMPLNTRT",131,0)
 . . N GMPLDA S GMPLDA=0
"RTN","GMPLNTRT",132,0)
 . . F  S GMPLDA=$O(^AUPNPROB("DM",GMPLDT,GMPLSTI,GMPLDA)) Q:+GMPLDA'>0  D  Q:+GMPLPOP
"RTN","GMPLNTRT",133,0)
 . . . N GMPLD0,GMPLD1,GMPLD800,GMPLDIV,GMPLMDT,GMPLRPR,GMPLPTNM,GMPLPTL4,GMPLNARR
"RTN","GMPLNTRT",134,0)
 . . . N GMPLSVC,GMPLSVCA,GMPLSVCN,GMPLCL,GMPLCLA,GMPLCLN,GMPLSCTC,GMPLSTAT
"RTN","GMPLNTRT",135,0)
 . . . S GMPLD0=$G(^AUPNPROB(GMPLDA,0)),GMPLD1=$G(^(1)),GMPLD800=$G(^(800))
"RTN","GMPLNTRT",136,0)
 . . . S GMPLMDT=$P(GMPLD0,U,3)
"RTN","GMPLNTRT",137,0)
 . . . I GMPLMDT<GMPLEDT S GMPLPOP=1 Q
"RTN","GMPLNTRT",138,0)
 . . . I GMPLMDT>GMPLLDT Q
"RTN","GMPLNTRT",139,0)
 . . . S GMPLRPR=$P(GMPLD1,U,5),GMPLDIV=$P(GMPLD0,U,6),GMPLPTNM=$P(GMPLD0,U,2)
"RTN","GMPLNTRT",140,0)
 . . . I +$G(GMPLPR),'$D(GMPLPR("I",+GMPLRPR)) Q
"RTN","GMPLNTRT",141,0)
 . . . I $S(GMPLDI("ENTRIES")="ALL DIVISIONS":0,$D(GMPLDI("INST",+GMPLDIV)):0,1:1) Q
"RTN","GMPLNTRT",142,0)
 . . . S GMPLSVC=$P(GMPLD1,U,6),GMPLCL=$P(GMPLD1,U,8),GMPLSCTC=$P(GMPLD800,U)
"RTN","GMPLNTRT",143,0)
 . . . S GMPLSVCA=$S(GMPLSVC]"":$E($$GET1^DIQ(49,GMPLSVC,1),1,6),1:"n/a")
"RTN","GMPLNTRT",144,0)
 . . . S GMPLSVCN=$S(GMPLSVC]"":$E($$GET1^DIQ(49,GMPLSVC,.01),1,6),1:"n/a")
"RTN","GMPLNTRT",145,0)
 . . . S GMPLSVCA=$S(GMPLSVCA]"":GMPLSVCA,1:GMPLSVCN)
"RTN","GMPLNTRT",146,0)
 . . . S GMPLCLA=$S(GMPLCL]"":$E($$GET1^DIQ(44,GMPLCL,1),1,6),1:"n/a")
"RTN","GMPLNTRT",147,0)
 . . . S GMPLCLN=$S(GMPLCL]"":$E($$GET1^DIQ(44,GMPLCL,.01),1,6),1:"n/a")
"RTN","GMPLNTRT",148,0)
 . . . S GMPLCLA=$S(GMPLCLA]"":GMPLCLA,1:GMPLCLN)
"RTN","GMPLNTRT",149,0)
 . . . S GMPLDIV=$S(GMPLDIV]"":$$EXTERNAL^DILFD(9000011,.06,"",GMPLDIV),1:"DIVISION UNKNOWN")
"RTN","GMPLNTRT",150,0)
 . . . S GMPLRPR=$S(GMPLRPR]"":$$EXTERNAL^DILFD(9000011,1.05,"",GMPLRPR),1:"n/a")
"RTN","GMPLNTRT",151,0)
 . . . S GMPLNARR=$$EXTERNAL^DILFD(9000011,.05,"",$P(GMPLD0,U,5))
"RTN","GMPLNTRT",152,0)
 . . . S GMPLPTL4=$E($$GET1^DIQ(2,$P(GMPLD0,U,2),.09),6,9) S:GMPLPTL4']"" GMPLPTL4="UNKN"
"RTN","GMPLNTRT",153,0)
 . . . S GMPLPTNM=$$EXTERNAL^DILFD(9000011,.02,"",$P(GMPLD0,U,2))_"|"_GMPLPTL4
"RTN","GMPLNTRT",154,0)
 . . . S GMPLSTAT=$$EXTERNAL^DILFD(9000011,80005,"",$P(GMPLD800,U,5))
"RTN","GMPLNTRT",155,0)
 . . . S @GMPLA@(GMPLDIV,GMPLRPR,GMPLPTNM,GMPLMDT,GMPLDA)=GMPLNARR_U_GMPLSVCA_U_GMPLCLA_U_GMPLSCTC_U_GMPLSTAT
"RTN","GMPLNTRT",156,0)
 Q
"RTN","GMPLNTRT",157,0)
REPORT(GMPLA,GMPLEDT,GMPLLDT) ; Generate report
"RTN","GMPLNTRT",158,0)
 N GMPLDIV,GMPLRTM,DIRUT,DTOUT,DUOUT,GMPLSITE,GMPLPG
"RTN","GMPLNTRT",159,0)
 N GMPLSHDR,EQLN S $P(EQLN,"-",11)="",GMPLPG=0
"RTN","GMPLNTRT",160,0)
 I $D(ZTQUEUED) S ZTREQ="@" ; Tell TaskMan to delete Task log entry
"RTN","GMPLNTRT",161,0)
 U IO
"RTN","GMPLNTRT",162,0)
 S GMPLRTM=$$NOW^XLFDT,GMPLSITE=$S($$NAME^VASITE]"":$$NAME^VASITE,1:$P($$SITE^VASITE,U,2))
"RTN","GMPLNTRT",163,0)
 I '$D(@GMPLA) D  Q
"RTN","GMPLNTRT",164,0)
 . D HEADER("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTRT",165,0)
 . W:$$CONTINUE("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG) !
"RTN","GMPLNTRT",166,0)
 . W:$$CONTINUE("",GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG) "No Problems found for selected parameters...",!
"RTN","GMPLNTRT",167,0)
 . I ($E(IOST)="C"),($E(IOSL,1,3)'=999) S:'+$$STOP^GMPLUTL1("",1) DIRUT=1
"RTN","GMPLNTRT",168,0)
 S GMPLDIV=0
"RTN","GMPLNTRT",169,0)
 F  S GMPLDIV=$O(@GMPLA@(GMPLDIV)) Q:GMPLDIV']""  D  Q:$D(DIRUT)
"RTN","GMPLNTRT",170,0)
 . N GMPLRPR S GMPLRPR=""
"RTN","GMPLNTRT",171,0)
 . D HEADER(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTRT",172,0)
 . F  S GMPLRPR=$O(@GMPLA@(GMPLDIV,GMPLRPR)) Q:GMPLRPR']""  D  Q:$D(DIRUT)
"RTN","GMPLNTRT",173,0)
 . . N GMPLPT S GMPLPT=0
"RTN","GMPLNTRT",174,0)
 . . F  S GMPLPT=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT)) Q:GMPLPT']""  D  Q:$D(DIRUT)
"RTN","GMPLNTRT",175,0)
 . . . N GMPLMDT S GMPLMDT=0
"RTN","GMPLNTRT",176,0)
 . . . F  S GMPLMDT=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT)) Q:+GMPLMDT'>0  D  Q:$D(DIRUT)
"RTN","GMPLNTRT",177,0)
 . . . . N GMPLDA S GMPLDA=0
"RTN","GMPLNTRT",178,0)
 . . . . F  S GMPLDA=$O(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT,GMPLDA)) Q:+GMPLDA'>0  D  Q:$D(DIRUT)
"RTN","GMPLNTRT",179,0)
 . . . . . N GMPLD,GMPLNARR,GMPLPRNM,GMPLPTNM,GMPLSVC,GMPLCLOC,GMPLSCTC,GMPLICD,GMPLSTAT,GMPLNI
"RTN","GMPLNTRT",180,0)
 . . . . . S GMPLD=$G(@GMPLA@(GMPLDIV,GMPLRPR,GMPLPT,GMPLMDT,GMPLDA))
"RTN","GMPLNTRT",181,0)
 . . . . . S GMPLNARR=$$WRAP^GMPLX1($P(GMPLD,U),76),GMPLSVC=$P(GMPLD,U,2),GMPLCLOC=$P(GMPLD,U,3),GMPLSCTC=$P(GMPLD,U,4)
"RTN","GMPLNTRT",182,0)
 . . . . . S GMPLSTAT=$P(GMPLD,U,5),GMPLICD=$S(+GMPLSCTC:$$GETDX^GMPLX(GMPLSCTC,"SCT"),1:"")
"RTN","GMPLNTRT",183,0)
 . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTRT",184,0)
 . . . . . W $E($$NAME^GMPLUTL1(GMPLRPR,"LAST"),1,10),$$NAME^GMPLUTL1(GMPLRPR,",FI MI")
"RTN","GMPLNTRT",185,0)
 . . . . . W ?16,$E($$NAME^GMPLUTL1($P(GMPLPT,"|"),"LAST"),1,10),$$NAME^GMPLUTL1($P(GMPLPT,"|"),",FI MI"),?31," (",$P(GMPLPT,"|",2),")"
"RTN","GMPLNTRT",186,0)
 . . . . . W ?40,$$DATE^GMPLUTL1(GMPLMDT,"MM/DD/YY"),?50,GMPLSVC,?58,GMPLCLOC,?70,GMPLSTAT,!
"RTN","GMPLNTRT",187,0)
 . . . . . F GMPLNI=1:1:$L(GMPLNARR,"|") D  Q:$D(DIRUT)
"RTN","GMPLNTRT",188,0)
 . . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTRT",189,0)
 . . . . . . W ?2,$P(GMPLNARR,"|",GMPLNI),!
"RTN","GMPLNTRT",190,0)
 . . . . . I +$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0!$D(DIRUT) Q
"RTN","GMPLNTRT",191,0)
 . . . . . W ?2,"SCT: ",GMPLSCTC,?25," ==> ",?40,GMPLICD,!
"RTN","GMPLNTRT",192,0)
 . . . . . Q:(+$$CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)'>0)!$D(DIRUT)  W !
"RTN","GMPLNTRT",193,0)
 . Q:$D(DIRUT)
"RTN","GMPLNTRT",194,0)
 . I ($E(IOST)="C"),($E(IOSL,1,3)'=999) S:'+$$STOP^GMPLUTL1("",1) DIRUT=1
"RTN","GMPLNTRT",195,0)
 Q
"RTN","GMPLNTRT",196,0)
CONTINUE(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,GMPLPG) ; Evaluate relative page position
"RTN","GMPLNTRT",197,0)
 N GMPLY S GMPLY=1
"RTN","GMPLNTRT",198,0)
 I $Y'>(IOSL-3) G CONTX
"RTN","GMPLNTRT",199,0)
 I $E(IOST)="C" S GMPLY=+$$READ^GMPLUTL1("E") S:$D(DIRUT) GMPLY=0
"RTN","GMPLNTRT",200,0)
 I GMPLY'>0 G CONTX
"RTN","GMPLNTRT",201,0)
 D HEADER(GMPLDIV,GMPLRTM,GMPLEDT,GMPLLDT,.GMPLPG)
"RTN","GMPLNTRT",202,0)
CONTX Q GMPLY
"RTN","GMPLNTRT",203,0)
HEADER(DIVISION,GMPLRTM,GMPLEDT,GMPLLDT,GMPLPG) ; Write Report Header
"RTN","GMPLNTRT",204,0)
 N GMPLLINE,GMPLDTR S $P(GMPLLINE,"=",81)="",GMPLDTR=$$DATE^GMPLUTL1(GMPLEDT,"MM/DD/CCYY")_" to "_$$DATE^GMPLUTL1(GMPLLDT,"MM/DD/CCYY")
"RTN","GMPLNTRT",205,0)
 S GMPLPG=GMPLPG+1
"RTN","GMPLNTRT",206,0)
 W @IOF D JUSTIFY^GMPLUTL1("Page "_GMPLPG,"R") W !
"RTN","GMPLNTRT",207,0)
 W GMPLLINE,! D JUSTIFY^GMPLUTL1($$TITLE^GMPLUTL1("PROBLEM LIST NTRT MAPPING REPORT"),"C") W !
"RTN","GMPLNTRT",208,0)
 D JUSTIFY^GMPLUTL1(DIVISION,"C")
"RTN","GMPLNTRT",209,0)
 W !
"RTN","GMPLNTRT",210,0)
 W "for Problems Modified: ",GMPLDTR,?55,"Printed: ",$$DATE^GMPLUTL1(GMPLRTM,"MM/DD/CCYY HR:MIN"),!
"RTN","GMPLNTRT",211,0)
 W !
"RTN","GMPLNTRT",212,0)
 W "Provider",?16,"Patient",?40,"Modified",?50,"Service",?58,"Clinic",?70,"NTRT Map",!
"RTN","GMPLNTRT",213,0)
 W ?2,"Narrative",?70,"Status",!
"RTN","GMPLNTRT",214,0)
 W GMPLLINE,!
"RTN","GMPLNTRT",215,0)
 Q
"RTN","GMPLPRNT")
0^11^B33959958
"RTN","GMPLPRNT",1,0)
GMPLPRNT ; SLC/MKB,KER,TC -- Problem List prints/displays; 04/15/2002 ;06/08/12  16:13
"RTN","GMPLPRNT",2,0)
 ;;2.0;Problem List;**1,13,26,41,36**;Aug 25, 1994;Build 65
"RTN","GMPLPRNT",3,0)
 ;
"RTN","GMPLPRNT",4,0)
 ; External References
"RTN","GMPLPRNT",5,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLPRNT",6,0)
 ;   DBIA 10090  ^DIC(4
"RTN","GMPLPRNT",7,0)
 ;   DBIA 10086  ^%ZIS
"RTN","GMPLPRNT",8,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","GMPLPRNT",9,0)
 ;   DBIA 10089  ^%ZISC
"RTN","GMPLPRNT",10,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","GMPLPRNT",11,0)
 ;   DBIA 10026  ^DIR
"RTN","GMPLPRNT",12,0)
 ;   DBIA 10061  OERR^VADPT
"RTN","GMPLPRNT",13,0)
 ;   DBIA 10116  CLEAR^VALM1
"RTN","GMPLPRNT",14,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","GMPLPRNT",15,0)
 ;   DBIA 10103  $$NOW^XLFDT
"RTN","GMPLPRNT",16,0)
 ;   DBIA 10104  $$REPEAT^XLFSTR
"RTN","GMPLPRNT",17,0)
 ;   DBIA 10112  $$SITE^VASITE
"RTN","GMPLPRNT",18,0)
 ;
"RTN","GMPLPRNT",19,0)
EN ; Print/Display (Main)
"RTN","GMPLPRNT",20,0)
 N DIR,X,Y S VALMBCK=$S(VALMCC:"",1:"R") W !
"RTN","GMPLPRNT",21,0)
 I '(($L(GMPLVIEW("ACT")))!(GMPLVIEW("PROV"))!($L(GMPLVIEW("VIEW"),"/")>2)) S Y="A" G EN1
"RTN","GMPLPRNT",22,0)
 S DIR(0)="SAOM^C:CURRENT VIEW;A:ALL PROBLEMS;"
"RTN","GMPLPRNT",23,0)
 S DIR("A")="Print (C)urrently displayed problems only, or include (A)ll problems? "
"RTN","GMPLPRNT",24,0)
 S DIR("?",1)="Enter C to print a copy of your currently displayed view"
"RTN","GMPLPRNT",25,0)
 S DIR("?",2)="of this patient's list; to print a complete list of all"
"RTN","GMPLPRNT",26,0)
 S DIR("?",3)="active and inactive problems, which may be included in"
"RTN","GMPLPRNT",27,0)
 S DIR("?")="the patient's chart, select A."
"RTN","GMPLPRNT",28,0)
 D ^DIR G:$D(DTOUT)!($D(DUOUT))!(Y="") ENQ
"RTN","GMPLPRNT",29,0)
EN1 ;   Print View
"RTN","GMPLPRNT",30,0)
 W ! D @$S(Y="C":"LIST",1:"VAF")
"RTN","GMPLPRNT",31,0)
 I GMPRT'>0 W !!,"No problems found.",!,$C(7) H 1 G ENQ
"RTN","GMPLPRNT",32,0)
 D DEVICE G:$D(GMPQUIT) ENQ
"RTN","GMPLPRNT",33,0)
 D CLEAR^VALM1,PRT S VALMBCK="R"
"RTN","GMPLPRNT",34,0)
ENQ ;   Quit Print/Display
"RTN","GMPLPRNT",35,0)
 D KILL^GMPLX S VALMSG=$$MSG^GMPLX Q
"RTN","GMPLPRNT",36,0)
 ;
"RTN","GMPLPRNT",37,0)
VAF ; Build Chart Copy
"RTN","GMPLPRNT",38,0)
 N TOTAL,VIEW K GMPLCURR S (TOTAL,GMPRT)=0
"RTN","GMPLPRNT",39,0)
 Q:'$D(^AUPNPROB("AC",+GMPDFN))
"RTN","GMPLPRNT",40,0)
 S (VIEW("ACT"),VIEW("VIEW"))="",VIEW("PROV")=0
"RTN","GMPLPRNT",41,0)
 D GETPLIST^GMPLMGR1(.GMPRT,.TOTAL,.VIEW)
"RTN","GMPLPRNT",42,0)
 S GMPRT=TOTAL
"RTN","GMPLPRNT",43,0)
 Q
"RTN","GMPLPRNT",44,0)
 ;
"RTN","GMPLPRNT",45,0)
LIST ; Build Current View
"RTN","GMPLPRNT",46,0)
 S GMPLCURR=1,GMPRT=0 Q:+$G(GMPCOUNT)'>0  N I,IFN
"RTN","GMPLPRNT",47,0)
 W !,"One moment, please ..."
"RTN","GMPLPRNT",48,0)
 F I=0:0 S I=$O(^TMP("GMPLIDX",$J,I)) Q:I'>0  D
"RTN","GMPLPRNT",49,0)
 . S IFN=$P($G(^TMP("GMPLIDX",$J,I)),U,2) Q:IFN'>0
"RTN","GMPLPRNT",50,0)
 . S GMPRT=GMPRT+1,GMPRT(I)=IFN W "."
"RTN","GMPLPRNT",51,0)
 Q
"RTN","GMPLPRNT",52,0)
 ;
"RTN","GMPLPRNT",53,0)
DEVICE ; Get Device
"RTN","GMPLPRNT",54,0)
 S %ZIS="Q",%ZIS("B")="" D ^%ZIS I POP S GMPQUIT=1 G DQ
"RTN","GMPLPRNT",55,0)
 I '$D(GMPLCURR) K GMPRINT
"RTN","GMPLPRNT",56,0)
 I $D(IO("Q")) D
"RTN","GMPLPRNT",57,0)
 . S ZTRTN="PRT^GMPLPRNT",ZTDESC="PROBLEM LIST OF "_$P(GMPDFN,U,2)
"RTN","GMPLPRNT",58,0)
 . S (ZTSAVE("GMPRT"),ZTSAVE("GMPRT("),ZTSAVE("GMPDFN"),ZTSAVE("GMPVAMC"))=""
"RTN","GMPLPRNT",59,0)
 . S:$D(GMPLCURR) ZTSAVE("GMPLCURR")="" S ZTDTH=$H
"RTN","GMPLPRNT",60,0)
 . D ^%ZTLOAD,HOME^%ZIS S:$D(ZTSK) GMPQUIT=1
"RTN","GMPLPRNT",61,0)
DQ ;   Quit Device
"RTN","GMPLPRNT",62,0)
 K IO("Q"),POP,%ZIS,ZTRTN,ZTDESC,ZTSAVE,ZTSK
"RTN","GMPLPRNT",63,0)
 Q
"RTN","GMPLPRNT",64,0)
 ;
"RTN","GMPLPRNT",65,0)
HDR ; Header Code
"RTN","GMPLPRNT",66,0)
 N PAGE S PAGE="Page: "_GMPLPAGE,GMPLPAGE=GMPLPAGE+1
"RTN","GMPLPRNT",67,0)
 W $C(13),$$REPEAT^XLFSTR("-",79),!
"RTN","GMPLPRNT",68,0)
 I IOST?1"P".E W:$D(GMPLCURR) "** NOT for " W "Medical Record" W:$D(GMPLCURR) " **"
"RTN","GMPLPRNT",69,0)
 I IOST'?1"P".E W $P(GMPDFN,U,2)_"  ("_$P(GMPDFN,U,3)_")"
"RTN","GMPLPRNT",70,0)
 W ?41,"|  " W:$D(GMPLCURR) "PARTIAL "
"RTN","GMPLPRNT",71,0)
 W "PROBLEM LIST",?(79-$L(PAGE)),PAGE,!
"RTN","GMPLPRNT",72,0)
 W $$REPEAT^XLFSTR("-",79),!
"RTN","GMPLPRNT",73,0)
 W !,"       Date",?63,"Date of   Date"
"RTN","GMPLPRNT",74,0)
 W !,"     Recorded  Problems",?64,"Onset  Resolved"
"RTN","GMPLPRNT",75,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","GMPLPRNT",76,0)
 Q
"RTN","GMPLPRNT",77,0)
 ;
"RTN","GMPLPRNT",78,0)
FTR ; Footer Code
"RTN","GMPLPRNT",79,0)
 N I,SITE,DFN,VA,VADM,LOC,DATE,FORM
"RTN","GMPLPRNT",80,0)
 F I=1:1:(IOSL-$Y-6) W !
"RTN","GMPLPRNT",81,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,U,2)
"RTN","GMPLPRNT",82,0)
 S:SITE'["VAMC" SITE=SITE_" VAMC"
"RTN","GMPLPRNT",83,0)
 S DFN=+GMPDFN D OERR^VADPT
"RTN","GMPLPRNT",84,0)
 S LOC="Pt Loc: "_$S(VAIN(4)]"":$P(VAIN(4),U,2)_"  "_VAIN(5),1:"OUTPATIENT") K VAIN
"RTN","GMPLPRNT",85,0)
 I $L(LOC)>51 S LOC=$E(LOC,1,51),FORM="VAF10-141"
"RTN","GMPLPRNT",86,0)
 E  S FORM="VA FORM 10-1415"
"RTN","GMPLPRNT",87,0)
 W !,$S($D(GMPLFLAG):"$ = Requires verification by provider",1:"")
"RTN","GMPLPRNT",88,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","GMPLPRNT",89,0)
 W !,$P(GMPDFN,U,2),?(79-$L(SITE)\2),SITE
"RTN","GMPLPRNT",90,0)
 S DATE=$$FMTE^XLFDT($E(($$NOW^XLFDT),1,12),2)
"RTN","GMPLPRNT",91,0)
 S DATE="Printed:"_$P(DATE,"@")_" "_$P(DATE,"@",2)
"RTN","GMPLPRNT",92,0)
 W ?(79-$L(DATE)),DATE
"RTN","GMPLPRNT",93,0)
 W !,VA("PID"),?(79-$L(LOC)\2),LOC,?(79-$L(FORM)),FORM
"RTN","GMPLPRNT",94,0)
 W !,$$REPEAT^XLFSTR("-",79),@IOF
"RTN","GMPLPRNT",95,0)
 Q
"RTN","GMPLPRNT",96,0)
 ;
"RTN","GMPLPRNT",97,0)
RETURN() ; End of page
"RTN","GMPLPRNT",98,0)
 N X,Y,DIR,I F I=1:1:(IOSL-$Y-3) W !
"RTN","GMPLPRNT",99,0)
 S DIR(0)="E" D ^DIR
"RTN","GMPLPRNT",100,0)
 Q +Y
"RTN","GMPLPRNT",101,0)
 ;
"RTN","GMPLPRNT",102,0)
PRT ; Body of Problem List
"RTN","GMPLPRNT",103,0)
 U IO N I,IFN,GMPLPAGE,GMPLFLAG S GMPLPAGE=1 D HDR
"RTN","GMPLPRNT",104,0)
 F I=0:0 S I=$O(GMPRT(I)) Q:I'>0  D  Q:$D(GMPQUIT)
"RTN","GMPLPRNT",105,0)
 . S IFN=GMPRT(I) Q:IFN'>0
"RTN","GMPLPRNT",106,0)
 . D PROB(IFN,I)
"RTN","GMPLPRNT",107,0)
 D FTR:IOST?1"P".E I '$D(GMPQUIT),IOST?1"C".E S I=$$RETURN
"RTN","GMPLPRNT",108,0)
 I $D(ZTQUEUED) S ZTREQ="@" K GMPDFN,GMPLCURR,GMPQUIT,GMPRT
"RTN","GMPLPRNT",109,0)
 D ^%ZISC
"RTN","GMPLPRNT",110,0)
 Q
"RTN","GMPLPRNT",111,0)
 ;
"RTN","GMPLPRNT",112,0)
PROB(DA,NUM) ; Get Problem Text Line
"RTN","GMPLPRNT",113,0)
 N GMPL0,GMPL1,GMPL803,ONSET,DATE,TEXT,NOTES,J,RESOLVED,X,LINES,PROB,SCS,SP
"RTN","GMPLPRNT",114,0)
 S GMPL0=$G(^AUPNPROB(DA,0)),GMPL1=$G(^(1)),GMPL803=$G(^(803,0)) Q:GMPL0=""  Q:GMPL1=""
"RTN","GMPLPRNT",115,0)
 S ONSET=$P(GMPL0,U,13),DATE=$P(GMPL1,U,9),RESOLVED=$P(GMPL1,U,7)
"RTN","GMPLPRNT",116,0)
 D SCS^GMPLX1(+DA,.SCS) S SP=$G(SCS(3))
"RTN","GMPLPRNT",117,0)
 I 'DATE S DATE=$P(GMPL0,U,8)
"RTN","GMPLPRNT",118,0)
 S PROB=$$PROBTEXT^GMPLX(DA)
"RTN","GMPLPRNT",119,0)
 I PROB[" (SCT"&($L($G(GMPL803))>0) D
"RTN","GMPLPRNT",120,0)
 . S PROB=PROB_" (ICD-9-CM "_$P($$ICDDX^ICDCODE(+GMPL0),U,2)
"RTN","GMPLPRNT",121,0)
 . N IEN S IEN=0 F  S IEN=$O(^AUPNPROB(DA,803,IEN)) Q:'+IEN  D
"RTN","GMPLPRNT",122,0)
 . . S PROB=PROB_"/"_$P($G(^AUPNPROB(DA,803,IEN,0)),U)
"RTN","GMPLPRNT",123,0)
 . S PROB=PROB_")"
"RTN","GMPLPRNT",124,0)
 E  I PROB[" (SCT"&($G(GMPL803)="") S PROB=PROB_" (ICD-9-CM "_$P($$ICDDX^ICDCODE(+GMPL0),U,2)_")"
"RTN","GMPLPRNT",125,0)
 I $P($G(^AUPNPROB(DA,1)),"^",14)="A" S PROB="*"_PROB
"RTN","GMPLPRNT",126,0)
 E  S PROB=" "_PROB
"RTN","GMPLPRNT",127,0)
 D WRAP^GMPLX(PROB,50,.TEXT)
"RTN","GMPLPRNT",128,0)
 D NOTES(DA) S LINES=TEXT+NOTES+1
"RTN","GMPLPRNT",129,0)
 I ($Y+LINES)>(IOSL-7) D  Q:$D(GMPQUIT)
"RTN","GMPLPRNT",130,0)
 . I IOST?1"P".E D FTR,HDR Q
"RTN","GMPLPRNT",131,0)
 . I $$RETURN W @IOF D HDR Q
"RTN","GMPLPRNT",132,0)
 . S GMPQUIT=1
"RTN","GMPLPRNT",133,0)
PR1 ; Write Problem Text Line
"RTN","GMPLPRNT",134,0)
 W !!,$E("   ",1,3-$L(NUM))_NUM_". "_$J($$EXTDT^GMPLX(DATE),8)
"RTN","GMPLPRNT",135,0)
 I $P(GMPL1,U,2)="T",$P($G(^GMPL(125.99,1,0)),U,2) W ?14,"$" S GMPLFLAG=1
"RTN","GMPLPRNT",136,0)
 W ?15,TEXT(1),?62,$J($$EXTDT^GMPLX(ONSET),8)
"RTN","GMPLPRNT",137,0)
 I $P(GMPL0,U,12)="I" W ?71,$S(RESOLVED:$J($$EXTDT^GMPLX(RESOLVED),8),1:"unknown")
"RTN","GMPLPRNT",138,0)
 I TEXT>1 F J=2:1:TEXT W !?15,TEXT(J)
"RTN","GMPLPRNT",139,0)
 Q:'NOTES  S DATE=$P(DATE,".")
"RTN","GMPLPRNT",140,0)
 F J=1:1:NOTES S X=$S(DATE'=$P(NOTES(J),U):$$EXTDT^GMPLX($P(NOTES(J),U)),1:"") W !?5,$J(X,8),?17,$P(NOTES(J),U,2) S DATE=$P(NOTES(J),U)
"RTN","GMPLPRNT",141,0)
 Q
"RTN","GMPLPRNT",142,0)
NOTES(IFN) ; Place Comments in NOTES array
"RTN","GMPLPRNT",143,0)
 N I,NOTE,DATE,TEXT,FAC,NIFN S (NOTES,I)=0
"RTN","GMPLPRNT",144,0)
 Q:'$D(^AUPNPROB(IFN,11))
"RTN","GMPLPRNT",145,0)
 S FAC=$O(^AUPNPROB(IFN,11,"B",+GMPVAMC,0)) Q:FAC'>0
"RTN","GMPLPRNT",146,0)
 F NIFN=0:0 S NIFN=$O(^AUPNPROB(IFN,11,FAC,11,"B",NIFN)) Q:NIFN'>0  D
"RTN","GMPLPRNT",147,0)
 . S NOTE=$G(^AUPNPROB(IFN,11,FAC,11,NIFN,0)) Q:NOTE=""
"RTN","GMPLPRNT",148,0)
 . S DATE=$P(NOTE,U,5),TEXT=$P(NOTE,U,3),I=I+1
"RTN","GMPLPRNT",149,0)
 . S NOTES(I)=$P(DATE,".")_U_TEXT
"RTN","GMPLPRNT",150,0)
 S NOTES=I
"RTN","GMPLPRNT",151,0)
 Q
"RTN","GMPLSAVE")
0^6^B95816681
"RTN","GMPLSAVE",1,0)
GMPLSAVE ; ISL/MKB,KER,JER -- Save Problem List data ;08/02/12  08:47
"RTN","GMPLSAVE",2,0)
 ;;2.0;Problem List;**26,31,35,37,38,36**;Aug 25, 1994;Build 65
"RTN","GMPLSAVE",3,0)
 ;
"RTN","GMPLSAVE",4,0)
 ; External References
"RTN","GMPLSAVE",5,0)
 ;   DBIA  3990  $$CODEN^ICDCODE
"RTN","GMPLSAVE",6,0)
 ;   DBIA 10018  ^DIE
"RTN","GMPLSAVE",7,0)
 ;   DBIA 10013  ^DIK
"RTN","GMPLSAVE",8,0)
 ;   DBIA 10013  IX1^DIK
"RTN","GMPLSAVE",9,0)
 ;   DBIA 10103  $$HTFM^XLFDT
"RTN","GMPLSAVE",10,0)
 ;
"RTN","GMPLSAVE",11,0)
EN ; Save Changes made to Existing Problem
"RTN","GMPLSAVE",12,0)
 N FLD,NOW,CHNGE,I,NIFN,TEXT,OLDTEXT,FAC,NODE,AUDITED,DR,DA,DIE,DIK,GMPICD,GMPBULL
"RTN","GMPLSAVE",13,0)
 S:'GMPORIG(.01) GMPORIG(.01)=$$NOS^GMPLX
"RTN","GMPLSAVE",14,0)
 S:'GMPFLD(.01) GMPFLD(.01)=$$NOS^GMPLX
"RTN","GMPLSAVE",15,0)
 S GMPICD=$P($G(GMPFLD(.01)),U,2)
"RTN","GMPLSAVE",16,0)
 S:$D(GMPFLD(.01)) GMPFLD(.01)=+GMPFLD(.01)
"RTN","GMPLSAVE",17,0)
 S:$P(GMPFLD(.01),U)=-1 GMPFLD(.01)=$$NOS^GMPLX ;chk for error from ICD
"RTN","GMPLSAVE",18,0)
 S:'GMPORIG(1.01) GMPORIG(1.01)="1^Unresolved"
"RTN","GMPLSAVE",19,0)
 S:'GMPFLD(1.01) GMPFLD(1.01)="1^Unresolved"
"RTN","GMPLSAVE",20,0)
 I $G(GMPFLD(1.01))["SNOMED CT" D
"RTN","GMPLSAVE",21,0)
 . N SCTS,SCTC,SCTD,SCTT
"RTN","GMPLSAVE",22,0)
 . S SCTS=GMPFLD(1.01)
"RTN","GMPLSAVE",23,0)
 . S SCTT=$P($P(SCTS," (SNOMED CT "),U,2)
"RTN","GMPLSAVE",24,0)
 . S SCTC=$P($P(SCTS,"SNOMED CT ",2),")"),GMPFLD(80001)=SCTC_U_SCTC
"RTN","GMPLSAVE",25,0)
 . S SCTD=$$GETDES^LEXTRAN1("SCT",SCTT)
"RTN","GMPLSAVE",26,0)
 . I +SCTD=1 S SCTD=$P(SCTD,U,2),GMPFLD(80002)=SCTD_U_SCTD
"RTN","GMPLSAVE",27,0)
 . I (+$G(GMPFLD(.01))=+$$NOS^GMPLX) S GMPFLD(80005)="1^PENDING"
"RTN","GMPLSAVE",28,0)
 I $G(GMPFLD(1.01))["VHAT" D
"RTN","GMPLSAVE",29,0)
 . N VHATC,VHATD,VHATS,VHATT
"RTN","GMPLSAVE",30,0)
 . S VHATS=GMPFLD(1.01)
"RTN","GMPLSAVE",31,0)
 . S VHATT=$P($P(VHATS," (VHAT "),U,2)
"RTN","GMPLSAVE",32,0)
 . S VHATC=$P($P(VHATS,"VHAT ",2),")")
"RTN","GMPLSAVE",33,0)
 . S GMPFLD(80003)=VHATC_U_VHATC
"RTN","GMPLSAVE",34,0)
 . S VHATD=$$GETDES^LEXTRAN1("VHAT",VHATT)
"RTN","GMPLSAVE",35,0)
 . I +VHATD=1 S VHATD=$P(VHATD,U,2),GMPFLD(80004)=VHATD_U_VHATD
"RTN","GMPLSAVE",36,0)
 S:'GMPFLD(.05) I=$P(GMPFLD(.05),U,2),GMPFLD(.05)=$$PROVNARR^GMPLX(I,+GMPFLD(1.01))
"RTN","GMPLSAVE",37,0)
 S NOW=$$HTFM^XLFDT($H),AUDITED=0
"RTN","GMPLSAVE",38,0)
 S DR="1.02////"_$S('$D(GMPLUSER):"T",1:GMPFLD(1.02))
"RTN","GMPLSAVE",39,0)
 I GMPORIG(1.02)="T",GMPFLD(1.02)="P" D
"RTN","GMPLSAVE",40,0)
 . S CHNGE=GMPIFN_"^1.02^"_NOW_U_DUZ_"^T^P^Verified^"_DUZ
"RTN","GMPLSAVE",41,0)
 . D AUDIT^GMPLX(CHNGE,"")
"RTN","GMPLSAVE",42,0)
 I $P($G(GMPORIG(.12)),U)="I",$P(GMPFLD(.12),U)="A" D REACTV S AUDITED=1
"RTN","GMPLSAVE",43,0)
 I +$G(GMPORIG(1.01))'=(+GMPFLD(1.01)) D REFORM S AUDITED=1
"RTN","GMPLSAVE",44,0)
 S GMPFLD(.01)=+GMPFLD(.01) ;to remove text left by ?? lex (~)
"RTN","GMPLSAVE",45,0)
 I (+$G(GMPFLD(.01))'=+$$NOS^GMPLX),($G(GMPROV)=.5) S GMPFLD(80005)="2^COMPLETED"
"RTN","GMPLSAVE",46,0)
 F FLD=.01,.05,.12,.13,1.01,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,80001,80002,80003,80004,80005 D
"RTN","GMPLSAVE",47,0)
 . Q:'$D(GMPFLD(FLD))  Q:$P($G(GMPORIG(FLD)),U)=$P($G(GMPFLD(FLD)),U)
"RTN","GMPLSAVE",48,0)
 . S DR=DR_";"_FLD_"////"_$S($P(GMPFLD(FLD),U)'="":$P(GMPFLD(FLD),U),1:"@")
"RTN","GMPLSAVE",49,0)
 . Q:AUDITED  S CHNGE=GMPIFN_U_FLD_U_NOW_U_DUZ_U_$P(GMPORIG(FLD),U)_U_$P(GMPFLD(FLD),U)_"^^"_+$G(GMPROV)
"RTN","GMPLSAVE",50,0)
 . D AUDIT^GMPLX(CHNGE,"")
"RTN","GMPLSAVE",51,0)
 S DA=GMPIFN,DIE="^AUPNPROB(" D ^DIE S GMPSAVED=1
"RTN","GMPLSAVE",52,0)
 D COEXPRS(GMPIFN,GMPICD)
"RTN","GMPLSAVE",53,0)
 I (GMPICD=$P($$NOS^GMPLX,U,2)),(+$P($G(GMPFLD(80001)),U)>0) D NTRTBULL(.GMPBULL,$P(GMPFLD(1.01),U,2),$P($G(GMPFLD(80001)),U,2),$G(GMPSRCH))
"RTN","GMPLSAVE",54,0)
NOTES ; Save Changes to Notes
"RTN","GMPLSAVE",55,0)
 F I=0:0 S I=$O(GMPORIG(10,I)) Q:I'>0  I GMPORIG(10,I)'=GMPFLD(10,I) D
"RTN","GMPLSAVE",56,0)
 . S NIFN=+GMPFLD(10,I),FAC=$P(GMPFLD(10,I),U,2),TEXT=$P(GMPFLD(10,I),U,3),OLDTEXT=$P(GMPORIG(10,I),U,3)
"RTN","GMPLSAVE",57,0)
 . S NODE=$G(^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0))
"RTN","GMPLSAVE",58,0)
 . I TEXT'="" S $P(^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0),U,3)=TEXT D
"RTN","GMPLSAVE",59,0)
 .. I TEXT=OLDTEXT Q
"RTN","GMPLSAVE",60,0)
 .. S CHNGE=GMPIFN_"^1101^"_NOW_U_DUZ_"^C^^Note Modified^"_+$G(GMPROV)
"RTN","GMPLSAVE",61,0)
 . I TEXT=OLDTEXT Q
"RTN","GMPLSAVE",62,0)
 . I TEXT="" S CHNGE=GMPIFN_"^1101^"_NOW_U_DUZ_"^A^^Deleted Note^"_+$G(GMPROV)
"RTN","GMPLSAVE",63,0)
 . D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",64,0)
 . I TEXT="" D
"RTN","GMPLSAVE",65,0)
 .. S DIK="^AUPNPROB("_GMPIFN_",11,"_FAC_",11,"
"RTN","GMPLSAVE",66,0)
 .. S DA(2)=GMPIFN,DA(1)=FAC,DA=NIFN D ^DIK
"RTN","GMPLSAVE",67,0)
 I $D(GMPFLD(10,"NEW"))>9 D NEWNOTE
"RTN","GMPLSAVE",68,0)
EXIT ; Quit Saving Changes
"RTN","GMPLSAVE",69,0)
 D:$G(GMPSAVED) DTMOD^GMPLX(GMPIFN)
"RTN","GMPLSAVE",70,0)
 Q
"RTN","GMPLSAVE",71,0)
 ;
"RTN","GMPLSAVE",72,0)
REFORM ; Audit Entry that has been Reformulated
"RTN","GMPLSAVE",73,0)
 S CHNGE=GMPIFN_"^1.01^"_NOW_U_DUZ_U_+GMPORIG(1.01)_U_+GMPFLD(1.01)_"^Reformulated^"_+$G(GMPROV)
"RTN","GMPLSAVE",74,0)
 S NODE=$G(^AUPNPROB(GMPIFN,0))_U_$G(^AUPNPROB(GMPIFN,1))
"RTN","GMPLSAVE",75,0)
 D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",76,0)
 Q
"RTN","GMPLSAVE",77,0)
 ;
"RTN","GMPLSAVE",78,0)
REACTV ; Audit Entry that has been Reactivated
"RTN","GMPLSAVE",79,0)
 S CHNGE=GMPIFN_"^.12^"_NOW_U_DUZ_"^I^A^Reactivated^"_+$G(GMPROV)
"RTN","GMPLSAVE",80,0)
 S NODE=$G(^AUPNPROB(GMPIFN,0))_U_$G(^AUPNPROB(GMPIFN,1))
"RTN","GMPLSAVE",81,0)
 D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",82,0)
 Q
"RTN","GMPLSAVE",83,0)
 ;
"RTN","GMPLSAVE",84,0)
NEW ; Save Collected Values in new Problem Entry
"RTN","GMPLSAVE",85,0)
 ;   Output   DA (left defined)
"RTN","GMPLSAVE",86,0)
 N DATA,APCDLOOK,APCDALVR,NUM,I,DIK,GMPICD,GMPIFN,X
"RTN","GMPLSAVE",87,0)
 S:'GMPFLD(.01) GMPFLD(.01)=$$NOS^GMPLX
"RTN","GMPLSAVE",88,0)
 S:$P(+GMPFLD(.01),U)=-1 GMPFLD(.01)=$$NOS^GMPLX ;chk for error from ICD
"RTN","GMPLSAVE",89,0)
 S GMPICD=$P(GMPFLD(.01),U,2)
"RTN","GMPLSAVE",90,0)
 S GMPFLD(.01)=+GMPFLD(.01) ;to remove text left by ?? lex (~)
"RTN","GMPLSAVE",91,0)
 S:'GMPFLD(1.01) GMPFLD(1.01)="1^Unresolved"
"RTN","GMPLSAVE",92,0)
 S:'GMPFLD(.05) X=$P(GMPFLD(.05),U,2),GMPFLD(.05)=$$PROVNARR^GMPLX(X,+GMPFLD(1.01))
"RTN","GMPLSAVE",93,0)
 S:$G(GMPFLD(1.09))']"" GMPFLD(1.09)=$$DT^XLFDT
"RTN","GMPLSAVE",94,0)
 I $G(GMPFLD(1.01))["SNOMED CT" D
"RTN","GMPLSAVE",95,0)
 . N SCTC,SCTD,SCTS,SCTT
"RTN","GMPLSAVE",96,0)
 . S SCTS=GMPFLD(1.01)
"RTN","GMPLSAVE",97,0)
 . S SCTT=$P($P(SCTS," (SNOMED CT "),U,2)
"RTN","GMPLSAVE",98,0)
 . S SCTC=$P($P(SCTS,"SNOMED CT ",2),")")
"RTN","GMPLSAVE",99,0)
 . S GMPFLD(80001)=SCTC_U_SCTC
"RTN","GMPLSAVE",100,0)
 . S SCTD=$$GETDES^LEXTRAN1("SCT",SCTT)
"RTN","GMPLSAVE",101,0)
 . I +SCTD=1 S SCTD=$P(SCTD,U,2),GMPFLD(80002)=SCTD_U_SCTD
"RTN","GMPLSAVE",102,0)
 I $G(GMPFLD(1.01))["VHAT" D
"RTN","GMPLSAVE",103,0)
 . N VHATC,VHATD,VHATS,VHATT
"RTN","GMPLSAVE",104,0)
 . S VHATS=GMPFLD(1.01)
"RTN","GMPLSAVE",105,0)
 . S VHATT=$P($P(VHATS," (VHAT "),U,2)
"RTN","GMPLSAVE",106,0)
 . S VHATC=$P($P(VHATS,"VHAT ",2),")")
"RTN","GMPLSAVE",107,0)
 . S GMPFLD(80003)=VHATC_U_VHATC
"RTN","GMPLSAVE",108,0)
 . S VHATD=$$GETDES^LEXTRAN1("VHAT",VHATT)
"RTN","GMPLSAVE",109,0)
 . I +VHATD=1 S VHATD=$P(VHATD,U,2),GMPFLD(80004)=VHATD_U_VHATD
"RTN","GMPLSAVE",110,0)
 S DA=$$NEWPROB(+GMPFLD(.01),+GMPDFN) Q:DA'>0
"RTN","GMPLSAVE",111,0)
 S NUM=$$NEXTNMBR(+GMPDFN,+GMPVAMC),GMPSAVED=1 S:'NUM NUM=""
"RTN","GMPLSAVE",112,0)
 ;   Set Node 0
"RTN","GMPLSAVE",113,0)
 S DATA=^AUPNPROB(DA,0)_U_DT_"^^"_$P(GMPFLD(.05),U)_U_+GMPVAMC_U_+NUM_U_DT_"^^^^"_$P(GMPFLD(.12),U)_U_$P(GMPFLD(.13),U)
"RTN","GMPLSAVE",114,0)
 S ^AUPNPROB(DA,0)=DATA
"RTN","GMPLSAVE",115,0)
 ;   Set Node 1
"RTN","GMPLSAVE",116,0)
 S DATA=$P(GMPFLD(1.01),U) F I=1.02:.01:1.18 S DATA=DATA_U_$S($P($G(GMPFLD(+I)),U)="@":"",1:$P($G(GMPFLD(+I)),U))
"RTN","GMPLSAVE",117,0)
 S ^AUPNPROB(DA,1)=DATA
"RTN","GMPLSAVE",118,0)
 ;   Set Node 800
"RTN","GMPLSAVE",119,0)
 I $S($L($P($G(GMPFLD(80001)),U)):1,$L($P($G(GMPFLD(80003)),U)):1,$L($P($G(GMPFLD(80004)),U)):1,$L($P($G(GMPFLD(80005)),U)):1,1:0) D
"RTN","GMPLSAVE",120,0)
 . I $P($G(GMPFLD(.01)),U)=$P($$NOS^GMPLX,U) S GMPFLD(80005)="1^PENDING"
"RTN","GMPLSAVE",121,0)
 . S DATA=$P($G(GMPFLD(80001)),U)_U_$P($G(GMPFLD(80002)),U)_U_$P($G(GMPFLD(80003)),U)_U_$P($G(GMPFLD(80004)),U)_U_$P($G(GMPFLD(80005)),U)
"RTN","GMPLSAVE",122,0)
 . S ^AUPNPROB(DA,800)=DATA
"RTN","GMPLSAVE",123,0)
 ;   Set Node 801
"RTN","GMPLSAVE",124,0)
 I $S($L($P($G(GMPFLD(80101)),U)):1,$L($P($G(GMPFLD(80102)),U)):1,1:0) D
"RTN","GMPLSAVE",125,0)
 . S DATA=$P($G(GMPFLD(80101)),U)_U_$P($G(GMPFLD(80102)),U)
"RTN","GMPLSAVE",126,0)
 . S ^AUPNPROB(DA,801)=DATA
"RTN","GMPLSAVE",127,0)
 ;   Handle multiple ICDs
"RTN","GMPLSAVE",128,0)
 D COEXPRS(DA,GMPICD)
"RTN","GMPLSAVE",129,0)
 ;   Set X-Refs
"RTN","GMPLSAVE",130,0)
 S DIK="^AUPNPROB(",(APCDLOOK,APCDALVR)=1 D IX1^DIK
"RTN","GMPLSAVE",131,0)
 I $D(GMPFLD(10,"NEW"))>9 S GMPIFN=DA D NEWNOTE
"RTN","GMPLSAVE",132,0)
 I (GMPICD=$P($$NOS^GMPLX,U,2)),(+$P($G(GMPFLD(80001)),U)>0) D NTRTBULL(.GMPBULL,$P(GMPFLD(1.01),U,2),$P($G(GMPFLD(80001)),U,2),$G(GMPSRCH))
"RTN","GMPLSAVE",133,0)
 ; broadcast event
"RTN","GMPLSAVE",134,0)
 N DFN S GMPIFN=DA,DFN=+GMPDFN
"RTN","GMPLSAVE",135,0)
 S X=+$O(^ORD(101,"B","GMPL EVENT",0))_";ORD(101," D:X EN1^XQOR
"RTN","GMPLSAVE",136,0)
 Q
"RTN","GMPLSAVE",137,0)
 ;
"RTN","GMPLSAVE",138,0)
NEWPROB(ICD,DFN) ; Creates New Problem Entry in file #9000011
"RTN","GMPLSAVE",139,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","GMPLSAVE",140,0)
 L +^AUPNPROB(0):1 I '$T D  Q -1
"RTN","GMPLSAVE",141,0)
 . W !!,"Someone else is currently editing this file."
"RTN","GMPLSAVE",142,0)
 . W !,"Please try again later.",!
"RTN","GMPLSAVE",143,0)
 S HDR=$G(^AUPNPROB(0)) Q:HDR="" -1
"RTN","GMPLSAVE",144,0)
 S LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",145,0)
 F I=(LAST+1):1 Q:'$D(^AUPNPROB(I,0))
"RTN","GMPLSAVE",146,0)
 S DA=I,^AUPNPROB(DA,0)=ICD_U_DFN
"RTN","GMPLSAVE",147,0)
 S ^AUPNPROB("B",ICD,DA)="",^AUPNPROB("AC",DFN,DA)=""
"RTN","GMPLSAVE",148,0)
 S $P(^AUPNPROB(0),U,3,4)=DA_U_(TOTAL+1) L -^AUPNPROB(0)
"RTN","GMPLSAVE",149,0)
 Q DA
"RTN","GMPLSAVE",150,0)
 ;
"RTN","GMPLSAVE",151,0)
NEWNOTE ; Creates New Note Entries for Problem
"RTN","GMPLSAVE",152,0)
 ;   Requires GMPIFN   Pointer to Problem
"RTN","GMPLSAVE",153,0)
 ;            GMPROV   Current Provider
"RTN","GMPLSAVE",154,0)
 ;            GMPVAMC  Facility
"RTN","GMPLSAVE",155,0)
 N HDR,LAST,TOTAL,I,FAC,NIFN
"RTN","GMPLSAVE",156,0)
 L +^AUPNPROB(GMPIFN,11):1 I '$T Q
"RTN","GMPLSAVE",157,0)
 S FAC=+$O(^AUPNPROB(GMPIFN,11,"B",GMPVAMC,0)) I 'FAC D
"RTN","GMPLSAVE",158,0)
 . S:'$D(^AUPNPROB(GMPIFN,11,0)) ^(0)="^9000011.11PA^^"
"RTN","GMPLSAVE",159,0)
 . S HDR=^AUPNPROB(GMPIFN,11,0),LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",160,0)
 . F I=(LAST+1):1 Q:'$D(^AUPNPROB(GMPIFN,11,I,0))
"RTN","GMPLSAVE",161,0)
 . S ^AUPNPROB(GMPIFN,11,I,0)=GMPVAMC,^AUPNPROB(GMPIFN,11,"B",GMPVAMC,I)=""
"RTN","GMPLSAVE",162,0)
 . S FAC=I,$P(^AUPNPROB(GMPIFN,11,0),U,3,4)=FAC_U_(TOTAL+1)
"RTN","GMPLSAVE",163,0)
 I FAC'>0 G NNQ
"RTN","GMPLSAVE",164,0)
NN1 ; Get New Note
"RTN","GMPLSAVE",165,0)
 S:'$D(^AUPNPROB(GMPIFN,11,FAC,11,0)) ^(0)="^9000011.1111IA^^"
"RTN","GMPLSAVE",166,0)
 S HDR=^AUPNPROB(GMPIFN,11,FAC,11,0),LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",167,0)
 F I=(LAST+1):1 Q:'$D(^AUPNPROB(GMPIFN,11,FAC,11,I,0))
"RTN","GMPLSAVE",168,0)
 S NIFN=I
"RTN","GMPLSAVE",169,0)
 F I=0:0 S I=$O(GMPFLD(10,"NEW",I)) Q:I'>0  D
"RTN","GMPLSAVE",170,0)
 . S ^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0)=NIFN_"^^"_GMPFLD(10,"NEW",I)_"^A^"_DT_U_+$G(GMPROV)
"RTN","GMPLSAVE",171,0)
 . S ^AUPNPROB(GMPIFN,11,FAC,11,"B",NIFN,NIFN)=""
"RTN","GMPLSAVE",172,0)
 . S TOTAL=TOTAL+1,LAST=NIFN,NIFN=NIFN+1
"RTN","GMPLSAVE",173,0)
 S $P(^AUPNPROB(GMPIFN,11,FAC,11,0),U,3,4)=LAST_U_TOTAL
"RTN","GMPLSAVE",174,0)
NNQ ; Quit Getting New Notes
"RTN","GMPLSAVE",175,0)
 L -^AUPNPROB(GMPIFN,11)
"RTN","GMPLSAVE",176,0)
 Q
"RTN","GMPLSAVE",177,0)
 ;
"RTN","GMPLSAVE",178,0)
NEXTNMBR(DFN,VAMC) ; Returns Next Available Problem Number
"RTN","GMPLSAVE",179,0)
 N I,J,NUM S NUM=1,I="" I '$D(^AUPNPROB("AA",DFN,VAMC)) Q NUM
"RTN","GMPLSAVE",180,0)
 F  S I=$O(^AUPNPROB("AA",DFN,VAMC,I)) Q:I=""  S J=$E(I,2,999),NUM=+J
"RTN","GMPLSAVE",181,0)
 S NUM=NUM+1
"RTN","GMPLSAVE",182,0)
 Q NUM
"RTN","GMPLSAVE",183,0)
NTRTBULL(GMPY,GMPTERM,GMPSCT,GMPSRCH) ; Send NTRT Request bulletin to NTRT mailgroup
"RTN","GMPLSAVE",184,0)
 N GMPSITE,GMPSVC,GMPUSER,GMPWRAP,XMBNM,XMDUZ,XMY,XMB,XMZ S GMPSITE=$$SITE^VASITE
"RTN","GMPLSAVE",185,0)
 I '$L(GMPTERM) S GMPY="0^Empty String - a valid term must be sent." Q
"RTN","GMPLSAVE",186,0)
 I '+$G(DUZ)!'$D(^VA(200,+$G(DUZ))) S GMPY="0^A valid user must be identified." Q
"RTN","GMPLSAVE",187,0)
 I '+$G(GMPSCT) S GMPSCT="N/A"
"RTN","GMPLSAVE",188,0)
 D USERINFO^XUSRB2(.GMPUSER) S GMPSVC=$G(GMPUSER(5))
"RTN","GMPLSAVE",189,0)
 S XMB="GMPL PROBLEM NTRT BULLETIN"
"RTN","GMPLSAVE",190,0)
 S XMDUZ="GMPL PROBLEM NTRT BULLETIN"
"RTN","GMPLSAVE",191,0)
 S XMY("G.PROBLEM LIST NTRT@forum.domain.ext")=""
"RTN","GMPLSAVE",192,0)
 S GMPWRAP=$$WRAP^GMPLX1(GMPTERM,53)
"RTN","GMPLSAVE",193,0)
 S XMB(1)=GMPTERM
"RTN","GMPLSAVE",194,0)
 S XMB(2)=GMPSCT
"RTN","GMPLSAVE",195,0)
 S XMB(3)=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","GMPLSAVE",196,0)
 S XMB(4)=$$FMTE^XLFDT($E(($$NOW^XLFDT),1,12),2)
"RTN","GMPLSAVE",197,0)
 S XMB(5)=GMPSVC
"RTN","GMPLSAVE",198,0)
 S XMB(6)=$P(GMPSITE,U,2)_" ("_$P(GMPSITE,U,3)_")"
"RTN","GMPLSAVE",199,0)
 S XMB(7)=$G(GMPSRCH)
"RTN","GMPLSAVE",200,0)
 D ^XMB,KILL^XM S GMPY=1
"RTN","GMPLSAVE",201,0)
 Q
"RTN","GMPLSAVE",202,0)
COEXPRS(GMPDA,GMPICD) ; File multiple ICDs
"RTN","GMPLSAVE",203,0)
 N GMPC,GMPI,GMPN,GMPORIG,NOW,GMPOCNT,GMPNCNT,CODSYS S NOW=$$NOW^XLFDT
"RTN","GMPLSAVE",204,0)
 ; Initialize CODSYS to "ICD" when ICD-10-CM is implemented, new codes will get "D10"
"RTN","GMPLSAVE",205,0)
 S CODSYS="ICD"
"RTN","GMPLSAVE",206,0)
 ; Merge previous entries into local GMPORIG array
"RTN","GMPLSAVE",207,0)
 I $D(^AUPNPROB(GMPDA,803)) M GMPORIG=^AUPNPROB(GMPDA,803)
"RTN","GMPLSAVE",208,0)
 ; If not sparce ICD string, remove previous entries & initialize sub-file root
"RTN","GMPLSAVE",209,0)
 I '$$SPRCICD(GMPICD) K ^AUPNPROB(GMPDA,803) S ^AUPNPROB(GMPDA,803,0)="^9000011.803PA^^"
"RTN","GMPLSAVE",210,0)
 ; Update sub-file
"RTN","GMPLSAVE",211,0)
 S GMPC=0,GMPN=$L(GMPICD,"/")
"RTN","GMPLSAVE",212,0)
 F GMPI=2:1:GMPN D
"RTN","GMPLSAVE",213,0)
 . N GMPCODE,GMPDA1,GMPD30,GMPNOS S GMPNOS=$$NOS^GMPLX
"RTN","GMPLSAVE",214,0)
 . S GMPDA1=GMPI-1,GMPC=GMPC+1,GMPCODE=$P(GMPICD,"/",GMPI) Q:(GMPCODE="")
"RTN","GMPLSAVE",215,0)
 . S GMPD30=$G(^AUPNPROB(GMPDA,803,GMPDA1,0))
"RTN","GMPLSAVE",216,0)
 . I (GMPCODE=$P(GMPNOS,U,2)),($P(GMPD30,U)]""),($P(GMPD30,U)'=$P(GMPNOS,U,2)) Q
"RTN","GMPLSAVE",217,0)
 . S ^AUPNPROB(GMPDA,803,GMPDA1,0)=GMPCODE_U_CODSYS_U_DT,^AUPNPROB(GMPDA,803,"B",GMPCODE,GMPDA1)=""
"RTN","GMPLSAVE",218,0)
 . S $P(^AUPNPROB(GMPDA,803,0),U,3,4)=GMPDA1_U_GMPC
"RTN","GMPLSAVE",219,0)
 I '$D(GMPORIG) Q
"RTN","GMPLSAVE",220,0)
 S GMPOCNT=+$P($G(GMPORIG(0)),U,4),GMPNCNT=+$P($G(^AUPNPROB(GMPDA,803,0)),U,4)
"RTN","GMPLSAVE",221,0)
 ; Iterate through GMPORIG and audit changes
"RTN","GMPLSAVE",222,0)
 S GMPI=0 F  S GMPI=$O(GMPORIG(GMPI)) Q:+GMPI'>0  D
"RTN","GMPLSAVE",223,0)
 . N CHANGE,OLD0,NEW0
"RTN","GMPLSAVE",224,0)
 . S OLD0=$G(GMPORIG(GMPI,0)),NEW0=$G(^AUPNPROB(GMPDA,803,GMPI,0))
"RTN","GMPLSAVE",225,0)
 . I $P(NEW0,U)=$P(OLD0,U) Q  ; no substantive change change
"RTN","GMPLSAVE",226,0)
 . I NEW0'="" S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_$P(OLD0,U)_U_$P(NEW0,U)_"^SNOMED CT Concept re-mapped by Enterprise Terminology Service^"_+$G(GMPROV)
"RTN","GMPLSAVE",227,0)
 . E  S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_$P(OLD0,U)_U_"^Deleted Secondary Dx for SNOMED CT Concept^"_+$G(GMPROV)
"RTN","GMPLSAVE",228,0)
 . D AUDIT^GMPLX(CHANGE,OLD0)
"RTN","GMPLSAVE",229,0)
 I GMPNCNT>GMPOCNT D
"RTN","GMPLSAVE",230,0)
 . S GMPI=GMPOCNT
"RTN","GMPLSAVE",231,0)
 . F  S GMPI=$O(^AUPNPROB(GMPDA,803,GMPI)) Q:+GMPI'>0  D
"RTN","GMPLSAVE",232,0)
 . . N NEW0,CHANGE S NEW0=$G(^AUPNPROB(GMPDA,803,GMPI,0))
"RTN","GMPLSAVE",233,0)
 . . S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_U_$P(NEW0,U)_"^Added as Secondary Dx for SNOMED CT Concept^"_+$G(GMPROV)
"RTN","GMPLSAVE",234,0)
 . . D AUDIT^GMPLX(CHANGE,"")
"RTN","GMPLSAVE",235,0)
 Q
"RTN","GMPLSAVE",236,0)
SPRCICD(GMPICD) ; Is ICD string sparce (i.e., called from SDS API w/order > 2)?
"RTN","GMPLSAVE",237,0)
 N GMPI,GMPY S GMPY=0
"RTN","GMPLSAVE",238,0)
 F GMPI=2:1:$L(GMPICD,"/") I $S($P(GMPICD,"/",GMPI)="":1,$P(GMPICD,"/",GMPI)=$P($$NOS^GMPLX,U,2):1,1:0) S GMPY=1
"RTN","GMPLSAVE",239,0)
 Q GMPY
"RTN","GMPLUTL")
0^15^B51218894
"RTN","GMPLUTL",1,0)
GMPLUTL ; SLC/MKB/KER -- PL Utilities ;11/29/11  09:04
"RTN","GMPLUTL",2,0)
 ;;2.0;Problem List;**3,6,8,10,16,26,35,39,36**;Aug 25, 1994;Build 65
"RTN","GMPLUTL",3,0)
 ;
"RTN","GMPLUTL",4,0)
 ; External References
"RTN","GMPLUTL",5,0)
 ;   DBIA    348  ^DPT(
"RTN","GMPLUTL",6,0)
 ;   DBIA   3990  $$ICDDX^ICDCODE
"RTN","GMPLUTL",7,0)
 ;   DBIA  10006  ^VA(200
"RTN","GMPLUTL",8,0)
 ;
"RTN","GMPLUTL",9,0)
ACTIVE(GMPDFN,GMPL) ; Returns list of Active Problems for a Patient
"RTN","GMPLUTL",10,0)
 ;
"RTN","GMPLUTL",11,0)
 ;   GMPDFN   Pointer to Patient
"RTN","GMPLUTL",12,0)
 ;   GMPL     Array in which the problems will be
"RTN","GMPLUTL",13,0)
 ;            returned, passed by reference
"RTN","GMPLUTL",14,0)
 ;
"RTN","GMPLUTL",15,0)
 ;   GMPL(#,0)  Problem file (#9000011) IEN
"RTN","GMPLUTL",16,0)
 ;   GMPL(#,1)  Piece 1:  Pointer to Problem (Lexicon file #757.01)
"RTN","GMPLUTL",17,0)
 ;                    2:  Provider Narrative
"RTN","GMPLUTL",18,0)
 ;                 NOTE:  the provider narrative may be different
"RTN","GMPLUTL",19,0)
 ;                        from the Lexicon term in file 757.01
"RTN","GMPLUTL",20,0)
 ;   GMPL(#,2)  Piece 1:  Pointer to ICD Diagnosis (file #80)
"RTN","GMPLUTL",21,0)
 ;                    2:  ICD-9 Code
"RTN","GMPLUTL",22,0)
 ;   GMPL(#,3)  Piece 1:  Internal Date of Onset
"RTN","GMPLUTL",23,0)
 ;                    2:  External Date of Onset 00/00/00
"RTN","GMPLUTL",24,0)
 ;   GMPL(#,4)  Piece 1:  Abbreviated Service Connection
"RTN","GMPLUTL",25,0)
 ;                            SC^Service Connected
"RTN","GMPLUTL",26,0)
 ;                            NSC^Not Service Connected
"RTN","GMPLUTL",27,0)
 ;                            null
"RTN","GMPLUTL",28,0)
 ;                    2:  Full text Service Connection
"RTN","GMPLUTL",29,0)
 ;   GMPL(#,5)  Piece 1:  Abbreviated Exposure
"RTN","GMPLUTL",30,0)
 ;                        Full text Exposure
"RTN","GMPLUTL",31,0)
 ;                            AO^Agent Orange
"RTN","GMPLUTL",32,0)
 ;                            IR^Radiation
"RTN","GMPLUTL",33,0)
 ;                            EC^Evn Contaminants
"RTN","GMPLUTL",34,0)
 ;                            HNC^Head/Neck Cancer
"RTN","GMPLUTL",35,0)
 ;                            MST^Mil Sexual Trauma
"RTN","GMPLUTL",36,0)
 ;                            CV^Combat Vet
"RTN","GMPLUTL",37,0)
 ;                            SHD^SHAD
"RTN","GMPLUTL",38,0)
 ;                            null
"RTN","GMPLUTL",39,0)
 ;
"RTN","GMPLUTL",40,0)
 N I,IFN,CNT,GMPL0,GMPL1,SP,NUM,ONSET,GMPLIST,GMPLVIEW,GMPARAM,GMPTOTAL
"RTN","GMPLUTL",41,0)
 Q:$G(GMPDFN)'>0  S CNT=0,SP=""
"RTN","GMPLUTL",42,0)
 S GMPARAM("QUIET")=1,GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","GMPLUTL",43,0)
 S GMPLVIEW("ACT")="A",GMPLVIEW("PROV")=0,GMPLVIEW("VIEW")=""
"RTN","GMPLUTL",44,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLUTL",45,0)
 F NUM=0:0 S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D
"RTN","GMPLUTL",46,0)
 . S IFN=+GMPLIST(NUM) Q:IFN'>0
"RTN","GMPLUTL",47,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),CNT=CNT+1,GMPL(CNT,0)=IFN
"RTN","GMPLUTL",48,0)
 . S GMPL(CNT,1)=+GMPL1_U_$$PROBTEXT^GMPLX(IFN)
"RTN","GMPLUTL",49,0)
 . S GMPL(CNT,2)=+GMPL0_U_$P($$ICDDX^ICDCODE(+GMPL0),U,2),ONSET=$P(GMPL0,U,13)
"RTN","GMPLUTL",50,0)
 . S GMPL(CNT,3)=$S(ONSET:ONSET_U_$$EXTDT^GMPLX(ONSET),1:"")
"RTN","GMPLUTL",51,0)
 . S GMPL(CNT,4)=$S(+$P(GMPL1,U,10):"SC^SERVICE-CONNECTED",$P(GMPL1,U,10)=0:"NSC^NOT SERVICE-CONNECTED",1:"")
"RTN","GMPLUTL",52,0)
 . F I=11,12,13,15,16,17,18 S:$P(GMPL1,U,I) SP=$S(I=11:"A",I=12:"I",I=13:"P",I=15:"H",16:"M",17:"C",1:"S")
"RTN","GMPLUTL",53,0)
 . S GMPL(CNT,5)=$S(SP="A":"AO^AGENT ORANGE",SP="I":"IR^RADIATION",SP="P":"EC^ENV CONTAMINANTS",SP="H":"HNC^HEAD AND/OR NECK CANCER",SP="M":"MST^MILIARY SEXUAL TRAUMA",SP="C":"CV^COMBAT VET",SP="S":"SHD^SHAD",1:"")
"RTN","GMPLUTL",54,0)
 S GMPL(0)=CNT
"RTN","GMPLUTL",55,0)
 Q
"RTN","GMPLUTL",56,0)
 ;
"RTN","GMPLUTL",57,0)
CREATE(PL,PLY) ; Creates a new problem
"RTN","GMPLUTL",58,0)
 ;
"RTN","GMPLUTL",59,0)
 ;  Input array, passed by reference
"RTN","GMPLUTL",60,0)
 ;    Required
"RTN","GMPLUTL",61,0)
 ;      PL("PATIENT")    Pointer to Patient #2
"RTN","GMPLUTL",62,0)
 ;      PL("NARRATIVE")  Text as entered by provider
"RTN","GMPLUTL",63,0)
 ;      PL("PROVIDER")   Pointer to provider #200
"RTN","GMPLUTL",64,0)
 ;    Optional
"RTN","GMPLUTL",65,0)
 ;      PL("DIAGNOSIS")  Pointer to ICD-9 #80
"RTN","GMPLUTL",66,0)
 ;      PL("LEXICON")    Pointer to Lexicon #757.01
"RTN","GMPLUTL",67,0)
 ;      PL("STATUS")     A = Active   I = Inactive
"RTN","GMPLUTL",68,0)
 ;      PL("ONSET")      Internal Date of Onset
"RTN","GMPLUTL",69,0)
 ;      PL("RECORDED")   Internal Date Recorded
"RTN","GMPLUTL",70,0)
 ;      PL("RESOLVED")   Internal Date Problem was Resolved
"RTN","GMPLUTL",71,0)
 ;      PL("COMMENT")    Comment text, up to 60 characters
"RTN","GMPLUTL",72,0)
 ;      PL("LOCATION")   Pointer to Hospital Location
"RTN","GMPLUTL",73,0)
 ;      PL("SC")         Service Connected 1 = Yes 0 = No
"RTN","GMPLUTL",74,0)
 ;      PL("AO")         Agent Orange      1 = Yes 0 = No
"RTN","GMPLUTL",75,0)
 ;      PL("IR")         Radiation         1 = Yes 0 = No
"RTN","GMPLUTL",76,0)
 ;      PL("EC")         Env Contamination 1 = Yes 0 = No
"RTN","GMPLUTL",77,0)
 ;      PL("HNC")        Head/Neck Cancer  1 = Yes 0 = No
"RTN","GMPLUTL",78,0)
 ;      PL("MST")        Mil Sexual Trauma 1 = Yes 0 = No
"RTN","GMPLUTL",79,0)
 ;      PL("CV")         Combat Vet        1 = Yes 0 = No
"RTN","GMPLUTL",80,0)
 ;      PL("SHD")        Shipboard Hazard & Defense 1=Yes  0=No
"RTN","GMPLUTL",81,0)
 ;
"RTN","GMPLUTL",82,0)
 ;  Output, passed by reference
"RTN","GMPLUTL",83,0)
 ;      PLY              Equivalent of Fileman Y, DA
"RTN","GMPLUTL",84,0)
 ;      PLY(0)           Equivalent of Fileman Y(0)
"RTN","GMPLUTL",85,0)
 ;
"RTN","GMPLUTL",86,0)
 N GMPI,GMPQUIT,GMPVAMC,GMPVA,GMPFLD,GMPSC,GMPAGTOR,GMPION,GMPGULF
"RTN","GMPLUTL",87,0)
 N GMPHNC,GMPMST,GMPCV,GMPSHD,DA,GMPDFN,GMPROV
"RTN","GMPLUTL",88,0)
 K PLY S PLY=-1,PLY(0)=""
"RTN","GMPLUTL",89,0)
 S GMPVAMC=+$G(DUZ(2)),GMPVA=$S($G(DUZ("AG"))="V":1,1:0)
"RTN","GMPLUTL",90,0)
 I '$L($G(PL("NARRATIVE"))) S PLY(0)="Missing problem narrative" Q
"RTN","GMPLUTL",91,0)
 I '$D(^DPT(+$G(PL("PATIENT")),0)) S PLY(0)="Invalid patient" Q
"RTN","GMPLUTL",92,0)
 I '$D(^VA(200,+$G(PL("PROVIDER")),0)) S PLY(0)="Invalid provider" Q
"RTN","GMPLUTL",93,0)
 S GMPDFN=+PL("PATIENT"),(GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD)=0
"RTN","GMPLUTL",94,0)
 D:GMPVA VADPT^GMPLX1(GMPDFN)
"RTN","GMPLUTL",95,0)
 F GMPI="DIAGNOSI","LEXICON","DUPLICAT","LOCATION","STATUS" D @(GMPI_"^GMPLUTL1") Q:$D(GMPQUIT)
"RTN","GMPLUTL",96,0)
 Q:$D(GMPQUIT)
"RTN","GMPLUTL",97,0)
 F GMPI="ONSET","RESOLVED","RECORDED","SC","AO","IR","EC","HNC","MST","CV","SHD" D @(GMPI_"^GMPLUTL1") Q:$D(GMPQUIT)
"RTN","GMPLUTL",98,0)
 Q:$D(GMPQUIT)
"RTN","GMPLUTL",99,0)
CR1 ; Ok to Create
"RTN","GMPLUTL",100,0)
 I $S(PL("LEXICON")=1:1,PL("LEXICON")="":1,1:0),(PL("NARRATIVE")["SNOMED CT") D FIXLEX(.PL)
"RTN","GMPLUTL",101,0)
 S GMPFLD(.01)=PL("DIAGNOSIS")_U_$S(PL("NARRATIVE")["(ICD-9-CM":$P($P(PL("NARRATIVE"),"ICD-9-CM ",2),")"),1:"")
"RTN","GMPLUTL",102,0)
 S GMPFLD(1.01)=PL("LEXICON")
"RTN","GMPLUTL",103,0)
 S GMPFLD(.05)=U_$E(PL("NARRATIVE"),1,80)
"RTN","GMPLUTL",104,0)
 S (GMPROV,GMPFLD(1.04),GMPFLD(1.05))=+PL("PROVIDER")
"RTN","GMPLUTL",105,0)
 S GMPFLD(1.06)=$$SERVICE^GMPLX1(+PL("PROVIDER"))
"RTN","GMPLUTL",106,0)
 S GMPFLD(.13)=PL("ONSET"),GMPFLD(1.09)=PL("RECORDED")
"RTN","GMPLUTL",107,0)
 S GMPFLD(1.02)=$S('$P(^GMPL(125.99,1,0),U,2):"P",$G(GMPLUSER):"P",1:"T")
"RTN","GMPLUTL",108,0)
 S GMPFLD(.12)=PL("STATUS"),GMPFLD(1.14)="",GMPFLD(1.07)=PL("RESOLVED")
"RTN","GMPLUTL",109,0)
 S GMPFLD(10,0)=0,GMPFLD(1.03)=$G(DUZ),GMPFLD(1.08)=PL("LOCATION")
"RTN","GMPLUTL",110,0)
 S:$L($G(PL("COMMENT"))) GMPFLD(10,"NEW",1)=$E(PL("COMMENT"),1,60)
"RTN","GMPLUTL",111,0)
 S GMPFLD(1.1)=PL("SC"),GMPFLD(1.11)=PL("AO"),GMPFLD(1.12)=PL("IR")
"RTN","GMPLUTL",112,0)
 S GMPFLD(1.13)=PL("EC"),GMPFLD(1.15)=$G(PL("HNC")),GMPFLD(1.16)=$G(PL("MST"))
"RTN","GMPLUTL",113,0)
 S GMPFLD(1.17)=$G(PL("CV")),GMPFLD(1.18)=$G(PL("SHD"))
"RTN","GMPLUTL",114,0)
 D NEW^GMPLSAVE S PLY=DA
"RTN","GMPLUTL",115,0)
CRQ ; Quit Create
"RTN","GMPLUTL",116,0)
 Q
"RTN","GMPLUTL",117,0)
 ;
"RTN","GMPLUTL",118,0)
FIXLEX(PL) ; Fix Lexicon expression pointer value for SNOMED Concepts
"RTN","GMPLUTL",119,0)
 N SCT,LEXS,ICDS
"RTN","GMPLUTL",120,0)
 S SCT=+$P(PL("NARRATIVE"),"SNOMED CT ",2) I +SCT'>0 Q
"RTN","GMPLUTL",121,0)
 D EN^LEXCODE(SCT) I '$D(LEXS("SCT",1)) Q
"RTN","GMPLUTL",122,0)
 S PL("NARRATIVE")=$P(PL("NARRATIVE")," (")
"RTN","GMPLUTL",123,0)
 S PL("LEXICON")=$P(LEXS("SCT",1),U)_U_PL("NARRATIVE")_" (SNOMED CT "_SCT_")"
"RTN","GMPLUTL",124,0)
 S ICDS=$$GETDX(SCT)
"RTN","GMPLUTL",125,0)
 S:($L(ICDS,"/")>1)&(ICDS'=$P($G(PL("DIAGNOSIS")),U,2)) $P(PL("DIAGNOSIS"),U,2)=ICDS
"RTN","GMPLUTL",126,0)
 Q
"RTN","GMPLUTL",127,0)
 ;
"RTN","GMPLUTL",128,0)
GETDX(CODE) ; Get ICD associated with SNOMED CT Code
"RTN","GMPLUTL",129,0)
 N LEX,ORI,ORY S ORY=0
"RTN","GMPLUTL",130,0)
 S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD")
"RTN","GMPLUTL",131,0)
 I $S(+ORY'>0:1,+$P(ORY,U,2)'>0:1,+LEX'>0:1,1:0) S ORY=799.9 G GETDXX
"RTN","GMPLUTL",132,0)
 S (ORI,ORY)=0
"RTN","GMPLUTL",133,0)
 F  S ORI=$O(LEX(ORI)) Q:+ORI'>0  D
"RTN","GMPLUTL",134,0)
 . N ICD
"RTN","GMPLUTL",135,0)
 . S ICD=$O(LEX(ORI,""))
"RTN","GMPLUTL",136,0)
 . I ICD]"" S ORY=$S(ORY'=0:ORY_"/",1:"")_ICD
"RTN","GMPLUTL",137,0)
 I ORY'["." S ORY=ORY_"."
"RTN","GMPLUTL",138,0)
GETDXX Q ORY
"RTN","GMPLUTL",139,0)
 ;
"RTN","GMPLUTL",140,0)
UPDATE(PL,PLY) ; Update a Problem/Create if Not Found
"RTN","GMPLUTL",141,0)
 ;
"RTN","GMPLUTL",142,0)
 ;  Input array, passed by reference
"RTN","GMPLUTL",143,0)
 ;    Required
"RTN","GMPLUTL",144,0)
 ;      PL("PROBLEM")    Pointer to Problem #9000011
"RTN","GMPLUTL",145,0)
 ;      PL("PROVIDER")   Pointer to provider #200
"RTN","GMPLUTL",146,0)
 ;
"RTN","GMPLUTL",147,0)
 ;    Optional
"RTN","GMPLUTL",148,0)
 ;      PL("NARRATIVE")  Text as entered by provider
"RTN","GMPLUTL",149,0)
 ;      PL("DIAGNOSIS")  Pointer to ICD-9 #80
"RTN","GMPLUTL",150,0)
 ;      PL("LEXICON")    Pointer to Lexicon #757.01
"RTN","GMPLUTL",151,0)
 ;      PL("STATUS")     A = Active   I = Inactive
"RTN","GMPLUTL",152,0)
 ;      PL("ONSET")      Internal Date of Onset
"RTN","GMPLUTL",153,0)
 ;      PL("RECORDED")   Internal Date Recorded
"RTN","GMPLUTL",154,0)
 ;      PL("RESOLVED")   Internal Date Problem was Resolved
"RTN","GMPLUTL",155,0)
 ;      PL("COMMENT")    Comment text, up to 60 characters
"RTN","GMPLUTL",156,0)
 ;      PL("LOCATION")   Pointer to Hospital Location
"RTN","GMPLUTL",157,0)
 ;      PL("SC")         Service Connected 1 = Yes 0 = No
"RTN","GMPLUTL",158,0)
 ;      PL("AO")         Agent Orange      1 = Yes 0 = No
"RTN","GMPLUTL",159,0)
 ;      PL("IR")         Radiation         1 = Yes 0 = No
"RTN","GMPLUTL",160,0)
 ;      PL("EC")         Env Contamination 1 = Yes 0 = No
"RTN","GMPLUTL",161,0)
 ;      PL("HNC")        Head/Neck Cancer  1 = Yes 0 = No
"RTN","GMPLUTL",162,0)
 ;      PL("MST")        Mil Sexual Trauma 1 = Yes 0 = No
"RTN","GMPLUTL",163,0)
 ;      PL("CV")         Combat Veteran    1 = Yes 0 = No
"RTN","GMPLUTL",164,0)
 ;      PL("SHD")        SHAD              1 = Yes 0 = No
"RTN","GMPLUTL",165,0)
 ;
"RTN","GMPLUTL",166,0)
 ;  Output, passed by reference
"RTN","GMPLUTL",167,0)
 ;      PLY              Equivalent of Fileman Y, DA
"RTN","GMPLUTL",168,0)
 ;      PLY(0)           Equivalent of Fileman Y(0)
"RTN","GMPLUTL",169,0)
 ;
"RTN","GMPLUTL",170,0)
 N GMPORIG,GMPFLD,FLD,ITEMS,SUB,GMPI,DIFFRENT,GMPIFN,GMPVAMC,GMPVA,GMPROV,GMPQUIT,GMPDFN
"RTN","GMPLUTL",171,0)
 S GMPVAMC=+$G(DUZ(2)),GMPVA=$S($G(DUZ("AG"))="V":1,1:0),PLY=-1,PLY(0)=""
"RTN","GMPLUTL",172,0)
 S GMPIFN=$G(PL("PROBLEM")) I GMPIFN="" D CREATE(.PL,.PLY) Q
"RTN","GMPLUTL",173,0)
 I '$D(^AUPNPROB(GMPIFN,0)) S PLY(0)="Invalid problem" Q
"RTN","GMPLUTL",174,0)
 I '$D(^VA(200,+$G(PL("PROVIDER")),0)) S PLY(0)="Invalid provider" Q
"RTN","GMPLUTL",175,0)
 S GMPROV=+$G(PL("PROVIDER")),GMPDFN=+$P(^AUPNPROB(GMPIFN,0),U,2)
"RTN","GMPLUTL",176,0)
 D GETFLDS^GMPLEDT3(GMPIFN) I '$D(GMPFLD) S PLY(0)="Invalid problem" Q
"RTN","GMPLUTL",177,0)
 I +$G(PL("PATIENT")),+PL("PATIENT")'=GMPDFN S PLY(0)="Patient does not match for this problem" Q
"RTN","GMPLUTL",178,0)
 I $L($G(PL("RECORDED"))) S PLY(0)="Date Recorded is not editable" Q
"RTN","GMPLUTL",179,0)
 S (GMPSC,GMPAGTOR,GMPION,GMPGULF)=0 D:GMPVA VADPT^GMPLX1(GMPDFN)
"RTN","GMPLUTL",180,0)
 S ITEMS="LEXICON^DIAGNOSIS^LOCATION^STATUS^ONSET^RESOLVED^SC^AO^IR^EC^HNC^MST^CV^SHD",FLD="1.01^.01^1.08^.12^.13^1.07^1.1^1.11^1.12^1.13^1.15^1.16^1.17^1.18"
"RTN","GMPLUTL",181,0)
 F GMPI=1:1 S SUB=$P(ITEMS,U,GMPI) Q:SUB=""  D  Q:$D(GMPQUIT)
"RTN","GMPLUTL",182,0)
 . I '$L($G(PL(SUB))) S PL(SUB)=$P(GMPFLD($P(FLD,U,GMPI)),U) Q
"RTN","GMPLUTL",183,0)
 . I SUB="STATUS",PL(SUB)="@" S GMPQUIT=1,PLY(0)="Cannot delete problem status" Q
"RTN","GMPLUTL",184,0)
 . I PL(SUB)'="@" D @($E(SUB,1,8)_"^GMPLUTL1") Q:$D(GMPQUIT)
"RTN","GMPLUTL",185,0)
 . S GMPFLD($P(FLD,U,GMPI))=$S(PL(SUB)="@":"",1:PL(SUB)),DIFFRENT=1
"RTN","GMPLUTL",186,0)
 Q:$D(GMPQUIT)
"RTN","GMPLUTL",187,0)
 I +GMPFLD(1.07),GMPFLD(1.07)<GMPFLD(.13) S PLY(0)="Date Resolved cannot be prior to Date of Onset" Q
"RTN","GMPLUTL",188,0)
 I +GMPFLD(1.09),GMPFLD(1.09)<GMPFLD(.13) S PLY(0)="Date Recorded cannot be prior to Date of Onset" Q
"RTN","GMPLUTL",189,0)
 S:$L($G(PL("NARRATIVE"))) GMPFLD(.05)=U_PL("NARRATIVE"),DIFFRENT=1
"RTN","GMPLUTL",190,0)
 S:$L($G(PL("COMMENT"))) GMPFLD(10,"NEW",1)=$E(PL("COMMENT"),1,60),DIFFRENT=1
"RTN","GMPLUTL",191,0)
 D:$D(DIFFRENT) EN^GMPLSAVE S PLY=GMPIFN,PLY(0)=""
"RTN","GMPLUTL",192,0)
 Q
"RTN","GMPLUTL1")
0^19^B58284693
"RTN","GMPLUTL1",1,0)
GMPLUTL1 ; SLC/MKB/KER -- PL Utilities (cont) ;06/08/12  12:14
"RTN","GMPLUTL1",2,0)
 ;;2.0;Problem List;**3,8,7,9,26,35,39,36**;Aug 25, 1994;Build 65
"RTN","GMPLUTL1",3,0)
 ;
"RTN","GMPLUTL1",4,0)
 ; External References
"RTN","GMPLUTL1",5,0)
 ;   DBIA   446  ^AUTNPOV(
"RTN","GMPLUTL1",6,0)
 ;   DBIA 10082  ^ICD9(
"RTN","GMPLUTL1",7,0)
 ;   DBIA  1571  ^LEX(757.01
"RTN","GMPLUTL1",8,0)
 ;   DBIA 10040  ^SC(
"RTN","GMPLUTL1",9,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLUTL1",10,0)
 ;   DBIA 10003  ^%DT
"RTN","GMPLUTL1",11,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","GMPLUTL1",12,0)
 ;
"RTN","GMPLUTL1",13,0)
 ; All entry points in this routine expect the
"RTN","GMPLUTL1",14,0)
 ; PL("data item") array from routine ^GMPLUTL.
"RTN","GMPLUTL1",15,0)
 ;
"RTN","GMPLUTL1",16,0)
 ;   Entry     Expected Variable
"RTN","GMPLUTL1",17,0)
 ;   Point     From VADPT^GMPLX1
"RTN","GMPLUTL1",18,0)
 ;    AO           GMPAGTOR
"RTN","GMPLUTL1",19,0)
 ;    IR           GMPION
"RTN","GMPLUTL1",20,0)
 ;    EC           GMPGULF
"RTN","GMPLUTL1",21,0)
 ;    HNC          GMPHNC
"RTN","GMPLUTL1",22,0)
 ;    MST          GMPMST
"RTN","GMPLUTL1",23,0)
 ;    CV           GMPCV
"RTN","GMPLUTL1",24,0)
 ;    SHD          GMPSHD
"RTN","GMPLUTL1",25,0)
 ;
"RTN","GMPLUTL1",26,0)
 Q
"RTN","GMPLUTL1",27,0)
DIAGNOSI ; ICD Diagnosis Pointer
"RTN","GMPLUTL1",28,0)
 S:'$L($G(PL("DIAGNOSIS"))) PL("DIAGNOSIS")=$$NOS^GMPLX
"RTN","GMPLUTL1",29,0)
 Q:$P($$CODEC^ICDCODE(+PL("DIAGNOSIS"),$S($$PATCH^XPDUTL("ICD*18.0*57"):80,1:"")),U)'=-1
"RTN","GMPLUTL1",30,0)
 S GMPQUIT=1,PLY(0)="Invalid ICD Diagnosis"
"RTN","GMPLUTL1",31,0)
 Q
"RTN","GMPLUTL1",32,0)
 ;
"RTN","GMPLUTL1",33,0)
LEXICON ; Clinical Lexicon Pointer
"RTN","GMPLUTL1",34,0)
 S:'$L($G(PL("LEXICON"))) PL("LEXICON")=1
"RTN","GMPLUTL1",35,0)
 Q:$D(^LEX(757.01,+PL("LEXICON"),0))
"RTN","GMPLUTL1",36,0)
 S GMPQUIT=1,PLY(0)="Invalid Lexicon term"
"RTN","GMPLUTL1",37,0)
 Q
"RTN","GMPLUTL1",38,0)
DUPLICAT ; Problem Already on the List
"RTN","GMPLUTL1",39,0)
 N DUPL
"RTN","GMPLUTL1",40,0)
 Q:$P($G(^GMPL(125.99,1,0)),U,6)'=1
"RTN","GMPLUTL1",41,0)
 S:'$L($G(PL("DIAGNOSIS"))) PL("DIAGNOSIS")=$$NOS^GMPLX
"RTN","GMPLUTL1",42,0)
 I '$D(^AUPNPROB("B",+PL("DIAGNOSIS")))!('$D(^AUPNPROB("AC",GMPDFN))) Q
"RTN","GMPLUTL1",43,0)
 F IFN=0:0 S IFN=$O(^AUPNPROB("AC",GMPDFN,IFN)) Q:IFN'>0  D  Q:$D(GMPQUIT)
"RTN","GMPLUTL1",44,0)
 . S (DUPL(1),DUPL(2))=0
"RTN","GMPLUTL1",45,0)
 . S NODE0=$G(^AUPNPROB(IFN,0)),NODE1=$G(^(1)) Q:$P(NODE1,U,2)="H"
"RTN","GMPLUTL1",46,0)
 . I +PL("DIAGNOSIS")=+NODE0 S DUPL(1)=IFN
"RTN","GMPLUTL1",47,0)
 . S:PL("NARRATIVE")=$$UP^XLFSTR($P(^AUTNPOV($P(NODE0,U,5),0),U)) DUPL(2)=IFN
"RTN","GMPLUTL1",48,0)
 . I DUPL(1)>0&DUPL(2)>0 S GMPQUIT=1,PLY(0)="Duplicate problem"
"RTN","GMPLUTL1",49,0)
 Q
"RTN","GMPLUTL1",50,0)
 ;
"RTN","GMPLUTL1",51,0)
LOCATION ; Hospital Location (Clinic) Pointer
"RTN","GMPLUTL1",52,0)
 S:'$D(PL("LOCATION")) PL("LOCATION")="" Q:'$L(PL("LOCATION"))
"RTN","GMPLUTL1",53,0)
 I $D(^SC(+PL("LOCATION"),0)) S:$P(^(0),U,3)'="C" PL("LOCATION")="" Q
"RTN","GMPLUTL1",54,0)
 S GMPQUIT=1,PLY(0)="Invalid hospital location"
"RTN","GMPLUTL1",55,0)
 Q
"RTN","GMPLUTL1",56,0)
 ;
"RTN","GMPLUTL1",57,0)
PROVIDER ; Responsible Provider
"RTN","GMPLUTL1",58,0)
 S:'$D(PL("PROVIDER")) PL("PROVIDER")=""
"RTN","GMPLUTL1",59,0)
 Q:'$L(PL("PROVIDER"))  Q:$D(^VA(200,+PL("PROVIDER"),0))
"RTN","GMPLUTL1",60,0)
 S GMPQUIT=1,PLY(0)="Invalid provider"
"RTN","GMPLUTL1",61,0)
 Q
"RTN","GMPLUTL1",62,0)
 ;
"RTN","GMPLUTL1",63,0)
STATUS ; Problem Status
"RTN","GMPLUTL1",64,0)
 S:$G(PL("STATUS"))="" PL("STATUS")="A"
"RTN","GMPLUTL1",65,0)
 I "^A^I^a^i^"[(U_PL("STATUS")_U) S PL("STATUS")=$$UP^XLFSTR(PL("STATUS")) Q
"RTN","GMPLUTL1",66,0)
 S GMPQUIT=1,PLY(0)="Invalid problem status"
"RTN","GMPLUTL1",67,0)
 Q
"RTN","GMPLUTL1",68,0)
 ;
"RTN","GMPLUTL1",69,0)
ONSET ; Date of Onset
"RTN","GMPLUTL1",70,0)
 N %DT,Y,X
"RTN","GMPLUTL1",71,0)
 S:'$D(PL("ONSET")) PL("ONSET")="" Q:'$L(PL("ONSET"))
"RTN","GMPLUTL1",72,0)
 S %DT="P",%DT(0)="-NOW",X=PL("ONSET") D ^%DT
"RTN","GMPLUTL1",73,0)
 I Y>0 S PL("ONSET")=Y Q
"RTN","GMPLUTL1",74,0)
 S GMPQUIT=1,PLY(0)="Invalid Date of Onset"
"RTN","GMPLUTL1",75,0)
 Q
"RTN","GMPLUTL1",76,0)
 ;
"RTN","GMPLUTL1",77,0)
RESOLVED ; Date Resolved (Requires STATUS, ONSET)
"RTN","GMPLUTL1",78,0)
 N %DT,Y,X
"RTN","GMPLUTL1",79,0)
 S:'$D(PL("RESOLVED")) PL("RESOLVED")="" Q:'$L(PL("RESOLVED"))
"RTN","GMPLUTL1",80,0)
 S %DT="P",%DT(0)="-NOW",X=PL("RESOLVED") D ^%DT
"RTN","GMPLUTL1",81,0)
 I Y'>0 S GMPQUIT=1,PLY(0)="Invalid Date Resolved" Q
"RTN","GMPLUTL1",82,0)
 I PL("STATUS")="A" S GMPQUIT=1,PLY(0)="Active problems cannot have a Date Resolved" Q
"RTN","GMPLUTL1",83,0)
 I Y<PL("ONSET") S GMPQUIT=1,PLY(0)="Date Resolved cannot be prior to Date of Onset" Q
"RTN","GMPLUTL1",84,0)
 S PL("RESOLVED")=Y
"RTN","GMPLUTL1",85,0)
 Q
"RTN","GMPLUTL1",86,0)
 ;
"RTN","GMPLUTL1",87,0)
RECORDED ; Date Recorded (Requires ONSET)
"RTN","GMPLUTL1",88,0)
 N %DT,Y,X
"RTN","GMPLUTL1",89,0)
 S:'$D(PL("RECORDED")) PL("RECORDED")="" Q:'$L(PL("RECORDED"))
"RTN","GMPLUTL1",90,0)
 S %DT="P",%DT(0)="-NOW",X=PL("RECORDED") D ^%DT
"RTN","GMPLUTL1",91,0)
 I Y'>0 S GMPQUIT=1,PLY(0)="Invalid Date Recorded" Q
"RTN","GMPLUTL1",92,0)
 I PL("RECORDED")<PL("ONSET") S GMPQUIT=1,PLY(0)="Date Recorded cannot be prior to Date of Onset" Q
"RTN","GMPLUTL1",93,0)
 S PL("RECORDED")=Y
"RTN","GMPLUTL1",94,0)
 Q
"RTN","GMPLUTL1",95,0)
 ;
"RTN","GMPLUTL1",96,0)
SC ; SC condition flag
"RTN","GMPLUTL1",97,0)
 S:'$D(PL("SC")) PL("SC")=""
"RTN","GMPLUTL1",98,0)
 I "^^1^0^"'[(U_PL("SC")_U) S GMPQUIT=1,PLY(0)="Invalid SC flag" Q
"RTN","GMPLUTL1",99,0)
 I 'GMPSC,+PL("SC") S GMPQUIT=1,PLY(0)="Invalid SC flag"
"RTN","GMPLUTL1",100,0)
 Q
"RTN","GMPLUTL1",101,0)
 ;
"RTN","GMPLUTL1",102,0)
AO ; AO exposure flag (Requires GMPAGTOR)
"RTN","GMPLUTL1",103,0)
 S:'$D(PL("AO")) PL("AO")=""
"RTN","GMPLUTL1",104,0)
 I "^^1^0^"'[(U_PL("AO")_U) S GMPQUIT=1,PLY(0)="Invalid AO flag" Q
"RTN","GMPLUTL1",105,0)
 I 'GMPAGTOR,+PL("AO") S GMPQUIT=1,PLY(0)="Invalid AO flag"
"RTN","GMPLUTL1",106,0)
 Q
"RTN","GMPLUTL1",107,0)
 ;
"RTN","GMPLUTL1",108,0)
IR ; IR exposure flag (Requires GMPION)
"RTN","GMPLUTL1",109,0)
 S:'$D(PL("IR")) PL("IR")=""
"RTN","GMPLUTL1",110,0)
 I "^^1^0^"'[(U_PL("IR")_U) S GMPQUIT=1,PLY(0)="Invalid IR flag" Q
"RTN","GMPLUTL1",111,0)
 I 'GMPION,+PL("IR") S GMPQUIT=1,PLY(0)="Invalid IR flag"
"RTN","GMPLUTL1",112,0)
 Q
"RTN","GMPLUTL1",113,0)
 ;
"RTN","GMPLUTL1",114,0)
EC ; EC exposure flag (Requires GMPGULF)
"RTN","GMPLUTL1",115,0)
 S:'$D(PL("EC")) PL("EC")=""
"RTN","GMPLUTL1",116,0)
 I "^^1^0^"'[(U_PL("EC")_U) S GMPQUIT=1,PLY(0)="Invalid EC flag" Q
"RTN","GMPLUTL1",117,0)
 I 'GMPGULF,+PL("EC") S GMPQUIT=1,PLY(0)="Invalid EC flag"
"RTN","GMPLUTL1",118,0)
 Q
"RTN","GMPLUTL1",119,0)
HNC ; HNC/NTR exposure flag (Requires GMPHNC)
"RTN","GMPLUTL1",120,0)
 S:'$D(PL("HNC")) PL("HNC")=""
"RTN","GMPLUTL1",121,0)
 I "^^1^0^"'[(U_PL("HNC")_U) S GMPQUIT=1,PLY(0)="Invalid HNC flag" Q
"RTN","GMPLUTL1",122,0)
 I 'GMPHNC,+PL("HNC") S GMPQUIT=1,PLY(0)="Invalid HNC flag"
"RTN","GMPLUTL1",123,0)
 Q
"RTN","GMPLUTL1",124,0)
MST ; MST exposure flag (Requires GMPMST)
"RTN","GMPLUTL1",125,0)
 S:'$D(PL("MST")) PL("MST")=""
"RTN","GMPLUTL1",126,0)
 I "^^1^0^"'[(U_PL("MST")_U) S GMPQUIT=1,PLY(0)="Invalid MST flag" Q
"RTN","GMPLUTL1",127,0)
 I 'GMPMST,+PL("MST") S GMPQUIT=1,PLY(0)="Invalid MST flag"
"RTN","GMPLUTL1",128,0)
 Q
"RTN","GMPLUTL1",129,0)
CV ; CV exposure flag (Requires GMPCV)
"RTN","GMPLUTL1",130,0)
 S:'$D(PL("CV")) PL("CV")=""
"RTN","GMPLUTL1",131,0)
 I "^^1^0^"'[(U_PL("CV")_U) S GMPQUIT=1,PLY(0)="Invalid CV flag" Q
"RTN","GMPLUTL1",132,0)
 I 'GMPCV,+PL("CV") S GMPQUIT=1,PLY(0)="Invalid CV flag"
"RTN","GMPLUTL1",133,0)
 Q
"RTN","GMPLUTL1",134,0)
SHD ; SHD exposure flag (Requires GMPSHD)
"RTN","GMPLUTL1",135,0)
 S:'$D(PL("SHD")) PL("SHD")=""
"RTN","GMPLUTL1",136,0)
 I "^^1^0^"'[(U_PL("SHD")_U) S GMPQUIT=1,PLY(0)="Invalid SHD flag" Q
"RTN","GMPLUTL1",137,0)
 I 'GMPSHD,+PL("SHD") S GMPQUIT=1,PLY(0)="Invalid SHD flag"
"RTN","GMPLUTL1",138,0)
 Q
"RTN","GMPLUTL1",139,0)
CENTER(X) ; Center X
"RTN","GMPLUTL1",140,0)
 N SP
"RTN","GMPLUTL1",141,0)
 S $P(SP," ",((IOM-$L(X))\2))=""
"RTN","GMPLUTL1",142,0)
 Q $G(SP)_X
"RTN","GMPLUTL1",143,0)
READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN) ; Calls reader, returns response
"RTN","GMPLUTL1",144,0)
 N DIR,X,Y
"RTN","GMPLUTL1",145,0)
 S DIR(0)=TYPE
"RTN","GMPLUTL1",146,0)
 I $D(SCREEN) S DIR("S")=SCREEN
"RTN","GMPLUTL1",147,0)
 I $G(PROMPT)]"" S DIR("A")=PROMPT
"RTN","GMPLUTL1",148,0)
 I $G(DEFAULT)]"" S DIR("B")=DEFAULT
"RTN","GMPLUTL1",149,0)
 I $D(HELP) S DIR("?")=HELP
"RTN","GMPLUTL1",150,0)
 D ^DIR
"RTN","GMPLUTL1",151,0)
 I $G(X)="@" S Y="@" G READX
"RTN","GMPLUTL1",152,0)
 I Y]"",($L($G(Y),U)'=2) S Y=Y_U_$G(Y(0),Y)
"RTN","GMPLUTL1",153,0)
READX Q Y
"RTN","GMPLUTL1",154,0)
EDATE(PRMPT,STATUS,DFLT) ; Get early date
"RTN","GMPLUTL1",155,0)
 N X,Y,GMPLPRMT,GMPLDFLT
"RTN","GMPLUTL1",156,0)
 I $G(STATUS)=4 S Y=1 Q Y
"RTN","GMPLUTL1",157,0)
 S GMPLPRMT=" Start "_$S($L($G(PRMPT)):PRMPT_" ",1:"")_"Date [Time]: "
"RTN","GMPLUTL1",158,0)
 S GMPLDFLT=$S($L($G(DFLT)):DFLT,1:"T-30")
"RTN","GMPLUTL1",159,0)
 S Y=$$READ("DOA^::AET",GMPLPRMT,GMPLDFLT)
"RTN","GMPLUTL1",160,0)
 Q Y
"RTN","GMPLUTL1",161,0)
LDATE(PRMPT,STATUS,DFLT) ; Get late date
"RTN","GMPLUTL1",162,0)
 N X,Y,GMPLPRMT,GMPLDFLT
"RTN","GMPLUTL1",163,0)
 I $G(STATUS)=4 S Y=9999999 Q Y
"RTN","GMPLUTL1",164,0)
 S GMPLPRMT="Ending "_$S($L($G(PRMPT)):PRMPT_" ",1:"")_"Date [Time]: "
"RTN","GMPLUTL1",165,0)
 S GMPLDFLT=$S($L($G(DFLT)):DFLT,1:"NOW")
"RTN","GMPLUTL1",166,0)
 S Y=$$READ("DOA^::AET",GMPLPRMT,GMPLDFLT)
"RTN","GMPLUTL1",167,0)
 Q Y
"RTN","GMPLUTL1",168,0)
STOP(PROMPT,SCROLL) ; Call DIR at bottom of screen
"RTN","GMPLUTL1",169,0)
 N DIR,X,Y
"RTN","GMPLUTL1",170,0)
 I $E(IOST)'="C" S Y="" G STOPX
"RTN","GMPLUTL1",171,0)
 I +$G(SCROLL),(IOSL>($Y+5)) F  W ! Q:IOSL<($Y+6)
"RTN","GMPLUTL1",172,0)
 S DIR(0)="FO^1:1",DIR("A")=$S($G(PROMPT)]"":PROMPT,1:"Press RETURN to continue or '^' to exit")
"RTN","GMPLUTL1",173,0)
 S DIR("?")="Enter '^' to quit present action or '^^' to quit to menu"
"RTN","GMPLUTL1",174,0)
 D ^DIR I $D(DIRUT),(Y="") K DIRUT
"RTN","GMPLUTL1",175,0)
 S Y=$S(Y="^":0,Y="^^":0,$D(DTOUT):"",Y="":1,1:1_U_Y)
"RTN","GMPLUTL1",176,0)
STOPX Q Y
"RTN","GMPLUTL1",177,0)
DATE(X,FMT) ; Call with X=2910419.01 and FMT=Return Format of date ("MM/DD")
"RTN","GMPLUTL1",178,0)
 N AMTH,MM,CC,DD,YY,GMPLI,GMPLTMP
"RTN","GMPLUTL1",179,0)
 I +X'>0 S $P(GMPLTMP," ",$L($G(FMT))+1)="",FMT=GMPLTMP G QDATE
"RTN","GMPLUTL1",180,0)
 I $S('$D(FMT):1,'$L(FMT):1,1:0) S FMT="MM/DD/YY"
"RTN","GMPLUTL1",181,0)
 S MM=$E(X,4,5),DD=$E(X,6,7),YY=$E(X,2,3),CC=17+$E(X)
"RTN","GMPLUTL1",182,0)
 S:FMT["AMTH" AMTH=$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",+MM)
"RTN","GMPLUTL1",183,0)
 F GMPLI="AMTH","MM","DD","CC","YY" S:FMT[GMPLI FMT=$P(FMT,GMPLI)_@GMPLI_$P(FMT,GMPLI,2)
"RTN","GMPLUTL1",184,0)
 I FMT["HR" S FMT=$$TIME(X,FMT)
"RTN","GMPLUTL1",185,0)
QDATE Q FMT
"RTN","GMPLUTL1",186,0)
TIME(X,FMT) ; Recieves X as 2910419.01 and FMT=Return Format of time (HH:MM:SS).
"RTN","GMPLUTL1",187,0)
 N HR,MIN,SEC,GMPLI
"RTN","GMPLUTL1",188,0)
 I $S('$D(FMT):1,'$L(FMT):1,1:0) S FMT="HR:MIN"
"RTN","GMPLUTL1",189,0)
 S X=$P(X,".",2),HR=$E(X,1,2)_$E("00",0,2-$L($E(X,1,2))),MIN=$E(X,3,4)_$E("00",0,2-$L($E(X,3,4))),SEC=$E(X,5,6)_$E("00",0,2-$L($E(X,5,6)))
"RTN","GMPLUTL1",190,0)
 F GMPLI="HR","MIN","SEC" S:FMT[GMPLI FMT=$P(FMT,GMPLI)_@GMPLI_$P(FMT,GMPLI,2)
"RTN","GMPLUTL1",191,0)
 Q FMT
"RTN","GMPLUTL1",192,0)
NAME(X,FMT) ; Call with X="LAST,FIRST MI", FMT=Return Format ("LAST, FI")
"RTN","GMPLUTL1",193,0)
 N GMPLLAST,GMPLLI,GMPFIRST,GMPLFI,GMPLMI,GMPLI
"RTN","GMPLUTL1",194,0)
 I X']"" S FMT="" G NAMEX
"RTN","GMPLUTL1",195,0)
 I $S('$D(FMT):1,'$L(FMT):1,1:0) S FMT="LAST,FIRST"
"RTN","GMPLUTL1",196,0)
 S FMT=$$LOW^XLFSTR(FMT)
"RTN","GMPLUTL1",197,0)
 S GMPLLAST=$P(X,","),GMPLLI=$E(GMPLLAST),GMPFIRST=$P(X,",",2)
"RTN","GMPLUTL1",198,0)
 S GMPLFI=$E(GMPFIRST)
"RTN","GMPLUTL1",199,0)
 S GMPLMI=$S($P(GMPFIRST," ",2)'="NMI":$E($P(GMPFIRST," ",2)),1:"")
"RTN","GMPLUTL1",200,0)
 S GMPFIRST=$P(GMPFIRST," ")
"RTN","GMPLUTL1",201,0)
 F GMPLI="last","li","first","fi","mi" I FMT[GMPLI S FMT=$P(FMT,GMPLI)_@("GMPL"_$$UP^XLFSTR(GMPLI))_$P(FMT,GMPLI,2)
"RTN","GMPLUTL1",202,0)
NAMEX Q FMT
"RTN","GMPLUTL1",203,0)
TITLE(X) ; Pads titles
"RTN","GMPLUTL1",204,0)
 ; Recieves:    X=title to be padded
"RTN","GMPLUTL1",205,0)
 N I,TITLE
"RTN","GMPLUTL1",206,0)
 S TITLE="" F I=1:1:$L(X) S TITLE=TITLE_" "_$E(X,I)
"RTN","GMPLUTL1",207,0)
 Q TITLE
"RTN","GMPLUTL1",208,0)
JUSTIFY(X,JUST) ; Justifies Text
"RTN","GMPLUTL1",209,0)
 ; Receives:    X=text to be justified
"RTN","GMPLUTL1",210,0)
 ;           JUST="L" --> left, "C" --> center, "R" --> right,
"RTN","GMPLUTL1",211,0)
 ;                "J" --> justified to WIDTH
"RTN","GMPLUTL1",212,0)
 ;           WIDTH=justification width (when JUST="j"
"RTN","GMPLUTL1",213,0)
 I "Cc"[JUST W ?((80-$L(X))/2),X
"RTN","GMPLUTL1",214,0)
 I "Ll"[JUST W X,!!
"RTN","GMPLUTL1",215,0)
 I "Rr"[JUST W ?(80-$L(X)),X
"RTN","GMPLUTL1",216,0)
 Q
"RTN","GMPLUTL2")
0^7^B80938362
"RTN","GMPLUTL2",1,0)
GMPLUTL2 ; ISL/MKB,KER,JER -- PL Utilities (OE/TIU) ;06/11/12  15:20
"RTN","GMPLUTL2",2,0)
 ;;2.0;Problem List;**10,18,21,26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLUTL2",3,0)
 ;
"RTN","GMPLUTL2",4,0)
 ; External References
"RTN","GMPLUTL2",5,0)
 ;   DBIA   348  ^DPT(  file #2
"RTN","GMPLUTL2",6,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLUTL2",7,0)
 ;   DBIA 10040  ^SC(  file #44
"RTN","GMPLUTL2",8,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLUTL2",9,0)
 ;   DBIA  2716  $$GETSTAT^DGMSTAPI
"RTN","GMPLUTL2",10,0)
 ;   DBIA  3457  $$GETCUR^DGNTAPI
"RTN","GMPLUTL2",11,0)
 ;   DBIA 10062  7^VADPT
"RTN","GMPLUTL2",12,0)
 ;   DBIA 10062  DEM^VADPT
"RTN","GMPLUTL2",13,0)
 ;   DBIA 10118  EN^VALM
"RTN","GMPLUTL2",14,0)
 ;   DBIA 10116  CLEAR^VALM1
"RTN","GMPLUTL2",15,0)
 ;   DBIA 10103  $$HTFM^XLFDT
"RTN","GMPLUTL2",16,0)
 ;
"RTN","GMPLUTL2",17,0)
LIST(GMPL,GMPDFN,GMPSTAT,GMPCOMM) ; Returns list of Problems for Patient
"RTN","GMPLUTL2",18,0)
 D LIST^GMPLUTL3
"RTN","GMPLUTL2",19,0)
 Q
"RTN","GMPLUTL2",20,0)
 ;
"RTN","GMPLUTL2",21,0)
DETAIL(IFN,GMPL) ; Returns Detailed Data for Problem
"RTN","GMPLUTL2",22,0)
 ;
"RTN","GMPLUTL2",23,0)
 ; Input   IFN  Pointer to Problem file #9000011
"RTN","GMPLUTL2",24,0)
 ;
"RTN","GMPLUTL2",25,0)
 ; Output  GMPL Array, passed by reference
"RTN","GMPLUTL2",26,0)
 ;         GMPL("DATA NAME") = External Format of Value
"RTN","GMPLUTL2",27,0)
 ;
"RTN","GMPLUTL2",28,0)
 ;         GMPL("DIAGNOSIS")  ICD Code
"RTN","GMPLUTL2",29,0)
 ;         GMPL("ICDD")       ICD Description
"RTN","GMPLUTL2",30,0)
 ;         GMPL("PATIENT")    Patient Name
"RTN","GMPLUTL2",31,0)
 ;         GMPL("MODIFIED")   Date Last Modified
"RTN","GMPLUTL2",32,0)
 ;         GMPL("NARRATIVE")  Provider Narrative
"RTN","GMPLUTL2",33,0)
 ;         GMPL("ENTERED")    Date Entered ^ Entered by
"RTN","GMPLUTL2",34,0)
 ;         GMPL("STATUS")     Status
"RTN","GMPLUTL2",35,0)
 ;         GMPL("PRIORITY")   Priority Acute/Chronic
"RTN","GMPLUTL2",36,0)
 ;         GMPL("ONSET")      Date of Onset
"RTN","GMPLUTL2",37,0)
 ;         GMPL("PROVIDER")   Responsible Provider
"RTN","GMPLUTL2",38,0)
 ;         GMPL("RECORDED")   Date Recorded ^ Recorded by
"RTN","GMPLUTL2",39,0)
 ;         GMPL("CONDITION")  Patient Condition (#1.02)
"RTN","GMPLUTL2",40,0)
 ;         GMPL("RESOLVED")   Date Resolved (#1.07)
"RTN","GMPLUTL2",41,0)
 ;         GMPL("CLINIC")     Hospital Location
"RTN","GMPLUTL2",42,0)
 ;         GMPL("SERVICE")    Service (#1.06)
"RTN","GMPLUTL2",43,0)
 ;         GMPL("FACILITY")   Facility ID ^ Facility Name (#.06)
"RTN","GMPLUTL2",44,0)
 ;         GMPL("SC")         Service Connected SC/NSC/""
"RTN","GMPLUTL2",45,0)
 ;         GMPL("SCTC")       SNOMED-CT Concept Code
"RTN","GMPLUTL2",46,0)
 ;         GMPL("SCTD")       SNOMED-CT Designation Code
"RTN","GMPLUTL2",47,0)
 ;         GMPL("SCTT")       SNOMED-CT Preferred Text
"RTN","GMPLUTL2",48,0)
 ;         GMPL("VHATC")      VHAT Concept Code
"RTN","GMPLUTL2",49,0)
 ;         GMPL("VHATD")      VHAT Designation Code
"RTN","GMPLUTL2",50,0)
 ;         GMPL("VHATT")      VHAT Preferred Text
"RTN","GMPLUTL2",51,0)
 ;
"RTN","GMPLUTL2",52,0)
 ;         GMPL("ICD9MLTP") = #
"RTN","GMPLUTL2",53,0)
 ;         GMPL("ICD9MLTP",CNT) = ICD-9-CM Code^ICD-9-CM Description
"RTN","GMPLUTL2",54,0)
 ;
"RTN","GMPLUTL2",55,0)
 ;         GMPL("EXPOSURE") = #
"RTN","GMPLUTL2",56,0)
 ;         GMPL("EXPOSURE",X)="AGENT ORANGE"
"RTN","GMPLUTL2",57,0)
 ;         GMPL("EXPOSURE",X)="RADIATION"
"RTN","GMPLUTL2",58,0)
 ;         GMPL("EXPOSURE",X)="ENV CONTAMINANTS"
"RTN","GMPLUTL2",59,0)
 ;         GMPL("EXPOSURE",X)="HEAD AND/OR NECK CANCER"
"RTN","GMPLUTL2",60,0)
 ;         GMPL("EXPOSURE",X)="MILITARY SEXUAL TRAUMA"
"RTN","GMPLUTL2",61,0)
 ;         GMPL("EXPOSURE",X)="COMBAT VET"
"RTN","GMPLUTL2",62,0)
 ;         GMPL("EXPOSURE",X)="SHAD"
"RTN","GMPLUTL2",63,0)
 ;
"RTN","GMPLUTL2",64,0)
 ;         GMPL("COMMENT") = #
"RTN","GMPLUTL2",65,0)
 ;         GMPL("COMMENT",CNT) = Date ^ Author ^ Text of Note
"RTN","GMPLUTL2",66,0)
 ;
"RTN","GMPLUTL2",67,0)
 N GMPL0,GMPL1,GMPL800,GMPL803,GMPLP,X,I,FAC,CNT,NIFN Q:'$D(^AUPNPROB(IFN,0))
"RTN","GMPLUTL2",68,0)
 S GMPLP=+($$PTR^GMPLUTL4)
"RTN","GMPLUTL2",69,0)
 S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)),GMPL803=$G(^(803,0))
"RTN","GMPLUTL2",70,0)
 S GMPL("DIAGNOSIS")=$P($$ICDDX^ICDCODE(+GMPL0),U,2)
"RTN","GMPLUTL2",71,0)
 S GMPL("FACILITY")=$$RESOLVE(IFN,".06","IE")
"RTN","GMPLUTL2",72,0)
 S GMPL("ICDD")=$$ICDDESC(GMPL("DIAGNOSIS"),$P(GMPL0,U,8))
"RTN","GMPLUTL2",73,0)
 S GMPL("PATIENT")=$P($G(^DPT(+$P(GMPL0,U,2),0)),U)
"RTN","GMPLUTL2",74,0)
 S GMPL("MODIFIED")=$$EXTDT^GMPLX($P(GMPL0,U,3))
"RTN","GMPLUTL2",75,0)
 S GMPL("NARRATIVE")=$$PROBTEXT^GMPLX(IFN)
"RTN","GMPLUTL2",76,0)
 S GMPL("ENTERED")=$$EXTDT^GMPLX($P(GMPL0,U,8))_U_$P($G(^VA(200,+$P(GMPL1,U,3),0)),U)
"RTN","GMPLUTL2",77,0)
 S X=$P(GMPL0,U,12),GMPL("STATUS")=$S(X="A":"ACTIVE",1:"INACTIVE")
"RTN","GMPLUTL2",78,0)
 S X=$S(X'="A":"",1:$P(GMPL1,U,14)),GMPL("PRIORITY")=$S(X="A":"ACUTE",X="C":"CHRONIC",1:"")
"RTN","GMPLUTL2",79,0)
 S GMPL("ONSET")=$$EXTDT^GMPLX($P(GMPL0,U,13))
"RTN","GMPLUTL2",80,0)
 S GMPL("CONDITION")=$$RESOLVE(IFN,"1.02","E")
"RTN","GMPLUTL2",81,0)
 S GMPL("PROVIDER")=$P($G(^VA(200,+$P(GMPL1,U,5),0)),U)
"RTN","GMPLUTL2",82,0)
 S GMPL("RECORDED")=$$EXTDT^GMPLX($P(GMPL1,U,9))_U_$P($G(^VA(200,+$P(GMPL1,U,4),0)),U)
"RTN","GMPLUTL2",83,0)
 S GMPL("RESOLVED")=$$EXTDT^GMPLX($P(GMPL1,U,7))
"RTN","GMPLUTL2",84,0)
 S GMPL("CLINIC")=$P($G(^SC(+$P(GMPL1,U,8),0)),U)
"RTN","GMPLUTL2",85,0)
 S GMPL("SERVICE")=$$RESOLVE(IFN,1.06,"E")
"RTN","GMPLUTL2",86,0)
 S GMPL("SCTC")=$P(GMPL800,U),GMPL("SCTD")=$P(GMPL800,U,2)
"RTN","GMPLUTL2",87,0)
 I $L($G(GMPL("SCTC"))) S GMPL("SCTT")=$$SCTTEXT(GMPL("SCTC"),$P(GMPL0,U,8),"SCT")
"RTN","GMPLUTL2",88,0)
 S GMPL("VHATC")=$P(GMPL800,U,3),GMPL("VHATD")=$P(GMPL800,U,4)
"RTN","GMPLUTL2",89,0)
 I $L($G(GMPL("VHATC"))) S GMPL("VHATT")=$$SCTTEXT(GMPL("VHATC"),$P(GMPL0,U,8),"VHAT")
"RTN","GMPLUTL2",90,0)
 I $L($G(GMPL803))>0 D
"RTN","GMPLUTL2",91,0)
 . N DA,ICDDESC S (CNT,DA)=0,GMPL("ICD9MLTP")=0 F  S DA=$O(^AUPNPROB(IFN,803,DA)) Q:'+DA  D
"RTN","GMPLUTL2",92,0)
 . . S X=$G(^AUPNPROB(IFN,803,DA,0)),ICDDESC=$$ICDDESC^GMPLUTL2($P(X,U))
"RTN","GMPLUTL2",93,0)
 . . S CNT=CNT+1,GMPL("ICD9MLTP",CNT)=$P(X,U)_U_$G(ICDDESC)
"RTN","GMPLUTL2",94,0)
 . S GMPL("ICD9MLTP")=CNT
"RTN","GMPLUTL2",95,0)
 E  S GMPL("ICD9MLTP")=""
"RTN","GMPLUTL2",96,0)
 S GMPL("SC")=$S($P(GMPL1,U,10):"YES",$P(GMPL1,U,10)=0:"NO",1:"UNKNOWN")
"RTN","GMPLUTL2",97,0)
 S GMPL("EXPOSURE")=0
"RTN","GMPLUTL2",98,0)
 I $P(GMPL1,U,11) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="AGENT ORANGE",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",99,0)
 I $P(GMPL1,U,12) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="RADIATION",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",100,0)
 I $P(GMPL1,U,13) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="ENV CONTAMINANTS",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",101,0)
 I $P(GMPL1,U,15) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="HEAD AND/OR NECK CANCER",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",102,0)
 I $P(GMPL1,U,16) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="MILITARY SEXUAL TRAUMA",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",103,0)
 I $P(GMPL1,U,17) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="COMBAT VET",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",104,0)
 I $P(GMPL1,U,18)&(GMPLP'>0) S X=GMPL("EXPOSURE")+1,GMPL("EXPOSURE",X)="SHAD",GMPL("EXPOSURE")=X
"RTN","GMPLUTL2",105,0)
 S (FAC,CNT)=0,GMPL("COMMENT")=0
"RTN","GMPLUTL2",106,0)
 F FAC=0:0 S FAC=$O(^AUPNPROB(IFN,11,FAC)) Q:+FAC'>0  D
"RTN","GMPLUTL2",107,0)
 . F NIFN=0:0 S NIFN=$O(^AUPNPROB(IFN,11,FAC,11,NIFN)) Q:NIFN'>0  D
"RTN","GMPLUTL2",108,0)
 . . S X=$G(^AUPNPROB(IFN,11,FAC,11,NIFN,0))
"RTN","GMPLUTL2",109,0)
 . . S CNT=CNT+1,GMPL("COMMENT",CNT)=$$EXTDT^GMPLX($P(X,U,5))_U_$P($G(^VA(200,+$P(X,U,6),0)),U)_U_$P(X,U,3)
"RTN","GMPLUTL2",110,0)
 S GMPL("COMMENT")=CNT D AUDIT
"RTN","GMPLUTL2",111,0)
 Q
"RTN","GMPLUTL2",112,0)
 ;
"RTN","GMPLUTL2",113,0)
RESOLVE(IEN,FIELD,FORMAT) ; Call GET1^DIQ to resolve field values
"RTN","GMPLUTL2",114,0)
 ;  Input:    IEN = Record #
"RTN","GMPLUTL2",115,0)
 ;          FIELD = Field # in PROBLEMS file #9000011
"RTN","GMPLUTL2",116,0)
 ;         FORMAT = "I"nternal, "E"xternal, or "IE" -> both
"RTN","GMPLUTL2",117,0)
 ; Output: GMPLY = value as specified by format
"RTN","GMPLUTL2",118,0)
 N GMPLY
"RTN","GMPLUTL2",119,0)
 S IEN=IEN_","
"RTN","GMPLUTL2",120,0)
 S GMPLY=$$GET1^DIQ(9000011,IEN,FIELD,FORMAT)
"RTN","GMPLUTL2",121,0)
 S:FORMAT="IE" GMPLY=GMPLY_U_$$GET1^DIQ(9000011,IEN,FIELD,"E")
"RTN","GMPLUTL2",122,0)
 Q GMPLY
"RTN","GMPLUTL2",123,0)
AUDIT ; 14 Sep 99 - MA - Add audit trail to OE Problem List.
"RTN","GMPLUTL2",124,0)
 ; Called from DETAIL, requires IFN and sets GMPL("AUDIT")
"RTN","GMPLUTL2",125,0)
 N IDT,AIFN,X0,X1,FLD,CNT
"RTN","GMPLUTL2",126,0)
 S CNT=0,GMPL("AUDIT")=CNT
"RTN","GMPLUTL2",127,0)
 F IDT=0:0 S IDT=$O(^GMPL(125.8,"AD",IFN,IDT)) Q:IDT'>0  D
"RTN","GMPLUTL2",128,0)
 . F AIFN=0:0 S AIFN=$O(^GMPL(125.8,"AD",IFN,IDT,AIFN)) Q:AIFN'>0  D
"RTN","GMPLUTL2",129,0)
 .. S X0=$G(^GMPL(125.8,AIFN,0)),X1=$G(^(1)) Q:'$L(X0)
"RTN","GMPLUTL2",130,0)
 .. S FLD=$$FLDNAME(+$P(X0,U,2))
"RTN","GMPLUTL2",131,0)
 .. S CNT=CNT+1
"RTN","GMPLUTL2",132,0)
 .. S GMPL("AUDIT",CNT,0)=$P(X0,U,2)_U_FLD_U_$P(X0,U,3,8)
"RTN","GMPLUTL2",133,0)
 .. ; = pointer#^fld name^date mod^who mod^old^new^reason^prov
"RTN","GMPLUTL2",134,0)
 .. S:$L(X1) GMPL("AUDIT",CNT,1)=X1
"RTN","GMPLUTL2",135,0)
 S GMPL("AUDIT")=CNT
"RTN","GMPLUTL2",136,0)
 Q
"RTN","GMPLUTL2",137,0)
 ;
"RTN","GMPLUTL2",138,0)
FLDNAME(NUM) ; Returns field name for display
"RTN","GMPLUTL2",139,0)
 N NAME,NM1,NM2,I,J S J=0,NAME=""
"RTN","GMPLUTL2",140,0)
 S NM1=".01^.05^.12^.13^1.01^1.02^1.04^1.05^1.06^1.07^1.08^1.09^1.1^1.11^1.12^1.13^1.14^1.15^1.16^1.17^1.18^80001^80002^80003^80004^80005^302^1101"
"RTN","GMPLUTL2",141,0)
 F I=1:1:$L(NM1,U) I +$P(NM1,U,I)=+NUM S J=I Q
"RTN","GMPLUTL2",142,0)
 G:J'>0 FNQ
"RTN","GMPLUTL2",143,0)
 S NM2="DIAGNOSIS^PROVIDER NARRATIVE^STATUS^DATE OF ONSET^PROBLEM^CONDITION^RECORDING PROVIDER^RESPONSIBLE PROVIDER"
"RTN","GMPLUTL2",144,0)
 S NM2=NM2_"^SERVICE^DATE RESOLVED^CLINIC^DATE RECORDED^SERVICE CONNECTED^AGENT ORANGE EXP^RADIATION EXP^ENV CONTAMINANTS EXP"
"RTN","GMPLUTL2",145,0)
 S NM2=NM2_"^IMMEDIACY^HEAD & NECK CANCER^MIL SEX TRAUMA^COMBAT VET^SHIPBOARD HAZARD EXP^SNOMED CT CONCEPT^SNOMED CT DESIGNATION"
"RTN","GMPLUTL2",146,0)
 S NM2=NM2_"^VHAT CONCEPT^VHAT DESIGNATION^SNOMED CT/ICD MAP STATUS^SECONDARY DIAGNOSIS^NOTE"
"RTN","GMPLUTL2",147,0)
 S NAME=$P(NM2,U,J)
"RTN","GMPLUTL2",148,0)
FNQ Q NAME
"RTN","GMPLUTL2",149,0)
 ;
"RTN","GMPLUTL2",150,0)
ADD(DFN,LOC,GMPROV) ; -- Interactive LMgr action to add new problem
"RTN","GMPLUTL2",151,0)
 N X,Y,GMPDFN,GMPVA,GMPVAMC,GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","GMPLUTL2",152,0)
 N GMPARAM,GMPLVIEW,GMPLUSER,GMPCLIN,GMPLSLST,GMPQUIT,VALMCC,GMPSAVED
"RTN","GMPLUTL2",153,0)
 Q:'DFN  Q:'LOC  D SETVARS
"RTN","GMPLUTL2",154,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2),VALMCC=0
"RTN","GMPLUTL2",155,0)
 I 'GMPLSLST,GMPCLIN,$D(^GMPL(125,"C",+GMPCLIN)) S GMPLSLST=$O(^(+GMPCLIN,0))
"RTN","GMPLUTL2",156,0)
 I GMPLSLST D  Q
"RTN","GMPLUTL2",157,0)
 . S $P(GMPLSLST,U,2)=$P($G(^GMPL(125,+GMPLSLST,0)),U)
"RTN","GMPLUTL2",158,0)
 . D EN^VALM("GMPL LIST MENU")
"RTN","GMPLUTL2",159,0)
 F  D ADD^GMPL1 Q:$D(GMPQUIT)  K DUOUT,DTOUT,GMPSAVED W !!,">>>  Please enter another problem, or press <return> to exit."
"RTN","GMPLUTL2",160,0)
 Q
"RTN","GMPLUTL2",161,0)
 ;
"RTN","GMPLUTL2",162,0)
SETVARS ; -- Define GMP* variables used in ADD and EDIT
"RTN","GMPLUTL2",163,0)
 N VA,VADM,VAEL,VASV,X
"RTN","GMPLUTL2",164,0)
 Q:'DFN  D DEM^VADPT,7^VADPT
"RTN","GMPLUTL2",165,0)
 S GMPDFN=DFN_U_VADM(1)_U_$E(VADM(1))_VA("BID")_$S(VADM(6):U_+VADM(6),1:"")
"RTN","GMPLUTL2",166,0)
 S AUPNSEX=$P(VADM(5),U),GMPVA=1,GMPSC=VAEL(3),GMPAGTOR=VASV(2),GMPION=VASV(3)
"RTN","GMPLUTL2",167,0)
 S X=$P($G(^DPT(DFN,.322)),U,10),GMPGULF=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLUTL2",168,0)
 S GMPCV=0 I +$G(VASV(10)) S:DT'>$P($G(VASV(10,1)),U) GMPCV=1 ;CV
"RTN","GMPLUTL2",169,0)
 S GMPSHD=+$G(VASV(14,1)) ;SHAD
"RTN","GMPLUTL2",170,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT"))),GMPHNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","GMPLUTL2",171,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),"^",2),GMPMST=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLUTL2",172,0)
 S GMPLVIEW("VIEW")=$S($P($G(^SC(+$G(LOC),0)),U,3)="C":"C",1:"S")
"RTN","GMPLUTL2",173,0)
 S GMPCLIN="" I $G(LOC),GMPLVIEW("VIEW")="C" S GMPCLIN=+LOC_U_$P(^SC(+LOC,0),U)
"RTN","GMPLUTL2",174,0)
 S X=$$PARAM,GMPARAM("VER")=+$P(X,U,2),GMPARAM("CLU")=+$P(X,U,4),GMPARAM("REV")=+$P(X,U,5)
"RTN","GMPLUTL2",175,0)
 S:+GMPROV=DUZ GMPLUSER=1 S GMPVAMC=+$G(DUZ(2)),GMPLIST(0)=0
"RTN","GMPLUTL2",176,0)
 Q
"RTN","GMPLUTL2",177,0)
 ;
"RTN","GMPLUTL2",178,0)
EDIT(DFN,LOC,GMPROV,GMPIFN) ; Interactive LMgr action to edit a problem
"RTN","GMPLUTL2",179,0)
 N GMPARAM,GMPDFN,GMPVA,GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","GMPLUTL2",180,0)
 N GMPLVIEW,GMPCLIN,GMPLJUMP,GMPQUIT,GMPLUSER,GMPLVAMC,AUPNSEX
"RTN","GMPLUTL2",181,0)
 L +^AUPNPROB(GMPIFN,0):1 I '$T W $C(7),!!,$$LOCKED^GMPLX,! H 2 Q
"RTN","GMPLUTL2",182,0)
 D SETVARS,EN^VALM("GMPL EDIT PROBLEM")
"RTN","GMPLUTL2",183,0)
 L -^AUPNPROB(GMPIFN,0)
"RTN","GMPLUTL2",184,0)
 Q
"RTN","GMPLUTL2",185,0)
 ;
"RTN","GMPLUTL2",186,0)
REMOVE(GMPIFN,GMPROV,TEXT,PLY) ; -- Remove problem GMPIFN
"RTN","GMPLUTL2",187,0)
 N GMPVAMC,CHANGE
"RTN","GMPLUTL2",188,0)
 S GMPVAMC=+$G(DUZ(2)),PLY=-1,PLY(0)=""
"RTN","GMPLUTL2",189,0)
 I '$L($G(^AUPNPROB(GMPIFN,0))) S PLY(0)="Invalid problem" Q
"RTN","GMPLUTL2",190,0)
 I '$D(^VA(200,+$G(GMPROV),0)) S PLY(0)="Invalid provider" Q
"RTN","GMPLUTL2",191,0)
 I $L($G(TEXT)) S GMPFLD(10,"NEW",1)=TEXT D NEWNOTE^GMPLSAVE
"RTN","GMPLUTL2",192,0)
 S CHANGE=GMPIFN_"^1.02^"_$$HTFM^XLFDT($H)_U_DUZ_U_$P($G(^AUPNPROB(GMPIFN,1)),U,2)_"^H^Deleted^"_+$G(GMPROV),$P(^AUPNPROB(GMPIFN,1),U,2)="H",PLY=GMPIFN
"RTN","GMPLUTL2",193,0)
 D AUDIT^GMPLX(CHANGE,""),DTMOD^GMPLX(GMPIFN)
"RTN","GMPLUTL2",194,0)
 Q
"RTN","GMPLUTL2",195,0)
 ;
"RTN","GMPLUTL2",196,0)
PARAM() ; -- Returns parameter values from 125.99
"RTN","GMPLUTL2",197,0)
 Q $G(^GMPL(125.99,1,0))
"RTN","GMPLUTL2",198,0)
 ;
"RTN","GMPLUTL2",199,0)
VAF(DFN,SILENT) ; -- print PL VA Form chart copy
"RTN","GMPLUTL2",200,0)
 ;
"RTN","GMPLUTL2",201,0)
 N VA,VADM,VAERR,GMPDFN,GMPVAMC,X,GMPARAM,GMPRT,GMPQUIT,GMPLCURR
"RTN","GMPLUTL2",202,0)
 Q:'$G(DFN)  D DEM^VADPT S GMPDFN=DFN_U_VADM(1)_U_$E(VADM(1))_VA("BID")
"RTN","GMPLUTL2",203,0)
 S GMPVAMC=+$G(DUZ(2)),GMPARAM("QUIET")=1
"RTN","GMPLUTL2",204,0)
 S X=$G(^GMPL(125.99,1,0)),GMPARAM("VER")=+$P(X,U,2),GMPARAM("PRT")=+$P(X,U,3),GMPARAM("CLU")=+$P(X,U,4),GMPARAM("REV")=$S($P(X,U,5)="R":1,1:0) K X
"RTN","GMPLUTL2",205,0)
 D VAF^GMPLPRNT I '$G(SILENT) D  Q:$G(GMPQUIT)
"RTN","GMPLUTL2",206,0)
 . I GMPRT'>0 W !!,"No problems available." S GMPQUIT=1 Q
"RTN","GMPLUTL2",207,0)
 . D DEVICE^GMPLPRNT Q:$G(GMPQUIT)  D CLEAR^VALM1
"RTN","GMPLUTL2",208,0)
 D PRT^GMPLPRNT
"RTN","GMPLUTL2",209,0)
 Q
"RTN","GMPLUTL2",210,0)
SCTTEXT(GMPLCODE,GMPDT,GMPSYS) ; Get Preferred Text for SCT Code
"RTN","GMPLUTL2",211,0)
 N %DT,GMPY,LEX,LEXY S GMPY="",GMPDT=$G(GMPDT,DT),GMPSYS=$G(GMPSYS,"SCT")
"RTN","GMPLUTL2",212,0)
 S LEXY=$$CODE^LEXTRAN(GMPLCODE,GMPSYS,GMPDT)
"RTN","GMPLUTL2",213,0)
 I '+LEXY G SCTTEXQ
"RTN","GMPLUTL2",214,0)
 S GMPY=$G(LEX("P"))
"RTN","GMPLUTL2",215,0)
SCTTEXQ Q GMPY
"RTN","GMPLUTL2",216,0)
ICDDESC(GMPLCODE,GMPDT) ; Get description for ICD9 Code
"RTN","GMPLUTL2",217,0)
 N ICDD,GMPY,ICDY S GMPY="",GMPDT=$G(GMPDT,DT)
"RTN","GMPLUTL2",218,0)
 S ICDY=$$ICDD^ICDCODE(GMPLCODE,"ICDD",GMPDT)
"RTN","GMPLUTL2",219,0)
 I 'ICDY G ICDDESQ
"RTN","GMPLUTL2",220,0)
 S GMPY=$G(ICDD(1))
"RTN","GMPLUTL2",221,0)
ICDDESQ Q GMPY
"RTN","GMPLUTL3")
0^12^B16541154
"RTN","GMPLUTL3",1,0)
GMPLUTL3 ; SLC/JST/JVS/TC -- PL Utilities (CIRN)           ;06/08/12  16:54
"RTN","GMPLUTL3",2,0)
 ;;2.0;Problem List;**14,15,19,25,26,36**;Aug 25, 1994;Build 65
"RTN","GMPLUTL3",3,0)
 ;
"RTN","GMPLUTL3",4,0)
 ; External References
"RTN","GMPLUTL3",5,0)
 ;   DBIA  3990  $$ICDDX^ICDCODE
"RTN","GMPLUTL3",6,0)
 ;
"RTN","GMPLUTL3",7,0)
 ; This routine is primarily called by CIRN for use
"RTN","GMPLUTL3",8,0)
 ; in HL7 (RGHOPL), and Historical Load (RGHOPLB),
"RTN","GMPLUTL3",9,0)
 ; record creation.
"RTN","GMPLUTL3",10,0)
 ;
"RTN","GMPLUTL3",11,0)
 ; NOTE: This routine DOES NOT NEW the variables
"RTN","GMPLUTL3",12,0)
 ;       that are set below.
"RTN","GMPLUTL3",13,0)
 ;
"RTN","GMPLUTL3",14,0)
CALL0(GMPLZ) ; Call 0 - Get Node 0
"RTN","GMPLUTL3",15,0)
 N GMPLCOND I $P($G(^AUPNPROB(GMPLZ,1)),"^",2)="H" S GMPLCOND="H" D CLEAR Q
"RTN","GMPLUTL3",16,0)
 I '$D(^AUPNPROB(GMPLZ,0)) D CLEAR Q
"RTN","GMPLUTL3",17,0)
 D NODE0
"RTN","GMPLUTL3",18,0)
 Q
"RTN","GMPLUTL3",19,0)
 ;
"RTN","GMPLUTL3",20,0)
CALL1(GMPLZ) ; Call 1 - Get Node 1
"RTN","GMPLUTL3",21,0)
 N GMPLCOND I $P($G(^AUPNPROB(GMPLZ,1)),"^",2)="H" S GMPLCOND="H" D CLEAR Q
"RTN","GMPLUTL3",22,0)
 I '$D(^AUPNPROB(GMPLZ,0)) D CLEAR Q
"RTN","GMPLUTL3",23,0)
 D NODE1
"RTN","GMPLUTL3",24,0)
 Q
"RTN","GMPLUTL3",25,0)
 ;
"RTN","GMPLUTL3",26,0)
CALL2(GMPLZ) ; Call 2 - Get both Node 0 and Node 1
"RTN","GMPLUTL3",27,0)
 I $P($G(^AUPNPROB(GMPLZ,1)),"^",2)="H" S GMPLCOND="H" D CLEAR Q
"RTN","GMPLUTL3",28,0)
 I '$D(^AUPNPROB(GMPLZ,0)) D CLEAR Q
"RTN","GMPLUTL3",29,0)
 D NODE0,NODE1
"RTN","GMPLUTL3",30,0)
 Q
"RTN","GMPLUTL3",31,0)
 ;
"RTN","GMPLUTL3",32,0)
NODE0 ; Set Node 0 data variables
"RTN","GMPLUTL3",33,0)
 N GMPLZ0
"RTN","GMPLUTL3",34,0)
 S GMPLZ0=$G(^AUPNPROB(GMPLZ,0))
"RTN","GMPLUTL3",35,0)
 ;   Diagnosis
"RTN","GMPLUTL3",36,0)
 S GMPLICD=$P(GMPLZ0,U)
"RTN","GMPLUTL3",37,0)
 ;   Patient Name
"RTN","GMPLUTL3",38,0)
 S GMPLPNAM=$P(GMPLZ0,U,2)
"RTN","GMPLUTL3",39,0)
 ;   Date Last Modifed
"RTN","GMPLUTL3",40,0)
 S GMPLDLM=$P(GMPLZ0,U,3)
"RTN","GMPLUTL3",41,0)
 ;   Provider Narrative
"RTN","GMPLUTL3",42,0)
 S GMPLTXT=$P(GMPLZ0,U,5)
"RTN","GMPLUTL3",43,0)
 ;   Status
"RTN","GMPLUTL3",44,0)
 S GMPLSTAT=$P(GMPLZ0,U,12)
"RTN","GMPLUTL3",45,0)
 ;   Date of Onset
"RTN","GMPLUTL3",46,0)
 S GMPLODAT=$P(GMPLZ0,U,13)
"RTN","GMPLUTL3",47,0)
 ;   Date Entered
"RTN","GMPLUTL3",48,0)
 S:'GMPLODAT GMPLODAT=$P(GMPLZ0,U,8)
"RTN","GMPLUTL3",49,0)
 Q
"RTN","GMPLUTL3",50,0)
 ;
"RTN","GMPLUTL3",51,0)
NODE1 ; Set Node 1 data variables
"RTN","GMPLUTL3",52,0)
 N GMPLZ1
"RTN","GMPLUTL3",53,0)
 S GMPLZ1=$G(^AUPNPROB(GMPLZ,1))
"RTN","GMPLUTL3",54,0)
 ;   Problem
"RTN","GMPLUTL3",55,0)
 S GMPLLEX=$P(GMPLZ1,U)
"RTN","GMPLUTL3",56,0)
 ;   Condition
"RTN","GMPLUTL3",57,0)
 S GMPLCOND=$P(GMPLZ1,U,2)
"RTN","GMPLUTL3",58,0)
 ;   Recording Provider
"RTN","GMPLUTL3",59,0)
 S GMPLPRV=$P(GMPLZ1,U,4)
"RTN","GMPLUTL3",60,0)
 ;   Responsible Provider
"RTN","GMPLUTL3",61,0)
 S:'GMPLPRV GMPLPRV=$P(GMPLZ1,U,5)
"RTN","GMPLUTL3",62,0)
 ;   Date Resolved
"RTN","GMPLUTL3",63,0)
 S GMPLXDAT=$P(GMPLZ1,U,7)
"RTN","GMPLUTL3",64,0)
 ;   Priority
"RTN","GMPLUTL3",65,0)
 S GMPLPRIO=$P(GMPLZ1,U,14)
"RTN","GMPLUTL3",66,0)
 Q
"RTN","GMPLUTL3",67,0)
 ;
"RTN","GMPLUTL3",68,0)
CLEAR ; Set Variables Equal to Null
"RTN","GMPLUTL3",69,0)
 S (GMPLZ0,GMPLICD,GMPLPNAM,GMPLDLM,GMPLTXT,GMPLSTAT,GMPLODAT)=""
"RTN","GMPLUTL3",70,0)
 S (GMPLZ1,GMPLLEX,GMPLPRV,GMPLXDAT,GMPLPRIO,GMPLCOND)=""
"RTN","GMPLUTL3",71,0)
 Q
"RTN","GMPLUTL3",72,0)
MOD(DFN) ; Return the Date the Patients Problem List was Last Modified
"RTN","GMPLUTL3",73,0)
 Q +$O(^AUPNPROB("MODIFIED",DFN,0))
"RTN","GMPLUTL3",74,0)
LIST ; Returns list of Problems for Patient
"RTN","GMPLUTL3",75,0)
 ;
"RTN","GMPLUTL3",76,0)
 ;   Input   GMPDFN  Pointer to Patient file #2
"RTN","GMPLUTL3",77,0)
 ;           GMPCOMP Display Comments 1/0
"RTN","GMPLUTL3",78,0)
 ;           GMTSTAT Status A/I/""
"RTN","GMPLUTL3",79,0)
 ;
"RTN","GMPLUTL3",80,0)
 ;   Output  GMPL    Array, passed by reference
"RTN","GMPLUTL3",81,0)
 ;           GMPL(#)
"RTN","GMPLUTL3",82,0)
 ;             Piece 1:  Pointer to Problem #9000011
"RTN","GMPLUTL3",83,0)
 ;                   2:  Status
"RTN","GMPLUTL3",84,0)
 ;                   3:  Provider Narrative
"RTN","GMPLUTL3",85,0)
 ;                   4:  ICD-9 code
"RTN","GMPLUTL3",86,0)
 ;                   5:  Date of Onset
"RTN","GMPLUTL3",87,0)
 ;                   6:  Date Last Modified
"RTN","GMPLUTL3",88,0)
 ;                   7:  Service Connected
"RTN","GMPLUTL3",89,0)
 ;                   8:  Special Exposures
"RTN","GMPLUTL3",90,0)
 ;                   9:  Priority
"RTN","GMPLUTL3",91,0)
 ;                  10:  Transcribed Problem or not
"RTN","GMPLUTL3",92,0)
 ;                  11:  SNOMED-CT Concept code
"RTN","GMPLUTL3",93,0)
 ;                  12:  SNOMED-CT Designation code
"RTN","GMPLUTL3",94,0)
 ;       GMPL(1,"ICDD")  ICD-9 Description
"RTN","GMPLUTL3",95,0)
 ;           GMPL(#,C#)  Comments
"RTN","GMPLUTL3",96,0)
 ;           GMPL(0)     Number of Problems Returned
"RTN","GMPLUTL3",97,0)
 ;
"RTN","GMPLUTL3",98,0)
 N CNT,NUM,GMPLIST,GMPLVIEW,GMPARAM,GMPTOTAL
"RTN","GMPLUTL3",99,0)
 Q:$G(GMPDFN)'>0  S CNT=0
"RTN","GMPLUTL3",100,0)
 S GMPARAM("QUIET")=1,GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","GMPLUTL3",101,0)
 S GMPLVIEW("ACT")=GMPSTAT,GMPLVIEW("PROV")=0,GMPLVIEW("VIEW")=""
"RTN","GMPLUTL3",102,0)
 D GETPLIST^GMPLMGR1(.GMPLIST,.GMPTOTAL,.GMPLVIEW)
"RTN","GMPLUTL3",103,0)
 F NUM=0:0 S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D
"RTN","GMPLUTL3",104,0)
 . N GMPL0,GMPL1,GMPL800,ICD,ICDD,IFN,LASTMOD,ONSET,SC,SCS,SCTC,SCTD,SP,ST
"RTN","GMPLUTL3",105,0)
 . S IFN=+GMPLIST(NUM) Q:IFN'>0
"RTN","GMPLUTL3",106,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1)),GMPL800=$G(^(800)),CNT=CNT+1
"RTN","GMPLUTL3",107,0)
 . S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2),LASTMOD=$P(GMPL0,U,3)
"RTN","GMPLUTL3",108,0)
 . S ST=$P(GMPL0,U,12),ONSET=$P(GMPL0,U,13)
"RTN","GMPLUTL3",109,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","GMPLUTL3",110,0)
 . D SCS^GMPLX1(IFN,.SCS) S SP=$G(SCS(3))
"RTN","GMPLUTL3",111,0)
 . S SCTC=$P(GMPL800,U),SCTD=$P(GMPL800,U,2)
"RTN","GMPLUTL3",112,0)
 . I +SCTC'>0&(+SCTD'>0) S ICDD=$$ICDDESC^GMPLUTL2(ICD,$P(GMPL0,U,8))
"RTN","GMPLUTL3",113,0)
 . S GMPL(CNT)=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET_U_LASTMOD_U_SC_U_SP_U_$S($P(GMPL1,U,14)="A":"*",1:"")_U_$S('$P($G(^GMPL(125.99,1,0)),U,2):"",$P(GMPL1,U,2)'="T":"",1:"$")_U_SCTC_U_SCTD
"RTN","GMPLUTL3",114,0)
 . I $L($G(ICDD)) S GMPL(CNT,"ICDD")=ICDD
"RTN","GMPLUTL3",115,0)
 . I $G(GMPCOMM) D
"RTN","GMPLUTL3",116,0)
 . . N FAC,NIFN,NOTE,NOTECNT
"RTN","GMPLUTL3",117,0)
 . . S NOTECNT=0,FAC=0
"RTN","GMPLUTL3",118,0)
 . . F  S FAC=$O(^AUPNPROB(IFN,11,FAC)) Q:+FAC'>0  D
"RTN","GMPLUTL3",119,0)
 . . . S NIFN=0
"RTN","GMPLUTL3",120,0)
 . . . F  S NIFN=$O(^AUPNPROB(IFN,11,FAC,11,NIFN)) Q:NIFN'>0  D
"RTN","GMPLUTL3",121,0)
 . . . . S NOTE=$P($G(^AUPNPROB(IFN,11,FAC,11,NIFN,0)),U,3)
"RTN","GMPLUTL3",122,0)
 . . . . S NOTECNT=NOTECNT+1,GMPL(CNT,NOTECNT)=NOTE
"RTN","GMPLUTL3",123,0)
 S GMPL(0)=CNT
"RTN","GMPLUTL3",124,0)
 Q
"RTN","GMPLX")
0^8^B82126474
"RTN","GMPLX",1,0)
GMPLX ; ISL/MKB,AJB,JER -- Problem List Problem Utilities ;06/08/12  17:01
"RTN","GMPLX",2,0)
 ;;2.0;Problem List;**7,23,26,28,27,36**;Aug 25, 1994;Build 65
"RTN","GMPLX",3,0)
 ;
"RTN","GMPLX",4,0)
 ; External References
"RTN","GMPLX",5,0)
 ;  DBIA   446 ^AUTNPOV(
"RTN","GMPLX",6,0)
 ;  DBIA  3990  $$ICDDX^ICDCODE & $$CODEN^ICDCODE
"RTN","GMPLX",7,0)
 ;  DBIA 10060 ^VA(200
"RTN","GMPLX",8,0)
 ;  DBIA 10006 ^DIC
"RTN","GMPLX",9,0)
 ;  DBIA 10009 FILE^DICN
"RTN","GMPLX",10,0)
 ;  DBIA 10013 EN^DIK
"RTN","GMPLX",11,0)
 ;  DBIA 10013 IX1^DIK
"RTN","GMPLX",12,0)
 ;  DBIA 10026 ^DIR
"RTN","GMPLX",13,0)
 ;  DBIA  1609 CONFIG^LEXSET
"RTN","GMPLX",14,0)
 ;  DBIA 10103 $$FMTE^XLFDT
"RTN","GMPLX",15,0)
 ;  DBIA 10104 $$UP^XLFSTR
"RTN","GMPLX",16,0)
 ;  DBIA  2742 GMPLX
"RTN","GMPLX",17,0)
 ;  DBIA  3991 $$STATCHK^ICDAPIU
"RTN","GMPLX",18,0)
 ;
"RTN","GMPLX",19,0)
SEARCH(X,Y,PROMPT,UNRES,VIEW) ; Search Lexicon for Problem X
"RTN","GMPLX",20,0)
 N DIC S:'$L($G(VIEW)) VIEW="PLS" D CONFIG^LEXSET("GMPX",VIEW,DT)
"RTN","GMPLX",21,0)
 S DIC("A")=$S($L($G(PROMPT)):PROMPT,1:"Select PROBLEM: ")
"RTN","GMPLX",22,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"A",1:"")_"EQM"
"RTN","GMPLX",23,0)
 S:'$G(UNRES) LEXUN=0 D ^DIC
"RTN","GMPLX",24,0)
 I +Y>1 D
"RTN","GMPLX",25,0)
 .N CODE,SRC
"RTN","GMPLX",26,0)
 .S X=$P(Y,U,2)
"RTN","GMPLX",27,0)
 .D EXP2CODE(+Y,.SRC,.CODE)
"RTN","GMPLX",28,0)
 .I (SRC["SNOMED")!(SRC["VHAT") S (X,$P(Y,U,2))=X_" ("_$S(SRC["SNOMED":"SCT",1:"VHAT")_" "_CODE_")",Y(1)=$$GETDX(CODE,SRC)
"RTN","GMPLX",29,0)
 Q
"RTN","GMPLX",30,0)
 ;
"RTN","GMPLX",31,0)
PROVNARR(X,CL) ; Returns IFN ^ Text of Narrative (#9999999.27)
"RTN","GMPLX",32,0)
 N DIC,Y,DLAYGO,DD,DO,DA S:$L(X)>245 X=$E(X,1,245)
"RTN","GMPLX",33,0)
 S DIC="^AUTNPOV(",DIC(0)="L",DLAYGO=9999999.27,(DA,Y)=0
"RTN","GMPLX",34,0)
 F  S DA=$O(^AUTNPOV("B",$E(X,1,30),DA)) Q:DA'>0  I $P(^AUTNPOV(DA,0),U)=X S Y=DA_U_X Q
"RTN","GMPLX",35,0)
 I '(+Y) K DA,Y D FILE^DICN S:Y'>0 Y=U_X I Y>0,CL>1 S ^AUTNPOV(+Y,757)=CL
"RTN","GMPLX",36,0)
 Q $P(Y,U,1,2)
"RTN","GMPLX",37,0)
 ;
"RTN","GMPLX",38,0)
PROBTEXT(IFN) ; Returns Display Text
"RTN","GMPLX",39,0)
 N X,Y,ICD,SCTC,GMPL0,GMPL800,GMPLEXP,GMPLPOV,GMPLSO,GMPLTXT
"RTN","GMPLX",40,0)
 S GMPL0=$G(^AUPNPROB(IFN,0)),GMPL800=$G(^(800))
"RTN","GMPLX",41,0)
 I '$L(GMPL0) S X="" G PROBTX
"RTN","GMPLX",42,0)
 S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2),SCTC=$P(GMPL800,U)
"RTN","GMPLX",43,0)
 S Y=$P($G(^AUPNPROB(+IFN,0)),U,5),X=$P($G(^AUTNPOV(+Y,0)),U)
"RTN","GMPLX",44,0)
 S GMPLEXP=$$EP(IFN),GMPLSO=$$CS(X),GMPLPOV=$$PT(X,GMPLSO)
"RTN","GMPLX",45,0)
 S GMPLTXT=GMPLPOV S:$L(GMPLEXP) GMPLTXT=GMPLTXT_" ("_GMPLEXP_")"
"RTN","GMPLX",46,0)
 ;S:$L(GMPLSO)&(GMPLSO'["SNOMED") GMPLTXT=GMPLTXT_" "_GMPLSO
"RTN","GMPLX",47,0)
 S:GMPLTXT["*" GMPLTXT=$TR(GMPLTXT,"*","")
"RTN","GMPLX",48,0)
 ;S:$L(GMPLTXT) GMPLTXT=GMPLTXT_" ("_$$HFP^GMPLUTL4_","_$$PTR^GMPLUTL4_")"
"RTN","GMPLX",49,0)
 S:$L(GMPLTXT) GMPLTXT=GMPLTXT_$S($L($G(ICD))&('$L($G(SCTC))):" (ICD-9-CM "_$G(ICD)_")",$L($G(SCTC)):" (SCT "_$G(SCTC)_")",1:"")
"RTN","GMPLX",50,0)
 S:$L(GMPLTXT) X=GMPLTXT
"RTN","GMPLX",51,0)
PROBTX Q X
"RTN","GMPLX",52,0)
PROBNARR(IFN) ; Returns Provider Narrative
"RTN","GMPLX",53,0)
 N X,Y S Y=$P($G(^AUPNPROB(+IFN,0)),U,5),X=$P($G(^AUTNPOV(+Y,0)),U)
"RTN","GMPLX",54,0)
 Q X
"RTN","GMPLX",55,0)
CS(X) ; Problem Codes
"RTN","GMPLX",56,0)
 N GMPLSAB,GMPLSO S GMPLSO="" S X=$G(X) Q:X'["(" ""
"RTN","GMPLX",57,0)
 F GMPLSAB="ICD-","CPT-","DSM-","HCPCS","NANDA","NIC","NOC","LOINC","SNOMED","OMAHA","SCT" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",58,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",59,0)
 F GMPLSAB="ACR","AI/RHEUM","CONGRESS","COSTAR","COSTART","CRISP","DODFAC" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",60,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",61,0)
 F GMPLSAB="DORLAND","DXPLAIN","HHCC","MCMASTER","META","MTF","MeSH","RVC","TITLE 38","UMDNS","UWA" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",62,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",63,0)
 Q ""
"RTN","GMPLX",64,0)
EP(X) ; Exposures
"RTN","GMPLX",65,0)
 N GMPLSC S X=+($G(X)) D SCS^GMPLX1(+X,.GMPLSC) S X=$G(GMPLSC(1)) Q X
"RTN","GMPLX",66,0)
PT(X,C) ; Problem Text (only)
"RTN","GMPLX",67,0)
 N GMPLTERM,GMPLSO S GMPLTERM=$G(X),GMPLSO=$G(C)
"RTN","GMPLX",68,0)
 S:$L(GMPLSO)&(GMPLTERM[GMPLSO) GMPLTERM=$P(GMPLTERM,GMPLSO,1) S GMPLTERM=$$TRIM(GMPLTERM)
"RTN","GMPLX",69,0)
 S:$L(GMPLTERM) X=GMPLTERM Q X
"RTN","GMPLX",70,0)
TRIM(X) ; Trim Spaces and "*"
"RTN","GMPLX",71,0)
 S X=$G(X) F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",72,0)
 F  Q:$E(X,$L(X))'="*"  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",73,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",74,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","GMPLX",75,0)
 Q X
"RTN","GMPLX",76,0)
WRAP(PROB,MAX,TEXT) ; Splits Text into TEXT array
"RTN","GMPLX",77,0)
 N I,J S J=0 K TEXT I $L(PROB)'>MAX S J=J+1,TEXT(J)=PROB G WRQ
"RTN","GMPLX",78,0)
WR0 ;   Loop for Remaining Text
"RTN","GMPLX",79,0)
 S I=$F(PROB," ") I ('I)!(I>(MAX+2)) S J=J+1,TEXT(J)=$E(PROB,1,MAX),PROB=$E(PROB,MAX+1,999)
"RTN","GMPLX",80,0)
 I $L(PROB)>MAX F I=(MAX+1):-1:1 I $E(PROB,I)=" " S J=J+1,TEXT(J)=$E(PROB,1,I-1),PROB=$E(PROB,I+1,999) Q
"RTN","GMPLX",81,0)
 G:$L(PROB)>MAX WR0
"RTN","GMPLX",82,0)
 S:$L(PROB) J=J+1,TEXT(J)=PROB
"RTN","GMPLX",83,0)
WRQ ;   Quit Wrap
"RTN","GMPLX",84,0)
 S TEXT=J
"RTN","GMPLX",85,0)
 Q
"RTN","GMPLX",86,0)
 ;
"RTN","GMPLX",87,0)
NOS() ; Return PTR ^ 799.9 ICD code
"RTN","GMPLX",88,0)
 Q +$$CODEN^ICDCODE("799.9",80)_"^799.9"
"RTN","GMPLX",89,0)
 ;
"RTN","GMPLX",90,0)
SEL(HELP) ; Select List of Problems
"RTN","GMPLX",91,0)
 N X,Y,DIR,MAX S MAX=+$G(^TMP("GMPL",$J,0)) I MAX'>0 Q "^"
"RTN","GMPLX",92,0)
 S DIR(0)="LAO^1:"_MAX,DIR("A")="Select Problem(s)"
"RTN","GMPLX",93,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLX",94,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLX",95,0)
 S DIR("?")="Enter the problems you wish to "
"RTN","GMPLX",96,0)
 S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")_", as a range or list of numbers"
"RTN","GMPLX",97,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLX",98,0)
 Q Y
"RTN","GMPLX",99,0)
 ;
"RTN","GMPLX",100,0)
SEL1(HELP) ; Select 1 Problem
"RTN","GMPLX",101,0)
 N X,Y,DIR,MAX S MAX=+$G(^TMP("GMPL",$J,0)) I MAX'>0 Q "^"
"RTN","GMPLX",102,0)
 S DIR(0)="NAO^1:"_MAX_":0",DIR("A")="Select Problem"
"RTN","GMPLX",103,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLX",104,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLX",105,0)
 S DIR("?")="Enter the number of the problem you wish to "
"RTN","GMPLX",106,0)
 S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")
"RTN","GMPLX",107,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLX",108,0)
 Q Y
"RTN","GMPLX",109,0)
 ;
"RTN","GMPLX",110,0)
DUPL(DFN,TERM,TEXT) ; Check for Duplicates
"RTN","GMPLX",111,0)
 N DA,IFN S DA=0,TEXT=$$UP^XLFSTR($S(TEXT["SCT":$P(TEXT," (SCT"),1:TEXT))
"RTN","GMPLX",112,0)
 I '$D(^AUPNPROB("AC",DFN)) G DUPLX
"RTN","GMPLX",113,0)
 F IFN=0:0 S IFN=$O(^AUPNPROB("AC",DFN,IFN)) Q:IFN'>0  D  Q:DA>0
"RTN","GMPLX",114,0)
 .N PICDOLD,PICDNEW,NODE0,NODE1,NODE800,NODE803,SCTD,PROVNAR,EXPTXT,GMPSRC,GMPCODE
"RTN","GMPLX",115,0)
 .S NODE0=$G(^AUPNPROB(IFN,0)),NODE1=$G(^(1)),NODE800=$G(^(800)),NODE803=$G(^(803,0)) Q:$P(NODE1,U,2)="H"
"RTN","GMPLX",116,0)
 .D EXP2CODE(TERM,.GMPSRC,.GMPCODE)
"RTN","GMPLX",117,0)
 .;Problem has SNOMED CT concept code & term is SNOMED CT concept
"RTN","GMPLX",118,0)
 .I +NODE800,(GMPSRC="SNOMED CT"),(+$G(GMPCODE)>0) D  Q
"RTN","GMPLX",119,0)
 ..;if SCT concepts match => dup
"RTN","GMPLX",120,0)
 .. I +NODE800=GMPCODE S DA=IFN Q
"RTN","GMPLX",121,0)
 .;if Exprs match => dup
"RTN","GMPLX",122,0)
 .I TERM>1&(+NODE1=TERM) S DA=IFN Q
"RTN","GMPLX",123,0)
 .;if Text matches Expr from old => dup
"RTN","GMPLX",124,0)
 .D LOOK^LEXA("`"_+NODE1)
"RTN","GMPLX",125,0)
 .S EXPTXT=$P($G(LEX("LIST",1)),U,2)
"RTN","GMPLX",126,0)
 .I LEX>1&(TEXT=$$UP^XLFSTR($S(EXPTXT["*":$P(EXPTXT," *"),1:EXPTXT))) S DA=IFN Q
"RTN","GMPLX",127,0)
 .;if Text matches Prov Narr of old => dup
"RTN","GMPLX",128,0)
 .S PROVNAR=$P(^AUTNPOV($P(NODE0,U,5),0),U)
"RTN","GMPLX",129,0)
 .I TEXT=$$UP^XLFSTR($S(PROVNAR["SNOMED":$P(PROVNAR," (SN"),PROVNAR[" *":$P(PROVNAR,"*"),1:PROVNAR)) S DA=IFN Q
"RTN","GMPLX",130,0)
 .;if prim ICD of new = prim/sec ICD of old => dup
"RTN","GMPLX",131,0)
 .S PICDOLD=$P($$ICDDX^ICDCODE(+NODE0),U,2)
"RTN","GMPLX",132,0)
 .S PICDNEW=$S(GMPSRC="SNOMED CT":$P($$GETDX(GMPCODE,GMPSRC),"/",1),1:GMPCODE)
"RTN","GMPLX",133,0)
 .;if prim ICD of new = prim ICD of old => dup
"RTN","GMPLX",134,0)
 .I PICDNEW=PICDOLD&(PICDOLD'="799.9"!(PICDNEW'="799.9")) S DA=IFN Q
"RTN","GMPLX",135,0)
 .I $L($G(NODE803))>0!($L($$GETDX(GMPCODE,GMPSRC),"/")>1) D
"RTN","GMPLX",136,0)
 ..N I,J,SICDNEW S J=0 F I=2:1:$L($$GETDX(GMPCODE,GMPSRC),"/") D
"RTN","GMPLX",137,0)
 ...S J=J+1,SICDNEW(J)=$P($$GETDX(GMPCODE,GMPSRC),"/",I)
"RTN","GMPLX",138,0)
 ..;if prim ICD of new = sec ICD of old => dup
"RTN","GMPLX",139,0)
 ..N IEN S IEN=0 F  S IEN=$O(^AUPNPROB(IFN,803,IEN)) Q:'+IEN  D
"RTN","GMPLX",140,0)
 ...I PICDNEW=$P($G(^AUPNPROB(IFN,803,IEN,0)),U) S DA=IFN Q
"RTN","GMPLX",141,0)
 ..N T F T=1:1:J D
"RTN","GMPLX",142,0)
 ...N IEN S IEN=0 F  S IEN=$O(^AUPNPROB(IFN,803,IEN)) Q:'+IEN  D
"RTN","GMPLX",143,0)
 ....;if sec ICD of new = prim ICD of old => dup
"RTN","GMPLX",144,0)
 ....I SICDNEW(T)=PICDOLD S DA=IFN Q
"RTN","GMPLX",145,0)
 ....;if sec ICD of new = sec ICD of old => dup
"RTN","GMPLX",146,0)
 ....I SICDNEW(T)=$P($G(^AUPNPROB(IFN,803,IEN,0)),U) S DA=IFN Q
"RTN","GMPLX",147,0)
DUPLX Q DA
"RTN","GMPLX",148,0)
 ;
"RTN","GMPLX",149,0)
DUPLOK(IFN) ; Ask if Dup OK
"RTN","GMPLX",150,0)
 N DIR,X,Y,GMPL0,GMPL1,DATE,PROV S DIR(0)="YA",GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1))
"RTN","GMPLX",151,0)
 S DIR("A")="Are you sure you want to continue? ",DIR("B")="NO"
"RTN","GMPLX",152,0)
 S DIR("?",1)="Enter YES if you want to duplicate this problem on this patient's list;",DIR("?")="press <return> to re-enter the problem name."
"RTN","GMPLX",153,0)
 W $C(7),!!,">>>  "_$$PROBTEXT(IFN),!?5,"is already an "
"RTN","GMPLX",154,0)
 W $S($P(GMPL0,U,12)="I":"IN",1:"")_"ACTIVE problem on this patient's list!",!
"RTN","GMPLX",155,0)
 S PROV=+$P(GMPL1,U,5) W:PROV !?5,"Provider: "_$P($G(^VA(200,PROV,0)),U)_" ("_$P($$SERVICE^GMPLX1(PROV),U,2)_")"
"RTN","GMPLX",156,0)
 I $P(GMPL0,U,12)="A" W !?8,"Onset: " S DATE=$P(GMPL0,U,13)
"RTN","GMPLX",157,0)
 I $P(GMPL0,U,12)="I" W !?5,"Resolved: " S DATE=$P(GMPL1,U,7)
"RTN","GMPLX",158,0)
 W $S(DATE>0:$$FMTE^XLFDT(DATE),1:"unspecified"),!
"RTN","GMPLX",159,0)
 D ^DIR W !
"RTN","GMPLX",160,0)
 Q +Y
"RTN","GMPLX",161,0)
 ;
"RTN","GMPLX",162,0)
LOCKED() ; Return Lock Msg
"RTN","GMPLX",163,0)
 Q "This problem is currently being edited by another user!"
"RTN","GMPLX",164,0)
 ;
"RTN","GMPLX",165,0)
SURE() ; Ask to Delete
"RTN","GMPLX",166,0)
 ;   Returns 1 if YES, else 0
"RTN","GMPLX",167,0)
 N DIR,X,Y S DIR(0)="YA",DIR("B")="NO"
"RTN","GMPLX",168,0)
 S DIR("?")="Enter YES to remove this value or NO to leave it unchanged."
"RTN","GMPLX",169,0)
 S DIR("A")="Are you sure you want to remove this value? " D ^DIR
"RTN","GMPLX",170,0)
 Q +Y
"RTN","GMPLX",171,0)
 ;
"RTN","GMPLX",172,0)
EXTDT(DATE) ; Format Date as MM/DD/YY
"RTN","GMPLX",173,0)
 N X,MM,DD,YY,YYY S X="",DATE=$P(DATE,".") Q:'DATE ""
"RTN","GMPLX",174,0)
 S MM=+$E(DATE,4,5),DD=+$E(DATE,6,7),YY=$E(DATE,2,3),YYY=$E(DATE,1,3)
"RTN","GMPLX",175,0)
 S:MM X=MM_"/" S:DD X=X_DD_"/" S X=$S($L(X):X_YY,1:1700+YYY)
"RTN","GMPLX",176,0)
 Q X
"RTN","GMPLX",177,0)
 ;
"RTN","GMPLX",178,0)
AUDIT(DATA,OLD) ; Make Entry in Audit File
"RTN","GMPLX",179,0)
 ; DATA = string for 0-node
"RTN","GMPLX",180,0)
 ; OLD  = string for 1-node
"RTN","GMPLX",181,0)
 ;      = 0-node from reform/react problem
"RTN","GMPLX",182,0)
 N DA,DD,DO,DIC,X,Y,DIK,DLAYGO
"RTN","GMPLX",183,0)
 S DIC="^GMPL(125.8,",DIC(0)="L",X=$P(DATA,U),DLAYGO=125.8
"RTN","GMPLX",184,0)
 D FILE^DICN Q:+Y'>0  S DA=+Y,DIK="^GMPL(125.8,"
"RTN","GMPLX",185,0)
 S ^GMPL(125.8,DA,0)=DATA D IX1^DIK
"RTN","GMPLX",186,0)
 S:$L(OLD) ^GMPL(125.8,DA,1)=OLD
"RTN","GMPLX",187,0)
 Q
"RTN","GMPLX",188,0)
 ;
"RTN","GMPLX",189,0)
DTMOD(DA) ; Update Date Modified
"RTN","GMPLX",190,0)
 N DIE,DR
"RTN","GMPLX",191,0)
 S DR=".03///TODAY",DIE="^AUPNPROB("
"RTN","GMPLX",192,0)
 D ^DIE
"RTN","GMPLX",193,0)
 ; broadcast problem change events
"RTN","GMPLX",194,0)
 N GMPIFN,DFN,X
"RTN","GMPLX",195,0)
 S GMPIFN=DA,DFN=+$P($G(^AUPNPROB(DA,0)),U,2)
"RTN","GMPLX",196,0)
 S X=+$O(^ORD(101,"B","GMPL EVENT",0))_";ORD(101," D:X EN1^XQOR
"RTN","GMPLX",197,0)
 Q
"RTN","GMPLX",198,0)
 ;
"RTN","GMPLX",199,0)
MSG() ; ListMan Msg Bar
"RTN","GMPLX",200,0)
 Q "+ Next Screen  - Prev Screen  ?? More actions"
"RTN","GMPLX",201,0)
 ;
"RTN","GMPLX",202,0)
KILL ; Clean-Up Vars
"RTN","GMPLX",203,0)
 K X,Y,DIC,DIE,DR,DA,DUOUT,DTOUT,GMPQUIT,GMPRT,GMPSAVED,GMPIFN,GMPLNO,GMPLNUM,GMPLSEL,GMPREBLD,GMPI,GMPLSLST,GMPLJUMP
"RTN","GMPLX",204,0)
 Q
"RTN","GMPLX",205,0)
 ;
"RTN","GMPLX",206,0)
CODESTS(PROB,ADATE) ;check status of ICD
"RTN","GMPLX",207,0)
 ; Input:
"RTN","GMPLX",208,0)
 ;  PROB  = pointer to the PROBLEM (#9000011) file
"RTN","GMPLX",209,0)
 ;  ADATE = FM date on which to check the status (opt.)
"RTN","GMPLX",210,0)
 ;
"RTN","GMPLX",211,0)
 ; Output:
"RTN","GMPLX",212,0)
 ;  1 = ACTIVE on the date passed or current date
"RTN","GMPLX",213,0)
 ;  0 = INACTIVE on the date passed or current date
"RTN","GMPLX",214,0)
 ;
"RTN","GMPLX",215,0)
 I '$G(ADATE) S ADATE=DT
"RTN","GMPLX",216,0)
 I '$D(^AUPNPROB(PROB,0)) Q 0
"RTN","GMPLX",217,0)
 S PROB=$P(^AUPNPROB(PROB,0),U)
"RTN","GMPLX",218,0)
 Q +$$STATCHK^ICDAPIU($P($$ICDDX^ICDCODE(+PROB),U,2))
"RTN","GMPLX",219,0)
EXP2CODE(X,GMPSRC,GMPCODE) ; Resolve SOURCE and CODE from Expression
"RTN","GMPLX",220,0)
 N LEX,SRCCODE,GMI S GMI=0,(GMPSRC,GMPCODE)=""
"RTN","GMPLX",221,0)
 D INFO^LEXA(X,DT)
"RTN","GMPLX",222,0)
 F  S GMI=$O(LEX("SEL","SRC",GMI)) Q:+GMI'>0  D  Q:($G(GMPSRC)]"")
"RTN","GMPLX",223,0)
 . S SRCCODE=$P($G(LEX("SEL","SRC",GMI)),U,1,2)
"RTN","GMPLX",224,0)
 . I $P(SRCCODE,U)["SNOMED"!($P(SRCCODE,U)["VHAT") S GMPSRC=$P(SRCCODE,U),GMPCODE=$P(SRCCODE,U,2)
"RTN","GMPLX",225,0)
 Q
"RTN","GMPLX",226,0)
GETDX(CODE,CODESYS) ; Get ICD associated with SCT or VHAT Code
"RTN","GMPLX",227,0)
 N LEX,GMPI,GMPY S GMPY=0
"RTN","GMPLX",228,0)
 I CODESYS["VHAT" S GMPY=$$GETASSN^LEXTRAN1(CODE,"VHAT2ICD") I 1
"RTN","GMPLX",229,0)
 E  S GMPY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD")
"RTN","GMPLX",230,0)
 I $S(+GMPY'>0:1,+$P(GMPY,U,2)'>0:1,+LEX'>0:1,1:0) S GMPY=799.9 G GETDXX
"RTN","GMPLX",231,0)
 S (GMPI,GMPY)=0
"RTN","GMPLX",232,0)
 F  S GMPI=$O(LEX(GMPI)) Q:+GMPI'>0  D
"RTN","GMPLX",233,0)
 .N ICD
"RTN","GMPLX",234,0)
 .S ICD=$O(LEX(GMPI,""))
"RTN","GMPLX",235,0)
 .I ICD]"" S GMPY=$S(GMPY'=0:GMPY_"/",1:"")_ICD
"RTN","GMPLX",236,0)
 I GMPY'["." S GMPY=GMPY_"."
"RTN","GMPLX",237,0)
GETDXX Q GMPY
"RTN","GMPLX",238,0)
PAD(GMPX,GMPL) ; Pads string to specified length
"RTN","GMPLX",239,0)
 N GMPY
"RTN","GMPLX",240,0)
 S GMPY="",$P(GMPY," ",(GMPL-$L(GMPX))+1)=""
"RTN","GMPLX",241,0)
 Q GMPY
"RTN","GMPLX1")
0^10^B78242398
"RTN","GMPLX1",1,0)
GMPLX1 ; SLC/MKB/KER/TC - Problem List Person Utilities ;08/17/12  16:27
"RTN","GMPLX1",2,0)
 ;;2.0;Problem List;**3,26,35,36**;Aug 25, 1994;Build 65
"RTN","GMPLX1",3,0)
 ;
"RTN","GMPLX1",4,0)
 ; External References
"RTN","GMPLX1",5,0)
 ;   DBIA   348  ^DPT(
"RTN","GMPLX1",6,0)
 ;   DBIA  3106  ^DIC(49
"RTN","GMPLX1",7,0)
 ;   DBIA  3990  $$CODEN^ICDCODE
"RTN","GMPLX1",8,0)
 ;   DBIA   872  ^ORD(101
"RTN","GMPLX1",9,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLX1",10,0)
 ;   DBIA 10062  7^VADPT
"RTN","GMPLX1",11,0)
 ;   DBIA 10062  DEM^VADPT
"RTN","GMPLX1",12,0)
 ;   DBIA  2716  $$GETSTAT^DGMSTAPI
"RTN","GMPLX1",13,0)
 ;   DBIA  3457  $$GETCUR^DGNTAPI
"RTN","GMPLX1",14,0)
 ;   DBIA 10104  $$REPEAT^XLFSTR
"RTN","GMPLX1",15,0)
 ;   DBIA 10006  ^DIC
"RTN","GMPLX1",16,0)
 ;   DBIA 10018  ^DIE
"RTN","GMPLX1",17,0)
 ;   DBIA 10026  ^DIR
"RTN","GMPLX1",18,0)
 ;
"RTN","GMPLX1",19,0)
PAT() ; Select patient -- returns DFN^NAME^BID
"RTN","GMPLX1",20,0)
 N DIC,X,Y,DFN,VADM,VA,PAT
"RTN","GMPLX1",21,0)
P1 S DIC="^AUPNPAT(",DIC(0)="AEQM" D ^DIC I +Y<1 Q -1
"RTN","GMPLX1",22,0)
 I $P(Y,U,2)'=$P(^DPT(+Y,0),U) W $C(7),!!,"ERROR -- Please check your Patient Files #2 and #9000001 for inconsistencies.",! G P1
"RTN","GMPLX1",23,0)
 S DFN=+Y,PAT=Y D DEM^VADPT
"RTN","GMPLX1",24,0)
 S PAT=PAT_U_$E($P(PAT,U,2))_VA("BID"),AUPNSEX=$P(VADM(5),U)
"RTN","GMPLX1",25,0)
 I VADM(6) S PAT=PAT_U_+VADM(6) ; date of death
"RTN","GMPLX1",26,0)
 Q PAT
"RTN","GMPLX1",27,0)
 ;
"RTN","GMPLX1",28,0)
VADPT(DFN) ; Get Service/Elig Flags
"RTN","GMPLX1",29,0)
 ;
"RTN","GMPLX1",30,0)
 ; Returns = 1/0/"" if Y/N/unknown
"RTN","GMPLX1",31,0)
 ;   GMPSC     Service Connected
"RTN","GMPLX1",32,0)
 ;   GMPAGTOR  Agent Orange Exposure
"RTN","GMPLX1",33,0)
 ;   GMPION    Ionizing Radiation Exposure
"RTN","GMPLX1",34,0)
 ;   GMPGULF   Persian Gulf Exposure
"RTN","GMPLX1",35,0)
 ;   GMPMST    Military Sexual Trauma
"RTN","GMPLX1",36,0)
 ;   GMPHNC    Head and/or Neck Cancer
"RTN","GMPLX1",37,0)
 ;   GMPCV     Combat Veteran
"RTN","GMPLX1",38,0)
 ;   GMPSHD    Shipboard Hazard and Defense
"RTN","GMPLX1",39,0)
 ;
"RTN","GMPLX1",40,0)
 N VAEL,VASV,VAERR,HNC,X D 7^VADPT S GMPSC=VAEL(3),GMPAGTOR=VASV(2)
"RTN","GMPLX1",41,0)
 S GMPION=VASV(3),X=$P($G(^DPT(DFN,.322)),U,10),GMPGULF=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLX1",42,0)
 S GMPCV=0 I +$G(VASV(10)) S:DT'>$P($G(VASV(10,1)),U) GMPCV=1  ;CV
"RTN","GMPLX1",43,0)
 S GMPSHD=+$G(VASV(14,1))  ;SHAD
"RTN","GMPLX1",44,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),"^",2),GMPMST=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLX1",45,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT"))),GMPHNC=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","GMPLX1",46,0)
 Q
"RTN","GMPLX1",47,0)
SCS(PROB,SC) ; Get Exposure/Conditions Strings
"RTN","GMPLX1",48,0)
 ;
"RTN","GMPLX1",49,0)
 ;   Input     PROB  Pointer to Problem #9000011
"RTN","GMPLX1",50,0)
 ;
"RTN","GMPLX1",51,0)
 ;   Returns   SC Array passed by reference
"RTN","GMPLX1",52,0)
 ;             SC(1)="AO/IR/EC/HNC/MST/CV/SHD"
"RTN","GMPLX1",53,0)
 ;             SC(2)="A/I/E/H/M/C/S"
"RTN","GMPLX1",54,0)
 ;             SC(3)="AIEHMCS"
"RTN","GMPLX1",55,0)
 ;
"RTN","GMPLX1",56,0)
 ;   NOTE:  Military Sexual Trauma (MST) is suppressed
"RTN","GMPLX1",57,0)
 ;          if the current device is a printer.
"RTN","GMPLX1",58,0)
 ;
"RTN","GMPLX1",59,0)
 N ND,DA,FL,AO,IR,EC,HNC,MST,CV,SHD,PTR S DA=+($G(PROB)) Q:+DA=0
"RTN","GMPLX1",60,0)
 S ND=$G(^AUPNPROB(+DA,1)),AO=+($P(ND,"^",11)),IR=+($P(ND,"^",12))
"RTN","GMPLX1",61,0)
 S EC=+($P(ND,"^",13)),HNC=+($P(ND,"^",15)),MST=+($P(ND,"^",16))
"RTN","GMPLX1",62,0)
 S CV=+($P(ND,"^",17)),SHD=+($P(ND,"^",18))
"RTN","GMPLX1",63,0)
 S PTR=$$PTR^GMPLUTL4
"RTN","GMPLX1",64,0)
 I +AO>0 D
"RTN","GMPLX1",65,0)
 . S:$G(SC(1))'["AO" SC(1)=$G(SC(1))_"/AO" S:$G(SC(2))'["A" SC(2)=$G(SC(2))_"/A" S:$G(SC(3))'["A" SC(3)=$G(SC(3))_"A"
"RTN","GMPLX1",66,0)
 I +IR>0 D
"RTN","GMPLX1",67,0)
 . S:$G(SC(1))'["IR" SC(1)=$G(SC(1))_"/IR" S:$G(SC(2))'["I" SC(2)=$G(SC(2))_"/I" S:$G(SC(3))'["I" SC(3)=$G(SC(3))_"I"
"RTN","GMPLX1",68,0)
 I +EC>0 D
"RTN","GMPLX1",69,0)
 . S:$G(SC(1))'["EC" SC(1)=$G(SC(1))_"/EC" S:$G(SC(2))'["E" SC(2)=$G(SC(2))_"/E" S:$G(SC(3))'["E" SC(3)=$G(SC(3))_"E"
"RTN","GMPLX1",70,0)
 I +HNC>0 D
"RTN","GMPLX1",71,0)
 . S:$G(SC(1))'["HNC" SC(1)=$G(SC(1))_"/HNC" S:$G(SC(2))'["H" SC(2)=$G(SC(2))_"/H" S:$G(SC(3))'["H" SC(3)=$G(SC(3))_"H"
"RTN","GMPLX1",72,0)
 I +MST>0 D
"RTN","GMPLX1",73,0)
 . S:$G(SC(1))'["MST" SC(1)=$G(SC(1))_"/MST" S:$G(SC(2))'["M" SC(2)=$G(SC(2))_"/M" S:$G(SC(3))'["M" SC(3)=$G(SC(3))_"M"
"RTN","GMPLX1",74,0)
 I +CV>0 D
"RTN","GMPLX1",75,0)
 . S:$G(SC(1))'["CV" SC(1)=$G(SC(1))_"/CV" S:$G(SC(2))'["C" SC(2)=$G(SC(2))_"/C" S:$G(SC(3))'["C" SC(3)=$G(SC(3))_"C"
"RTN","GMPLX1",76,0)
 I +PTR'>0 D
"RTN","GMPLX1",77,0)
 . I +SHD>0 S:$G(SC(1))'["SHD" SC(1)=$G(SC(1))_"/SHD" S:$G(SC(2))'["D" SC(2)=$G(SC(2))_"/S" S:$G(SC(3))'["S" SC(3)=$G(SC(3))_"S"
"RTN","GMPLX1",78,0)
 S:$D(SC(1)) SC(1)=$$RS(SC(1)) S:$D(SC(2)) SC(2)=$$RS(SC(2))
"RTN","GMPLX1",79,0)
 Q
"RTN","GMPLX1",80,0)
SCCOND(DFN,SC) ; Get Service/Elig Flags (array)
"RTN","GMPLX1",81,0)
 ; Returns local array .SC passed by value
"RTN","GMPLX1",82,0)
 N HNC,VAEL,VASV,VAERR,X D 7^VADPT
"RTN","GMPLX1",83,0)
 S SC("DFN")=$G(DFN),SC("SC")=$P(VAEL(3),"^",1)
"RTN","GMPLX1",84,0)
 S SC("AO")=$P(VASV(2),"^",1)
"RTN","GMPLX1",85,0)
 S SC("IR")=$P(VASV(3),"^",1)
"RTN","GMPLX1",86,0)
 S X=$P($G(^DPT(DFN,.322)),U,10),SC("PG")=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLX1",87,0)
 S SC("CV")=0 I +$G(VASV(10)) S:DT'>$P($G(VASV(10,1)),U) SC("CV")=1  ;CV
"RTN","GMPLX1",88,0)
 S SC("SHD")=+$G(VASV(14,1))  ;SHAD
"RTN","GMPLX1",89,0)
 S X=$P($$GETSTAT^DGMSTAPI(DFN),"^",2),SC("MST")=$S(X="Y":1,X="N":0,1:"")
"RTN","GMPLX1",90,0)
 S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT"))),SC("HNC")=$S(X=4:1,X=5:1,X=1:0,X=6:0,1:"")
"RTN","GMPLX1",91,0)
 Q
"RTN","GMPLX1",92,0)
 ;
"RTN","GMPLX1",93,0)
CKDEAD(DATE) ; Dead patient ... continue?  Returns 1 if YES, 0 otherwise
"RTN","GMPLX1",94,0)
 N DIR,X,Y S DIR(0)="YA",DIR("B")="NO"
"RTN","GMPLX1",95,0)
 S DIR("A")="Are you sure you want to continue? "
"RTN","GMPLX1",96,0)
 S DIR("?",1)="   Enter YES to continue and add new problem(s) for this patient:",DIR("?")="   press <return> to select another action."
"RTN","GMPLX1",97,0)
 W $C(7),!!,"DATE OF DEATH: "_$$EXTDT^GMPLX(DATE)
"RTN","GMPLX1",98,0)
 D ^DIR
"RTN","GMPLX1",99,0)
 Q +Y
"RTN","GMPLX1",100,0)
 ;
"RTN","GMPLX1",101,0)
REQPROV() ; Returns requesting provider
"RTN","GMPLX1",102,0)
 N DIR,X,Y,DUOUT,DTOUT
"RTN","GMPLX1",103,0)
 I $D(GMPLUSER) S Y=DUZ_U_$P(^VA(200,DUZ,0),U) Q Y
"RTN","GMPLX1",104,0)
 S DIR("?")="Enter the name of the provider responsible for this data."
"RTN","GMPLX1",105,0)
 S DIR(0)="PA^200:AEQM",DIR("A")="Provider: "
"RTN","GMPLX1",106,0)
 S:$G(GMPROV) DIR("B")=$P(GMPROV,U,2) W ! D ^DIR
"RTN","GMPLX1",107,0)
 I $D(DUOUT)!($D(DTOUT))!(+Y'>0) Q -1
"RTN","GMPLX1",108,0)
 Q Y
"RTN","GMPLX1",109,0)
 ;
"RTN","GMPLX1",110,0)
NAME(USER) ; Formats user name into "Lastname,F"
"RTN","GMPLX1",111,0)
 N NAME,LAST,FIRST
"RTN","GMPLX1",112,0)
 S NAME=$P($G(^VA(200,+USER,0)),U) I '$L(NAME) Q ""
"RTN","GMPLX1",113,0)
 S LAST=$P(NAME,","),FIRST=$P(NAME,",",2)
"RTN","GMPLX1",114,0)
 S:$E(FIRST)=" " FIRST=$E(FIRST,2,99)
"RTN","GMPLX1",115,0)
 Q $E(LAST,1,15)_","_$E(FIRST)
"RTN","GMPLX1",116,0)
 ;
"RTN","GMPLX1",117,0)
SERVICE(USER,INCNPC) ; Returns User's service/section from file #49
"RTN","GMPLX1",118,0)
 ; USER - Integer # (User ID - DUZ) of person in question
"RTN","GMPLX1",119,0)
 ; [INCNPC] - Optional Boolean Defaults to 0 (false)
"RTN","GMPLX1",120,0)
 N X S X=+$P($G(^VA(200,USER,5)),U),INCNPC=+$G(INCNPC)
"RTN","GMPLX1",121,0)
 I 'INCNPC,($P($G(^DIC(49,X,0)),U,9)'="C") S X=0
"RTN","GMPLX1",122,0)
 S:X>0 X=X_U_$P($G(^DIC(49,X,0)),U) S:X'>0 X=""
"RTN","GMPLX1",123,0)
 Q X
"RTN","GMPLX1",124,0)
 ;
"RTN","GMPLX1",125,0)
SERV(X) ; Return service name abbreviation
"RTN","GMPLX1",126,0)
 N NODE,ABBREV
"RTN","GMPLX1",127,0)
 S NODE=$G(^DIC(49,+X,0)) I NODE="" Q ""
"RTN","GMPLX1",128,0)
 S ABBREV=$P(NODE,U,2) I ABBREV="" S ABBREV=$E($P(NODE,U),1,4)
"RTN","GMPLX1",129,0)
 Q ABBREV_"/"
"RTN","GMPLX1",130,0)
 ;
"RTN","GMPLX1",131,0)
CLINIC(LAST) ; Returns clinic from file #44
"RTN","GMPLX1",132,0)
 N X,Y,DIC,DIR S Y="" G:$E(GMPLVIEW("VIEW"))="S" CLINQ
"RTN","GMPLX1",133,0)
 S DIR(0)="FAO^1:30",DIR("A")="Clinic: " S:$L(LAST) DIR("B")=$P(LAST,U,2)
"RTN","GMPLX1",134,0)
 S DIR("?")="Enter the clinic to be associated with these problems, if available"
"RTN","GMPLX1",135,0)
 S DIR("??")="^D LISTCLIN^GMPLMGR1 W !,DIR(""?"")_""."""
"RTN","GMPLX1",136,0)
CLIN1 ; Ask Clinic
"RTN","GMPLX1",137,0)
 D ^DIR S:$D(DUOUT)!($D(DTOUT)) Y="^" S:Y="@" Y="" G:("^"[Y) CLINQ
"RTN","GMPLX1",138,0)
 S DIC="^SC(",DIC(0)="EMQ",DIC("S")="I $P(^(0),U,3)=""C"""
"RTN","GMPLX1",139,0)
 D ^DIC I Y'>0 W !?5,"Only clinics are allowed!",! G CLIN1
"RTN","GMPLX1",140,0)
CLINQ ; Quit Asking
"RTN","GMPLX1",141,0)
 Q Y
"RTN","GMPLX1",142,0)
 ;
"RTN","GMPLX1",143,0)
VIEW(USER) ; Returns user's preferred view
"RTN","GMPLX1",144,0)
 N X S X=$P($G(^VA(200,USER,125)),U)
"RTN","GMPLX1",145,0)
 Q X
"RTN","GMPLX1",146,0)
 ;
"RTN","GMPLX1",147,0)
VOCAB() ; Select search vocabulary
"RTN","GMPLX1",148,0)
 N DIR,X,Y S DIR(0)="SAOM^N:NURSING;I:IMMUNOLOGIC;D:DENTAL;S:SOCIAL WORK;P:GENERAL PROBLEM"
"RTN","GMPLX1",149,0)
 S DIR("A")="Select Specialty Subset: ",DIR("B")="GENERAL PROBLEM"
"RTN","GMPLX1",150,0)
 S DIR("?",1)="Because many discipline-specific terms are synonyms to other terms,"
"RTN","GMPLX1",151,0)
 S DIR("?",2)="they are not accessible unless you specify the appropriate subset of the"
"RTN","GMPLX1",152,0)
 S DIR("?",3)="Clinical Lexicon to select from.  Choose from:  Nursing"
"RTN","GMPLX1",153,0)
 S DIR("?",4)=$$REPEAT^XLFSTR(" ",48)_"Immunologic"
"RTN","GMPLX1",154,0)
 S DIR("?",5)=$$REPEAT^XLFSTR(" ",48)_"Dental"
"RTN","GMPLX1",155,0)
 S DIR("?",6)=$$REPEAT^XLFSTR(" ",48)_"Social Work"
"RTN","GMPLX1",156,0)
 S DIR("?")=$$REPEAT^XLFSTR(" ",48)_"General Problem"
"RTN","GMPLX1",157,0)
 D ^DIR S X=$S(Y="N":"NUR",Y="I":"IMM",Y="D":"DEN",Y="S":"SOC",Y="P":"PL1",1:"^")
"RTN","GMPLX1",158,0)
 Q X
"RTN","GMPLX1",159,0)
 ;
"RTN","GMPLX1",160,0)
PARAMS ; Edit pkg parameters in file #125.99
"RTN","GMPLX1",161,0)
 N DIE,DA,DR,OLDVERFY,VERFY,BLANK S BLANK="       "
"RTN","GMPLX1",162,0)
 S OLDVERFY=+$P($G(^GMPL(125.99,1,0)),U,2)
"RTN","GMPLX1",163,0)
 S DIE="^GMPL(125.99,",DA=1,DR="1:2;4:6" D ^DIE
"RTN","GMPLX1",164,0)
 Q:+$P($G(^GMPL(125.99,1,0)),U,2)=OLDVERFY
"RTN","GMPLX1",165,0)
 S DA(1)=$O(^ORD(101,"B","GMPL PROBLEM LIST",0)) Q:'DA(1)
"RTN","GMPLX1",166,0)
 S VERFY=$O(^ORD(101,"B","GMPL VERIFY",0)) W "."
"RTN","GMPLX1",167,0)
 S DA=$O(^ORD(101,DA(1),10,"B",VERFY,0)) Q:'DA
"RTN","GMPLX1",168,0)
 S DR=$S(OLDVERFY:"2///@;6///^S X=BLANK",1:"2////$;6///@") W "."
"RTN","GMPLX1",169,0)
 S DIE="^ORD(101,"_DA(1)_",10,"
"RTN","GMPLX1",170,0)
 D ^DIE W "."
"RTN","GMPLX1",171,0)
 Q
"RTN","GMPLX1",172,0)
RS(X) ; Remove Slashes
"RTN","GMPLX1",173,0)
 S X=$G(X) F  Q:$E(X,1)'="/"  S X=$E(X,2,$L(X))
"RTN","GMPLX1",174,0)
 F  Q:$E(X,$L(X))'="/"  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX1",175,0)
 Q X
"RTN","GMPLX1",176,0)
WRAP(TEXT,LENGTH) ; Breaks text string into substrings of length LENGTH
"RTN","GMPLX1",177,0)
 N GMPI,GMPJ,LINE,GMPX,GMPX1,GMPX2,GMPY
"RTN","GMPLX1",178,0)
 I $G(TEXT)']"" Q ""
"RTN","GMPLX1",179,0)
 F GMPI=1:1 D  Q:GMPI=$L(TEXT," ")
"RTN","GMPLX1",180,0)
 . S GMPX=$P(TEXT," ",GMPI)
"RTN","GMPLX1",181,0)
 . I $L(GMPX)>LENGTH D
"RTN","GMPLX1",182,0)
 . . S GMPX1=$E(GMPX,1,LENGTH),GMPX2=$E(GMPX,LENGTH+1,$L(GMPX))
"RTN","GMPLX1",183,0)
 . . S $P(TEXT," ",GMPI)=GMPX1_" "_GMPX2
"RTN","GMPLX1",184,0)
 S LINE=1,GMPX(1)=$P(TEXT," ")
"RTN","GMPLX1",185,0)
 F GMPI=2:1 D  Q:GMPI'<$L(TEXT," ")
"RTN","GMPLX1",186,0)
 . S:$L($G(GMPX(LINE))_" "_$P(TEXT," ",GMPI))>LENGTH LINE=LINE+1,GMPY=1
"RTN","GMPLX1",187,0)
 . S GMPX(LINE)=$G(GMPX(LINE))_$S(+$G(GMPY):"",1:" ")_$P(TEXT," ",GMPI),GMPY=0
"RTN","GMPLX1",188,0)
 S GMPJ=0,TEXT="" F GMPI=1:1 S GMPJ=$O(GMPX(GMPJ)) Q:+GMPJ'>0  S TEXT=TEXT_$S(GMPI=1:"",1:"|")_GMPX(GMPJ)
"RTN","GMPLX1",189,0)
 Q TEXT
"RTN","GMPLX1",190,0)
SCTMAP(GMPSCT,GMPICD,GMPORD) ; API for updating ICD Code when mapping changes
"RTN","GMPLX1",191,0)
 ; GMPSCT = SNOMED CT Concept CODE (e.g., 53974002 for Kniest Dysplasia)
"RTN","GMPLX1",192,0)
 ; GMPICD = ICD-9-CM CODE (as string literal, so that terminal 0's aren't truncated.
"RTN","GMPLX1",193,0)
 ;          e.g., "756.9" for Musculoskeletal Anom NEC/NOS)
"RTN","GMPLX1",194,0)
 ; GMPORD = Order or sequence (integer) number (starting from 1) to accommodate SNOMED
"RTN","GMPLX1",195,0)
 ;          Concepts with multiple target ICD code mappings (e.g., for Diabetic
"RTN","GMPLX1",196,0)
 ;          Neuropathy (SNOMED CT 230572002 ICD-9-CM 250.60/355.9) the order for
"RTN","GMPLX1",197,0)
 ;          250.60 would be 1, and the order for 355.9 would be 2
"RTN","GMPLX1",198,0)
 ;
"RTN","GMPLX1",199,0)
 N GMPID
"RTN","GMPLX1",200,0)
 I '$D(^AUPNPROB("ASCT",GMPSCT)) Q  ; No problems with SNOMED-CT code
"RTN","GMPLX1",201,0)
 I +$$CODEN^ICDCODE(GMPICD,80)'>0 Q  ; valid ICD code only
"RTN","GMPLX1",202,0)
 S GMPID=0
"RTN","GMPLX1",203,0)
 S GMPORD=$G(GMPORD,1) ; Order defaults to 1
"RTN","GMPLX1",204,0)
 F  S GMPID=$O(^AUPNPROB("ASCT",GMPSCT,GMPID)) Q:+GMPID'>0  D
"RTN","GMPLX1",205,0)
 . N PL,PLY,GMPI,GMPICDS,GMPDX,GMPDXC
"RTN","GMPLX1",206,0)
 . Q:'$D(^AUPNPROB(GMPID))
"RTN","GMPLX1",207,0)
 . ; acquire lock
"RTN","GMPLX1",208,0)
 . L +^AUPNPROB(GMPID):$G(DILOCKTM,1)
"RTN","GMPLX1",209,0)
 . E  Q
"RTN","GMPLX1",210,0)
 . S GMPICDS="799.9"
"RTN","GMPLX1",211,0)
 . S GMPDX=+$G(^AUPNPROB(GMPID,0)) ; Current Primary Dx IEN
"RTN","GMPLX1",212,0)
 . S GMPDXC=$P($$ICDDX^ICDCODE(GMPDX),U,2) ; Current Primary Dx Code
"RTN","GMPLX1",213,0)
 . I GMPORD=1 D
"RTN","GMPLX1",214,0)
 . . S GMPDX=+$$CODEN^ICDCODE(GMPICD,80),GMPDXC=GMPICD
"RTN","GMPLX1",215,0)
 . S $P(GMPICDS,"/",1)=GMPDXC
"RTN","GMPLX1",216,0)
 . S GMPI=0
"RTN","GMPLX1",217,0)
 . ; If additional mapped targets exist, append them to the GMPICDS string
"RTN","GMPLX1",218,0)
 . F  S GMPI=$O(^AUPNPROB(GMPID,803,GMPI)) Q:+GMPI'>0  D
"RTN","GMPLX1",219,0)
 . . S GMPDXC=$P($G(^AUPNPROB(GMPID,803,GMPI,0)),U)
"RTN","GMPLX1",220,0)
 . . S $P(GMPICDS,"/",(GMPI+1))=$S(GMPDXC]"":GMPDXC,1:$P($$NOS^GMPLX,U,2))
"RTN","GMPLX1",221,0)
 . I GMPORD>1 S $P(GMPICDS,"/",GMPORD)=GMPICD
"RTN","GMPLX1",222,0)
 . ; Replace empty "/"-pieces with 799.9 (ICD-9-CM) or R69 (ICD-10-CM) as appropriate
"RTN","GMPLX1",223,0)
 . F GMPI=1:1:$L(GMPICDS,"/") S:'$L($P(GMPICDS,"/",GMPI)) $P(GMPICDS,"/",GMPI)=$P($$NOS^GMPLX,U,2)
"RTN","GMPLX1",224,0)
 . S PL("PROBLEM")=GMPID,PL("PROVIDER")=.5 ; user is POSTMASTER (evaluate alternatives)
"RTN","GMPLX1",225,0)
 . S PL("DIAGNOSIS")=GMPDX_U_GMPICDS
"RTN","GMPLX1",226,0)
 . ; if order is 1, only update entries where .01 is 799.9
"RTN","GMPLX1",227,0)
 . I GMPORD=1,(+$G(^AUPNPROB(GMPID,0))'=+$$NOS^GMPLX) L -^AUPNPROB(GMPID) Q
"RTN","GMPLX1",228,0)
 . D UPDATE^GMPLUTL(.PL,.PLY)
"RTN","GMPLX1",229,0)
 . ; release lock
"RTN","GMPLX1",230,0)
 . L -^AUPNPROB(GMPID)
"RTN","GMPLX1",231,0)
 Q
"RTN","GMPLY36")
0^^B534718
"RTN","GMPLY36",1,0)
GMPLY36 ; ISL/JER - Pre-/Post-Install Routine for GMPL*2*36 ;11/30/12  12:53
"RTN","GMPLY36",2,0)
 ;;2.0;Problem List;**36**;Aug 25, 1994;Build 65
"RTN","GMPLY36",3,0)
 Q
"RTN","GMPLY36",4,0)
PRE ; Pre-install subroutine
"RTN","GMPLY36",5,0)
 ;
"RTN","GMPLY36",6,0)
 Q
"RTN","GMPLY36",7,0)
 ;
"RTN","GMPLY36",8,0)
POST ; Post-install subroutine
"RTN","GMPLY36",9,0)
 ;
"RTN","GMPLY36",10,0)
 ; if GMPL*2*44 has been installed, new indexes required by Reminders for ICD-10 will need
"RTN","GMPLY36",11,0)
 ; to be re-installed and refreshed.
"RTN","GMPLY36",12,0)
 ;
"RTN","GMPLY36",13,0)
 ; Has GMPL*2*44 been installed?
"RTN","GMPLY36",14,0)
 I '+$$PATCH^XPDUTL("GMPL*2.0*44") Q
"RTN","GMPLY36",15,0)
 ; Call POST^GMPLP44I if available
"RTN","GMPLY36",16,0)
 I '$L($T(POST^GMPLP44I)) Q
"RTN","GMPLY36",17,0)
 D BMES^XPDUTL(" Reinstalling indexes from GMPL*2*44 required by Reminders...")
"RTN","GMPLY36",18,0)
 D POST^GMPLP44I
"RTN","GMPLY36",19,0)
 Q
"VER")
8.0^22.0
"^DD",125.12,125.12,5,0)
SNOMED CT CONCEPT CODE^F^^0;6^K:$L(X)>40!($L(X)<1)!'(X?1.40N) X
"^DD",125.12,125.12,5,3)
Answer must be 1-40 numeric characters in length.
"^DD",125.12,125.12,5,21,0)
^^2^2^3110920^
"^DD",125.12,125.12,5,21,1,0)
A clinical idea to which a unique ConceptID has been assigned in SNOMED
"^DD",125.12,125.12,5,21,2,0)
CT. Each Concept is represented by a row in the Concepts Table.
"^DD",125.12,125.12,5,"DT")
3110920
"^DD",125.12,125.12,6,0)
SNOMED CT DESIGNATION CODE^F^^0;7^K:$L(X)>40!($L(X)<1)!'(X?1.40N) X
"^DD",125.12,125.12,6,3)
Answer must be 1-40 numeric characters in length.
"^DD",125.12,125.12,6,21,0)
^^9^9^3110920^
"^DD",125.12,125.12,6,21,1,0)
A single SNOMED CT Concept may have multiple Designations, where a
"^DD",125.12,125.12,6,21,2,0)
Designation may be considered an alternate way of expressing the concept.
"^DD",125.12,125.12,6,21,3,0)
Synonyms, lexical variants, abbreviations are all different types of
"^DD",125.12,125.12,6,21,4,0)
designations. In many cases, a problem (as reported by the patient) and a
"^DD",125.12,125.12,6,21,5,0)
finding indicating a problem will share the same concept and concept code
"^DD",125.12,125.12,6,21,6,0)
(e.g., abdominal pain), but will have different designation codes (i.e.,
"^DD",125.12,125.12,6,21,7,0)
the generic "abdominal pain" and "abdominal pain (finding)" share the
"^DD",125.12,125.12,6,21,8,0)
concept code 21522001, but they have the designation codes 36112013 and
"^DD",125.12,125.12,6,21,9,0)
750827015 respectively.
"^DD",125.12,125.12,6,"DT")
3110920
"^DD",125.99,125.99,3,0)
*USE CLINICAL LEXICON^S^1:YES;0:NO;^0;4^Q
"^DD",125.99,125.99,3,3)
Enter YES to allow the user to search the Clinical Lexicon when adding to or editing a problem list NO will bypass the search, capturing ONLY the free text.
"^DD",125.99,125.99,3,21,0)
^.001^17^17^3070622^^
"^DD",125.99,125.99,3,21,1,0)
***This field is marked for deletion in preparation for the Problem
"^DD",125.99,125.99,3,21,2,0)
List Data Standardization project and will be deleted 18 months from
"^DD",125.99,125.99,3,21,3,0)
the release of patch GMPL*2*36.*** 
"^DD",125.99,125.99,3,21,4,0)
 
"^DD",125.99,125.99,3,21,5,0)
This is a toggle which determines whether the PL application will 
"^DD",125.99,125.99,3,21,6,0)
allow the user to search the Clinical Lexicon when adding or editing 
"^DD",125.99,125.99,3,21,7,0)
a problem; if a term is selected from the CL Utility, the standardized
"^DD",125.99,125.99,3,21,8,0)
text will be displayed on the problem list, otherwise the text entered
"^DD",125.99,125.99,3,21,9,0)
by the user to search on will be displayed.  Problems which are taken
"^DD",125.99,125.99,3,21,10,0)
from the CLU may already be coded to ICD9, and this code is returned 
"^DD",125.99,125.99,3,21,11,0)
to the PL application if available.  Duplicate problems can be screened
"^DD",125.99,125.99,3,21,12,0)
out, and searches by problem performed when this link to the CLU exists.
"^DD",125.99,125.99,3,21,13,0)
 
"^DD",125.99,125.99,3,21,14,0)
If this flag is set to NO, the user will be prompted for his/her free
"^DD",125.99,125.99,3,21,15,0)
text description of the problem only, when adding or editing a problem.
"^DD",125.99,125.99,3,21,16,0)
No search will be performed at that time on the CLU, and no link made
"^DD",125.99,125.99,3,21,17,0)
from the problem to an entry in the CLU.
"^DD",125.99,125.99,3,"DT")
3070621
"^DD",9000011,9000011,0)
FIELD^^80300^37
"^DD",9000011,9000011,0,"DDA")
N
"^DD",9000011,9000011,0,"DT")
3120606
"^DD",9000011,9000011,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000011,9000011,0,"ID",.06)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(4,+$P(^(0),U,6),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9000011,9000011,0,"ID",.07)
W "   ",$P(^(0),U,7)
"^DD",9000011,9000011,0,"IX","AA",9000011,.07)

"^DD",9000011,9000011,0,"IX","AATOO",9000011,.02)

"^DD",9000011,9000011,0,"IX","AATOO2",9000011,.06)

"^DD",9000011,9000011,0,"IX","AC",9000011,.02)

"^DD",9000011,9000011,0,"IX","ACTIVE",9000011,.12)

"^DD",9000011,9000011,0,"IX","ACTIVE1",9000011,.02)

"^DD",9000011,9000011,0,"IX","ASCT",9000011,80001)

"^DD",9000011,9000011,0,"IX","AV1",9000011,.06)

"^DD",9000011,9000011,0,"IX","AV9",9000011,.01)

"^DD",9000011,9000011,0,"IX","B",9000011,.01)

"^DD",9000011,9000011,0,"IX","C",9000011,1.01)

"^DD",9000011,9000011,0,"IX","MODIFIED",9000011,.03)

"^DD",9000011,9000011,0,"NM","PROBLEM")

"^DD",9000011,9000011,0,"PT",125.8,.01)

"^DD",9000011,9000011,0,"PT",8925.9,.02)

"^DD",9000011,9000011,0,"PT",9000010.07,.16)

"^DD",9000011,9000011,0,"SP",.06)

"^DD",9000011,9000011,0,"SP",.07)

"^DD",9000011,9000011,0,"VRPK")
GMPL
"^DD",9000011,9000011,.01,0)
DIAGNOSIS^R*P80'^ICD9(^0;1^S DIC("S")="I 1 Q:$G(DUZ(""AG""))=""V""  I $E(^(0))'=""E"",$P(^(0),U,9)="""" Q:$P(^(0),U,10)=""""  I $P(^(0),U,10)=AUPNSEX" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000011,9000011,.01,1,0)
^.1
"^DD",9000011,9000011,.01,1,1,0)
9000011^B
"^DD",9000011,9000011,.01,1,1,1)
S ^AUPNPROB("B",$E(X,1,30),DA)=""
"^DD",9000011,9000011,.01,1,1,2)
K ^AUPNPROB("B",$E(X,1,30),DA)
"^DD",9000011,9000011,.01,1,2,0)
9000011^AV9^MUMPS
"^DD",9000011,9000011,.01,1,2,1)
S:$D(APCDLOOK) DIC("DR")=""
"^DD",9000011,9000011,.01,1,2,2)
Q
"^DD",9000011,9000011,.01,1,2,"%D",0)
^^2^2^2940110^
"^DD",9000011,9000011,.01,1,2,"%D",1,0)
Controls the behaviour of the input templates used by IHS to populate
"^DD",9000011,9000011,.01,1,2,"%D",2,0)
and maintain this file.
"^DD",9000011,9000011,.01,1,2,"DT")
2940110
"^DD",9000011,9000011,.01,3)
Enter the ICD Code for this problem.
"^DD",9000011,9000011,.01,12)
Cannot be an E code or an inactive code and must be appropriate for the sex of the Patient.
"^DD",9000011,9000011,.01,12.1)
S DIC("S")="I 1 Q:$G(DUZ(""AG""))=""V""  I $E(^(0))'=""E"",$P(^(0),U,9)="""" Q:$P(^(0),U,10)=""""  I $P(^(0),U,10)=AUPNSEX"
"^DD",9000011,9000011,.01,21,0)
^^2^2^2930908^^^^
"^DD",9000011,9000011,.01,21,1,0)
This is the ICD coded diagnosis of the narrative entered describing
"^DD",9000011,9000011,.01,21,2,0)
this problem.
"^DD",9000011,9000011,.01,23,0)
^^5^5^2930908^^
"^DD",9000011,9000011,.01,23,1,0)
The DHCP Problem List application derives its entries from a lookup
"^DD",9000011,9000011,.01,23,2,0)
into the Clinical Lexicon Utility rather than the ICD Diagnosis file.
"^DD",9000011,9000011,.01,23,3,0)
If the term selected from the CLU is not coded to ICD, then code 799.99
"^DD",9000011,9000011,.01,23,4,0)
"Other Unknown or Unspecified Cause, NEC" will be used here in order
"^DD",9000011,9000011,.01,23,5,0)
to be able to create a new entry.  This field may later be edited.
"^DD",9000011,9000011,.01,"DT")
2940412
"^DD",9000011,9000011,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000011,9000011,.02,1,0)
^.1
"^DD",9000011,9000011,.02,1,1,0)
9000011^AC
"^DD",9000011,9000011,.02,1,1,1)
S ^AUPNPROB("AC",$E(X,1,30),DA)=""
"^DD",9000011,9000011,.02,1,1,2)
K ^AUPNPROB("AC",$E(X,1,30),DA)
"^DD",9000011,9000011,.02,1,2,0)
9000011^AATOO^MUMPS
"^DD",9000011,9000011,.02,1,2,1)
I $P(^AUPNPROB(DA,0),U,6)]"",$P(^(0),U,7)]"" S X1=$P($P(^(0),U,7),"."),X2=$P($P(^(0),U,7),".",2),^AUPNPROB("AA",X,$P(^(0),U,6)," "_$E("000",1,4-$L(X1)-1)_X1_"."_X2_$E("00",1,3-$L(X2)-1),DA)="" K X1,X2
"^DD",9000011,9000011,.02,1,2,2)
I $P(^AUPNPROB(DA,0),U,6)]"",$P(^(0),U,7)]"" S X1=$P($P(^(0),U,7),"."),X2=$P($P(^(0),U,7),".",2) K ^AUPNPROB("AA",X,$P(^(0),U,6)," "_$E("000",1,4-$L(X1)-1)_X1_"."_X2_$E("00",1,3-$L(X2)-1),DA),X1,X2
"^DD",9000011,9000011,.02,1,2,"%D",0)
^^3^3^2930825^
"^DD",9000011,9000011,.02,1,2,"%D",1,0)
Allows problem retrieval by patient, facility, and problem number (Nmbr);
"^DD",9000011,9000011,.02,1,2,"%D",2,0)
the number is used as a string in " 000.00" format to assure a consistent
"^DD",9000011,9000011,.02,1,2,"%D",3,0)
ordering.
"^DD",9000011,9000011,.02,1,3,0)
9000011^ACTIVE1^MUMPS
"^DD",9000011,9000011,.02,1,3,1)
S:$L($P(^AUPNPROB(DA,0),U,12)) ^AUPNPROB("ACTIVE",X,$P(^(0),U,12),DA)=""
"^DD",9000011,9000011,.02,1,3,2)
K:$L($P(^AUPNPROB(DA,0),U,12)) ^AUPNPROB("ACTIVE",X,$P(^(0),U,12),DA)
"^DD",9000011,9000011,.02,1,3,"%D",0)
^^1^1^2930706^^^
"^DD",9000011,9000011,.02,1,3,"%D",1,0)
Allows problem retrieval by patient and status, in order of entry.
"^DD",9000011,9000011,.02,1,3,"DT")
2930706
"^DD",9000011,9000011,.02,3)
Enter the name of the patient for whom this problem has been observed.
"^DD",9000011,9000011,.02,21,0)
^^1^1^2930908^^^^
"^DD",9000011,9000011,.02,21,1,0)
This is the patient for whom this problem has been observed and recorded.
"^DD",9000011,9000011,.02,"DT")
2930909
"^DD",9000011,9000011,.03,0)
DATE LAST MODIFIED^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:DT<X!(2000000>X) X
"^DD",9000011,9000011,.03,1,0)
^.1
"^DD",9000011,9000011,.03,1,1,0)
9000011^MODIFIED^MUMPS
"^DD",9000011,9000011,.03,1,1,1)
K ^AUPNPROB("MODIFIED",$P(^AUPNPROB(DA,0),"^",2)) D NOW^%DTC S ^AUPNPROB("MODIFIED",$P(^AUPNPROB(DA,0),"^",2),%)=""
"^DD",9000011,9000011,.03,1,1,2)
Q
"^DD",9000011,9000011,.03,1,1,"%D",0)
^^2^2^2990319^^^^
"^DD",9000011,9000011,.03,1,1,"%D",1,0)
This Index will keep track of the last time this Patients problem list was 
"^DD",9000011,9000011,.03,1,1,"%D",2,0)
modified.  ^AUPNPROB("MODIFIED"),PATIENT,DATE
"^DD",9000011,9000011,.03,1,1,"DT")
2990319
"^DD",9000011,9000011,.03,3)
TYPE A DATE BETWEEN 1900 AND TODAY
"^DD",9000011,9000011,.03,10)
018/PRCOND
"^DD",9000011,9000011,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000011,9000011,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNPROB(DA,0),U,2)"
"^DD",9000011,9000011,.03,21,0)
^^1^1^2990318^^^^
"^DD",9000011,9000011,.03,21,1,0)
This is the last date/time this problem was changed.
"^DD",9000011,9000011,.03,"DT")
2990319
"^DD",9000011,9000011,.04,0)
CLASS^S^P:PERSONAL HISTORY;F:FAMILY HISTORY;^0;4^Q
"^DD",9000011,9000011,.04,3)
If this problem is historical, indicate if it is Personal or Family history.
"^DD",9000011,9000011,.04,21,0)
^^2^2^2930726^
"^DD",9000011,9000011,.04,21,1,0)
This flag is used by the IHS Problem List to indicate if this problem
"^DD",9000011,9000011,.04,21,2,0)
is documented for historical purposes.
"^DD",9000011,9000011,.04,23,0)
^^2^2^2930726^
"^DD",9000011,9000011,.04,23,1,0)
VA sites using the DHCP Problem List application will not be prompted
"^DD",9000011,9000011,.04,23,2,0)
for this information.
"^DD",9000011,9000011,.04,"DT")
2871007
"^DD",9000011,9000011,.05,0)
PROVIDER NARRATIVE^R*P9999999.27^AUTNPOV(^0;5^S DIC(0)=$S($D(APCDALVR):"LO",1:"EMQLO") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000011,9000011,.05,3)
Enter a description of this patient's problem.
"^DD",9000011,9000011,.05,12)
OLD LOOKUP
"^DD",9000011,9000011,.05,12.1)
S DIC(0)=$S($D(APCDALVR):"LO",1:"EMQLO")
"^DD",9000011,9000011,.05,21,0)
^^2^2^2930406^^
"^DD",9000011,9000011,.05,21,1,0)
This contains the actual text used by the provider to describe this
"^DD",9000011,9000011,.05,21,2,0)
problem.
"^DD",9000011,9000011,.05,"DT")
2881128
"^DD",9000011,9000011,.06,0)
FACILITY^RP9999999.06'I^AUTTLOC(^0;6^Q
"^DD",9000011,9000011,.06,1,0)
^.1
"^DD",9000011,9000011,.06,1,1,0)
9000011^AV1^MUMPS
"^DD",9000011,9000011,.06,1,1,1)
Q
"^DD",9000011,9000011,.06,1,1,2)
Q
"^DD",9000011,9000011,.06,1,1,"%D",0)
^^1^1^2940110^
"^DD",9000011,9000011,.06,1,1,"%D",1,0)
No longer in use.
"^DD",9000011,9000011,.06,1,1,"DT")
2940110
"^DD",9000011,9000011,.06,1,2,0)
9000011^AATOO2^MUMPS
"^DD",9000011,9000011,.06,1,2,1)
I $P(^AUPNPROB(DA,0),U,2)]"",$P(^(0),U,7)]"" S X1=$P($P(^(0),U,7),"."),X2=$P($P(^(0),U,7),".",2),^AUPNPROB("AA",$P(^(0),U,2),X," "_$E("000",1,4-$L(X1)-1)_X1_"."_X2_$E("00",1,3-$L(X2)-1),DA)="" K X1,X2
"^DD",9000011,9000011,.06,1,2,2)
I $P(^AUPNPROB(DA,0),U,2)]"",$P(^(0),U,7)]"" S X1=$P($P(^(0),U,7),"."),X2=$P($P(^(0),U,7),".",2) K ^AUPNPROB("AA",$P(^(0),U,2),X," "_$E("000",1,4-$L(X1)-1)_X1_"."_X2_$E("00",1,3-$L(X2)-1),DA),X1,X2
"^DD",9000011,9000011,.06,1,2,"%D",0)
^^3^3^2930825^
"^DD",9000011,9000011,.06,1,2,"%D",1,0)
Allows problem retrieval by patient, facility, and problem number (Nmbr);
"^DD",9000011,9000011,.06,1,2,"%D",2,0)
the number is used as a string in " 000.00" format to assure a consistent
"^DD",9000011,9000011,.06,1,2,"%D",3,0)
ordering.
"^DD",9000011,9000011,.06,3)
Enter the location at which this problem was first observed and recorded.
"^DD",9000011,9000011,.06,21,0)
^^2^2^2930908^^^^
"^DD",9000011,9000011,.06,21,1,0)
This is the facility at which this problem was originally observed and
"^DD",9000011,9000011,.06,21,2,0)
documented.
"^DD",9000011,9000011,.06,"DT")
2940110
"^DD",9000011,9000011,.07,0)
NMBR^RNJ6,2X^^0;7^K:+X'=X!(X>999.99)!(X<1)!(X?.E1"."3N.N) X Q:'$D(X)  K:$D(^AUPNPROB("AA",$P(^AUPNPROB(DA,0),U,2),$P(^(0),U,6)," "_$E("000",1,4-$L($P(X,".",1))-1)_$P(X,".",1)_"."_$P(X,".",2)_$E("00",1,3-$L($P(X,".",2))-1))) X
"^DD",9000011,9000011,.07,1,0)
^.1
"^DD",9000011,9000011,.07,1,1,0)
9000011^AA^MUMPS
"^DD",9000011,9000011,.07,1,1,1)
S ^AUPNPROB("AA",$P(^AUPNPROB(DA,0),U,2),$P(^(0),U,6)," "_$E("000",1,4-$L($P(X,".",1))-1)_$P(X,".",1)_"."_$P(X,".",2)_$E("00",1,3-$L($P(X,".",2))-1),DA)=""
"^DD",9000011,9000011,.07,1,1,2)
K ^AUPNPROB("AA",$P(^AUPNPROB(DA,0),U,2),$P(^(0),U,6)," "_$E("000",1,4-$L($P(X,".",1))-1)_$P(X,".",1)_"."_$P(X,".",2)_$E("00",1,3-$L($P(X,".",2))-1),DA)
"^DD",9000011,9000011,.07,1,1,"%D",0)
^^3^3^2930825^
"^DD",9000011,9000011,.07,1,1,"%D",1,0)
Allows problem retrieval by patient, facility, and problem number (Nmbr);
"^DD",9000011,9000011,.07,1,1,"%D",2,0)
the number is used as a string in " 000.00" format to assure a consistent
"^DD",9000011,9000011,.07,1,1,"%D",3,0)
ordering.
"^DD",9000011,9000011,.07,3)
TYPE A NUMBER BETWEEN 1 AND 999.99
"^DD",9000011,9000011,.07,10)
018/PRNUMB
"^DD",9000011,9000011,.07,21,0)
^^4^4^2930726^
"^DD",9000011,9000011,.07,21,1,0)
This is a number which, together with the Patient (#.02) and Facility (#.06)
"^DD",9000011,9000011,.07,21,2,0)
fields, serves as a unique identifier for this problem.  Up to 2 decimal
"^DD",9000011,9000011,.07,21,3,0)
places may be used to indicate that a problem is a result of, or related
"^DD",9000011,9000011,.07,21,4,0)
to, another problem.
"^DD",9000011,9000011,.07,"DT")
2930726
"^DD",9000011,9000011,.08,0)
DATE ENTERED^RDI^^0;8^S %DT="EX" D ^%DT S X=Y K:DT<X!(2000000>X) X
"^DD",9000011,9000011,.08,3)
TYPE A DATE BETWEEN 1900 AND TODAY
"^DD",9000011,9000011,.08,10)
018/PREDAT
"^DD",9000011,9000011,.08,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000011,9000011,.08,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNPROB(DA,0),U,2)"
"^DD",9000011,9000011,.08,21,0)
^^1^1^2940111^^^
"^DD",9000011,9000011,.08,21,1,0)
This is the date this problem was entered into this file.
"^DD",9000011,9000011,.08,"DT")
3120607
"^DD",9000011,9000011,.12,0)
STATUS^RS^A:ACTIVE;I:INACTIVE;^0;12^Q
"^DD",9000011,9000011,.12,1,0)
^.1
"^DD",9000011,9000011,.12,1,1,0)
9000011^ACTIVE^MUMPS
"^DD",9000011,9000011,.12,1,1,1)
S:$P(^AUPNPROB(DA,0),U,2) ^AUPNPROB("ACTIVE",+$P(^(0),U,2),X,DA)=""
"^DD",9000011,9000011,.12,1,1,2)
K ^AUPNPROB("ACTIVE",+$P(^AUPNPROB(DA,0),U,2),X,DA)
"^DD",9000011,9000011,.12,1,1,"%D",0)
^^1^1^2930706^^
"^DD",9000011,9000011,.12,1,1,"%D",1,0)
Allows problem retrieval by patient and status, in order of entry.
"^DD",9000011,9000011,.12,1,1,"DT")
2930706
"^DD",9000011,9000011,.12,3)
Enter the current status of this problem, active or inactive.
"^DD",9000011,9000011,.12,10)
018/PRSTAT
"^DD",9000011,9000011,.12,21,0)
^^3^3^2930406^^
"^DD",9000011,9000011,.12,21,1,0)
This is the current activity status of this problem, whether active or
"^DD",9000011,9000011,.12,21,2,0)
inactive; if more detail is needed, a notation may be filed with this
"^DD",9000011,9000011,.12,21,3,0)
problem.
"^DD",9000011,9000011,.12,"DT")
2930706
"^DD",9000011,9000011,.13,0)
DATE OF ONSET^D^^0;13^S %DT="E" D ^%DT S X=Y K:DT<X!(1800000>X) X
"^DD",9000011,9000011,.13,3)
TYPE A DATE BETWEEN 1880 AND TODAY
"^DD",9000011,9000011,.13,21,0)
^^1^1^2930726^^^^
"^DD",9000011,9000011,.13,21,1,0)
This is the approximate date this problem appeared, as precisely as known.
"^DD",9000011,9000011,.13,"DT")
2930613
"^DD",9000011,9000011,1.01,0)
PROBLEM^P757.01'^LEX(757.01,^1;1^Q
"^DD",9000011,9000011,1.01,1,0)
^.1
"^DD",9000011,9000011,1.01,1,1,0)
9000011^C
"^DD",9000011,9000011,1.01,1,1,1)
S ^AUPNPROB("C",$E(X,1,30),DA)=""
"^DD",9000011,9000011,1.01,1,1,2)
K ^AUPNPROB("C",$E(X,1,30),DA)
"^DD",9000011,9000011,1.01,1,1,"DT")
2930728
"^DD",9000011,9000011,1.01,3)
Enter the problem observed for this patient.
"^DD",9000011,9000011,1.01,21,0)
^^2^2^2930908^^
"^DD",9000011,9000011,1.01,21,1,0)
This field contains the standardized text stored in the Clinical Lexicon
"^DD",9000011,9000011,1.01,21,2,0)
for this problem.
"^DD",9000011,9000011,1.01,"DT")
2930728
"^DD",9000011,9000011,1.02,0)
CONDITION^S^T:TRANSCRIBED;P:PERMANENT;H:HIDDEN;^1;2^Q
"^DD",9000011,9000011,1.02,21,0)
^^3^3^2930908^^^
"^DD",9000011,9000011,1.02,21,1,0)
This reflects the current condition of this entry, whether transcribed
"^DD",9000011,9000011,1.02,21,2,0)
by a clerk from the paper chart, entered or verified by a provider,
"^DD",9000011,9000011,1.02,21,3,0)
or marked as removed from the patient's list.
"^DD",9000011,9000011,1.02,23,0)
^^6^6^2930908^^
"^DD",9000011,9000011,1.02,23,1,0)
This flag is used internally by the DHCP Problem List; entries having
"^DD",9000011,9000011,1.02,23,2,0)
an H in this field have been "deleted" and are maintained for historical
"^DD",9000011,9000011,1.02,23,3,0)
use but are generally ignored.  If the parameter "Verify Transcribed
"^DD",9000011,9000011,1.02,23,4,0)
Entries" is turned on in File #125.99, entries made by a clerk will have
"^DD",9000011,9000011,1.02,23,5,0)
a T here, and a flag will appear on the clinician's display of the list.
"^DD",9000011,9000011,1.02,23,6,0)
P entries have been entered or verified by a provider.
"^DD",9000011,9000011,1.02,"DT")
2930726
"^DD",9000011,9000011,1.03,0)
ENTERED BY^P200'^VA(200,^1;3^Q
"^DD",9000011,9000011,1.03,3)
Enter the name of the current user.
"^DD",9000011,9000011,1.03,21,0)
^^1^1^2930726^
"^DD",9000011,9000011,1.03,21,1,0)
This is the user who actually entered this problem into this file.
"^DD",9000011,9000011,1.03,"DT")
2930726
"^DD",9000011,9000011,1.04,0)
RECORDING PROVIDER^P200'X^VA(200,^1;4^Q
"^DD",9000011,9000011,1.04,3)
Enter the name of the provider who first recorded this data.
"^DD",9000011,9000011,1.04,12.1)
S DIC("S")="I $S('$D(^(""PS"")):1,'$P(^(""PS""),U,4):1,DT')$P(^(""PS""),U,4):1,1:0)&($D(^XUSEC(""PROVIDER"",Y)))"
"^DD",9000011,9000011,1.04,21,0)
^^2^2^2960502^^^
"^DD",9000011,9000011,1.04,21,1,0)
This is the provider who first recorded this problem, either on the
"^DD",9000011,9000011,1.04,21,2,0)
paper chart or online.
"^DD",9000011,9000011,1.04,"DT")
2960502
"^DD",9000011,9000011,1.05,0)
RESPONSIBLE PROVIDER^P200'^VA(200,^1;5^Q
"^DD",9000011,9000011,1.05,3)
Enter the name of the local provider treating this problem.
"^DD",9000011,9000011,1.05,21,0)
^^1^1^2930726^
"^DD",9000011,9000011,1.05,21,1,0)
This is the provider currently responsible for treating this problem.
"^DD",9000011,9000011,1.05,"DT")
2930726
"^DD",9000011,9000011,1.06,0)
SERVICE^P49'^DIC(49,^1;6^Q
"^DD",9000011,9000011,1.06,3)
Enter the service to be associated with this problem.
"^DD",9000011,9000011,1.06,21,0)
^^5^5^2931223^^^
"^DD",9000011,9000011,1.06,21,1,0)
This is the service primarily involved in the treatment of this problem;
"^DD",9000011,9000011,1.06,21,2,0)
the DHCP Problem List defaults this field to the service defined in
"^DD",9000011,9000011,1.06,21,3,0)
File #200 for the Recording Provider of this problem, upon entry of the
"^DD",9000011,9000011,1.06,21,4,0)
problem.  It may later be used to categorize problems for screening and
"^DD",9000011,9000011,1.06,21,5,0)
sorting.
"^DD",9000011,9000011,1.06,"DT")
2930726
"^DD",9000011,9000011,1.07,0)
DATE RESOLVED^D^^1;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",9000011,9000011,1.07,3)
Enter the date this problem became resolved or inactive, as precisely as known.
"^DD",9000011,9000011,1.07,21,0)
^^2^2^2930726^
"^DD",9000011,9000011,1.07,21,1,0)
This is the date this problem was resolved or inactivated, as precisely
"^DD",9000011,9000011,1.07,21,2,0)
as known.
"^DD",9000011,9000011,1.07,"DT")
2930726
"^DD",9000011,9000011,1.08,0)
CLINIC^*P44'^SC(^1;8^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000011,9000011,1.08,3)
Enter the clinic in which the patient is being seen for this problem.
"^DD",9000011,9000011,1.08,12)
Only clinics are allowed here.
"^DD",9000011,9000011,1.08,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",9000011,9000011,1.08,21,0)
^^3^3^2931223^
"^DD",9000011,9000011,1.08,21,1,0)
This is the clinic in which this patient is being seen for this problem.
"^DD",9000011,9000011,1.08,21,2,0)
The problem list may be screened based on this value, to change one's
"^DD",9000011,9000011,1.08,21,3,0)
view of the list.
"^DD",9000011,9000011,1.08,"DT")
2940412
"^DD",9000011,9000011,1.09,0)
DATE RECORDED^D^^1;9^S %DT="E" D ^%DT S X=Y K:DT<X!(2000000>X) X
"^DD",9000011,9000011,1.09,3)
Enter the date this problem was first recorded, as precisely as known.
"^DD",9000011,9000011,1.09,21,0)
^^3^3^2940118^
"^DD",9000011,9000011,1.09,21,1,0)
This is the date this problem was originally recorded, either online or
"^DD",9000011,9000011,1.09,21,2,0)
in the paper chart; it may be the same as, or earlier than, the Date
"^DD",9000011,9000011,1.09,21,3,0)
Entered.
"^DD",9000011,9000011,1.09,"DT")
2940111
"^DD",9000011,9000011,1.1,0)
SERVICE CONNECTED^S^1:YES;0:NO;^1;10^Q
"^DD",9000011,9000011,1.1,3)
If this problem is service connected, enter YES here.
"^DD",9000011,9000011,1.1,21,0)
^^2^2^2930726^^^
"^DD",9000011,9000011,1.1,21,1,0)
If the patient has service connection on file in the DHCP Patient file #2,
"^DD",9000011,9000011,1.1,21,2,0)
this problem specifically may be flagged as being service connected.
"^DD",9000011,9000011,1.1,23,0)
^^3^3^2930726^^
"^DD",9000011,9000011,1.1,23,1,0)
This data will be prompted for in the DHCP Problem List only if the
"^DD",9000011,9000011,1.1,23,2,0)
patient is indicated for service connection.  Non-VA sites will not
"^DD",9000011,9000011,1.1,23,3,0)
be prompted for this information.
"^DD",9000011,9000011,1.1,"DT")
2930726
"^DD",9000011,9000011,1.11,0)
AGENT ORANGE EXPOSURE^S^1:YES;0:NO;^1;11^Q
"^DD",9000011,9000011,1.11,3)
Enter YES if this problem is related to exposure to Agent Orange.
"^DD",9000011,9000011,1.11,21,0)
^^2^2^2930726^
"^DD",9000011,9000011,1.11,21,1,0)
If this problem is related to a patient's exposure to Agent Orange,
"^DD",9000011,9000011,1.11,21,2,0)
it may be flagged here.
"^DD",9000011,9000011,1.11,23,0)
^^3^3^2930726^
"^DD",9000011,9000011,1.11,23,1,0)
This data will be prompted for in the DHCP Problem List only if a patient
"^DD",9000011,9000011,1.11,23,2,0)
has Agent Orange exposure indicated.  Non-VA sites will not be prompted
"^DD",9000011,9000011,1.11,23,3,0)
for this information.
"^DD",9000011,9000011,1.11,"DT")
2930726
"^DD",9000011,9000011,1.12,0)
IONIZING RADIATION EXPOSURE^S^1:YES;0:NO;^1;12^Q
"^DD",9000011,9000011,1.12,3)
Enter YES if this problem is related to exposure to ionizing radiation.
"^DD",9000011,9000011,1.12,21,0)
^^2^2^2930726^
"^DD",9000011,9000011,1.12,21,1,0)
If this problem is related to a patient's exposure to ionizing radiation,
"^DD",9000011,9000011,1.12,21,2,0)
it may be flagged here.
"^DD",9000011,9000011,1.12,23,0)
^^3^3^2930726^
"^DD",9000011,9000011,1.12,23,1,0)
This data will be prompted for in the DHCP Problem List only if the patient
"^DD",9000011,9000011,1.12,23,2,0)
has ionizing radiation exposure indicated.  Non-VA sites will not be
"^DD",9000011,9000011,1.12,23,3,0)
prompted for this information.
"^DD",9000011,9000011,1.12,"DT")
2930726
"^DD",9000011,9000011,1.13,0)
PERSIAN GULF EXPOSURE^S^1:YES;0:NO;^1;13^Q
"^DD",9000011,9000011,1.13,3)
Enter YES if this problem is related to a Persian Gulf exposure.
"^DD",9000011,9000011,1.13,21,0)
^^2^2^2930726^
"^DD",9000011,9000011,1.13,21,1,0)
If this problem is related to a patient's service in the Persian Gulf,
"^DD",9000011,9000011,1.13,21,2,0)
it may be flagged here.
"^DD",9000011,9000011,1.13,23,0)
^^2^2^2930726^
"^DD",9000011,9000011,1.13,23,1,0)
This data will be prompted for only if a patient has Persian Gulf service
"^DD",9000011,9000011,1.13,23,2,0)
indicated.  Non-VA sites will not be prompted for this information.
"^DD",9000011,9000011,1.13,"DT")
2930726
"^DD",9000011,9000011,1.14,0)
PRIORITY^S^A:ACUTE;C:CHRONIC;^1;14^Q
"^DD",9000011,9000011,1.14,3)
You may further refine the status of this problem by assigning it a priority.
"^DD",9000011,9000011,1.14,21,0)
^^2^2^2940323^^^
"^DD",9000011,9000011,1.14,21,1,0)
This is a flag to indicate how critical this problem is for this patient;
"^DD",9000011,9000011,1.14,21,2,0)
problems marked as Acute will be flagged on the Problem List display.
"^DD",9000011,9000011,1.14,"DT")
2940201
"^DD",9000011,9000011,1.15,0)
HEAD AND/OR NECK CANCER^S^1:YES;0:NO;^1;15^Q
"^DD",9000011,9000011,1.15,21,0)
^.001^2^2^3020307^^
"^DD",9000011,9000011,1.15,21,1,0)
If this problem is related to the treatment of head and/or neck cancer 
"^DD",9000011,9000011,1.15,21,2,0)
associated with nose or throat radium treatments, it may be flagged here.
"^DD",9000011,9000011,1.15,23,0)
^^2^2^3020307^
"^DD",9000011,9000011,1.15,23,1,0)
This data will be prompted for only if a patient has received nose or throat
"^DD",9000011,9000011,1.15,23,2,0)
radium treatments.
"^DD",9000011,9000011,1.15,"DT")
3020307
"^DD",9000011,9000011,1.16,0)
MILITARY SEXUAL TRAUMA^S^1:YES;0:NO;^1;16^Q
"^DD",9000011,9000011,1.16,21,0)
^.001^2^2^3020307^^
"^DD",9000011,9000011,1.16,21,1,0)
If this problem is related to the treatment of military sexual trauma, it may
"^DD",9000011,9000011,1.16,21,2,0)
be flagged here.
"^DD",9000011,9000011,1.16,23,0)
^^2^2^3020307^
"^DD",9000011,9000011,1.16,23,1,0)
This data will be prompted for only if a patient has been treated for military
"^DD",9000011,9000011,1.16,23,2,0)
sexual trauma.
"^DD",9000011,9000011,1.16,"DT")
3020307
"^DD",9000011,9000011,1.17,0)
COMBAT VETERAN^S^1:YES;0:NO;^1;17^Q
"^DD",9000011,9000011,1.17,3)
If this problem is a result of combat it may be flagged here
"^DD",9000011,9000011,1.17,"DT")
3031125
"^DD",9000011,9000011,1.18,0)
SHIPBOARD HAZARD & DEFENSE^S^1:YES;0:NO;^1;18^Q
"^DD",9000011,9000011,1.18,3)
If this problem is a result of SHAD, it may be flagged here
"^DD",9000011,9000011,1.18,"DT")
3060918
"^DD",9000011,9000011,1101,0)
NOTE FACILITY^9000011.11PA^^11;0
"^DD",9000011,9000011,1101,21,0)
^^1^1^2940208^
"^DD",9000011,9000011,1101,21,1,0)
This is the location at which the notes in this multiple originated.
"^DD",9000011,9000011,80001,0)
SNOMED CT CONCEPT CODE^F^^800;1^K:$L(X)>40!($L(X)<1)!'(X?1.40N) X
"^DD",9000011,9000011,80001,1,0)
^.1
"^DD",9000011,9000011,80001,1,1,0)
9000011^ASCT
"^DD",9000011,9000011,80001,1,1,1)
S ^AUPNPROB("ASCT",$E(X,1,30),DA)=""
"^DD",9000011,9000011,80001,1,1,2)
K ^AUPNPROB("ASCT",$E(X,1,30),DA)
"^DD",9000011,9000011,80001,1,1,3)
** DO NOT DELETE **
"^DD",9000011,9000011,80001,1,1,"%D",0)
^^3^3^3120607^
"^DD",9000011,9000011,80001,1,1,"%D",1,0)
This REGULAR FileMan cross-reference on SNOMED CT Concept will help to
"^DD",9000011,9000011,80001,1,1,"%D",2,0)
automate the updating of problems when SNOMED Concepts are mapped or
"^DD",9000011,9000011,80001,1,1,"%D",3,0)
re-mapped to ICD-9-CM codes.
"^DD",9000011,9000011,80001,1,1,"DT")
3120607
"^DD",9000011,9000011,80001,3)
Answer must be 1-40 numeric characters in length.
"^DD",9000011,9000011,80001,21,0)
^^2^2^3120606^
"^DD",9000011,9000011,80001,21,1,0)
A clinical idea to which a unique ConceptID has been assigned in SNOMED
"^DD",9000011,9000011,80001,21,2,0)
CT. Each Concept is represented by a row in the Concepts Table.
"^DD",9000011,9000011,80001,23,0)
^^2^2^3120606^
"^DD",9000011,9000011,80001,23,1,0)
NOTE: This field is filed programmatically. The user should never be 
"^DD",9000011,9000011,80001,23,2,0)
directly prompted for it.
"^DD",9000011,9000011,80001,"DT")
3120607
"^DD",9000011,9000011,80002,0)
SNOMED CT DESIGNATION CODE^F^^800;2^K:$L(X)>40!($L(X)<1)!'(X?1.40N) X
"^DD",9000011,9000011,80002,3)
Answer must be 1-40 numeric characters in length.
"^DD",9000011,9000011,80002,21,0)
^^9^9^3120606^
"^DD",9000011,9000011,80002,21,1,0)
A single SNOMED Concept may have multiple Designations, where a 
"^DD",9000011,9000011,80002,21,2,0)
Designation may be considered an alternate way of expressing the concept. 
"^DD",9000011,9000011,80002,21,3,0)
Synonyms, lexical variants, abbreviations are all different types of 
"^DD",9000011,9000011,80002,21,4,0)
designations. In many cases, a problem (as reported by the patient) and a 
"^DD",9000011,9000011,80002,21,5,0)
finding indicating a problem will share the same concept and concept code 
"^DD",9000011,9000011,80002,21,6,0)
(e.g., abdominal pain), but will have different designation codes (i.e., 
"^DD",9000011,9000011,80002,21,7,0)
the generic "abdominal pain  and "abdominal pain (finding)  share the 
"^DD",9000011,9000011,80002,21,8,0)
concept code 21522001, but they have the designation codes 36112013 and 
"^DD",9000011,9000011,80002,21,9,0)
750827015 respectively.
"^DD",9000011,9000011,80002,23,0)
^^2^2^3120606^
"^DD",9000011,9000011,80002,23,1,0)
NOTE: This field is filed programmatically. The user should never be 
"^DD",9000011,9000011,80002,23,2,0)
directly prompted for it.
"^DD",9000011,9000011,80002,"DT")
3120606
"^DD",9000011,9000011,80003,0)
VHAT CONCEPT VUID (FUTURE)^F^^800;3^K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",9000011,9000011,80003,3)
Answer must be 1-20 numeric characters in length.
"^DD",9000011,9000011,80003,21,0)
^^19^19^3120808^^
"^DD",9000011,9000011,80003,21,1,0)
VHA Unique ID (VUID) for the VHAT Concept. A unique meaningless integer
"^DD",9000011,9000011,80003,21,2,0)
assigned to a corresponding concept VHA wide.
"^DD",9000011,9000011,80003,21,3,0)
 
"^DD",9000011,9000011,80003,21,4,0)
This field is being implemented to allow a more rapidly extensible 
"^DD",9000011,9000011,80003,21,5,0)
vocabulary for VA, while international normative standard coding systems 
"^DD",9000011,9000011,80003,21,6,0)
continue to evolve more slowly. The precise definition of the concept 
"^DD",9000011,9000011,80003,21,7,0)
Polytrauma may prove to be a useful example. Although the term has 
"^DD",9000011,9000011,80003,21,8,0)
become common among US Military and VA physicians to describe a seriously 
"^DD",9000011,9000011,80003,21,9,0)
injured (i.e., Injury Severity Score (ISS) >= 16) soldier with multiple 
"^DD",9000011,9000011,80003,21,10,0)
traumatic injuries, it is not yet available as a coded concept in either
"^DD",9000011,9000011,80003,21,11,0)
SNOMED CT, ICD-9-CM, or ICD-10-CM. Allowing the definition and deployment
"^DD",9000011,9000011,80003,21,12,0)
of VHAT Concept/Designation VUID pairs to identify such problems in
"^DD",9000011,9000011,80003,21,13,0)
advance of their acceptance by the international medical community will
"^DD",9000011,9000011,80003,21,14,0)
help to provide coded, computable documentation in a much more timely
"^DD",9000011,9000011,80003,21,15,0)
manner than waiting for inclusion in SNOMED CT or ICD.
"^DD",9000011,9000011,80003,21,16,0)
 
"^DD",9000011,9000011,80003,21,17,0)
When the infrastructure in VA's Enterprise Terminology Server (ETS) & New
"^DD",9000011,9000011,80003,21,18,0)
Term Rapid Turn-around (NTRT) service are ready to deploy VHAT Concepts, 
"^DD",9000011,9000011,80003,21,19,0)
this field will allow us to store patient problems encoded with them.
"^DD",9000011,9000011,80003,23,0)
^^2^2^3120606^
"^DD",9000011,9000011,80003,23,1,0)
NOTE: This field is filed programmatically. The user should never be 
"^DD",9000011,9000011,80003,23,2,0)
directly prompted for it.
"^DD",9000011,9000011,80003,"DT")
3120808
"^DD",9000011,9000011,80004,0)
VHAT DESIGNATION VUID (FUTURE)^F^^800;4^K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",9000011,9000011,80004,3)
Answer must be 1-20 numeric characters in length.
"^DD",9000011,9000011,80004,21,0)
^^7^7^3120606^
"^DD",9000011,9000011,80004,21,1,0)
VHA Unique ID (VUID) for the VHAT Designation. A unique meaningless
"^DD",9000011,9000011,80004,21,2,0)
integer assigned to a corresponding designation VHA wide.
"^DD",9000011,9000011,80004,21,3,0)
 
"^DD",9000011,9000011,80004,21,4,0)
VHAT Concept/Designation Code pairs function in a manner identical to 
"^DD",9000011,9000011,80004,21,5,0)
that of SNOMED CT Concept/Designation Codes (i.e., they support the 
"^DD",9000011,9000011,80004,21,6,0)
unique identification of clinical concepts, along with the many 
"^DD",9000011,9000011,80004,21,7,0)
alternative ways in which a given concept may be expressed).
"^DD",9000011,9000011,80004,23,0)
^^2^2^3120606^
"^DD",9000011,9000011,80004,23,1,0)
NOTE: This field is filed programmatically. The user should never be 
"^DD",9000011,9000011,80004,23,2,0)
directly prompted for it.
"^DD",9000011,9000011,80004,"DT")
3120606
"^DD",9000011,9000011,80005,0)
SNOMED CT-TO-ICD MAP STATUS^S^0:N/A;1:PENDING;2:COMPLETED;^800;5^Q
"^DD",9000011,9000011,80005,3)
Set by program to reflect mapping status of a finding.
"^DD",9000011,9000011,80005,21,0)
^^7^7^3120808^
"^DD",9000011,9000011,80005,21,1,0)
This Set of Codes type field helps to track the mapping status of a 
"^DD",9000011,9000011,80005,21,2,0)
patient's problem. It is set to PENDING when an unmapped Clinical Finding
"^DD",9000011,9000011,80005,21,3,0)
is selected as a patient's problem. It is updated programmatically to
"^DD",9000011,9000011,80005,21,4,0)
COMPLETE when NTRT deploys a new SNOMED CT to ICD mapping for the problem
"^DD",9000011,9000011,80005,21,5,0)
in question.
"^DD",9000011,9000011,80005,21,6,0)
 
"^DD",9000011,9000011,80005,21,7,0)
NOTE: THIS FIELD SHOULD NEVER BE UPDATED BY AN END USER.
"^DD",9000011,9000011,80005,"DT")
3120808
"^DD",9000011,9000011,80101,0)
UNIQUE NEW TERM REQUESTED^S^0:False;1:True;^801;1^Q
"^DD",9000011,9000011,80101,3)
Indicate whether a New Term was requested (NTRT).
"^DD",9000011,9000011,80101,21,0)
^^5^5^3120808^
"^DD",9000011,9000011,80101,21,1,0)
Indicates whether the user requested a new term during the process of 
"^DD",9000011,9000011,80101,21,2,0)
entering a free text problem. It should only be populated automatically by
"^DD",9000011,9000011,80101,21,3,0)
program code. 
"^DD",9000011,9000011,80101,21,4,0)
 
"^DD",9000011,9000011,80101,21,5,0)
NOTE: THIS FIELD SHOULD NEVER BE UPDATED BY AN END USER.
"^DD",9000011,9000011,80101,23,0)
^^3^3^3120808^
"^DD",9000011,9000011,80101,23,1,0)
If the new term is accepted by Standards & Terminology Service, the term
"^DD",9000011,9000011,80101,23,2,0)
will be deployed by the NTRT process, thereby helping to continuously 
"^DD",9000011,9000011,80101,23,3,0)
improve the quality of the vocabulary for documenting patient problems.
"^DD",9000011,9000011,80101,"DT")
3120808
"^DD",9000011,9000011,80102,0)
UNIQUE TERM REQUEST COMMENT^F^^801;2^K:$L(X)>80!($L(X)<2) X
"^DD",9000011,9000011,80102,3)
Answer must be 2-80 characters in length.
"^DD",9000011,9000011,80102,21,0)
^^3^3^3120606^
"^DD",9000011,9000011,80102,21,1,0)
Please provide clarification of the new term request. For example, if the
"^DD",9000011,9000011,80102,21,2,0)
requested term is an acronym or abbreviation, the comment field 
"^DD",9000011,9000011,80102,21,3,0)
accommodates the fully specified name, etc.
"^DD",9000011,9000011,80102,"DT")
3120808
"^DD",9000011,9000011,80300,0)
MAPPING TARGETS^9000011.803A^^803;0
"^DD",9000011,9000011,80300,21,0)
^^5^5^3120606^
"^DD",9000011,9000011,80300,21,1,0)
This multiple includes mapped expressions: complications, comorbidities,
"^DD",9000011,9000011,80300,21,2,0)
and compound diagnoses. e.g., the single SNOMED CT concept Diabetic
"^DD",9000011,9000011,80300,21,3,0)
neuropathy (230572002) is mapped to two ICD-9-CM diagnoses: DIABETES WITH
"^DD",9000011,9000011,80300,21,4,0)
NEUROLOGICAL MANIFESTATIONS, TYPE II OR UNSPECIFIED TYPE, NOT STATED AS
"^DD",9000011,9000011,80300,21,5,0)
UNCONTROLLED (250.60) and POLYNEUROPATHY IN DIABETES (357.2).
"^DD",9000011,9000011.11,0)
NOTE FACILITY SUB-FIELD^^1101^2
"^DD",9000011,9000011.11,0,"DT")
2940110
"^DD",9000011,9000011.11,0,"IX","B",9000011.11,.01)

"^DD",9000011,9000011.11,0,"NM","NOTE FACILITY")

"^DD",9000011,9000011.11,0,"UP")
9000011
"^DD",9000011,9000011.11,.01,0)
NOTE FACILITY^MP9999999.06'^AUTTLOC(^0;1^Q
"^DD",9000011,9000011.11,.01,1,0)
^.1
"^DD",9000011,9000011.11,.01,1,1,0)
9000011.11^B
"^DD",9000011,9000011.11,.01,1,1,1)
S ^AUPNPROB(DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",9000011,9000011.11,.01,1,1,2)
K ^AUPNPROB(DA(1),11,"B",$E(X,1,30),DA)
"^DD",9000011,9000011.11,.01,3)
Enter the location at which these notes originated.
"^DD",9000011,9000011.11,.01,21,0)
^^1^1^2940110^^
"^DD",9000011,9000011.11,.01,21,1,0)
This is the location at which the notes in this multiple originated.
"^DD",9000011,9000011.11,.01,"AUDIT")
n
"^DD",9000011,9000011.11,.01,"DT")
2930909
"^DD",9000011,9000011.11,1101,0)
NOTE^9000011.1111IA^^11;0
"^DD",9000011,9000011.11,1101,21,0)
^^4^4^2940208^
"^DD",9000011,9000011.11,1101,21,1,0)
Each entry in this multiple is a notation appended to a problem for
"^DD",9000011,9000011.11,1101,21,2,0)
further clarification or information.  Data includes a note number
"^DD",9000011,9000011.11,1101,21,3,0)
and status, the date the note was added, the provider who added it,
"^DD",9000011,9000011.11,1101,21,4,0)
and the actual text of the note.
"^DD",9000011,9000011.1111,0)
NOTE SUB-FIELD^^.06^5
"^DD",9000011,9000011.1111,0,"DT")
2940110
"^DD",9000011,9000011.1111,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",9000011,9000011.1111,0,"IX","AV9",9000011.1111,.01)

"^DD",9000011,9000011.1111,0,"IX","B",9000011.1111,.01)

"^DD",9000011,9000011.1111,0,"NM","NOTE")

"^DD",9000011,9000011.1111,0,"UP")
9000011.11
"^DD",9000011,9000011.1111,.01,0)
NOTE NMBR^RNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9000011,9000011.1111,.01,1,0)
^.1
"^DD",9000011,9000011.1111,.01,1,1,0)
9000011.1111^B
"^DD",9000011,9000011.1111,.01,1,1,1)
S ^AUPNPROB(DA(2),11,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",9000011,9000011.1111,.01,1,1,2)
K ^AUPNPROB(DA(2),11,DA(1),11,"B",$E(X,1,30),DA)
"^DD",9000011,9000011.1111,.01,1,2,0)
9000011.1111^AV9^MUMPS
"^DD",9000011,9000011.1111,.01,1,2,1)
S:$D(APCDLOOK) DIC("DR")=""
"^DD",9000011,9000011.1111,.01,1,2,2)
Q
"^DD",9000011,9000011.1111,.01,1,2,"%D",0)
^^2^2^2940204^^^
"^DD",9000011,9000011.1111,.01,1,2,"%D",1,0)
Controls the behaviour of the input templates used by IHS to populate
"^DD",9000011,9000011.1111,.01,1,2,"%D",2,0)
and maintain this file.
"^DD",9000011,9000011.1111,.01,1,2,"DT")
2940125
"^DD",9000011,9000011.1111,.01,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",9000011,9000011.1111,.01,21,0)
^^1^1^2940204^^^^
"^DD",9000011,9000011.1111,.01,21,1,0)
This is the unique note identifier.
"^DD",9000011,9000011.1111,.01,"AUDIT")
n
"^DD",9000011,9000011.1111,.01,"DT")
2940125
"^DD",9000011,9000011.1111,.03,0)
NOTE NARRATIVE^RF^^0;3^K:$L(X)>60!($L(X)<3) X
"^DD",9000011,9000011.1111,.03,3)
Answer must be 3-60 characters in length.
"^DD",9000011,9000011.1111,.03,21,0)
^^1^1^2930726^
"^DD",9000011,9000011.1111,.03,21,1,0)
Additional comments may be entered here to further describe this problem.
"^DD",9000011,9000011.1111,.03,"AUDIT")
n
"^DD",9000011,9000011.1111,.03,"DT")
2930726
"^DD",9000011,9000011.1111,.04,0)
STATUS^RS^A:ACTIVE;^0;4^Q
"^DD",9000011,9000011.1111,.04,3)
If this note is currently ACTIVE, indicate it here.
"^DD",9000011,9000011.1111,.04,21,0)
^^1^1^2930726^
"^DD",9000011,9000011.1111,.04,21,1,0)
This flag indicates if this note is currently active.
"^DD",9000011,9000011.1111,.04,"DT")
2900501
"^DD",9000011,9000011.1111,.05,0)
DATE NOTE ADDED^D^^0;5^S %DT="EX" D ^%DT S X=Y K:DT<X!(1800000>X) X
"^DD",9000011,9000011.1111,.05,3)
TYPE A DATE BETWEEN 1880 AND TODAY
"^DD",9000011,9000011.1111,.05,21,0)
^^1^1^2930726^
"^DD",9000011,9000011.1111,.05,21,1,0)
This is the date this note was entered into this file.
"^DD",9000011,9000011.1111,.05,"DT")
2930726
"^DD",9000011,9000011.1111,.06,0)
AUTHOR^P200'^VA(200,^0;6^Q
"^DD",9000011,9000011.1111,.06,3)
Enter the name of the provider who authored the text of this note.
"^DD",9000011,9000011.1111,.06,21,0)
^^1^1^2930726^
"^DD",9000011,9000011.1111,.06,21,1,0)
This is the provider who authored the text of this note.
"^DD",9000011,9000011.1111,.06,"DT")
2930330
"^DD",9000011,9000011.803,0)
MAPPING TARGETS SUB-FIELD^^.03^3
"^DD",9000011,9000011.803,0,"DT")
3120606
"^DD",9000011,9000011.803,0,"IX","B",9000011.803,.01)

"^DD",9000011,9000011.803,0,"NM","MAPPING TARGETS")

"^DD",9000011,9000011.803,0,"UP")
9000011
"^DD",9000011,9000011.803,.01,0)
CODE^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",9000011,9000011.803,.01,1,0)
^.1
"^DD",9000011,9000011.803,.01,1,1,0)
9000011.803^B
"^DD",9000011,9000011.803,.01,1,1,1)
S ^AUPNPROB(DA(1),803,"B",$E(X,1,30),DA)=""
"^DD",9000011,9000011.803,.01,1,1,2)
K ^AUPNPROB(DA(1),803,"B",$E(X,1,30),DA)
"^DD",9000011,9000011.803,.01,3)
Answer must be 1-30 characters in length.
"^DD",9000011,9000011.803,.01,21,0)
^^2^2^3120606^
"^DD",9000011,9000011.803,.01,21,1,0)
This is the code in the target coding system to which the problem is 
"^DD",9000011,9000011.803,.01,21,2,0)
mapped.
"^DD",9000011,9000011.803,.01,"DT")
3120606
"^DD",9000011,9000011.803,.02,0)
CODING SYSTEM^F^^0;2^K:$L(X)>7!($L(X)<3) X
"^DD",9000011,9000011.803,.02,3)
Answer must be 3-7 characters in length.
"^DD",9000011,9000011.803,.02,21,0)
^^11^11^3120807^
"^DD",9000011,9000011.803,.02,21,1,0)
This identifies the Coding System to which the Code belongs. It 
"^DD",9000011,9000011.803,.02,21,2,0)
corresponds to the Source Abbreviation in the Coding Systems File, to 
"^DD",9000011,9000011.803,.02,21,3,0)
optimize calls to the Lexicon and ICD APIs for resolving codes, 
"^DD",9000011,9000011.803,.02,21,4,0)
independent of their code set version, and to facilitate transition from 
"^DD",9000011,9000011.803,.02,21,5,0)
ICD-9-CM to ICD-10-CM. Examples include:
"^DD",9000011,9000011.803,.02,21,6,0)
 
"^DD",9000011,9000011.803,.02,21,7,0)
SOURCE
"^DD",9000011,9000011.803,.02,21,8,0)
ABBREV   NOMENCLATURE  SOURCE TITLE
"^DD",9000011,9000011.803,.02,21,9,0)
--------------------------------------------------------------------------
"^DD",9000011,9000011.803,.02,21,10,0)
10D      ICD-10-CM     International Classification of Diseases, Diagnosis
"^DD",9000011,9000011.803,.02,21,11,0)
ICD      ICD-9-CM      International Classification of Diseases, Diagnosis
"^DD",9000011,9000011.803,.02,"DT")
3120807
"^DD",9000011,9000011.803,.03,0)
CODE DATE^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",9000011,9000011.803,.03,3)
(No range limit on date)
"^DD",9000011,9000011.803,.03,21,0)
^^2^2^3120606^
"^DD",9000011,9000011.803,.03,21,1,0)
This is the date when the code and coding system were filed. This allows 
"^DD",9000011,9000011.803,.03,21,2,0)
proper resolution of the code, irrespective of code set versions, etc.
"^DD",9000011,9000011.803,.03,"DT")
3120606
"^DIC",9000011,9000011,0)
PROBLEM^9000011IP
"^DIC",9000011,9000011,0,"GL")
^AUPNPROB(
"^DIC",9000011,9000011,"%D",0)
^^8^8^2940511^^^^
"^DIC",9000011,9000011,"%D",1,0)
This file contains patient specific problems entered by the various
"^DIC",9000011,9000011,"%D",2,0)
providers of service.  The PATIENT NAME field (.02) is a backward pointer
"^DIC",9000011,9000011,"%D",3,0)
to the IHS PATIENT file.  This file contains one record for each problem
"^DIC",9000011,9000011,"%D",4,0)
for each patient, therefore, the KEY field (.01) is duplicated.
"^DIC",9000011,9000011,"%D",5,0)
 
"^DIC",9000011,9000011,"%D",6,0)
As of March 17, 1986 the FACILITY must be entered prior to the NUMBER.
"^DIC",9000011,9000011,"%D",7,0)
If the NUMBER is entered without previously entering the FACILITY the
"^DIC",9000011,9000011,"%D",8,0)
"AA" index is created with no FACILITY pointer.
"^DIC",9000011,"B","PROBLEM",9000011)

**INSTALL NAME**
GMTS*2.7*86
"BLD",7029,0)
GMTS*2.7*86^HEALTH SUMMARY^0^3130219^y
"BLD",7029,1,0)
^^2^2^3110907^
"BLD",7029,1,1,0)
The description of this patch may be found in the National Patch Module 
"BLD",7029,1,2,0)
under GMTS*2.7*86.
"BLD",7029,4,0)
^9.64PA^^0
"BLD",7029,6.3)
55
"BLD",7029,"ABPKG")
n
"BLD",7029,"KRN",0)
^9.67PA^8989.52^19
"BLD",7029,"KRN",.4,0)
.4
"BLD",7029,"KRN",.401,0)
.401
"BLD",7029,"KRN",.402,0)
.402
"BLD",7029,"KRN",.403,0)
.403
"BLD",7029,"KRN",.5,0)
.5
"BLD",7029,"KRN",.84,0)
.84
"BLD",7029,"KRN",3.6,0)
3.6
"BLD",7029,"KRN",3.8,0)
3.8
"BLD",7029,"KRN",9.2,0)
9.2
"BLD",7029,"KRN",9.8,0)
9.8
"BLD",7029,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",7029,"KRN",9.8,"NM",1,0)
GMTSPLST^^0^B46234208
"BLD",7029,"KRN",9.8,"NM",2,0)
GMTSPXU1^^0^B13856268
"BLD",7029,"KRN",9.8,"NM","B","GMTSPLST",1)

"BLD",7029,"KRN",9.8,"NM","B","GMTSPXU1",2)

"BLD",7029,"KRN",19,0)
19
"BLD",7029,"KRN",19.1,0)
19.1
"BLD",7029,"KRN",101,0)
101
"BLD",7029,"KRN",409.61,0)
409.61
"BLD",7029,"KRN",771,0)
771
"BLD",7029,"KRN",870,0)
870
"BLD",7029,"KRN",8989.51,0)
8989.51
"BLD",7029,"KRN",8989.52,0)
8989.52
"BLD",7029,"KRN",8994,0)
8994
"BLD",7029,"KRN","B",.4,.4)

"BLD",7029,"KRN","B",.401,.401)

"BLD",7029,"KRN","B",.402,.402)

"BLD",7029,"KRN","B",.403,.403)

"BLD",7029,"KRN","B",.5,.5)

"BLD",7029,"KRN","B",.84,.84)

"BLD",7029,"KRN","B",3.6,3.6)

"BLD",7029,"KRN","B",3.8,3.8)

"BLD",7029,"KRN","B",9.2,9.2)

"BLD",7029,"KRN","B",9.8,9.8)

"BLD",7029,"KRN","B",19,19)

"BLD",7029,"KRN","B",19.1,19.1)

"BLD",7029,"KRN","B",101,101)

"BLD",7029,"KRN","B",409.61,409.61)

"BLD",7029,"KRN","B",771,771)

"BLD",7029,"KRN","B",870,870)

"BLD",7029,"KRN","B",8989.51,8989.51)

"BLD",7029,"KRN","B",8989.52,8989.52)

"BLD",7029,"KRN","B",8994,8994)

"BLD",7029,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7029,"QUES",0)
^9.62^^
"BLD",7029,"REQB",0)
^9.611^3^3
"BLD",7029,"REQB",1,0)
GMTS*2.7*52^2
"BLD",7029,"REQB",2,0)
GMPL*2.0*36^2
"BLD",7029,"REQB",3,0)
GMTS*2.7*71^2
"BLD",7029,"REQB","B","GMPL*2.0*36",2)

"BLD",7029,"REQB","B","GMTS*2.7*52",1)

"BLD",7029,"REQB","B","GMTS*2.7*71",3)

"MBREQ")
1
"PKG",160,-1)
1^1
"PKG",160,0)
HEALTH SUMMARY^GMTS^Integrated Health Summary Tools
"PKG",160,20,0)
^9.402P^^
"PKG",160,22,0)
^9.49I^1^1
"PKG",160,22,1,0)
2.7^2951020^2951219
"PKG",160,22,1,"PAH",1,0)
86^3130219^10000000196
"PKG",160,22,1,"PAH",1,1,0)
^^2^2^3130219
"PKG",160,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module 
"PKG",160,22,1,"PAH",1,1,2,0)
under GMTS*2.7*86.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMTSPLST")
0^1^B46234208
"RTN","GMTSPLST",1,0)
GMTSPLST ; SLC/JER,KER,TC - Problem List ;09/09/11  12:49
"RTN","GMTSPLST",2,0)
 ;;2.7;Health Summary;**28,35,52,86**;Oct 20, 1995;Build 55
"RTN","GMTSPLST",3,0)
 ;
"RTN","GMTSPLST",4,0)
 ; External References
"RTN","GMTSPLST",5,0)
 ;   DBIA 10011  ^DIWP
"RTN","GMTSPLST",6,0)
 ;   DBIA  1183  GETLIST^GMPLHS
"RTN","GMTSPLST",7,0)
 ;   DBIA  1573  $$DSMONE^LEXU
"RTN","GMTSPLST",8,0)
 ;
"RTN","GMTSPLST",9,0)
 ; Variable NEWed/KILLed Elsewhere
"RTN","GMTSPLST",10,0)
 ;    DFN, GMPXICDF, GMPXNARR, GMTSNPG, GMTSQIT
"RTN","GMTSPLST",11,0)
 ;
"RTN","GMTSPLST",12,0)
ACTIVE ; Get Active Problems
"RTN","GMTSPLST",13,0)
 N STATUS S STATUS="A" D MAIN Q
"RTN","GMTSPLST",14,0)
INACT ; Get Inactive Problems
"RTN","GMTSPLST",15,0)
 N STATUS S STATUS="I" D MAIN Q
"RTN","GMTSPLST",16,0)
ALL ; Get All Problems (Active and Inactive)
"RTN","GMTSPLST",17,0)
 N STATUS S STATUS="ALL" D MAIN Q
"RTN","GMTSPLST",18,0)
MAIN ; Driver
"RTN","GMTSPLST",19,0)
 D GETLIST^GMPLHS(DFN,STATUS) Q:'$D(^TMP("GMPLHS",$J))  D SUBHDR D WRT K ^TMP("GMPLHS",$J) Q
"RTN","GMTSPLST",20,0)
 ;
"RTN","GMTSPLST",21,0)
WRT ;   Writes Problem List Component,X
"RTN","GMTSPLST",22,0)
 ;
"RTN","GMTSPLST",23,0)
 ;     ^TMP("GMPLHS",$J,#,0)=
"RTN","GMTSPLST",24,0)
 ;         Piece 1:  Diagnosis
"RTN","GMTSPLST",25,0)
 ;               2:  Date Last Modified
"RTN","GMTSPLST",26,0)
 ;               3:  Site
"RTN","GMTSPLST",27,0)
 ;               4:  Date Entered
"RTN","GMTSPLST",28,0)
 ;               5:  Status
"RTN","GMTSPLST",29,0)
 ;               6:  Date of Onset
"RTN","GMTSPLST",30,0)
 ;               7:  Responsible Provider
"RTN","GMTSPLST",31,0)
 ;               8:  Service
"RTN","GMTSPLST",32,0)
 ;               9:  Service Abbreviation
"RTN","GMTSPLST",33,0)
 ;              10:  Date Resolved
"RTN","GMTSPLST",34,0)
 ;              11:  Clinic
"RTN","GMTSPLST",35,0)
 ;              12:  Date Recorded
"RTN","GMTSPLST",36,0)
 ;              13:  Problem - Lexicon Term
"RTN","GMTSPLST",37,0)
 ;              14:  Exposure Combined String
"RTN","GMTSPLST",38,0)
 ;              15:  SNOMED-CT Concept Code
"RTN","GMTSPLST",39,0)
 ;              16:  SNOMED-CT Preferred Text
"RTN","GMTSPLST",40,0)
 ;              17:  ICD-9-CM Code
"RTN","GMTSPLST",41,0)
 ;              18:  ICD-9-CM Description
"RTN","GMTSPLST",42,0)
 ;              19:  VHAT Concept Code
"RTN","GMTSPLST",43,0)
 ;              20:  VHAT Preferred Text
"RTN","GMTSPLST",44,0)
 ;
"RTN","GMTSPLST",45,0)
 ;     ^TMP("GMPLHS",$J,#,#,"ICD9")      Other multiple mapped ICD-9-CM codes
"RTN","GMTSPLST",46,0)
 ;     ^TMP("GMPLHS",$J,#,"L")           Lexicon Term
"RTN","GMTSPLST",47,0)
 ;     ^TMP("GMPLHS",$J,#,"N")           Provider Narrative
"RTN","GMTSPLST",48,0)
 ;     ^TMP("GMPLHS",$J,#,"C",LOC,#,0))  Comments
"RTN","GMTSPLST",49,0)
 ;
"RTN","GMTSPLST",50,0)
 N GMREC,GMTSICL,GMTAB,LINE1,DIWL,GMTSTXTF
"RTN","GMTSPLST",51,0)
 S GMTSICL=32,DIWL=0,GMTAB=0,GMREC=0,GMTSTXTF=0
"RTN","GMTSPLST",52,0)
 F  S GMREC=$O(^TMP("GMPLHS",$J,GMREC)) Q:GMREC'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPLST",53,0)
 . N GMNODE,GMDIAG,GMDIAC,GMDIAT,GMDIAS,LASTMDT,STAT,ONSETDT,PROV,SERV,GMSCT,GMVHAT
"RTN","GMTSPLST",54,0)
 . N RESDT,NARR,GMICD,GMDSM,GMDSMS,CODE,LEXI,LEX,PLIFN,ADDINFO,EXP,GMTSX,X,GMDIAC,GMDIAT
"RTN","GMTSPLST",55,0)
 . S (GMDIAC,GMDIAT)=""
"RTN","GMTSPLST",56,0)
 . S GMNODE=$G(^TMP("GMPLHS",$J,GMREC,0))
"RTN","GMTSPLST",57,0)
 . Q:GMNODE']""
"RTN","GMTSPLST",58,0)
 . S GMDIAG=$P(GMNODE,U),LASTMDT=$P(GMNODE,U,2),STAT=$P(GMNODE,U,5)
"RTN","GMTSPLST",59,0)
 . S X=LASTMDT D REGDT4^GMTSU S LASTMDT=X
"RTN","GMTSPLST",60,0)
 . S ONSETDT=$P(GMNODE,U,6),PROV=$P(GMNODE,U,7)
"RTN","GMTSPLST",61,0)
 . S RESDT=$P(GMNODE,U,10),GMICD="",GMSCT=$P(GMNODE,U,15),GMVHAT=$P(GMNODE,U,19)
"RTN","GMTSPLST",62,0)
 . S EXP=$P(GMNODE,U,14) S:$L(EXP) EXP=" ("_EXP_")"
"RTN","GMTSPLST",63,0)
 . I STAT="A",+ONSETDT S X=ONSETDT D REGDT4^GMTSU S ADDINFO="Onset "_X
"RTN","GMTSPLST",64,0)
 . I STAT="I",+RESDT S X=RESDT D REGDT4^GMTSU S ADDINFO="Resolved "_X
"RTN","GMTSPLST",65,0)
 . S GMPXICDF=$$UP($G(GMPXICDF))
"RTN","GMTSPLST",66,0)
 . S GMTSTXTF=$S(($G(GMPXICDF)="T")!($G(GMPXICDF)["TEXT ONLY"):1,1:0)
"RTN","GMTSPLST",67,0)
 . I $G(GMPXICDF)]"",($G(GMPXICDF)'="N")!($G(GMPXICDF)["NONE"),GMDIAG]"" D
"RTN","GMTSPLST",68,0)
 . . D GETICDDX^GMTSPXU1(.GMDIAG,$G(GMPXICDF)) S GMICD=GMDIAG
"RTN","GMTSPLST",69,0)
 . I $G(GMTSTXTF)=0 S GMDIAC=$P($G(GMICD),"-",1),GMDIAT=$P($G(GMICD),"-",2,299)
"RTN","GMTSPLST",70,0)
 . S LEX=$G(^TMP("GMPLHS",$J,GMREC,"L"))
"RTN","GMTSPLST",71,0)
 . S NARR=""
"RTN","GMTSPLST",72,0)
 . S:$G(GMPXNARR)'="N"!(LEX["Unresolved") NARR=$G(^TMP("GMPLHS",$J,GMREC,"N"))
"RTN","GMTSPLST",73,0)
 . S LEXI=+LEX,LEX=$P(LEX,"^",2) S:$$UP(LEX)["UNRESOLVED"!(+LEXI'>1) (LEXI,LEX)=""
"RTN","GMTSPLST",74,0)
 . S (CODE,GMDIAS,GMDSMS,GMDSM)="" S:+LEXI>0 GMDSM=$$DSMONE^LEXU(+LEXI)
"RTN","GMTSPLST",75,0)
 . S:GMDIAC["799.9" GMDSM=""
"RTN","GMTSPLST",76,0)
 . S:$L(GMDSM)>2&(GMDSM'[".") GMDSM=GMDSM_"."
"RTN","GMTSPLST",77,0)
 . S:$L(GMDIAC) GMDIAS="(ICD-9-CM "_GMDIAC_")"
"RTN","GMTSPLST",78,0)
 . S:$L(GMDSM) GMDSMS="(DSM "_GMDSM_")"
"RTN","GMTSPLST",79,0)
 . S:$L(GMDIAC)&($L(GMDSM))&(GMDIAC=GMDSM) GMDIAS="(ICD/DSM "_GMDIAC_")",GMDSMS=""
"RTN","GMTSPLST",80,0)
 . I $G(^TMP("GMPLHS",$J,GMREC,0,"ICD9"))="" D
"RTN","GMTSPLST",81,0)
 . . S:$L(GMDIAC)&$S($L(GMSCT):1,$L(GMVHAT):1,1:0) GMDIAS=$S($L(GMSCT):"(SCT ",1:"(VHAT ")_GMSCT_") (ICD-9-CM "_GMDIAC_")"
"RTN","GMTSPLST",82,0)
 . E  I $L(GMDIAC)&$S($L(GMSCT):1,$L(GMVHAT):1,1:0) D
"RTN","GMTSPLST",83,0)
 . . S GMDIAS=$S($L(GMSCT):"(SCT ",1:"(VHAT ")_GMSCT_") (ICD-9-CM "_GMDIAC
"RTN","GMTSPLST",84,0)
 . . N T S T=0 F  S T=$O(^TMP("GMPLHS",$J,GMREC,T)) Q:'+T  D
"RTN","GMTSPLST",85,0)
 . . . S GMDIAS=GMDIAS_"/"_$P($G(^TMP("GMPLHS",$J,GMREC,T,"ICD9")),U,1)
"RTN","GMTSPLST",86,0)
 . . S GMDIAS=GMDIAS_")"
"RTN","GMTSPLST",87,0)
 . S:$L(GMDIAS) CODE=GMDIAS S:$L(GMDSMS) CODE=CODE_" "_GMDSMS F  Q:$E(CODE,1)'=" "  S CODE=$E(CODE,2,$L(CODE))
"RTN","GMTSPLST",88,0)
 . S:$L(LEX)&($L(CODE)) LEX=LEX_" "_CODE
"RTN","GMTSPLST",89,0)
 . S:$L(GMDIAT)&($L(CODE)) GMICD=GMDIAT_" "_CODE
"RTN","GMTSPLST",90,0)
 . ; Unresolved or Unspecified
"RTN","GMTSPLST",91,0)
 . I GMDIAC["799.9",$L($G(NARR)) D
"RTN","GMTSPLST",92,0)
 . . N UNARR S UNARR=$$UP(NARR)
"RTN","GMTSPLST",93,0)
 . . I UNARR["UNKNOWN AND UNSPECIFIED"!(UNARR["UNKNOWN OR UNSPECIFIED")!(UNARR["MORBIDITY OR MORTALITY") D  Q
"RTN","GMTSPLST",94,0)
 . . . S GMICD=GMDIAT_" "_CODE,NARR=""
"RTN","GMTSPLST",95,0)
 . . S GMICD=$$UP($E(NARR,1))_$E(NARR,2,$L(NARR))_" "_CODE
"RTN","GMTSPLST",96,0)
 . . S:$L(LEX) GMICD=LEX S NARR=""
"RTN","GMTSPLST",97,0)
 . ; Specified by Lexicon
"RTN","GMTSPLST",98,0)
 . I GMDIAC'["799.9",$L($G(LEX)) D
"RTN","GMTSPLST",99,0)
 . . S GMICD=LEX,NARR=""
"RTN","GMTSPLST",100,0)
 . ; Specified by Provider Narrative
"RTN","GMTSPLST",101,0)
 . I GMDIAC'["799.9",'$L($G(LEX)) D
"RTN","GMTSPLST",102,0)
 . . S:$L(NARR)&($$UP(GMDIAT)'=$$UP(NARR)) GMICD=GMICD_"; "_NARR S NARR=""
"RTN","GMTSPLST",103,0)
 . S:$G(IOST)["P-"&(EXP["MST") EXT=$$RM(EXP)
"RTN","GMTSPLST",104,0)
 . S:$L(GMICD)&($L(EXP)) GMICD=GMICD_EXP
"RTN","GMTSPLST",105,0)
 . S:$L(GMICD) GMICD=GMICD_$S($G(ADDINFO)]"":", "_ADDINFO,1:""),NARR=""
"RTN","GMTSPLST",106,0)
 . S GMICD=$$RF(GMICD)
"RTN","GMTSPLST",107,0)
 . D TXTFMT^GMTSPXU1(GMICD,$G(NARR),GMTSICL,GMTAB,DIWL)
"RTN","GMTSPLST",108,0)
 . I '$D(^UTILITY($J,"W")) Q
"RTN","GMTSPLST",109,0)
 . S GMTSX=0,LINE1=1
"RTN","GMTSPLST",110,0)
 . F  S GMTSX=$O(^UTILITY($J,"W",DIWL,GMTSX)) Q:GMTSX'>0!$D(GMTSQIT)  D
"RTN","GMTSPLST",111,0)
 . . D:LINE1 L1 D:'LINE1 LN S LINE1=0
"RTN","GMTSPLST",112,0)
 . D DC
"RTN","GMTSPLST",113,0)
 . K ^UTILITY($J,"W")
"RTN","GMTSPLST",114,0)
 . D CKP^GMTSUP Q:$D(GMTSQIT)  D:GMTSNPG SUBHDR2 W !
"RTN","GMTSPLST",115,0)
 Q
"RTN","GMTSPLST",116,0)
L1 ;     Line #1 Problem, date, provider
"RTN","GMTSPLST",117,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)  D:GMTSNPG SUBHDR2 W:STATUS="ALL" STAT W ?3,$G(^UTILITY($J,"W",DIWL,GMTSX,0)),?53,LASTMDT,?65,$E(PROV,1,15),! Q
"RTN","GMTSPLST",118,0)
LN ;     Line >1 Problem (other)
"RTN","GMTSPLST",119,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)  D:GMTSNPG SUBHDR2 W ?3,$G(^UTILITY($J,"W",DIWL,GMTSX,0)),! Q
"RTN","GMTSPLST",120,0)
 ;
"RTN","GMTSPLST",121,0)
DC ; Comments are displayed if there are any
"RTN","GMTSPLST",122,0)
 N LOC,GMR,NODE,DATE,X,UCNT,CNT,CMT,T,I S LOC="",CNT=0
"RTN","GMTSPLST",123,0)
 F  S LOC=$O(^TMP("GMPLHS",$J,GMREC,"C",LOC)) Q:LOC']""  D  Q:$D(GMTSQIT)
"RTN","GMTSPLST",124,0)
 . S (CNT,UCNT)=0 S:+($O(^TMP("GMPLHS",$J,GMREC,"C",LOC," "),-1))>1 UCNT=1
"RTN","GMTSPLST",125,0)
 . S GMR=0 F  S GMR=$O(^TMP("GMPLHS",$J,GMREC,"C",LOC,GMR)) Q:+GMR'>0  D  Q:$D(GMTSQIT)
"RTN","GMTSPLST",126,0)
 . . S NODE=$G(^TMP("GMPLHS",$J,GMREC,"C",LOC,GMR,0)) Q:NODE']""
"RTN","GMTSPLST",127,0)
 . . S CMT=$P(NODE,U) I $L($G(CMT)) D LC
"RTN","GMTSPLST",128,0)
 Q
"RTN","GMTSPLST",129,0)
LC ;   List Comments (unnumbered and numbered)
"RTN","GMTSPLST",130,0)
 S CNT=CNT+1 K ^UTILITY($J,"W") D:UCNT CF(CNT,CMT) D:'UCNT CF(0,CMT)
"RTN","GMTSPLST",131,0)
 I $D(^UTILITY($J,"W",0)) N I,T S I=0 F  S I=$O(^UTILITY($J,"W",0,I)) Q:+I=0  D
"RTN","GMTSPLST",132,0)
 . S T=$$RT($G(^UTILITY($J,"W",0,I,0))) Q:'$L(T)  D CKP^GMTSUP Q:$D(GMTSQIT)  D:GMTSNPG SUBHDR2 W:I=1 ?3 W:I>1 ?7 W $G(T),!
"RTN","GMTSPLST",133,0)
 Q
"RTN","GMTSPLST",134,0)
CF(GMC,GMT) ;   Formats GMC (count) and GMT (text) together
"RTN","GMTSPLST",135,0)
 S GMC=+($G(GMC)),GMT=$G(GMT) Q:'$L(GMT)  S GMT=$$LD(GMT)
"RTN","GMTSPLST",136,0)
 N GMCOL,DIWL,DIWR,DIWF,X S GMCOL=34,DIWL=0,DIWR=80-(GMCOL) K ^UTILITY($J,"W")
"RTN","GMTSPLST",137,0)
 S:+($G(GMC))=0 X="    "_GMT S:+($G(GMC))>0 X=$J(GMC,2)_". "_GMT D:$G(X)]"" ^DIWP
"RTN","GMTSPLST",138,0)
 Q
"RTN","GMTSPLST",139,0)
 ;
"RTN","GMTSPLST",140,0)
SUBHDR ; Subheader for Problem List Component
"RTN","GMTSPLST",141,0)
 N NUM,TOT,NODE S NODE=$G(^TMP("GMPLHS",$J,STATUS,0)) S NUM=$P(NODE,U),TOT=$P(NODE,U,2)
"RTN","GMTSPLST",142,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)  S:TOT>NUM NUM=NUM_" of "_TOT W ?50,NUM_$S(STATUS="A":" Active",STATUS="I":" Inactive",1:"")_" Problems",!
"RTN","GMTSPLST",143,0)
SUBHDR2 ; Will be written on new pages
"RTN","GMTSPLST",144,0)
 D CKP^GMTSUP Q:$D(GMTSQIT)  W:STATUS="ALL" "ST" W ?3,"PROBLEM",?53,"LAST MOD",?65,"PROVIDER",! Q
"RTN","GMTSPLST",145,0)
 ;
"RTN","GMTSPLST",146,0)
RM(X) ; Remove MST
"RTN","GMTSPLST",147,0)
 S X=$G(X) F  Q:X'["MST"  S X=$P(X,"MST",1)_$P(X,"MST",2)
"RTN","GMTSPLST",148,0)
 F  Q:X'["//"  S X=$P(X,"//",1)_"/"_$P(X,"//",2)
"RTN","GMTSPLST",149,0)
 F  Q:$E(X,$L(X))'="/"  S X=$E(X,1,($L(X)-1))
"RTN","GMTSPLST",150,0)
 F  Q:$E(X,1)'="/"  S X=$E(X,2,$L(X))
"RTN","GMTSPLST",151,0)
 Q X
"RTN","GMTSPLST",152,0)
RF(X) ; Remove Leading Spaces/Punctuation
"RTN","GMTSPLST",153,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","GMTSPLST",154,0)
 F  Q:$E(X,1)'=";"  S X=$E(X,2,$L(X))
"RTN","GMTSPLST",155,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","GMTSPLST",156,0)
 S X=$$LD(X) Q X
"RTN","GMTSPLST",157,0)
LD(X) ; Uppercase Leading Character
"RTN","GMTSPLST",158,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","GMTSPLST",159,0)
RT(X) ; Right Trim Spaces
"RTN","GMTSPLST",160,0)
 S X=$G(X) F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","GMTSPLST",161,0)
 Q X
"RTN","GMTSPLST",162,0)
UP(X) ; Uppercase
"RTN","GMTSPLST",163,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","GMTSPXU1")
0^2^B13856268
"RTN","GMTSPXU1",1,0)
GMTSPXU1 ; SLC/SBW,TC - PCE Utilities sub-routines ;09/09/11  12:47
"RTN","GMTSPXU1",2,0)
 ;;2.7;Health Summary;**10,37,71,86**;Oct 20, 1995;Build 55
"RTN","GMTSPXU1",3,0)
 ;
"RTN","GMTSPXU1",4,0)
 ; External References
"RTN","GMTSPXU1",5,0)
 ;   DBIA  3390  $$ICDDX^ICDCODE
"RTN","GMTSPXU1",6,0)
 ;   DBIA  3390  $$ICDOP^ICDCODE
"RTN","GMTSPXU1",7,0)
 ;   DBIA  3390  $$ICDD^ICDCODE
"RTN","GMTSPXU1",8,0)
 ;   DBIA  1995  $$CPT^ICPTCOD
"RTN","GMTSPXU1",9,0)
 ;   DBIA 10026  ^DIR
"RTN","GMTSPXU1",10,0)
 ;   DBIA 10011  ^DIWP
"RTN","GMTSPXU1",11,0)
 ;
"RTN","GMTSPXU1",12,0)
GETICDDX(GMTSICD,GMTSICF,GMMOD) ; Entry point to get ICD9 data
"RTN","GMTSPXU1",13,0)
 N REC,CODE,NAME,DESC,ICDX,ICDI,ICDA
"RTN","GMTSPXU1",14,0)
 S GMTSICD=$G(GMTSICD),GMTSICF=$G(GMTSICF),GMMOD=$G(GMMOD)
"RTN","GMTSPXU1",15,0)
 S ICDX=$$ICDDX^ICDCODE(+GMTSICD)
"RTN","GMTSPXU1",16,0)
 S REC(80,GMTSICD,.01,"E")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",17,0)
 S REC(80,GMTSICD,.01,"I")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",18,0)
 S REC(80,GMTSICD,3,"E")=$P(ICDX,"^",4)
"RTN","GMTSPXU1",19,0)
 S REC(80,GMTSICD,3,"I")=$P(ICDX,"^",4)
"RTN","GMTSPXU1",20,0)
 S ICDI=$$ICDD^ICDCODE($P(ICDX,"^",2),"ICDA")
"RTN","GMTSPXU1",21,0)
 S REC(80,GMTSICD,10,"E")=$G(ICDA(1))
"RTN","GMTSPXU1",22,0)
 S REC(80,GMTSICD,10,"I")=$G(ICDA(1))
"RTN","GMTSPXU1",23,0)
 S CODE=REC(80,GMTSICD,.01,"I")
"RTN","GMTSPXU1",24,0)
 S NAME=REC(80,GMTSICD,3,"E")
"RTN","GMTSPXU1",25,0)
 S DESC=REC(80,GMTSICD,10,"E")
"RTN","GMTSPXU1",26,0)
 S:GMTSICF="L"!(GMTSICF["LONG TEXT")!(GMTSICF="") GMTSICD=CODE_"-"_DESC
"RTN","GMTSPXU1",27,0)
 S:GMTSICF="S"!(GMTSICF["SHORT TEXT") GMTSICD=CODE_"-"_NAME
"RTN","GMTSPXU1",28,0)
 S:GMTSICF="C"!(GMTSICF["CODE ONLY") GMTSICD=CODE
"RTN","GMTSPXU1",29,0)
 S:GMTSICF="T"!(GMTSICF["TEXT ONLY") GMTSICD=DESC
"RTN","GMTSPXU1",30,0)
 I $G(GMMOD)]"" S GMMOD=$P(GMMOD,","),GMTSICD=GMMOD_" "_GMTSICD
"RTN","GMTSPXU1",31,0)
 S:GMTSICF="N"!(GMTSICF["NONE") GMTSICD=""
"RTN","GMTSPXU1",32,0)
 Q
"RTN","GMTSPXU1",33,0)
 ;
"RTN","GMTSPXU1",34,0)
GETICDOP(GMTSICD,GMTSICF,GMMOD) ; Entry point to get ICD0 data
"RTN","GMTSPXU1",35,0)
 S GMTSICD=$G(GMTSICD),GMTSICF=$G(GMTSICF),GMMOD=$G(GMMOD)
"RTN","GMTSPXU1",36,0)
 N REC,CODE,NAME,DESC,ICDX,ICDI,ICDA
"RTN","GMTSPXU1",37,0)
 S ICDX=$$ICDOP^ICDCODE(+GMTSICD)
"RTN","GMTSPXU1",38,0)
 S REC(80.1,GMTSICD,.01,"E")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",39,0)
 S REC(80.1,GMTSICD,.01,"I")=$P(ICDX,"^",2)
"RTN","GMTSPXU1",40,0)
 S REC(80.1,GMTSICD,4,"E")=$P(ICDX,"^",5)
"RTN","GMTSPXU1",41,0)
 S REC(80.1,GMTSICD,4,"I")=$P(ICDX,"^",5)
"RTN","GMTSPXU1",42,0)
 S ICDI=$$ICDD^ICDCODE($P(ICDX,"^",2),"ICDA")
"RTN","GMTSPXU1",43,0)
 S REC(80.1,GMTSICD,10,"E")=$G(ICDA(1))
"RTN","GMTSPXU1",44,0)
 S REC(80.1,GMTSICD,10,"I")=$G(ICDA(1))
"RTN","GMTSPXU1",45,0)
 S CODE=REC(80.1,GMTSICD,.01,"I")
"RTN","GMTSPXU1",46,0)
 S NAME=REC(80.1,GMTSICD,4,"E")
"RTN","GMTSPXU1",47,0)
 S DESC=REC(80.1,GMTSICD,10,"E")
"RTN","GMTSPXU1",48,0)
 S:GMTSICF="L"!(GMTSICF="") GMTSICD=CODE_"-"_DESC
"RTN","GMTSPXU1",49,0)
 S:GMTSICF="S" GMTSICD=CODE_"-"_NAME
"RTN","GMTSPXU1",50,0)
 S:GMTSICF="C" GMTSICD=CODE
"RTN","GMTSPXU1",51,0)
 S:GMTSICF="T" GMTSICD=DESC
"RTN","GMTSPXU1",52,0)
 S:GMTSICF="N" GMTSICD=""
"RTN","GMTSPXU1",53,0)
 Q
"RTN","GMTSPXU1",54,0)
 ;
"RTN","GMTSPXU1",55,0)
GETCPT(GMTSCPT) ; Entry point to get CPT data
"RTN","GMTSPXU1",56,0)
 N ICPT S GMTSCPT=+($G(GMTSCPT)) Q:GMTSCPT=0 ""
"RTN","GMTSPXU1",57,0)
 S ICPT=$$CPT^ICPTCOD(+GMTSCPT),ICPT=$P(ICPT,"^",2)_"-"_$P(ICPT,"^",3)
"RTN","GMTSPXU1",58,0)
 Q ICPT
"RTN","GMTSPXU1",59,0)
 ;
"RTN","GMTSPXU1",60,0)
TXTFMT(GMTSICD,GMTSNARR,GMICL,GMTAB,DIWL,GMTSQTY,GMTSPRIM) ; Formats GMTSICD & GMTSNARR together
"RTN","GMTSPXU1",61,0)
 I GMTSICD="",GMTSNARR="" Q
"RTN","GMTSPXU1",62,0)
 N DIWR,DIWF,X
"RTN","GMTSPXU1",63,0)
 S DIWR=80-(GMICL+GMTAB)
"RTN","GMTSPXU1",64,0)
 K ^UTILITY($J,"W")
"RTN","GMTSPXU1",65,0)
 I $G(GMTSICD)]"" S X=GMTSICD S:$G(GMTSNARR)]"" X=X_"; "
"RTN","GMTSPXU1",66,0)
 I $G(GMTSNARR)]"" S X=$G(X)_GMTSNARR D
"RTN","GMTSPXU1",67,0)
 . I $G(GMTSPRIM)]"" S X=X_GMTSPRIM
"RTN","GMTSPXU1",68,0)
 . I $G(GMTSQTY)]"" S X=X_GMTSQTY
"RTN","GMTSPXU1",69,0)
 . D ^DIWP
"RTN","GMTSPXU1",70,0)
 I $G(GMTSNARR)']"" D
"RTN","GMTSPXU1",71,0)
 . I $G(GMTSQTY)]"" S X=$G(X)_GMTSQTY
"RTN","GMTSPXU1",72,0)
 . I $G(GMTSPRIM)]"" S X=X_GMTSPRIM
"RTN","GMTSPXU1",73,0)
 . D ^DIWP
"RTN","GMTSPXU1",74,0)
 Q
"RTN","GMTSPXU1",75,0)
 ;
"RTN","GMTSPXU1",76,0)
ORDERPRO(GMPROV,GMLEN) ; Re-order and format providers for visit
"RTN","GMTSPXU1",77,0)
 N GMCNT,GMTSP,GMNODE,GMP
"RTN","GMTSPXU1",78,0)
 S GMCNT=0
"RTN","GMTSPXU1",79,0)
 F GMP="P","S","Z" S GMTSP="" F  S GMTSP=$O(^TMP("PXHSV",$J,GMTSIVD,GMTSVDF,"P",GMP,GMTSP)) Q:GMTSP'>0  D
"RTN","GMTSPXU1",80,0)
 . S GMNODE=^TMP("PXHSV",$J,GMTSIVD,GMTSVDF,"P",GMP,GMTSP)
"RTN","GMTSPXU1",81,0)
 . Q:GMNODE']""
"RTN","GMTSPXU1",82,0)
 . S GMCNT=GMCNT+1
"RTN","GMTSPXU1",83,0)
 . S GMPROV(GMCNT)=$E($P(GMNODE,U),1,GMLEN-4)_$S(GMP="P"!(GMP="S"):" ("_GMP_")",1:"")
"RTN","GMTSPXU1",84,0)
 Q
"RTN","GMTSPXU1",85,0)
 ;
"RTN","GMTSPXU1",86,0)
 ; The following code segments are called from "ROUTINE" type
"RTN","GMTSPXU1",87,0)
 ; Menu Options to display items in a file
"RTN","GMTSPXU1",88,0)
 ;
"RTN","GMTSPXU1",89,0)
LM ;   Entry Point - for GMTS Measurement Panel
"RTN","GMTSPXU1",90,0)
 S GMTSLST="^GMT(142.7," G DSPLST
"RTN","GMTSPXU1",91,0)
 ;
"RTN","GMTSPXU1",92,0)
DSPLST ;   Common code for Health Summary MNX Lists
"RTN","GMTSPXU1",93,0)
 K DIR
"RTN","GMTSPXU1",94,0)
 I '$D(@(GMTSLST_"""B"")")) W !,"NO ",$P(@(GMTSLST_"0)"),U),"S DEFINED.",! Q
"RTN","GMTSPXU1",95,0)
 W @IOF,!!,"Existing ",$P(@(GMTSLST_"0)"),U),"S:",! S GMTSCNT=""
"RTN","GMTSPXU1",96,0)
CONT ;   Continue
"RTN","GMTSPXU1",97,0)
 F  S GMTSCNT=$O(@(GMTSLST_"""B"",GMTSCNT)")) Q:GMTSCNT=""  D  G:1'[$G(Y)&($L($G(Y))) QUIT
"RTN","GMTSPXU1",98,0)
 . N DIR K Y W !,?5,GMTSCNT I (IOSL-3)<$Y S DIR(0)="E" D
"RTN","GMTSPXU1",99,0)
 . . D ^DIR W @IOF
"RTN","GMTSPXU1",100,0)
 K DIR S DIR(0)="E" D ^DIR W !
"RTN","GMTSPXU1",101,0)
QUIT ;   Quit
"RTN","GMTSPXU1",102,0)
 K DIR,X,Y,GMTSLST,GMTSCNT
"RTN","GMTSPXU1",103,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
OR*3.0*306
"BLD",8105,0)
OR*3.0*306^ORDER ENTRY/RESULTS REPORTING^0^3130219^y
"BLD",8105,1,0)
^^2^2^3121105^
"BLD",8105,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",8105,1,2,0)
under OR*3*306.
"BLD",8105,4,0)
^9.64PA^101.52^3
"BLD",8105,4,100.9,0)
100.9
"BLD",8105,4,100.9,222)
n^n^f^^y^^y^o^n
"BLD",8105,4,100.9,224)
I +Y>73
"BLD",8105,4,101.41,0)
101.41
"BLD",8105,4,101.41,222)
n^n^f^^y^^y^r^n
"BLD",8105,4,101.41,224)
I $$SENDDLG^ORY306($P(^(0),U))
"BLD",8105,4,101.52,0)
101.52
"BLD",8105,4,101.52,222)
y^y^f^^^^n
"BLD",8105,4,"B",100.9,100.9)

"BLD",8105,4,"B",101.41,101.41)

"BLD",8105,4,"B",101.52,101.52)

"BLD",8105,6.3)
43
"BLD",8105,"ABPKG")
n
"BLD",8105,"INI")
PRE^ORY306
"BLD",8105,"INIT")
POST^ORY306
"BLD",8105,"KRN",0)
^9.67PA^779.2^20
"BLD",8105,"KRN",.4,0)
.4
"BLD",8105,"KRN",.401,0)
.401
"BLD",8105,"KRN",.402,0)
.402
"BLD",8105,"KRN",.403,0)
.403
"BLD",8105,"KRN",.5,0)
.5
"BLD",8105,"KRN",.84,0)
.84
"BLD",8105,"KRN",3.6,0)
3.6
"BLD",8105,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",8105,"KRN",3.6,"NM",1,0)
OR PROBLEM NTRT BULLETIN^^0
"BLD",8105,"KRN",3.6,"NM","B","OR PROBLEM NTRT BULLETIN",1)

"BLD",8105,"KRN",3.8,0)
3.8
"BLD",8105,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",8105,"KRN",3.8,"NM",1,0)
OR CACS^^0
"BLD",8105,"KRN",3.8,"NM","B","OR CACS",1)

"BLD",8105,"KRN",9.2,0)
9.2
"BLD",8105,"KRN",9.8,0)
9.8
"BLD",8105,"KRN",9.8,"NM",0)
^9.68A^54^51
"BLD",8105,"KRN",9.8,"NM",1,0)
ORCHTAB2^^0^B22057058
"BLD",8105,"KRN",9.8,"NM",2,0)
ORCXPND4^^0^B27943000
"BLD",8105,"KRN",9.8,"NM",3,0)
ORDV04^^0^B74664100
"BLD",8105,"KRN",9.8,"NM",4,0)
ORQQPL^^0^B25909130
"BLD",8105,"KRN",9.8,"NM",5,0)
ORQQPL1^^0^B77752949
"BLD",8105,"KRN",9.8,"NM",6,0)
ORQQPL2^^0^B35231801
"BLD",8105,"KRN",9.8,"NM",7,0)
ORQQPL3^^0^B52966029
"BLD",8105,"KRN",9.8,"NM",8,0)
ORWPCE^^0^B53783465
"BLD",8105,"KRN",9.8,"NM",9,0)
ORWPCE1^^0^B67787627
"BLD",8105,"KRN",9.8,"NM",10,0)
ORWPCE2^^0^B50908533
"BLD",8105,"KRN",9.8,"NM",11,0)
ORWPCE3^^0^B55452326
"BLD",8105,"KRN",9.8,"NM",12,0)
ORY306^^0^B144132481
"BLD",8105,"KRN",9.8,"NM",13,0)
OR3CONV^^1^
"BLD",8105,"KRN",9.8,"NM",14,0)
OR3CONV1^^1^
"BLD",8105,"KRN",9.8,"NM",18,0)
ORYCHKE^^0^B2490043
"BLD",8105,"KRN",9.8,"NM",19,0)
ORCXPND1^^0^B82803363
"BLD",8105,"KRN",9.8,"NM",20,0)
ORWPT^^0^B63799384
"BLD",8105,"KRN",9.8,"NM",21,0)
ORWPT1^^0^B25961923
"BLD",8105,"KRN",9.8,"NM",22,0)
ORWDCN32^^0^B19324752
"BLD",8105,"KRN",9.8,"NM",23,0)
ORY30601^^0^B71971190
"BLD",8105,"KRN",9.8,"NM",24,0)
ORY30602^^0^B78115782
"BLD",8105,"KRN",9.8,"NM",25,0)
ORY30603^^0^B84895361
"BLD",8105,"KRN",9.8,"NM",26,0)
ORY30604^^0^B59036369
"BLD",8105,"KRN",9.8,"NM",27,0)
ORY30605^^0^B67798372
"BLD",8105,"KRN",9.8,"NM",28,0)
ORY30606^^0^B65314465
"BLD",8105,"KRN",9.8,"NM",29,0)
ORY30607^^0^B10957549
"BLD",8105,"KRN",9.8,"NM",30,0)
ORY306ES^^0^B12634847
"BLD",8105,"KRN",9.8,"NM",31,0)
ORY3061^^0^B40551451
"BLD",8105,"KRN",9.8,"NM",32,0)
ORY3062^^0^B26766778
"BLD",8105,"KRN",9.8,"NM",33,0)
ORY3063^^0^B12996430
"BLD",8105,"KRN",9.8,"NM",34,0)
ORY3064^^0^B13526334
"BLD",8105,"KRN",9.8,"NM",35,0)
ORY3060^^0^B15649990
"BLD",8105,"KRN",9.8,"NM",36,0)
ORWDPS1^^0^B56868000
"BLD",8105,"KRN",9.8,"NM",37,0)
ORDEA^^0^B85981983
"BLD",8105,"KRN",9.8,"NM",38,0)
ORWOR1^^0^B26597352
"BLD",8105,"KRN",9.8,"NM",39,0)
ORWDXR^^0^B54765656
"BLD",8105,"KRN",9.8,"NM",40,0)
ORWOR^^0^B50635965
"BLD",8105,"KRN",9.8,"NM",41,0)
ORWORR^^0^B76813647
"BLD",8105,"KRN",9.8,"NM",42,0)
ORQQPXRM^^0^B16643774
"BLD",8105,"KRN",9.8,"NM",43,0)
ORRDI1^^0^B113704699
"BLD",8105,"KRN",9.8,"NM",44,0)
ORQQPL4^^0^B10666256
"BLD",8105,"KRN",9.8,"NM",45,0)
ORMPS^^0^B82154291
"BLD",8105,"KRN",9.8,"NM",46,0)
ORCACT0^^0^B64282861
"BLD",8105,"KRN",9.8,"NM",47,0)
ORCSAVE^^0^B93570621
"BLD",8105,"KRN",9.8,"NM",48,0)
ORWDXA^^0^B82710229
"BLD",8105,"KRN",9.8,"NM",49,0)
ORCACT01^^0^B73162250
"BLD",8105,"KRN",9.8,"NM",50,0)
ORWDX^^0^B66876839
"BLD",8105,"KRN",9.8,"NM",51,0)
ORWPCE4^^0^B12891193
"BLD",8105,"KRN",9.8,"NM",52,0)
ORY306PR^^0^B2637944
"BLD",8105,"KRN",9.8,"NM",53,0)
ORCMED^^0^B52490414
"BLD",8105,"KRN",9.8,"NM",54,0)
ORDEAAUD^^0^B166040
"BLD",8105,"KRN",9.8,"NM","B","OR3CONV",13)

"BLD",8105,"KRN",9.8,"NM","B","OR3CONV1",14)

"BLD",8105,"KRN",9.8,"NM","B","ORCACT0",46)

"BLD",8105,"KRN",9.8,"NM","B","ORCACT01",49)

"BLD",8105,"KRN",9.8,"NM","B","ORCHTAB2",1)

"BLD",8105,"KRN",9.8,"NM","B","ORCMED",53)

"BLD",8105,"KRN",9.8,"NM","B","ORCSAVE",47)

"BLD",8105,"KRN",9.8,"NM","B","ORCXPND1",19)

"BLD",8105,"KRN",9.8,"NM","B","ORCXPND4",2)

"BLD",8105,"KRN",9.8,"NM","B","ORDEA",37)

"BLD",8105,"KRN",9.8,"NM","B","ORDEAAUD",54)

"BLD",8105,"KRN",9.8,"NM","B","ORDV04",3)

"BLD",8105,"KRN",9.8,"NM","B","ORMPS",45)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPL",4)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPL1",5)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPL2",6)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPL3",7)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPL4",44)

"BLD",8105,"KRN",9.8,"NM","B","ORQQPXRM",42)

"BLD",8105,"KRN",9.8,"NM","B","ORRDI1",43)

"BLD",8105,"KRN",9.8,"NM","B","ORWDCN32",22)

"BLD",8105,"KRN",9.8,"NM","B","ORWDPS1",36)

"BLD",8105,"KRN",9.8,"NM","B","ORWDX",50)

"BLD",8105,"KRN",9.8,"NM","B","ORWDXA",48)

"BLD",8105,"KRN",9.8,"NM","B","ORWDXR",39)

"BLD",8105,"KRN",9.8,"NM","B","ORWOR",40)

"BLD",8105,"KRN",9.8,"NM","B","ORWOR1",38)

"BLD",8105,"KRN",9.8,"NM","B","ORWORR",41)

"BLD",8105,"KRN",9.8,"NM","B","ORWPCE",8)

"BLD",8105,"KRN",9.8,"NM","B","ORWPCE1",9)

"BLD",8105,"KRN",9.8,"NM","B","ORWPCE2",10)

"BLD",8105,"KRN",9.8,"NM","B","ORWPCE3",11)

"BLD",8105,"KRN",9.8,"NM","B","ORWPCE4",51)

"BLD",8105,"KRN",9.8,"NM","B","ORWPT",20)

"BLD",8105,"KRN",9.8,"NM","B","ORWPT1",21)

"BLD",8105,"KRN",9.8,"NM","B","ORY306",12)

"BLD",8105,"KRN",9.8,"NM","B","ORY3060",35)

"BLD",8105,"KRN",9.8,"NM","B","ORY30601",23)

"BLD",8105,"KRN",9.8,"NM","B","ORY30602",24)

"BLD",8105,"KRN",9.8,"NM","B","ORY30603",25)

"BLD",8105,"KRN",9.8,"NM","B","ORY30604",26)

"BLD",8105,"KRN",9.8,"NM","B","ORY30605",27)

"BLD",8105,"KRN",9.8,"NM","B","ORY30606",28)

"BLD",8105,"KRN",9.8,"NM","B","ORY30607",29)

"BLD",8105,"KRN",9.8,"NM","B","ORY3061",31)

"BLD",8105,"KRN",9.8,"NM","B","ORY3062",32)

"BLD",8105,"KRN",9.8,"NM","B","ORY3063",33)

"BLD",8105,"KRN",9.8,"NM","B","ORY3064",34)

"BLD",8105,"KRN",9.8,"NM","B","ORY306ES",30)

"BLD",8105,"KRN",9.8,"NM","B","ORY306PR",52)

"BLD",8105,"KRN",9.8,"NM","B","ORYCHKE",18)

"BLD",8105,"KRN",19,0)
19
"BLD",8105,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",8105,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",8105,"KRN",19,"NM",2,0)
OR EPCS CS RX BY PROVIDER^^0
"BLD",8105,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",8105,"KRN",19,"NM","B","OR EPCS CS RX BY PROVIDER",2)

"BLD",8105,"KRN",19.1,0)
19.1
"BLD",8105,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8105,"KRN",19.1,"NM",1,0)
ORES^^0
"BLD",8105,"KRN",19.1,"NM","B","ORES",1)

"BLD",8105,"KRN",101,0)
101
"BLD",8105,"KRN",409.61,0)
409.61
"BLD",8105,"KRN",771,0)
771
"BLD",8105,"KRN",779.2,0)
779.2
"BLD",8105,"KRN",870,0)
870
"BLD",8105,"KRN",8989.51,0)
8989.51
"BLD",8105,"KRN",8989.51,"NM",0)
^9.68A^5^5
"BLD",8105,"KRN",8989.51,"NM",1,0)
ORQQPL SUPPRESS CODES^^0
"BLD",8105,"KRN",8989.51,"NM",2,0)
OR PROBLEM NTRT BY DIVISION^^0
"BLD",8105,"KRN",8989.51,"NM",3,0)
ORCDGMRC EARLIEST DATE DEFAULT^^0
"BLD",8105,"KRN",8989.51,"NM",4,0)
OR DEA TEXT^^0
"BLD",8105,"KRN",8989.51,"NM",5,0)
OR DEA PIV LINK MSG^^0
"BLD",8105,"KRN",8989.51,"NM","B","OR DEA PIV LINK MSG",5)

"BLD",8105,"KRN",8989.51,"NM","B","OR DEA TEXT",4)

"BLD",8105,"KRN",8989.51,"NM","B","OR PROBLEM NTRT BY DIVISION",2)

"BLD",8105,"KRN",8989.51,"NM","B","ORCDGMRC EARLIEST DATE DEFAULT",3)

"BLD",8105,"KRN",8989.51,"NM","B","ORQQPL SUPPRESS CODES",1)

"BLD",8105,"KRN",8989.52,0)
8989.52
"BLD",8105,"KRN",8994,0)
8994
"BLD",8105,"KRN",8994,"NM",0)
^9.68A^15^14
"BLD",8105,"KRN",8994,"NM",1,0)
ORWPT1 PRCARE^^0
"BLD",8105,"KRN",8994,"NM",2,0)
ORWPT SELECT^^0
"BLD",8105,"KRN",8994,"NM",3,0)
ORWPCE ICDVER^^0
"BLD",8105,"KRN",8994,"NM",4,0)
ORDEA HASHINFO^^0
"BLD",8105,"KRN",8994,"NM",5,0)
ORDEA ORDHINFO^^0
"BLD",8105,"KRN",8994,"NM",6,0)
ORDEA DEATEXT^^0
"BLD",8105,"KRN",8994,"NM",8,0)
ORDEA CSVALUE^^0
"BLD",8105,"KRN",8994,"NM",9,0)
ORDEA SIGINFO^^0
"BLD",8105,"KRN",8994,"NM",10,0)
ORDEA PINLKSET^^0
"BLD",8105,"KRN",8994,"NM",11,0)
ORDEA PINLKCHK^^0
"BLD",8105,"KRN",8994,"NM",12,0)
ORQQPL4 LEX^^0
"BLD",8105,"KRN",8994,"NM",13,0)
ORDEA PNDHLD^^0
"BLD",8105,"KRN",8994,"NM",14,0)
ORDEA LNKMSG^^0
"BLD",8105,"KRN",8994,"NM",15,0)
ORWPCE4 LEX^^0
"BLD",8105,"KRN",8994,"NM","B","ORDEA CSVALUE",8)

"BLD",8105,"KRN",8994,"NM","B","ORDEA DEATEXT",6)

"BLD",8105,"KRN",8994,"NM","B","ORDEA HASHINFO",4)

"BLD",8105,"KRN",8994,"NM","B","ORDEA LNKMSG",14)

"BLD",8105,"KRN",8994,"NM","B","ORDEA ORDHINFO",5)

"BLD",8105,"KRN",8994,"NM","B","ORDEA PINLKCHK",11)

"BLD",8105,"KRN",8994,"NM","B","ORDEA PINLKSET",10)

"BLD",8105,"KRN",8994,"NM","B","ORDEA PNDHLD",13)

"BLD",8105,"KRN",8994,"NM","B","ORDEA SIGINFO",9)

"BLD",8105,"KRN",8994,"NM","B","ORQQPL4 LEX",12)

"BLD",8105,"KRN",8994,"NM","B","ORWPCE ICDVER",3)

"BLD",8105,"KRN",8994,"NM","B","ORWPCE4 LEX",15)

"BLD",8105,"KRN",8994,"NM","B","ORWPT SELECT",2)

"BLD",8105,"KRN",8994,"NM","B","ORWPT1 PRCARE",1)

"BLD",8105,"KRN","B",.4,.4)

"BLD",8105,"KRN","B",.401,.401)

"BLD",8105,"KRN","B",.402,.402)

"BLD",8105,"KRN","B",.403,.403)

"BLD",8105,"KRN","B",.5,.5)

"BLD",8105,"KRN","B",.84,.84)

"BLD",8105,"KRN","B",3.6,3.6)

"BLD",8105,"KRN","B",3.8,3.8)

"BLD",8105,"KRN","B",9.2,9.2)

"BLD",8105,"KRN","B",9.8,9.8)

"BLD",8105,"KRN","B",19,19)

"BLD",8105,"KRN","B",19.1,19.1)

"BLD",8105,"KRN","B",101,101)

"BLD",8105,"KRN","B",409.61,409.61)

"BLD",8105,"KRN","B",771,771)

"BLD",8105,"KRN","B",779.2,779.2)

"BLD",8105,"KRN","B",870,870)

"BLD",8105,"KRN","B",8989.51,8989.51)

"BLD",8105,"KRN","B",8989.52,8989.52)

"BLD",8105,"KRN","B",8994,8994)

"BLD",8105,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8105,"QUES",0)
^9.62^^
"BLD",8105,"REQB",0)
^9.611^14^10
"BLD",8105,"REQB",2,0)
LEX*2.0*58^2
"BLD",8105,"REQB",5,0)
GMPL*2.0*36^2
"BLD",8105,"REQB",6,0)
OR*3.0*181^2
"BLD",8105,"REQB",7,0)
HDI*1.0*11^2
"BLD",8105,"REQB",8,0)
XU*8.0*502^2
"BLD",8105,"REQB",10,0)
OR*3.0*340^2
"BLD",8105,"REQB",11,0)
MHV*1.0*9^2
"BLD",8105,"REQB",12,0)
PSO*7.0*391^2
"BLD",8105,"REQB",13,0)
OR*3.0*331^2
"BLD",8105,"REQB",14,0)
OR*3.0*204^2
"BLD",8105,"REQB","B","GMPL*2.0*36",5)

"BLD",8105,"REQB","B","HDI*1.0*11",7)

"BLD",8105,"REQB","B","LEX*2.0*58",2)

"BLD",8105,"REQB","B","MHV*1.0*9",11)

"BLD",8105,"REQB","B","OR*3.0*181",6)

"BLD",8105,"REQB","B","OR*3.0*204",14)

"BLD",8105,"REQB","B","OR*3.0*331",13)

"BLD",8105,"REQB","B","OR*3.0*340",10)

"BLD",8105,"REQB","B","PSO*7.0*391",12)

"BLD",8105,"REQB","B","XU*8.0*502",8)

"DATA",100.9,74,0)
DEA AUTO DC CS MED ORDER^OR^Med order(s) DCed. Resubmit or contact Pharmacy.^NOT^R^DCORD^ORB3FUP1
"DATA",100.9,74,1)
^OR
"DATA",100.9,74,4)
Triggered by Outpatient Pharmacy when the contents of a controlled substance med order submitted in CPRS does not match those that are processed by pharmacy. Follow-up action displays all recent DCed order activity for the patient.
"DATA",100.9,75,0)
DEA CERTIFICATE REVOKED^OR^Med orders(s) DCed. Cert revoked. Contact Pharm.^NOT^R^DCORD^ORB3FUP1
"DATA",100.9,75,1)
^OR
"DATA",100.9,75,4)
Triggered by Outpatient Pharmacy when the prescriber's PKI certificate is revoked after the order is submitted in CPRS, but prior to Pharmacy processing the order. Follow-up action displays all recent DCed order activity for the patient.
"DATA",100.9,76,0)
DEA CERTIFICATE EXPIRED^OR^DEA certificate expired. Renew your certificate.^NOT^R^INFODEL^ORB3FUP2
"DATA",100.9,76,1)
^OR
"DATA",100.9,76,4)
Triggered by Outpatient Pharmacy when the prescriber's PKI certificate expires after the order is submitted in CPRS, but prior to Pharmacy processing the order. Deletion occurs when each recipient reviews the notification.
"DATA",101.41,51,0)
GMRCOR CONSULT^Consult^^D^11^2^294^1^1
"DATA",101.41,51,3)
D GETSERV^ORCDGMRC
"DATA",101.41,51,3.1)
D GETSERV^ORCDGMRC
"DATA",101.41,51,4)
K ORSERV,ORPDX,GMRCNOPD,GMRCNOAT,GMRCREAF,^TMP("GMRCS",$J),^TMP("GMRCSLIST",$J)
"DATA",101.41,51,5)
^^^Consult^110
"DATA",101.41,51,10,0)
^101.412IA^10^10
"DATA",101.41,51,10,1,0)
1^4^^Consult to Service/Specialty: ^^1^^^^S.CSLT
"DATA",101.41,51,10,1,1)
Select the service/specialty consultation you wish to request for this patient.
"DATA",101.41,51,10,1,2)
2^^^^Cons
"DATA",101.41,51,10,1,3)
I $G(ORTYPE)'="Q",'$D(OREDIT),'$G(OREWRITE)
"DATA",101.41,51,10,1,4)
I $$ACTIVE^ORDD43(Y),$D(^TMP("GMRCS",$J,+$P(^(0),U,2)))
"DATA",101.41,51,10,1,5)
I $G(ORESET)'=+Y D CKSERV^ORCDGMRC K GMRCREAF
"DATA",101.41,51,10,1,6)
D LISTSERV^ORCDGMRC(1)
"DATA",101.41,51,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)),ORSERV=+$P($G(^ORD(101.43,OI,0)),U,2) D:ORSERV SERVMSG^ORCDGMRC
"DATA",101.41,51,10,1,"W")
cboService
"DATA",101.41,51,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,51,10,2,1)
Enter a brief description of why this consult is being requested.
"DATA",101.41,51,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,51,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,51,10,2,9)
S:'$D(GMRCREAF) GMRCREAF=$$REAF^GMRCDRFR(+$G(ORSERV))
"DATA",101.41,51,10,2,"W")
memReason
"DATA",101.41,51,10,3,0)
3^10^^^^1
"DATA",101.41,51,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,51,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,51,10,3,6)
D SETLIST^ORCD
"DATA",101.41,51,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,51,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,51,10,3,"W")
refCategory
"DATA",101.41,51,10,4,0)
4^7^^^^1^^^^S.GMRCT
"DATA",101.41,51,10,4,1)
Select the urgency indicating how quickly results from this consult are needed.
"DATA",101.41,51,10,4,2)
4^^ROUTINE
"DATA",101.41,51,10,4,7)
S Y=9
"DATA",101.41,51,10,4,9)
D URGENCY^ORCDGMRC("C")
"DATA",101.41,51,10,4,"W")
cboUrgency
"DATA",101.41,51,10,5,0)
5^140^^^^1
"DATA",101.41,51,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,51,10,5,2)
3
"DATA",101.41,51,10,5,6)
D LIST^ORCD
"DATA",101.41,51,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,51,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,51,10,5,"W")
cboPlace
"DATA",101.41,51,10,6,0)
6^17^^Attention: 
"DATA",101.41,51,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,51,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,51,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,51,10,6,"W")
txtAttn
"DATA",101.41,51,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,51,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,51,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,51,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,51,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,51,10,7,"W")
txtProvDiag
"DATA",101.41,51,10,8,0)
1.1^178^^Consult Type: 
"DATA",101.41,51,10,8,1)
Enter the type of consult you wish to have done at this service
"DATA",101.41,51,10,8,2)
1
"DATA",101.41,51,10,8,3)
I $G(ORTYPE)="Z"!$D(ORDIALOG(PROMPT,INST)) ;populated by QO only
"DATA",101.41,51,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,51,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,51,10,10,0)
4.5^15820^^Earliest appropriate date:^^^^^W
"DATA",101.41,51,10,10,1)
Enter the earliest appropriate date for this consult to be performed.
"DATA",101.41,51,10,10,3)
Q:'$G(ORSERV)  I $G(^GMR(123.5,ORSERV,"INT"))'=1
"DATA",101.41,51,10,10,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,51,10,10,7)
S Y=$$GET^XPAR("PKG","ORCDGMRC EARLIEST DATE DEFAULT",1,"Q")
"DATA",101.41,51,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,51,10,10,"W")
calEarliest
"DATA",101.41,51,10,10,"W7")
S Y=$$GET^XPAR("PKG","ORCDGMRC EARLIEST DATE DEFAULT",1,"Q")
"DATA",101.41,51,99)
61814,28145
"DATA",101.41,52,0)
GMRCOR REQUEST^Procedure^^D^43^2^294^1^2
"DATA",101.41,52,4)
K ORSERV,ORPDX,GMRCNOAT,GMRCNOPD,GMRCREAF,ORPROC
"DATA",101.41,52,5)
^^^Procedure^112^^^
"DATA",101.41,52,10,0)
^101.412IA^10^10
"DATA",101.41,52,10,1,0)
1^4^^Procedure: ^^1^^^^S.PROC
"DATA",101.41,52,10,1,1)
Select the procedure you wish to request for this patient.
"DATA",101.41,52,10,1,2)
1
"DATA",101.41,52,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,52,10,1,5)
I $G(ORESET)'=$P(Y,U) D CKPROCSV^ORCDGMRC Q:'$G(DONE)  D:$G(ORESET) CHANGED^ORCDGMRC("OI")
"DATA",101.41,52,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,52,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)) I $P($G(^ORD(101.43,OI,0)),"^",2)["99PRC" S ORPROC=$P(^ORD(101.43,OI,0),"^",2) D SERVMSG^ORCDGMRC
"DATA",101.41,52,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,52,10,2,1)
Enter a brief description of why this procedure is being requested.
"DATA",101.41,52,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,52,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,52,10,2,9)
S:'$D(GMRCREAF)&('$G(ORPROC)) GMRCREAF=$$REAF^GMRCDRFR($G(ORPROC))
"DATA",101.41,52,10,3,0)
3^10^^^^1
"DATA",101.41,52,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,52,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,52,10,3,6)
D SETLIST^ORCD
"DATA",101.41,52,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,52,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,52,10,4,0)
4^7^^^^1^^^^S.GMRCR
"DATA",101.41,52,10,4,1)
Select the urgency indicating how quickly results from this procedure are needed.
"DATA",101.41,52,10,4,2)
4^^ROUTINE
"DATA",101.41,52,10,4,7)
S Y=9
"DATA",101.41,52,10,4,9)
D URGENCY^ORCDGMRC("R")
"DATA",101.41,52,10,5,0)
5^140^^^^1
"DATA",101.41,52,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,52,10,5,2)
3
"DATA",101.41,52,10,5,6)
D LIST^ORCD
"DATA",101.41,52,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,52,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,52,10,6,0)
6^17^^Attention: 
"DATA",101.41,52,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,52,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,52,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,52,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,52,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,52,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,52,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,52,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,52,10,8,0)
1.1^166^^^^1
"DATA",101.41,52,10,8,1)
Enter the service that will be requested to perform this procedure
"DATA",101.41,52,10,8,2)
2^^^^Proc
"DATA",101.41,52,10,8,3)
I $G(ORDIALOG(PROMPT,"LIST"))>0
"DATA",101.41,52,10,8,6)
D LIST^ORCD
"DATA",101.41,52,10,8,7)
S:+$G(ORDIALOG(PROMPT,"LIST"))=1 Y=+$G(ORDIALOG(PROMPT,"LIST",1))
"DATA",101.41,52,10,8,9)
D PROCSVC^ORCDGMRC
"DATA",101.41,52,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,52,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,52,10,10,0)
4.5^15820^^Earliest appropriate date:^^^^^W
"DATA",101.41,52,10,10,1)
Enter the earliest appropriate date for this procedure to be performed.
"DATA",101.41,52,10,10,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,52,10,10,7)
S Y=$$GET^XPAR("PKG","ORCDGMRC EARLIEST DATE DEFAULT",1,"Q")
"DATA",101.41,52,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,52,10,10,"W")
calEarliest
"DATA",101.41,52,10,10,"W7")
S Y=$$GET^XPAR("PKG","ORCDGMRC EARLIEST DATE DEFAULT",1,"Q")
"DATA",101.41,52,99)
61814,28145
"FIA",100.9)
OE/RR NOTIFICATIONS
"FIA",100.9,0)
^ORD(100.9,
"FIA",100.9,0,0)
100.9
"FIA",100.9,0,1)
n^n^f^^y^^y^o^n
"FIA",100.9,0,10)

"FIA",100.9,0,11)
I +Y>73
"FIA",100.9,0,"RLRO")

"FIA",100.9,0,"VR")
3.0^OR
"FIA",100.9,100.9)
0
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^r^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I $$SENDDLG^ORY306($P(^(0),U))
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FIA",101.52)
ORDER DEA ARCHIVE INFO
"FIA",101.52,0)
^ORPA(101.52,
"FIA",101.52,0,0)
101.52P
"FIA",101.52,0,1)
y^y^f^^^^n
"FIA",101.52,0,10)

"FIA",101.52,0,11)

"FIA",101.52,0,"RLRO")

"FIA",101.52,0,"VR")
3.0^OR
"FIA",101.52,101.52)
0
"FIA",101.52,101.529)
0
"FIA",101.52,101.53)
0
"FRV1",101.41,"51,0",5)
CONSULTS
"FRV1",101.41,"51,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"51,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"51,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"51,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"51,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,10,0",2)
OR GTX EARLIEST DATE
"FRV1",101.41,"51,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"51,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"51,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"51,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"51,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"51,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,8,0",2)
OR GTX FREE TEXT OI
"FRV1",101.41,"51,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"51,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,9,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"52,0",5)
PROCEDURES
"FRV1",101.41,"52,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"52,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"52,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"52,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"52,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,10,0",2)
OR GTX EARLIEST DATE
"FRV1",101.41,"52,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"52,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"52,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"52,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"52,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"52,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,8,0",2)
OR GTX REQUEST SERVICE
"FRV1",101.41,"52,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"52,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,9,0",11,"F")
;ORD(101.41,
"INI")
PRE^ORY306
"INIT")
POST^ORY306
"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"IX",101.52,101.52,"C",0)
101.52^C^Index on Issuance Date to assist in monthly reporting by provider.^R^^R^IR^I^101.52^^^^^LS
"IX",101.52,101.52,"C",.1,0)
^^4^4^3130219^
"IX",101.52,101.52,"C",.1,1,0)
One of the Drug Enforcement Agency (DEA) requirements for electronic 
"IX",101.52,101.52,"C",.1,2,0)
prescribing of controlled substances is that a monthly report must be 
"IX",101.52,101.52,"C",.1,3,0)
prepared for each provider showing the controlled substance prescriptions 
"IX",101.52,101.52,"C",.1,4,0)
written for the previous month.
"IX",101.52,101.52,"C",1)
S ^ORPA(101.52,"C",X(2),X(1),DA)=""
"IX",101.52,101.52,"C",2)
K ^ORPA(101.52,"C",X(2),X(1),DA)
"IX",101.52,101.52,"C",2.5)
K ^ORPA(101.52,"C")
"IX",101.52,101.52,"C",11.1,0)
^.114IA^2^2
"IX",101.52,101.52,"C",11.1,1,0)
1^F^101.52^4^^2^F
"IX",101.52,101.52,"C",11.1,2,0)
2^F^101.52^31^^1^F
"KRN",3.6,274,-1)
0^1
"KRN",3.6,274,0)
OR PROBLEM NTRT BULLETIN^NEW PROBLEM/DIAGNOSIS TERM REQUEST^
"KRN",3.6,274,1,0)
^3.61A^36^36^3130206^^
"KRN",3.6,274,1,1,0)
                *** New Problem/Diagnosis Term Request ***
"KRN",3.6,274,1,2,0)
 
"KRN",3.6,274,1,3,0)
      Requested term: |1|
"KRN",3.6,274,1,4,0)
Date/Time of request: |2|
"KRN",3.6,274,1,5,0)
   Name of requester: |3| 
"KRN",3.6,274,1,6,0)
             Service: |4|
"KRN",3.6,274,1,7,0)
            Location: |5|
"KRN",3.6,274,1,8,0)
             Patient: |6| 
"KRN",3.6,274,1,9,0)
Clinician's Comments:
"KRN",3.6,274,1,10,0)
|7|
"KRN",3.6,274,1,11,0)
 
"KRN",3.6,274,1,12,0)
A New Term Rapid Turnaround (NTRT) mail message has been sent to you 
"KRN",3.6,274,1,13,0)
because a user from your facility has failed to find a suitable term 
"KRN",3.6,274,1,14,0)
after initiating the search options within the Problem List application 
"KRN",3.6,274,1,15,0)
and has chosen to request a new term to be added to the Problem List 
"KRN",3.6,274,1,16,0)
subset. 
"KRN",3.6,274,1,17,0)
 
"KRN",3.6,274,1,18,0)
Please review the requested term and verify it is understandable, 
"KRN",3.6,274,1,19,0)
clinically useful, and does not already exist within the Problem List 
"KRN",3.6,274,1,20,0)
subset. If the term is found appropriate, then submit a NTRT request at 
"KRN",3.6,274,1,21,0)
the NTRT website, http://vista.domain.ext/ntrt/. Follow the link to 
"KRN",3.6,274,1,22,0)
Access the NTRT Request Web Site.
"KRN",3.6,274,1,23,0)
 
"KRN",3.6,274,1,24,0)
The Problem List domain steward will review each request and respond to 
"KRN",3.6,274,1,25,0)
you with the outcome of this request. If the term is approved by the 
"KRN",3.6,274,1,26,0)
Problem List NTRT committee it will be added to the Problem List subset 
"KRN",3.6,274,1,27,0)
and made available within future searches.  
"KRN",3.6,274,1,28,0)
 
"KRN",3.6,274,1,29,0)
The progress of this request may be monitored by accessing the NTRT 
"KRN",3.6,274,1,30,0)
website at the NTRT website.
"KRN",3.6,274,1,31,0)
 
"KRN",3.6,274,1,32,0)
If you have questions, need more information, or are having accessibility 
"KRN",3.6,274,1,33,0)
problems with this website, please contact STS by Exchange E-Mail: [VHA 
"KRN",3.6,274,1,34,0)
OI HDI STS NTRT].
"KRN",3.6,274,1,35,0)
 
"KRN",3.6,274,1,36,0)
Thank-you.
"KRN",3.6,274,3,0)
^3.63^15^15^3130206^^^^
"KRN",3.6,274,3,1,0)
This bulletin will be delivered to the OR CACS Mail Group. It informs the 
"KRN",3.6,274,3,2,0)
group that a new NTRT Request has been initiated by a Clinician at their 
"KRN",3.6,274,3,3,0)
facility. Upon receipt, the CACs should discuss the request internally, 
"KRN",3.6,274,3,4,0)
and with their local Medical Records Committee. If the group concurs, they
"KRN",3.6,274,3,5,0)
should file an official NTRT request for the new term/expression at the
"KRN",3.6,274,3,6,0)
NTRT website: 
"KRN",3.6,274,3,7,0)
 
"KRN",3.6,274,3,8,0)
http://vista.domain.ext/ntrt/
"KRN",3.6,274,3,9,0)
 
"KRN",3.6,274,3,10,0)
The NTRT Terminology Stewards for the Problem List Domain will consider
"KRN",3.6,274,3,11,0)
the request, and inform the facility of their decision as to whether the
"KRN",3.6,274,3,12,0)
new term should be added to the Enterprise Terminology.
"KRN",3.6,274,3,13,0)
 
"KRN",3.6,274,3,14,0)
If the local group does not concur with the request, they should defer
"KRN",3.6,274,3,15,0)
filing an NTRT Request, and discuss the decision with the requester.
"KRN",3.6,274,4,0)
^3.64A^7^7
"KRN",3.6,274,4,1,0)
1
"KRN",3.6,274,4,1,1,0)
^^1^1^3071207^
"KRN",3.6,274,4,1,1,1,0)
Text of the unresolved term or expression.
"KRN",3.6,274,4,2,0)
2
"KRN",3.6,274,4,2,1,0)
^^1^1^3071207^
"KRN",3.6,274,4,2,1,1,0)
Date/Time of the request.
"KRN",3.6,274,4,3,0)
3
"KRN",3.6,274,4,3,1,0)
^3.65^1^1^3071207^^
"KRN",3.6,274,4,3,1,1,0)
Name of Requester.
"KRN",3.6,274,4,4,0)
4
"KRN",3.6,274,4,4,1,0)
^3.65^1^1^3071207^^
"KRN",3.6,274,4,4,1,1,0)
Hospital Service with which the requester is associated.
"KRN",3.6,274,4,5,0)
5
"KRN",3.6,274,4,5,1,0)
^3.65^1^1^3120417^^^^
"KRN",3.6,274,4,5,1,1,0)
Location (i.e., Facility) where the request originated.
"KRN",3.6,274,4,6,0)
6
"KRN",3.6,274,4,6,1,0)
^^1^1^3130206^
"KRN",3.6,274,4,6,1,1,0)
Patient Name and (Last I/Last 4).
"KRN",3.6,274,4,7,0)
7
"KRN",3.6,274,4,7,1,0)
^3.65^3^3^3130206^^^
"KRN",3.6,274,4,7,1,1,0)
Explanatory comments. For example, if the requested term is "SVT" the 
"KRN",3.6,274,4,7,1,2,0)
clinician would have an opportunity to describe its meaning (e.g., 
"KRN",3.6,274,4,7,1,3,0)
Superficial vein thrombosis, etc.). 
"KRN",3.8,356,-1)
0^1
"KRN",3.8,356,0)
OR CACS^PU^n^^^^
"KRN",3.8,356,2,0)
^3.801^2^2^3110816^^^^
"KRN",3.8,356,2,1,0)
This Mail Group identifies the Clinical Applications Coordinators at the 
"KRN",3.8,356,2,2,0)
facility.
"KRN",3.8,356,3)

"KRN",19,10989,-1)
0^1
"KRN",19,10989,0)
OR CPRS GUI CHART^CPRSChart version 1.0.29.21^^B^^^^^^^^
"KRN",19,10989,1,0)
^19.06^2^2^3121115^^^^
"KRN",19,10989,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10989,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10989,99)
60921,44613
"KRN",19,10989,99.1)
62768,48732
"KRN",19,10989,"RPC",0)
^19.05P^2113^2110
"KRN",19,10989,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10989,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10989,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10989,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10989,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10989,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10989,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10989,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10989,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10989,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10989,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10989,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10989,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10989,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10989,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10989,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10989,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10989,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10989,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10989,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10989,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10989,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10989,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10989,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10989,"RPC",242,0)
TIU NOTES
"KRN",19,10989,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10989,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10989,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10989,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10989,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10989,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10989,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10989,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10989,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10989,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10989,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10989,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10989,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10989,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10989,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10989,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10989,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10989,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10989,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10989,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10989,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10989,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10989,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10989,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10989,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10989,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10989,"RPC",1052,0)
ORQOR LIST
"KRN",19,10989,"RPC",1053,0)
ORQORB SORT
"KRN",19,10989,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10989,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10989,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10989,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10989,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10989,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10989,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10989,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10989,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10989,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10989,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10989,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10989,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10989,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10989,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10989,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10989,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10989,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10989,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10989,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10989,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10989,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10989,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10989,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10989,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10989,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10989,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10989,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10989,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10989,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10989,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10989,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10989,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10989,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10989,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10989,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10989,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10989,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10989,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10989,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10989,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10989,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10989,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10989,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10989,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10989,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10989,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10989,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10989,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10989,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10989,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10989,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10989,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10989,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10989,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10989,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10989,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10989,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10989,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10989,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10989,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10989,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10989,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10989,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10989,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10989,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10989,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10989,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10989,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10989,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10989,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10989,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10989,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10989,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10989,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10989,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10989,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10989,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10989,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10989,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10989,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10989,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10989,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10989,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10989,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10989,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10989,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10989,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10989,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10989,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10989,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10989,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10989,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10989,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10989,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10989,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10989,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10989,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10989,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10989,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10989,"RPC",1161,0)
ORWCV LAB
"KRN",19,10989,"RPC",1162,0)
ORWCV POLL
"KRN",19,10989,"RPC",1163,0)
ORWCV START
"KRN",19,10989,"RPC",1164,0)
ORWCV STOP
"KRN",19,10989,"RPC",1165,0)
ORWCV VST
"KRN",19,10989,"RPC",1166,0)
ORWD DEF
"KRN",19,10989,"RPC",1167,0)
ORWD DT
"KRN",19,10989,"RPC",1168,0)
ORWD FORMID
"KRN",19,10989,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10989,"RPC",1170,0)
ORWD KEY
"KRN",19,10989,"RPC",1171,0)
ORWD OI
"KRN",19,10989,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10989,"RPC",1173,0)
ORWD SAVE
"KRN",19,10989,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10989,"RPC",1175,0)
ORWD SIGN
"KRN",19,10989,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10989,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10989,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10989,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10989,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10989,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10989,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10989,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10989,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10989,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10989,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10989,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10989,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10989,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10989,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10989,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10989,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10989,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10989,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10989,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10989,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10989,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10989,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10989,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10989,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10989,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10989,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10989,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10989,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10989,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10989,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10989,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10989,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10989,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10989,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10989,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10989,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10989,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10989,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10989,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10989,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10989,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10989,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10989,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10989,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10989,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10989,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10989,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10989,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10989,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10989,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10989,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10989,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10989,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10989,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10989,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10989,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10989,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10989,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10989,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10989,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10989,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10989,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10989,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10989,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10989,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10989,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10989,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10989,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10989,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10989,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10989,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10989,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10989,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10989,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10989,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10989,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10989,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10989,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10989,"RPC",1259,0)
ORWDX MSG
"KRN",19,10989,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10989,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10989,"RPC",1262,0)
ORWDX SEND
"KRN",19,10989,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10989,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10989,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10989,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10989,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10989,"RPC",1268,0)
ORWDXA DC
"KRN",19,10989,"RPC",1269,0)
ORWDX2 DCREASON
"KRN",19,10989,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10989,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10989,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10989,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10989,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10989,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10989,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10989,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10989,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10989,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10989,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10989,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10989,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10989,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10989,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10989,"RPC",1285,0)
ORWDXC ON
"KRN",19,10989,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10989,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10989,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10989,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10989,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10989,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10989,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10989,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10989,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10989,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10989,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10989,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10989,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10989,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10989,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10989,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10989,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10989,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10989,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10989,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10989,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10989,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10989,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10989,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10989,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10989,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10989,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10989,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10989,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10989,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10989,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10989,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10989,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10989,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10989,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10989,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10989,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10989,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10989,"RPC",1324,0)
ORWLRR TG
"KRN",19,10989,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10989,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10989,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10989,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10989,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10989,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10989,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10989,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10989,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10989,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10989,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10989,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10989,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10989,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10989,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10989,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10989,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10989,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10989,"RPC",1344,0)
ORWORR AGET
"KRN",19,10989,"RPC",1345,0)
ORWORR GET
"KRN",19,10989,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10989,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10989,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10989,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10989,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10989,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10989,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10989,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10989,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10989,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10989,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10989,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10989,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10989,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10989,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10989,"RPC",1361,0)
ORWPCE HF
"KRN",19,10989,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10989,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10989,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10989,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10989,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10989,"RPC",1368,0)
ORWPCE PED
"KRN",19,10989,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10989,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10989,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10989,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10989,"RPC",1373,0)
ORWPCE SK
"KRN",19,10989,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10989,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10989,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10989,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10989,"RPC",1378,0)
ORWPS COVER
"KRN",19,10989,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10989,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10989,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10989,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10989,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10989,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10989,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10989,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10989,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10989,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10989,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10989,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10989,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10989,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10989,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10989,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10989,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10989,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10989,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10989,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10989,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10989,"RPC",1400,0)
ORWPT TOP
"KRN",19,10989,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10989,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10989,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10989,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10989,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10989,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10989,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10989,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10989,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10989,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10989,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10989,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10989,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10989,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10989,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10989,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10989,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10989,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10989,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10989,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10989,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10989,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10989,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10989,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10989,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10989,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10989,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10989,"RPC",1428,0)
ORWU DT
"KRN",19,10989,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10989,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10989,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10989,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10989,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10989,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10989,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10989,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10989,"RPC",1437,0)
ORWU PATCH
"KRN",19,10989,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10989,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10989,"RPC",1440,0)
ORWU VALDT
"KRN",19,10989,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10989,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10989,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10989,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10989,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10989,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10989,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10989,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10989,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10989,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10989,"RPC",1451,0)
ORWUXT LST
"KRN",19,10989,"RPC",1452,0)
ORWUXT REF
"KRN",19,10989,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10989,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10989,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10989,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10989,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10989,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10989,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10989,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10989,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10989,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10989,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10989,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10989,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10989,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10989,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10989,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10989,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10989,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10989,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10989,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10989,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10989,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10989,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10989,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10989,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10989,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10989,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10989,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10989,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10989,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10989,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10989,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10989,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10989,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10989,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10989,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10989,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10989,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10989,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10989,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10989,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10989,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10989,"RPC",1510,0)
ORWU PARAM
"KRN",19,10989,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10989,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10989,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10989,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10989,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10989,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10989,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10989,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10989,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10989,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10989,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10989,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10989,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10989,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10989,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10989,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10989,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10989,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10989,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10989,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10989,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10989,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10989,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10989,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10989,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10989,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10989,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10989,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10989,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10989,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10989,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10989,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10989,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10989,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10989,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10989,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10989,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10989,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10989,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10989,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10989,"RPC",1555,0)
YS GAF API
"KRN",19,10989,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10989,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10989,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10989,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10989,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10989,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10989,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10989,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10989,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10989,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10989,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10989,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10989,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10989,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10989,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10989,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10989,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10989,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10989,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10989,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10989,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10989,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10989,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10989,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10989,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10989,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10989,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10989,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10989,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10989,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10989,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10989,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10989,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10989,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10989,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10989,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10989,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10989,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10989,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10989,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10989,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10989,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10989,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10989,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10989,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10989,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10989,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10989,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10989,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10989,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10989,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10989,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10989,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10989,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10989,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10989,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10989,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10989,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10989,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10989,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10989,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10989,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10989,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10989,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10989,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10989,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10989,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10989,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10989,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10989,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10989,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10989,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10989,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10989,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10989,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10989,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10989,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10989,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10989,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10989,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10989,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10989,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10989,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10989,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10989,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10989,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10989,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10989,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10989,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10989,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10989,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10989,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10989,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10989,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10989,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10989,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10989,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10989,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10989,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10989,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10989,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10989,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10989,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10989,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10989,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10989,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10989,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10989,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10989,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10989,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10989,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10989,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10989,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10989,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10989,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10989,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10989,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10989,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10989,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10989,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10989,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10989,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10989,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10989,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10989,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10989,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10989,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10989,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10989,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10989,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10989,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10989,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10989,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10989,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10989,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10989,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10989,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10989,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10989,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10989,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10989,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10989,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10989,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10989,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10989,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10989,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10989,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10989,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10989,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10989,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10989,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10989,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10989,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10989,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10989,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10989,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10989,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10989,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10989,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10989,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10989,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10989,"RPC",1720,0)
ORWSR LIST
"KRN",19,10989,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10989,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10989,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10989,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10989,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10989,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10989,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10989,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10989,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10989,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10989,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10989,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10989,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10989,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10989,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10989,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10989,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10989,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10989,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10989,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10989,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10989,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10989,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10989,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10989,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10989,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10989,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10989,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10989,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10989,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10989,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10989,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10989,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10989,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10989,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10989,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10989,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10989,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10989,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10989,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10989,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10989,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10989,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10989,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10989,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10989,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10989,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10989,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10989,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10989,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10989,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10989,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10989,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10989,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10989,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10989,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10989,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10989,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10989,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10989,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10989,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10989,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10989,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10989,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10989,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10989,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10989,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10989,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10989,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10989,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10989,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10989,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10989,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10989,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10989,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10989,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10989,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10989,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10989,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10989,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10989,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10989,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10989,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10989,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10989,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10989,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10989,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10989,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10989,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10989,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10989,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10989,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10989,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10989,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10989,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10989,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10989,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10989,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10989,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10989,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10989,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10989,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10989,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10989,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10989,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10989,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10989,"RPC",1840,0)
ORWORR RGET
"KRN",19,10989,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10989,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10989,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10989,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10989,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10989,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10989,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10989,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10989,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10989,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10989,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10989,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10989,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10989,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10989,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10989,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10989,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10989,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10989,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10989,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10989,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10989,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10989,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10989,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10989,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10989,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10989,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10989,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10989,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10989,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10989,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10989,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10989,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10989,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10989,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10989,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10989,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10989,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10989,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10989,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10989,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10989,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10989,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10989,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10989,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,10989,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,10989,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,10989,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,10989,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,10989,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,10989,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,10989,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,10989,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10989,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,10989,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,10989,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10989,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,10989,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1900,0)
ORWDAL32 SEND BULLETIN
"KRN",19,10989,"RPC",1901,0)
ORWDBA1 ORPKGTYP
"KRN",19,10989,"RPC",1902,0)
ORWDXR01 ISSPLY
"KRN",19,10989,"RPC",1903,0)
ORWDBA1 RCVORCI
"KRN",19,10989,"RPC",1904,0)
ORWPS REASON
"KRN",19,10989,"RPC",1905,0)
ORQQPXRM GEC FINISHED?
"KRN",19,10989,"RPC",1906,0)
ORWDXM3 ISUDQO
"KRN",19,10989,"RPC",1908,0)
ORWDBA1 SCLST
"KRN",19,10989,"RPC",1909,0)
ORWDXR01 OXDATA
"KRN",19,10989,"RPC",1914,0)
ORWDBA1 BASTATUS
"KRN",19,10989,"RPC",1920,0)
ORWORB SETSORT
"KRN",19,10989,"RPC",1921,0)
ORWORB GETSORT
"KRN",19,10989,"RPC",1922,0)
ORWOR EXPIRED
"KRN",19,10989,"RPC",1928,0)
ORECS01 GETDIV
"KRN",19,10989,"RPC",1933,0)
ORWTPD1 GETEFDAT
"KRN",19,10989,"RPC",1934,0)
ORWTPD1 GETEDATS
"KRN",19,10989,"RPC",1935,0)
ORWTPD1 PUTEDATS
"KRN",19,10989,"RPC",1936,0)
ORWTPD1 GETCSDEF
"KRN",19,10989,"RPC",1937,0)
ORWTPD1 GETCSRNG
"KRN",19,10989,"RPC",1938,0)
ORWTPD1 PUTCSRNG
"KRN",19,10989,"RPC",1939,0)
ORWTPD1 GETEAFL
"KRN",19,10989,"RPC",1940,0)
ORWDBA1 GETORDX
"KRN",19,10989,"RPC",1941,0)
ORWDBA3 HINTS
"KRN",19,10989,"RPC",1942,0)
ORWDAL32 LOAD FOR EDIT
"KRN",19,10989,"RPC",1943,0)
ORWDAL32 SAVE ALLERGY
"KRN",19,10989,"RPC",1944,0)
ORWDAL32 SITE PARAMS
"KRN",19,10989,"RPC",1945,0)
ORWPCE CXNOSHOW
"KRN",19,10989,"RPC",1946,0)
ORWDBA2 ADDPDL
"KRN",19,10989,"RPC",1947,0)
ORWDBA2 DELPDL
"KRN",19,10989,"RPC",1948,0)
ORWDBA2 GETDUDC
"KRN",19,10989,"RPC",1949,0)
ORWDBA2 GETPDL
"KRN",19,10989,"RPC",1950,0)
ORWDBA4 GETBAUSR
"KRN",19,10989,"RPC",1951,0)
ORWDBA4 GETTFCI
"KRN",19,10989,"RPC",1952,0)
ORWNSS NSSMSG
"KRN",19,10989,"RPC",1953,0)
ORWNSS QOSCH
"KRN",19,10989,"RPC",1954,0)
ORWNSS VALSCH
"KRN",19,10989,"RPC",1955,0)
ORWNSS CHKSCH
"KRN",19,10989,"RPC",1956,0)
ORWDPS4 ISUDIV
"KRN",19,10989,"RPC",1957,0)
ORWDPS32 AUTHNVA
"KRN",19,10989,"RPC",1962,0)
ORWTIU CHKTXT
"KRN",19,10989,"RPC",1964,0)
ORWDPS5 ISVTP
"KRN",19,10989,"RPC",1965,0)
TIU IS THIS A SURGERY?
"KRN",19,10989,"RPC",1966,0)
TIU IDENTIFY SURGERY CLASS
"KRN",19,10989,"RPC",1967,0)
TIU LONG LIST SURGERY TITLES
"KRN",19,10989,"RPC",1968,0)
TIU GET DOCUMENTS FOR REQUEST
"KRN",19,10989,"RPC",1969,0)
TIU SET ADMINISTRATIVE CLOSURE
"KRN",19,10989,"RPC",1970,0)
ORBCMA5 GETUDID
"KRN",19,10989,"RPC",1973,0)
ORIMO ISCLOC
"KRN",19,10989,"RPC",1974,0)
ORIMO ISIVQO
"KRN",19,10989,"RPC",1975,0)
ORWDBA7 GETIEN9
"KRN",19,10989,"RPC",1976,0)
ORWGN GNLOC
"KRN",19,10989,"RPC",1977,0)
ORWGN AUTHUSR
"KRN",19,10989,"RPC",1978,0)
ORVAA VAA
"KRN",19,10989,"RPC",1981,0)
ORWDAL32 CLINUSER
"KRN",19,10989,"RPC",1982,0)
ORWDBA7 ISWITCH
"KRN",19,10989,"RPC",1983,0)
ORWDFH CURRENT MEALS
"KRN",19,10989,"RPC",1984,0)
ORWDFH NFSLOC READY
"KRN",19,10989,"RPC",1985,0)
ORWDFH OPDIETS
"KRN",19,10989,"RPC",1986,0)
ORWMHV MHV
"KRN",19,10989,"RPC",1987,0)
ORWPCE1 NONCOUNT
"KRN",19,10989,"RPC",1988,0)
ORWPFSS IS PFSS ACTIVE?
"KRN",19,10989,"RPC",1989,0)
GMV EXTRACT REC
"KRN",19,10989,"RPC",1990,0)
GMV MARK ERROR
"KRN",19,10989,"RPC",1991,0)
ORWDXVB COMPORD
"KRN",19,10989,"RPC",1992,0)
ORWDXVB GETALL
"KRN",19,10989,"RPC",1993,0)
ORWDXVB RAW
"KRN",19,10989,"RPC",1994,0)
ORWDXVB RESULTS
"KRN",19,10989,"RPC",1995,0)
ORWDXVB STATALOW
"KRN",19,10989,"RPC",1996,0)
ORWGRPC ALLITEMS
"KRN",19,10989,"RPC",1997,0)
ORWGRPC CLASS
"KRN",19,10989,"RPC",1998,0)
ORWGRPC DATEITEM
"KRN",19,10989,"RPC",1999,0)
ORWGRPC DELVIEWS
"KRN",19,10989,"RPC",2000,0)
ORWGRPC DETAILS
"KRN",19,10989,"RPC",2001,0)
ORWGRPC GETDATES
"KRN",19,10989,"RPC",2002,0)
ORWGRPC GETPREF
"KRN",19,10989,"RPC",2003,0)
ORWGRPC GETVIEWS
"KRN",19,10989,"RPC",2004,0)
ORWGRPC ITEMDATA
"KRN",19,10989,"RPC",2005,0)
ORWGRPC ITEMS
"KRN",19,10989,"RPC",2006,0)
ORWGRPC LOOKUP
"KRN",19,10989,"RPC",2007,0)
ORWGRPC PUBLIC
"KRN",19,10989,"RPC",2008,0)
ORWGRPC RPTPARAM
"KRN",19,10989,"RPC",2009,0)
ORWGRPC SETPREF
"KRN",19,10989,"RPC",2010,0)
ORWGRPC SETVIEWS
"KRN",19,10989,"RPC",2011,0)
ORWGRPC TESTSPEC
"KRN",19,10989,"RPC",2012,0)
ORWGRPC TYPES
"KRN",19,10989,"RPC",2013,0)
TIU GET DOCUMENT STATUS
"KRN",19,10989,"RPC",2014,0)
TIU GET PRF ACTIONS
"KRN",19,10989,"RPC",2015,0)
TIU ISPRF
"KRN",19,10989,"RPC",2016,0)
TIU LINK TO FLAG
"KRN",19,10989,"RPC",2017,0)
ORWGRPC DETAIL
"KRN",19,10989,"RPC",2018,0)
ORWU VERSION
"KRN",19,10989,"RPC",2019,0)
GMV ALLERGY
"KRN",19,10989,"RPC",2020,0)
ORWCIRN WEBADDR
"KRN",19,10989,"RPC",2023,0)
ORWGRPC TAX
"KRN",19,10989,"RPC",2024,0)
GMV DLL VERSION
"KRN",19,10989,"RPC",2025,0)
ORWDX CHANGE
"KRN",19,10989,"RPC",2026,0)
GMV ADD VM
"KRN",19,10989,"RPC",2027,0)
GMV CONVERT DATE
"KRN",19,10989,"RPC",2028,0)
GMV GET CATEGORY IEN
"KRN",19,10989,"RPC",2029,0)
GMV GET CURRENT TIME
"KRN",19,10989,"RPC",2030,0)
GMV GET VITAL TYPE IEN
"KRN",19,10989,"RPC",2031,0)
GMV LATEST VM
"KRN",19,10989,"RPC",2032,0)
GMV MANAGER
"KRN",19,10989,"RPC",2033,0)
GMV PARAMETER
"KRN",19,10989,"RPC",2034,0)
GMV USER
"KRN",19,10989,"RPC",2035,0)
GMV VITALS/CAT/QUAL
"KRN",19,10989,"RPC",2036,0)
GMV V/M ALLDATA
"KRN",19,10989,"RPC",2037,0)
TIU GET LINKED PRF NOTES
"KRN",19,10989,"RPC",2038,0)
TIU GET PRF TITLE
"KRN",19,10989,"RPC",2039,0)
ORWDX1 PATWARD
"KRN",19,10989,"RPC",2040,0)
ORWRP4 HDR MODIFY
"KRN",19,10989,"RPC",2041,0)
ORWDX1 STCHANGE
"KRN",19,10989,"RPC",2042,0)
ORWDX1 DCREN
"KRN",19,10989,"RPC",2043,0)
ORQQPXRM MHV
"KRN",19,10989,"RPC",2044,0)
ORWGRPC GETSIZE
"KRN",19,10989,"RPC",2045,0)
ORWGRPC SETSIZE
"KRN",19,10989,"RPC",2046,0)
GMV LOCATION SELECT
"KRN",19,10989,"RPC",2047,0)
ORWCIRN AUTORDV
"KRN",19,10989,"RPC",2048,0)
ORPRF TRIGGER POPUP
"KRN",19,10989,"RPC",2049,0)
ORWCIRN HDRON
"KRN",19,10989,"RPC",2051,0)
ORCDLR2 CHECK ALL LC TO WC
"KRN",19,10989,"RPC",2052,0)
ORCDLR2 CHECK ONE LC TO WC
"KRN",19,10989,"RPC",2053,0)
ORALWORD ALLWORD
"KRN",19,10989,"RPC",2054,0)
ORWDX1 ORDMATCH
"KRN",19,10989,"RPC",2055,0)
ORWDX1 DCORIG
"KRN",19,10989,"RPC",2056,0)
ORWDX1 UNDCORIG
"KRN",19,10989,"RPC",2057,0)
ORWDXVB SUBCHK
"KRN",19,10989,"RPC",2058,0)
ORDDPAPI ADMTIME
"KRN",19,10989,"RPC",2059,0)
ORWU PARAMS
"KRN",19,10989,"RPC",2060,0)
ORWDPS1 DOWSCH
"KRN",19,10989,"RPC",2061,0)
ORWDPS33 COMPLOC
"KRN",19,10989,"RPC",2062,0)
ORWGRPC FASTDATA
"KRN",19,10989,"RPC",2063,0)
ORWGRPC FASTITEM
"KRN",19,10989,"RPC",2064,0)
ORWGRPC FASTTASK
"KRN",19,10989,"RPC",2065,0)
ORWGRPC FASTLABS
"KRN",19,10989,"RPC",2066,0)
ORWDPS1 QOMEDALT
"KRN",19,10989,"RPC",2067,0)
ORWGRPC ALLVIEWS
"KRN",19,10989,"RPC",2068,0)
ORDDPAPI CLOZMSG
"KRN",19,10989,"RPC",2069,0)
ORWGRPC TESTING
"KRN",19,10989,"RPC",2070,0)
ORQQPXRM MHDLL
"KRN",19,10989,"RPC",2071,0)
ORWDLR33 LC TO WC
"KRN",19,10989,"RPC",2072,0)
ORWU2 COSIGNER
"KRN",19,10989,"RPC",2073,0)
ORWDXVB NURSADMN
"KRN",19,10989,"RPC",2075,0)
TIU IS USER A USR PROVIDER
"KRN",19,10989,"RPC",2076,0)
ORWDPS33 IVDOSFRM
"KRN",19,10989,"RPC",2077,0)
ORWDPS32 ALLIVRTE
"KRN",19,10989,"RPC",2078,0)
ORWDXM1 SVRPC
"KRN",19,10989,"RPC",2079,0)
ORWDXVB VBTNS
"KRN",19,10989,"RPC",2080,0)
MAG4 REMOTE IMPORT
"KRN",19,10989,"RPC",2081,0)
ORWDX UNLKOTH
"KRN",19,10989,"RPC",2082,0)
OR GET COMBAT VET
"KRN",19,10989,"RPC",2083,0)
GMV CLOSEST READING
"KRN",19,10989,"RPC",2084,0)
ORQQCN ISPROSVC
"KRN",19,10989,"RPC",2085,0)
ORQQPL PROBLEM NTRT BULLETIN
"KRN",19,10989,"RPC",2086,0)
ORWPCE GET DX TEXT
"KRN",19,10989,"RPC",2087,0)
ORCHECK ISMONO
"KRN",19,10989,"RPC",2088,0)
ORCHECK GETMONO
"KRN",19,10989,"RPC",2089,0)
ORCHECK GETMONOL
"KRN",19,10989,"RPC",2090,0)
ORCHECK DELMONO
"KRN",19,10989,"RPC",2091,0)
ORCHECK GETXTRA
"KRN",19,10989,"RPC",2092,0)
ORWDPS33 GETADDFR
"KRN",19,10989,"RPC",2093,0)
ORCNOTE GET TOTAL
"KRN",19,10989,"RPC",2094,0)
ORVW FACLIST
"KRN",19,10989,"RPC",2095,0)
ORWDXVB3 DIAGORD
"KRN",19,10989,"RPC",2096,0)
ORWDXVB3 COLLTIM
"KRN",19,10989,"RPC",2097,0)
ORWDXVB3 SWPANEL
"KRN",19,10989,"RPC",2099,0)
XUS PKI GET UPN
"KRN",19,10989,"RPC",2100,0)
ORDEA HASHINFO
"KRN",19,10989,"RPC",2101,0)
ORDEA ORDHINFO
"KRN",19,10989,"RPC",2102,0)
ORDEA DEATEXT
"KRN",19,10989,"RPC",2103,0)
ORDEA CSVALUE
"KRN",19,10989,"RPC",2104,0)
ORDEA SIGINFO
"KRN",19,10989,"RPC",2106,0)
ORWPCE ICDVER
"KRN",19,10989,"RPC",2107,0)
ORDEA PINLKCHK
"KRN",19,10989,"RPC",2108,0)
ORDEA PINLKSET
"KRN",19,10989,"RPC",2109,0)
ORQQPL4 LEX
"KRN",19,10989,"RPC",2110,0)
ORDEA PNDHLD
"KRN",19,10989,"RPC",2111,0)
XUS PKI SET UPN
"KRN",19,10989,"RPC",2112,0)
ORDEA LNKMSG
"KRN",19,10989,"RPC",2113,0)
ORWPCE4 LEX
"KRN",19,10989,"U")
CPRSCHART VERSION 1.0.29.21
"KRN",19,14152,-1)
0^2
"KRN",19,14152,0)
OR EPCS CS RX BY PROVIDER^ePCS Controlled Subs by Provider^^R^^^^^^^^ORDER ENTRY/RESULTS REPORTING
"KRN",19,14152,1,0)
^^3^3^3121209^
"KRN",19,14152,1,1,0)
This is the option to be scheduled in TaskMan to run the monthly report 
"KRN",19,14152,1,2,0)
for controlled substances prescriptions issues by a provider. This report 
"KRN",19,14152,1,3,0)
is required by the Drug Enforcement Agency to be delivered once a month.
"KRN",19,14152,25)
ORDEA02
"KRN",19,14152,"U")
EPCS CONTROLLED SUBS BY PROVID
"KRN",19.1,269,-1)
0^1
"KRN",19.1,269,0)
ORES
"KRN",19.1,269,1,0)
^19.11^10^10^3120621^^^^
"KRN",19.1,269,1,1,0)
This key is given to users that are authorized to write orders in
"KRN",19.1,269,1,2,0)
the chart.  Users with this key can verify with their electronic
"KRN",19.1,269,1,3,0)
signature patient orders.
"KRN",19.1,269,1,4,0)
 
"KRN",19.1,269,1,5,0)
This key is typically given to licensed Physicians.
"KRN",19.1,269,1,6,0)
 
"KRN",19.1,269,1,7,0)
Orders entered by users with this key can be released to the ancillary
"KRN",19.1,269,1,8,0)
service for immediate action.
"KRN",19.1,269,1,9,0)
 
"KRN",19.1,269,1,10,0)
DO NOT give users both the ORES key and the ORELSE key.
"KRN",19.1,269,5,0)
^19.15P^1^1
"KRN",19.1,269,5,1,0)
XUEPCSEDIT
"KRN",8989.5,17897,0)
170;DIC(9.4,^ORQQPL SUPPRESS CODES^1
"KRN",8989.5,17897,1)
0
"KRN",8989.5,18310,0)
170;DIC(9.4,^ORCDGMRC EARLIEST DATE DEFAULT^1
"KRN",8989.5,18310,1)
TODAY
"KRN",8989.5,19092,0)
170;DIC(9.4,^OR DEA PIV LINK MSG^1
"KRN",8989.5,19092,1)
Please contact
"KRN",8989.5,19092,2,0)
^^2^2^3130110
"KRN",8989.5,19092,2,1,0)
Please see your Administrator if you are unable to place controlled 
"KRN",8989.5,19092,2,2,0)
substance orders and believe you should have this ability.
"KRN",8989.51,665,-1)
0^4
"KRN",8989.51,665,0)
OR DEA TEXT^DEA MSG TO SHOW ON SIG DIALOG^0^FREE TEXT^DEA MSG TO SHOW ON SIG DIALOG
"KRN",8989.51,665,1)
W^^Enter a message to display on the signature dialog for DEA
"KRN",8989.51,665,6)
F
"KRN",8989.51,665,20,0)
^^4^4^3110629^
"KRN",8989.51,665,20,1,0)
This parameter allows sites to set what exactly they would like the 
"KRN",8989.51,665,20,2,0)
message to be that is shown on the signature dialog when a controlled 
"KRN",8989.51,665,20,3,0)
substance item is checked to be included in signing.  This text is 
"KRN",8989.51,665,20,4,0)
mandated by the DEA.
"KRN",8989.51,665,30,0)
^8989.513I^1^1
"KRN",8989.51,665,30,1,0)
6^4.2
"KRN",8989.51,666,-1)
0^1
"KRN",8989.51,666,0)
ORQQPL SUPPRESS CODES^Suppress Codes in Lexicon Problem Search^0^^Suppress Codes?
"KRN",8989.51,666,1)
Y^^Indicate whether code values should be hidden during Problem searches.
"KRN",8989.51,666,20,0)
^8989.512^2^2^3110608^^^^
"KRN",8989.51,666,20,1,0)
This parameter determines whether the user will be shown SNOMED CT and 
"KRN",8989.51,666,20,2,0)
ICD codes when searching for patient problems.
"KRN",8989.51,666,30,0)
^8989.513I^5^5
"KRN",8989.51,666,30,1,0)
5^200
"KRN",8989.51,666,30,2,0)
15^4
"KRN",8989.51,666,30,3,0)
20^4.2
"KRN",8989.51,666,30,4,0)
25^9.4
"KRN",8989.51,666,30,5,0)
10^49
"KRN",8989.51,668,-1)
0^3
"KRN",8989.51,668,0)
ORCDGMRC EARLIEST DATE DEFAULT^Earliest Appropriate Date Default^0
"KRN",8989.51,668,1)
F^^Enter default relative date (e.g. T+30D, T+2W, T+1M), no time or past dates.
"KRN",8989.51,668,2)
S X=$$UP^XLFSTR(X) Q:X="TODAY"!(X="T")  K:X'["T"&($L(X)'>1) X I $D(X) K:X'?1"T+"1.2N.(1"D",1"W",1"M") X
"KRN",8989.51,668,4,0)
^8989.514^1^1
"KRN",8989.51,668,4,1,0)
EARLIEST
"KRN",8989.51,668,4,"B","EARLIEST",1)

"KRN",8989.51,668,20,0)
^^13^13^3111220^
"KRN",8989.51,668,20,1,0)
This defines the default date value for the Earliest Appropriate Date 
"KRN",8989.51,668,20,2,0)
(EAD) field in consult and procedure orders.  This date value can be TODAY
"KRN",8989.51,668,20,3,0)
or greater and must be a relative date (e.g. "TODAY", T+7D, "T+2W").
"KRN",8989.51,668,20,4,0)
Past dates and precise dates are not permitted.  The date value may also 
"KRN",8989.51,668,20,5,0)
be a null/empty date, which is set by deleting (via XPAR MENU TOOLS) the
"KRN",8989.51,668,20,6,0)
current value for the parameter (if one is set).
"KRN",8989.51,668,20,7,0)
 
"KRN",8989.51,668,20,8,0)
Any new orders in CPRS GUI and new quick orders will default to the 
"KRN",8989.51,668,20,9,0)
parameter value.  Any quick orders that currently have a default value 
"KRN",8989.51,668,20,10,0)
for the EAD will retain that value.  If that quick order should reflect 
"KRN",8989.51,668,20,11,0)
the parameter value, simply remove the current default value for the 
"KRN",8989.51,668,20,12,0)
quick order and save the change.  The quick order would then default
"KRN",8989.51,668,20,13,0)
to the parameter value.
"KRN",8989.51,668,30,0)
^8989.513I^1^1
"KRN",8989.51,668,30,1,0)
1^9.4
"KRN",8989.51,673,-1)
0^2
"KRN",8989.51,673,0)
OR PROBLEM NTRT BY DIVISION^PL NTRT Bulletin Recipients^^^Mail Group
"KRN",8989.51,673,1)
P^3.8^Enter the local mail group for the recipients for this Division.
"KRN",8989.51,673,2)

"KRN",8989.51,673,3)

"KRN",8989.51,673,20,0)
^8989.512^7^7^3111115^^^
"KRN",8989.51,673,20,1,0)
This parameter allows the routing of the OR PROBLEM LIST NTRT BULLETINS 
"KRN",8989.51,673,20,2,0)
(for novel terms which local users are requesting extensions to the 
"KRN",8989.51,673,20,3,0)
SNOMED CT standard).
"KRN",8989.51,673,20,4,0)
 
"KRN",8989.51,673,20,5,0)
By default members of the OR CACS mailgroup will receive all Problem List 
"KRN",8989.51,673,20,6,0)
NTRT bulletins. This parameter allows routing of requests to mailgroups 
"KRN",8989.51,673,20,7,0)
specific to the division identified by the requestor at log-in.
"KRN",8989.51,673,30,0)
^8989.513I^1^1
"KRN",8989.51,673,30,1,0)
1^4
"KRN",8989.51,688,-1)
0^5
"KRN",8989.51,688,0)
OR DEA PIV LINK MSG^Msg to show after DEA PIV link^0^FREE TEXT^PIV Link Message after success
"KRN",8989.51,688,1)
W
"KRN",8989.51,688,6)
F
"KRN",8989.51,688,20,0)
^^6^6^3130107^
"KRN",8989.51,688,20,1,0)
This parameter determines the information that is displayed on the popup 
"KRN",8989.51,688,20,2,0)
dialog that is presented to the user after successfully linking their PIV 
"KRN",8989.51,688,20,3,0)
card to their VISTA account.  Information about contacting an 
"KRN",8989.51,688,20,4,0)
administrative personnel should be included here if they are still unable 
"KRN",8989.51,688,20,5,0)
to prescribe controlled substance orders and believe they should have 
"KRN",8989.51,688,20,6,0)
that ability.
"KRN",8989.51,688,30,0)
^8989.513I^3^3
"KRN",8989.51,688,30,1,0)
6^9.4
"KRN",8989.51,688,30,2,0)
5^4.2
"KRN",8989.51,688,30,3,0)
4^4
"KRN",8994,257,-1)
0^2
"KRN",8994,257,0)
ORWPT SELECT^SELECT^ORWPT^1
"KRN",8994,257,1,0)
^^7^7^3111128^
"KRN",8994,257,1,1,0)
RPC to return key information on a patient as follows:
"KRN",8994,257,1,2,0)
 
"KRN",8994,257,1,3,0)
1    2   3   4    5      6    7    8       9       10      11   12 13
"KRN",8994,257,1,4,0)
NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^SC%^
"KRN",8994,257,1,5,0)
 
"KRN",8994,257,1,6,0)
14  15  16  17
"KRN",8994,257,1,7,0)
ICN^AGE^TS^TSSVC
"KRN",8994,479,-1)
0^1
"KRN",8994,479,0)
ORWPT1 PRCARE^PRCARE^ORWPT1^1
"KRN",8994,479,1,0)
^^3^3^3111121^
"KRN",8994,479,1,1,0)
Return primary care information for a patient in the format:
"KRN",8994,479,1,2,0)
  VAL=Primary Care Team^Primary Care Provider^Attending^MH Treatment
"KRN",8994,479,1,3,0)
      Coordinator
"KRN",8994,479,2,0)
^8994.02A^1^1
"KRN",8994,479,2,1,0)
dfn
"KRN",8994,479,2,"B","dfn",1)

"KRN",8994,916,-1)
0^6
"KRN",8994,916,0)
ORDEA DEATEXT^DEATEXT^ORDEA^3^^^^1
"KRN",8994,916,1,0)
^^2^2^3110630^
"KRN",8994,916,1,1,0)
Returns the text to show on the signature dialog mandated by DEA for when 
"KRN",8994,916,1,2,0)
a controlled substance order is selected to be signed.
"KRN",8994,1015,-1)
0^9
"KRN",8994,1015,0)
ORDEA SIGINFO^SIGINFO^ORDEA^3^^^^1
"KRN",8994,1015,1,0)
^^2^2^3110707^
"KRN",8994,1015,1,1,0)
returns the provider/patient info that must be displayed when signing a 
"KRN",8994,1015,1,2,0)
controlled substance order(s)
"KRN",8994,1106,-1)
0^8
"KRN",8994,1106,0)
ORDEA CSVALUE^CSVALUE^ORDEA^1
"KRN",8994,1354,-1)
0^4
"KRN",8994,1354,0)
ORDEA HASHINFO^HASHINFO^ORDEA^2
"KRN",8994,1355,-1)
0^5
"KRN",8994,1355,0)
ORDEA ORDHINFO^ORDHINFO^ORDEA^2
"KRN",8994,1356,-1)
0^3
"KRN",8994,1356,0)
ORWPCE ICDVER^ICDVER^ORWPCE^1^S
"KRN",8994,1356,1,0)
^^2^2^3120216^
"KRN",8994,1356,1,1,0)
Returns the ICD coding system version to be used for diagnosis look-up, as
"KRN",8994,1356,1,2,0)
of a particular date of interest.
"KRN",8994,1356,2,0)
^8994.02A^1^1
"KRN",8994,1356,2,1,0)
ORDT^1^^0^1
"KRN",8994,1356,2,1,1,0)
^^2^2^3120216^
"KRN",8994,1356,2,1,1,1,0)
This is the date of interest (e.g., encounter date - time optional) 
"KRN",8994,1356,2,1,1,2,0)
against which the implementation date for ICD-10-CM will be compared.
"KRN",8994,1356,2,"B","ORDT",1)

"KRN",8994,1356,2,"PARAMSEQ",1,1)

"KRN",8994,1356,3,0)
^^5^5^3120216^
"KRN",8994,1356,3,1,0)
Returns a two '^'-piece string with the Coding system abbreviation and the
"KRN",8994,1356,3,2,0)
Coding System name, as either:
"KRN",8994,1356,3,3,0)
  
"KRN",8994,1356,3,4,0)
 ICD^ICD-9-CM, or
"KRN",8994,1356,3,5,0)
 10D^ICD-10-CM
"KRN",8994,1360,-1)
0^11
"KRN",8994,1360,0)
ORDEA PINLKCHK^PINLKCHK^ORDEA^1
"KRN",8994,1361,-1)
0^10
"KRN",8994,1361,0)
ORDEA PINLKSET^PINLKSET^ORDEA^1
"KRN",8994,1464,-1)
0^12
"KRN",8994,1464,0)
ORQQPL4 LEX^LEX^ORQQPL4^4^S^^^1
"KRN",8994,1464,1,0)
^^2^2^3120319^
"KRN",8994,1464,1,1,0)
This RPC supports the Clinical Lexicon Search for Problem List. It will 
"KRN",8994,1464,1,2,0)
return an indefinite list of terms that match the user's search string.
"KRN",8994,1472,-1)
0^13
"KRN",8994,1472,0)
ORDEA PNDHLD^PNDHLD^ORDEA^1
"KRN",8994,2351,-1)
0^14
"KRN",8994,2351,0)
ORDEA LNKMSG^LNKMSG^ORDEA^3^^^^1
"KRN",8994,2351,1,0)
^^1^1^3120827^
"KRN",8994,2351,1,1,0)
Returns the text of the OR DEA PIV LINK MSG parameter.
"KRN",8994,2974,-1)
0^15
"KRN",8994,2974,0)
ORWPCE4 LEX^LEX^ORWPCE4^2
"KRN",8994,2974,1,0)
^^2^2^3121105^
"KRN",8994,2974,1,1,0)
Returns list of coded elements based on lexicon look-up. Introduced with 
"KRN",8994,2974,1,2,0)
CPRS v29 to maintain compatibility of older call ORWPCE LEX.
"MBREQ")
1
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",100.9,1,1,1)
NON-MENU TYPE OPTION ACTION^P19'^DIC(19,^1;1^Q
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,20,0)
^9.402P^^
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
306^3130219^10000000196
"PKG",170,22,1,"PAH",1,1,0)
^^2^2^3130219
"PKG",170,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",170,22,1,"PAH",1,1,2,0)
under OR*3*306.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
51
"RTN","OR3CONV")
1^13^B0
"RTN","OR3CONV1")
1^14^B0
"RTN","ORCACT0")
0^46^B64282861
"RTN","ORCACT0",1,0)
ORCACT0 ;SLC/MKB-Validate order action ;12/14/12  15:20
"RTN","ORCACT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,86,92,94,141,165,177,173,190,215,243,289,204,306**;Dec 17, 1997;Build 43
"RTN","ORCACT0",3,0)
 ;
"RTN","ORCACT0",4,0)
 ;Reference to REFILL^PSOREF supported by IA #2399
"RTN","ORCACT0",5,0)
 ;
"RTN","ORCACT0",6,0)
VALID(IFN,ACTION,ERROR,NATR) ; -- Determines if action is valid for order IFN
"RTN","ORCACT0",7,0)
 N OR0,OR3,ORA0,AIFN,PKG,DG,ORDSTS,ACTSTS,VER,X,Y,MEDPARM,CSORD,ORDLG,ORENVIR K ERROR
"RTN","ORCACT0",8,0)
 S OR0=$G(^OR(100,+IFN,0)),OR3=$G(^(3)),PKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT0",9,0)
 S ORENVIR=$S($D(XQY0)&($P(XQY0,U)="OR CPRS GUI CHART"):"GUI",1:"")
"RTN","ORCACT0",10,0)
 I $G(ORENVIR)'="GUI"&(ACTION="ES") D  G VQ
"RTN","ORCACT0",11,0)
 . S CSORD="" D CSVALUE^ORDEA(.CSORD,+IFN)
"RTN","ORCACT0",12,0)
 . S ORDLG=$S($P(OR0,U,5)["101.41":$P($G(^ORD(101.41,+$P(OR0,U,5),0)),U),1:"")
"RTN","ORCACT0",13,0)
 . I CSORD&(ORDLG="PSO OERR") D
"RTN","ORCACT0",14,0)
 . . S ERROR="Outpatient controlled substance order(s) cannot be signed in VistA due to"_$C(13,10)
"RTN","ORCACT0",15,0)
 . . S ERROR=ERROR_"     DEA rules! Please sign your order(s) from the CPRS GUI."
"RTN","ORCACT0",16,0)
 . . Q
"RTN","ORCACT0",17,0)
 S DG=$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,3)
"RTN","ORCACT0",18,0)
 S MEDPARM=$S($G(NATR)="A":2,PKG'="PS":2,'$D(^XUSEC("OREMAS",DUZ)):2,DG="NV RX":$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS"),1:$$GET^XPAR("ALL","OR OREMAS MED ORDERS"))
"RTN","ORCACT0",19,0)
 S AIFN=$P(IFN,";",2) S:'AIFN AIFN=+$P(OR3,U,7)
"RTN","ORCACT0",20,0)
 S ORA0=$G(^OR(100,+IFN,8,AIFN,0)),ACTSTS=$P(ORA0,U,15)
"RTN","ORCACT0",21,0)
 S ORDSTS=$P(OR3,U,3),VER=$S($P(OR0,U,5)["101.41":3,1:2)
"RTN","ORCACT0",22,0)
CM I ACTION="CM" S ERROR="This action is no longer available!" G VQ ; ward comments - no restrictions
"RTN","ORCACT0",23,0)
FL I ACTION="FL" D  G VQ ; flag
"RTN","ORCACT0",24,0)
 . I +$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is already flagged!" Q
"RTN","ORCACT0",25,0)
UF I ACTION="UF" D  G VQ ; unflag
"RTN","ORCACT0",26,0)
 . I '+$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is not flagged!" Q
"RTN","ORCACT0",27,0)
DC1 I ACTION="DC",ACTSTS D  G VQ ; discontinue/cancel unrel or canc order
"RTN","ORCACT0",28,0)
 . I (ACTSTS=11)!(ACTSTS=10) D  Q  ; unreleased
"RTN","ORCACT0",29,0)
 .. I 'MEDPARM S ERROR="You are not authorized to cancel med orders!" Q
"RTN","ORCACT0",30,0)
 .. I $G(NATR)="A" S X=$O(^ORE(100.2,"AO",+IFN,0)) I X,'$G(^ORE(100.2,X,1)) S ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",31,0)
 . I ACTSTS=12 S ERROR="This order has been dc'd due to edit!" Q
"RTN","ORCACT0",32,0)
 . I ACTSTS=13 S ERROR="This order has been cancelled!" Q
"RTN","ORCACT0",33,0)
ES I (ACTION="ES")!(ACTION="OC")!(ACTION="RS")!(ACTION="DS") D ES^ORCACT01 G VQ ; sign
"RTN","ORCACT0",34,0)
VR I ACTION="VR" D  G VQ ; verify
"RTN","ORCACT0",35,0)
 . I $G(ORVER)="N",$P(ORA0,U,9) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",36,0)
 . I $G(ORVER)="C",$P(ORA0,U,11) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",37,0)
 . I $G(ORVER)="R",$P(ORA0,U,19) S ERROR="This order has been reviewed!" Q
"RTN","ORCACT0",38,0)
 . I (ACTSTS=11)!(ACTSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",39,0)
 . I AIFN=1,ORDSTS=5,PKG="PS" S X=$$DISABLED I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",40,0)
DIS S X=$$DISABLED I X S ERROR=$P(X,U,2) G VQ
"RTN","ORCACT0",41,0)
MN I ACTION="MN" D  G VQ ; manually release (delayed)
"RTN","ORCACT0",42,0)
 . I ACTSTS'=10,ACTSTS'=11 S ERROR="This order has already been released!" Q
"RTN","ORCACT0",43,0)
 . I $P(OR0,U,12)="I",'$G(^DPT(+ORVP,.105)) S ERROR="This patient is not currently admitted!"
"RTN","ORCACT0",44,0)
GMRA I PKG="GMRA" S ERROR="This action is not allowed on an allergy/adverse reaction!" G VQ ; no actions allowed on Allergies
"RTN","ORCACT0",45,0)
MEDS I PKG="PS",'MEDPARM S ERROR="You are not authorized to enter med orders!" G VQ
"RTN","ORCACT0",46,0)
RW I ACTION="RW" D RW^ORCACT01 G VQ ; rewrite/copy
"RTN","ORCACT0",47,0)
XFR I ACTION="XFR" D  G VQ
"RTN","ORCACT0",48,0)
 . N A
"RTN","ORCACT0",49,0)
 . S A=""
"RTN","ORCACT0",50,0)
 . F  S A=$O(^OR(100,+IFN,4.5,"ID","CONJ",A)) Q:'A  I ^OR(100,+IFN,4.5,A,1)="X" S ERROR="Orders with a conjunction of 'EXCEPT' may not be transferred." Q
"RTN","ORCACT0",51,0)
 . F  S A=$O(^OR(100,+IFN,4.5,"ID","CONJ",A)) Q:'A  I ^OR(100,+IFN,4.5,A,1)="T" S ERROR="Orders with a conjunction of 'THEN' may not be transferred." Q
"RTN","ORCACT0",52,0)
 . I $G(ERROR)]"" Q
"RTN","ORCACT0",53,0)
 . D XFR^ORCACT01 ; transfer to in/outpt
"RTN","ORCACT0",54,0)
RN I ACTION="RN" D RN^ORCACT01 G VQ ; renew
"RTN","ORCACT0",55,0)
TRM I $$DONE G VQ ; ORDSTS=1,2,7,12,13
"RTN","ORCACT0",56,0)
EV I ACTION="EV" D  G VQ ; change delay event
"RTN","ORCACT0",57,0)
 . I ORDSTS'=10,ORDSTS'=11 S ERROR="This order has been released!" Q
"RTN","ORCACT0",58,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders do not support this action!" Q
"RTN","ORCACT0",59,0)
 . I $$EVTORDER^OREVNTX(IFN) S ERROR="The release event for this order may not be changed!" Q
"RTN","ORCACT0",60,0)
 . S X=$P(ORA0,U,4) I X'=2,X'=3 S ERROR="Signed orders may not be delayed to another event!" Q
"RTN","ORCACT0",61,0)
DC2 I ACTION="DC",ACTSTS="" D  G VQ ; DC released order
"RTN","ORCACT0",62,0)
 . I $G(NATR)="A" D  Q:$D(ERROR)
"RTN","ORCACT0",63,0)
 .. S X=$O(^ORE(100.2,"AO",+IFN,0)) I X S:'$G(^ORE(100.2,X,1)) ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",64,0)
 .. I $$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO",$G(DGPMT)=1 Q  ;177 If admission auto-dc and order is outpt med then no further checking needed
"RTN","ORCACT0",65,0)
 .. I $G(DGPMT)=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)'="C" S ERROR="Only outpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",66,0)
 .. I $G(DGPMT)'=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)="C",PKG'="PS" S ERROR="Only inpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",67,0)
 . I PKG="RA",ORDSTS=6 S ERROR="Active Radiology orders cannot be discontinued!" Q
"RTN","ORCACT0",68,0)
 . I PKG="VBEC",ORDSTS=6 S ERROR="Active Blood Product orders cannot be discontinued!" Q
"RTN","ORCACT0",69,0)
 . I PKG="LR" D  Q
"RTN","ORCACT0",70,0)
 .. I $$COLLECTD S ERROR="Lab orders that have been collected may not be discontinued!" Q
"RTN","ORCACT0",71,0)
 .. I $G(NATR)="A","^12^38^"'[(U_$P($G(DGPMA),U,18)_U),$$VALUE^ORX8(+IFN,"COLLECT")="SP",$P(OR0,U,8)'<DT S ERROR="Future Send Patient orders may not be auto-discontinued!" Q
"RTN","ORCACT0",72,0)
 . I PKG="GMRC",ORDSTS=9 S ERROR="Consults orders with partial results cannot be discontinued!" Q
"RTN","ORCACT0",73,0)
 . I DG="DO",$G(DGPMT)'=3,ORDSTS=6,'$$NPO(+IFN) S ERROR="Active Diets cannot be discontinued; please order a new diet!" Q
"RTN","ORCACT0",74,0)
RL I ACTION="RL" D  G VQ  ; release hold
"RTN","ORCACT0",75,0)
 . I ORDSTS'=3 D  Q
"RTN","ORCACT0",76,0)
 ..I $P(ORA0,U,4)=2 S ERROR="Providers has not yet signed the hold order and therefor it cannot yet be released" Q
"RTN","ORCACT0",77,0)
 ..S ERROR="Orders not on hold cannot be released!" Q
"RTN","ORCACT0",78,0)
 . I ACTSTS S ERROR=$$ACTION($P(ORA0,U,2))_" orders cannot be released from hold!" Q
"RTN","ORCACT0",79,0)
 . N NATR,ACT S ACT=$S($P(ORA0,U,2)="HD":AIFN,1:+$P(OR3,U,7))
"RTN","ORCACT0",80,0)
 . S NATR=+$P($G(^OR(100,+IFN,8,ACT,0)),U,12),ACT=$P($G(^(0)),U,2)
"RTN","ORCACT0",81,0)
 . I PKG="RA"!(ACT'="HD")!($P($G(^ORD(100.02,NATR,0)),U,2)="S") S ERROR="Orders held by a service must be released from hold through the service!" Q
"RTN","ORCACT0",82,0)
AIFN S X=$P(ORA0,U,2) I AIFN>1,ACTSTS S ERROR="This action is not allowed on a "_$$ACTION(X)_" order!" G VQ
"RTN","ORCACT0",83,0)
RF I ACTION="RF" D  G VQ
"RTN","ORCACT0",84,0)
 . I DG'="O RX" S ERROR="Only Outpatient Med orders may be refilled!" Q
"RTN","ORCACT0",85,0)
 . I ORDSTS=5 S ERROR="Pending orders may not be refilled!" Q
"RTN","ORCACT0",86,0)
 . I ORDSTS=7 S ERROR="Expired orders may not be refilled!" Q
"RTN","ORCACT0",87,0)
 . N X,PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT0",88,0)
 . S X=$$REFILL^PSOREF(PSIFN) I X'>0 S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",89,0)
CP I ACTION="CP" D  G VQ ; complete
"RTN","ORCACT0",90,0)
 . I PKG'="OR" S ERROR="Only generic text orders may be completed through this option!" Q
"RTN","ORCACT0",91,0)
 . I ORDSTS=11!(ORDSTS=10) S ERROR="This order has not been released!" Q
"RTN","ORCACT0",92,0)
AL I ACTION="AL" D  G VQ
"RTN","ORCACT0",93,0)
 . I PKG'="LR",PKG'="RA",PKG'="GMRC" S ERROR="This order does not generate results!" Q
"RTN","ORCACT0",94,0)
 . I $P(OR3,U,10) S ERROR="This order is already flagged to alert the provider when resulted!" Q
"RTN","ORCACT0",95,0)
XX I ACTION="XX" D  G VQ ; edit/change
"RTN","ORCACT0",96,0)
 . I ORDSTS=7 S ERROR="Expired orders may not be changed!" Q
"RTN","ORCACT0",97,0)
 . D XX^ORCACT01
"RTN","ORCACT0",98,0)
HD I ACTION="HD" D  G VQ ; hold
"RTN","ORCACT0",99,0)
 . I PKG="FH" S ERROR="Diet orders cannot be held!" Q
"RTN","ORCACT0",100,0)
 . I PKG="LR" S ERROR="Lab orders cannot be held!" Q
"RTN","ORCACT0",101,0)
 . I PKG="RA" S ERROR="Radiology orders cannot be held!" Q
"RTN","ORCACT0",102,0)
 . I PKG="GMRC" S ERROR="Consult orders cannot be held!" Q
"RTN","ORCACT0",103,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders cannot be held!" Q
"RTN","ORCACT0",104,0)
 . I ORDSTS=3 S ERROR="This order is already on hold!" Q
"RTN","ORCACT0",105,0)
 . I ORDSTS'=6,PKG="PS" S ERROR="Only active Pharmacy orders may be held!" Q
"RTN","ORCACT0",106,0)
 . I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",107,0)
VQ S Y=$S($D(ERROR):0,1:1)
"RTN","ORCACT0",108,0)
 Q Y
"RTN","ORCACT0",109,0)
 ;
"RTN","ORCACT0",110,0)
ACTION(X) ; -- Return text of action X
"RTN","ORCACT0",111,0)
 N Y S Y=$S(X="NW":"New",X="DC":"Discontinue",X="HD":"Hold",X="RL":"Release Hold",X="RN":"Renew",1:X)
"RTN","ORCACT0",112,0)
 Q Y
"RTN","ORCACT0",113,0)
 ;
"RTN","ORCACT0",114,0)
NPO(ORIFN) ; -- Returns 1 or 0, if order ORIFN is for NPO
"RTN","ORCACT0",115,0)
 N X,Y S X=$$VALUE^ORX8(+ORIFN,"ORDERABLE",1,"E")
"RTN","ORCACT0",116,0)
 S Y=$S($E(X,1,3)="NPO":1,1:0)
"RTN","ORCACT0",117,0)
 Q Y
"RTN","ORCACT0",118,0)
 ;
"RTN","ORCACT0",119,0)
COLLECTD() ; -- Lab order collected/active (incl all children)?
"RTN","ORCACT0",120,0)
 I (ORDSTS=11)!(ORDSTS=10) Q 0 ; unreleased
"RTN","ORCACT0",121,0)
 I '$O(^OR(100,+IFN,2,0)) Q (ORDSTS'=5)
"RTN","ORCACT0",122,0)
 ;I ORDSTS'=6 Q 1 ; Parent -> active instead of pending
"RTN","ORCACT0",123,0)
 N Y,Z S Y=1,Z=0
"RTN","ORCACT0",124,0)
 F  S Z=$O(^OR(100,+IFN,2,Z)) Q:Z'>0  I $P($G(^OR(100,Z,3)),U,3)=5 S Y=0 Q
"RTN","ORCACT0",125,0)
 Q Y
"RTN","ORCACT0",126,0)
 ;
"RTN","ORCACT0",127,0)
DONE() ; -- sets ERROR if terminal status
"RTN","ORCACT0",128,0)
 I ORDSTS=1 S ERROR="This order has been discontinued!" Q 1
"RTN","ORCACT0",129,0)
 I ORDSTS=2 S ERROR="This order has been completed!" Q 1
"RTN","ORCACT0",130,0)
 I ORDSTS=7,DG'="O RX" S ERROR="This order has expired!" Q 1
"RTN","ORCACT0",131,0)
 I ORDSTS=12 S ERROR="This order has been changed!" Q 1
"RTN","ORCACT0",132,0)
 I ORDSTS=13 S ERROR="This order has been cancelled!" Q 1
"RTN","ORCACT0",133,0)
 I ORDSTS=14 S ERROR="This order has lapsed!" Q 1
"RTN","ORCACT0",134,0)
 I ORDSTS=15 S ERROR="This order has been renewed!" Q 1
"RTN","ORCACT0",135,0)
 Q 0
"RTN","ORCACT0",136,0)
 ;
"RTN","ORCACT0",137,0)
DISABLED() ; -- Order dialog [or protocol] disabled?
"RTN","ORCACT0",138,0)
 N X,DLG S DLG=$P(OR0,U,5),X=0 I +DLG'>0 Q X
"RTN","ORCACT0",139,0)
 I VER'<3,DLG?1.N1";ORD(101.41," S X=$$MSG^ORXD(+DLG) Q X
"RTN","ORCACT0",140,0)
 S DLG=$S(PKG="RA":"RA OERR EXAM",PKG="GMRC":"GMRCOR CONSULT",1:"")
"RTN","ORCACT0",141,0)
 I $L(DLG) S DLG=+$O(^ORD(101.41,"AB",DLG,0)),X=$$MSG^ORXD(DLG)
"RTN","ORCACT0",142,0)
 Q X
"RTN","ORCACT01")
0^49^B73162250
"RTN","ORCACT01",1,0)
ORCACT01 ;SLC/MKB-Validate order actions cont ;07/13/12  07:59
"RTN","ORCACT01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,141,163,187,190,213,243,306**;Dec 17, 1997;Build 43
"RTN","ORCACT01",3,0)
 ;
"RTN","ORCACT01",4,0)
 ;
"RTN","ORCACT01",5,0)
ES ; -- sign [on chart]
"RTN","ORCACT01",6,0)
 I ORDSTS=11,VER<3,PKG'="OR" S ERROR="This order cannot be released and must be discontinued!" Q
"RTN","ORCACT01",7,0)
 N X I ACTSTS=11!(ACTSTS=10) D  Q:$L($G(ERROR))
"RTN","ORCACT01",8,0)
 . I $P(ORA0,U,2)="DC",$$DONE^ORCACT0 D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN S OREBUILD=1 Q
"RTN","ORCACT01",9,0)
 . S X=$$DISABLED^ORCACT0 I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",10,0)
 I ACTION="OC",$G(DG)="NV RX" S:MEDPARM<2 ERROR="You are not authorized to release non-VA med orders!" Q
"RTN","ORCACT01",11,0)
 S X=$P(ORA0,U,4) I X=3 S:ACTSTS'=11&(ACTSTS'=10) ERROR="This order does not require a signature!" Q
"RTN","ORCACT01",12,0)
 I X'=2 S ERROR="This order has been signed!" Q
"RTN","ORCACT01",13,0)
 I DG="O RX",ACTION'="ES",ACTION'="DS",$G(NATR)'="I" S ERROR="Outpatient meds may not be released without a clinician's signature!" Q
"RTN","ORCACT01",14,0)
 I (ACTION="ES"!(ACTION="DS")),$D(^XUSEC("ORELSE",DUZ)),$P(OR0,U,16)'<2 S ERROR="You are not privileged to sign this order!" Q
"RTN","ORCACT01",15,0)
 I ACTION="OC" S:MEDPARM<2 ERROR="You are not authorized to release med orders!" Q
"RTN","ORCACT01",16,0)
 I ACTION="RS" D  Q:$D(ERROR)  Q:$G(NATR)'="I"
"RTN","ORCACT01",17,0)
 . Q:ACTSTS=11  Q:ACTSTS=10  ;unreleased - ok
"RTN","ORCACT01",18,0)
 . S ERROR="This order has already been released!"
"RTN","ORCACT01",19,0)
ES1 I PKG="PS" D  ;authorized to write meds?
"RTN","ORCACT01",20,0)
 . N TYPE,OI,PSOI,DEAFLG,PKI,IVERROR,ORDGNM
"RTN","ORCACT01",21,0)
 . S X=$G(^VA(200,DUZ,"PS"))
"RTN","ORCACT01",22,0)
 . I '$P(X,U) S ERROR="You are not authorized to sign med orders!" Q
"RTN","ORCACT01",23,0)
 . I $P(X,U,4),$$NOW^XLFDT>$P(X,U,4) S ERROR="You are no longer authorized to sign med orders!" Q
"RTN","ORCACT01",24,0)
 . ;Q:DG="IV RX"  Q:$P(ORA0,U,2)="DC"  ;don't need to ck DEA#
"RTN","ORCACT01",25,0)
 . Q:$P(ORA0,U,2)="DC"
"RTN","ORCACT01",26,0)
 . S ORDGNM=$$GET1^DIQ(100,+IFN_",",2)
"RTN","ORCACT01",27,0)
 . I ORDGNM["FLUID OE" D  Q
"RTN","ORCACT01",28,0)
 . .S FAIL=$$IVDEACHK(+IFN) I FAIL'=0 S ERROR=FAIL
"RTN","ORCACT01",29,0)
 . S OI=+$$VALUE^ORX8(+IFN,"ORDERABLE")
"RTN","ORCACT01",30,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",31,0)
 . S TYPE=$S($P(DG," ")="O":"O",1:"I"),DEAFLG=$P($$OIDEA^PSSOPKI(PSOI,TYPE),";",2)
"RTN","ORCACT01",32,0)
 . S DETFLAG=$$OIDETOX^PSSOPKI(PSOI,TYPE)
"RTN","ORCACT01",33,0)
 . S DETPRO=$$DETOX^XUSER(+$G(DUZ))
"RTN","ORCACT01",34,0)
 . I DETFLAG,DETPRO="" S ERROR=3 Q
"RTN","ORCACT01",35,0)
 . I DETFLAG,DETPRO>0 S Y=DETPRO X ^DD("DD") S ERROR="5^"_Y Q
"RTN","ORCACT01",36,0)
 . I (DEAFLG>0||$$ISCLOZ^ORALWORD(OI)) D  I $G(ERROR)]"" Q
"RTN","ORCACT01",37,0)
 .. N RET
"RTN","ORCACT01",38,0)
 .. I $$ISCLOZ^ORALWORD(OI) D  Q
"RTN","ORCACT01",39,0)
 ... S RET=$$DEA^XUSER(,DUZ) I RET="" S ERROR=1
"RTN","ORCACT01",40,0)
 .. S RET=$$SDEA^XUSER(,DUZ,DEAFLG)
"RTN","ORCACT01",41,0)
 .. I RET=1 S ERROR=1 Q
"RTN","ORCACT01",42,0)
 .. I RET=2 S ERROR="2^"_$$UP^XLFSTR(DEAFLG) Q
"RTN","ORCACT01",43,0)
 .. I RET?1"4".E S ERROR=RET Q
"RTN","ORCACT01",44,0)
 .. I RET?1N.E S ERROR=RET
"RTN","ORCACT01",45,0)
 . D PKISITE^ORWOR(.PKI)
"RTN","ORCACT01",46,0)
 . I $G(PKI),ACTION="RS",DEAFLG=1 S ERROR="This order cannot be released without a Digital Signature" Q
"RTN","ORCACT01",47,0)
 Q
"RTN","ORCACT01",48,0)
 ;
"RTN","ORCACT01",49,0)
IVDEACHK(IFN) ; -- Returns value of prompt by ID
"RTN","ORCACT01",50,0)
 I '$G(IFN)!('$D(^OR(100,+$G(IFN),0))) Q ""
"RTN","ORCACT01",51,0)
 N I,DIAL,DIALTYP,FAIL,PATCLASS,RESULT,Y
"RTN","ORCACT01",52,0)
 S PATCLASS=$P(^OR(100,+IFN,0),U,12)
"RTN","ORCACT01",53,0)
 S RESULT=0
"RTN","ORCACT01",54,0)
 ;if ORNP is not set then assume this is called from VistA not CPRS
"RTN","ORCACT01",55,0)
 I $G(ORNP)="" S ORNP=DUZ
"RTN","ORCACT01",56,0)
 S I=0,Y="" S:'$G(INST) INST=1
"RTN","ORCACT01",57,0)
 F  S I=$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I'>0!(RESULT=1)  D
"RTN","ORCACT01",58,0)
 .S Y=$G(^OR(100,+IFN,4.5,I,1)) Q:Y'>0
"RTN","ORCACT01",59,0)
 .;S PSOI=+$P($G(^ORD(101.43,Y,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",60,0)
 .I PATCLASS="I" D  Q
"RTN","ORCACT01",61,0)
 ..D FAILDEA^ORWDPS1(.FAIL,Y,ORNP,"I") I FAIL'=0 S RESULT=FAIL
"RTN","ORCACT01",62,0)
 .S DIAL=+$P(^OR(100,+IFN,4.5,I,0),U,2)
"RTN","ORCACT01",63,0)
 .S DIALTYP=$S($P(^ORD(101.41,DIAL,0),U)["ADDITIVE":"A",1:"S")
"RTN","ORCACT01",64,0)
 .D FDEA1^ORWDPS1(.FAIL,Y,DIALTYP,ORNP)
"RTN","ORCACT01",65,0)
 .I FAIL'=0 S RESULT=FAIL
"RTN","ORCACT01",66,0)
 .;I $$OIDEA^PSSUTLA1(PSOI,"I")>0 S RESULT=1 Q
"RTN","ORCACT01",67,0)
 Q RESULT
"RTN","ORCACT01",68,0)
 ;
"RTN","ORCACT01",69,0)
XFR ; -- transfer to inpt/outpt [IFN=order to be transferred]
"RTN","ORCACT01",70,0)
 N OI,PS I DG="TPN" S ERROR="TPN orders may not be copied!" Q
"RTN","ORCACT01",71,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be transferred; please enter a new order!" Q
"RTN","ORCACT01",72,0)
 S OI=+$O(^OR(100,+IFN,.1,"B",0)),ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",73,0)
 I DG="UD RX",'$P(ORPS,U,2) S ERROR="This drug may not be ordered for an outpatient!" Q
"RTN","ORCACT01",74,0)
 I DG="O RX" D  Q:$L($G(ERROR))
"RTN","ORCACT01",75,0)
 . I '$P(ORPS,U) S ERROR="This drug may not be ordered for an inpatient!" Q
"RTN","ORCACT01",76,0)
 . D:$O(^OR(100,+IFN,4.5,"ID","MISC",0)) DOSES^ORCACT02(+IFN)
"RTN","ORCACT01",77,0)
 Q
"RTN","ORCACT01",78,0)
 ;
"RTN","ORCACT01",79,0)
RW ; -- rewrite/copy
"RTN","ORCACT01",80,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be copied!" Q
"RTN","ORCACT01",81,0)
 I DG="NV RX" S ERROR="Non-VA Med orders cannot be copied!" Q
"RTN","ORCACT01",82,0)
 I DG="TPN" S ERROR="TPN orders may not be rewritten!" Q
"RTN","ORCACT01",83,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be rewritten!" Q
"RTN","ORCACT01",84,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be copied; please enter a new order!" Q
"RTN","ORCACT01",85,0)
 I PKG="PS",'$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",86,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",87,0)
 Q
"RTN","ORCACT01",88,0)
 ;
"RTN","ORCACT01",89,0)
RN ; -- renew
"RTN","ORCACT01",90,0)
 I PKG'="PS",PKG'="OR" S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",91,0)
 I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT01",92,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be renewed!" Q
"RTN","ORCACT01",93,0)
 I $P(OR3,U,6) S ERROR="This order has already been "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"changed!",1:"renewed!") Q
"RTN","ORCACT01",94,0)
 I PKG="OR" D  Q  ;Generic orders
"RTN","ORCACT01",95,0)
 . I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",96,0)
 . I DG="ADT" S ERROR="M.A.S. orders may not be renewed!" Q
"RTN","ORCACT01",97,0)
 . I "^1^2^6^7^"[(U_ORDSTS_U) Q  ;ok
"RTN","ORCACT01",98,0)
 . S ERROR="This order may not be renewed!"
"RTN","ORCACT01",99,0)
 I (PKG="PS"),$$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",100,0)
 I '$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",101,0)
RN1 N PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT01",102,0)
 I PSIFN<1,'$O(^OR(100,+IFN,2,0)) S ERROR="Missing or invalid order number!" Q
"RTN","ORCACT01",103,0)
 I DG="O RX" D  Q  ;Outpt Meds
"RTN","ORCACT01",104,0)
 . N ORZ,ORD S ORZ=$L($T(RENEW^PSORENW),",")
"RTN","ORCACT01",105,0)
 . I ORZ>1 S ORD=+$$VALUE^ORX8(+IFN,"DRUG"),X=$$RENEW^PSORENW(PSIFN,ORD)
"RTN","ORCACT01",106,0)
 . S:ORZ'>1 X=$$RENEW^PSORENW(PSIFN) I X<1 S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",107,0)
 . S X=+$P(X,U,2) D:X RESET^ORCACT03(+IFN,X)
"RTN","ORCACT01",108,0)
 . I $O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old format
"RTN","ORCACT01",109,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be renewed!" Q
"RTN","ORCACT01",110,0)
 I ORDSTS=7,'$$IV^ORCACT03,$P(OR0,U,9)<$$FMADD^XLFDT(DT,-4)  S ERROR="Inpatient med orders may not be renewed more than 4 days after expiration!" Q
"RTN","ORCACT01",111,0)
 I ORDSTS'=6,ORDSTS'=7 S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",112,0)
RN2 I $O(^OR(100,+IFN,2,0))!$P(OR3,U,9) D  Q:$D(ERROR)!'PSIFN
"RTN","ORCACT01",113,0)
 . I $P(OR3,U,9),$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW" S ERROR="One-time NOW orders may not be renewed!" Q
"RTN","ORCACT01",114,0)
 . N DAD,ORD3,I,Y S DAD=$S($P(OR3,U,9):+$P(OR3,U,9),1:+IFN),Y=0
"RTN","ORCACT01",115,0)
 . S ORD3=$G(^OR(100,DAD,3)) I $P(ORD3,U,6) S ERROR="This complex order has already been renewed!" Q
"RTN","ORCACT01",116,0)
 . I $P(ORD3,U,3)'=6 S ERROR="This complex order is not active and may not be renewed!" Q
"RTN","ORCACT01",117,0)
 . I '$$AND^ORX8(DAD) S ERROR="Complex orders with sequential doses may not be renewed!" Q
"RTN","ORCACT01",118,0)
 . S I=0 F  S I=+$O(^OR(100,DAD,2,I)) Q:I<1  D  Q:Y
"RTN","ORCACT01",119,0)
 .. I I=+$O(^OR(100,DAD,2,0)),$$VALUE^ORX8(I,"SCHEDULE",1,"E")="NOW",$$VALUE^ORX8(DAD,"NOW") Q  ;ignore NOW orders
"RTN","ORCACT01",120,0)
 .. I $P($G(^OR(100,I,3)),U,3)'=6 S Y=1,ERROR="Complex orders with terminated doses may not be renewed!" Q
"RTN","ORCACT01",121,0)
 .. I PSIFN<1 S X=$$ACTIVE^PSJORREN(+ORVP,$G(^OR(100,I,4))) I +X'=1 S ERROR="This order may not be renewed: "_$S(+X>1:"Inactive orderable item",1:$P(X,U,2)) Q
"RTN","ORCACT01",122,0)
 ;I DG="TPN" S ERROR="TPN orders may not be renewed!" Q
"RTN","ORCACT01",123,0)
 S X=$$ACTIVE^PSJORREN(+ORVP,PSIFN) Q:+X=1  ;Ok
"RTN","ORCACT01",124,0)
 I +X>1,$P(X,U,2) D RESET^ORCACT03(+IFN,+$P(X,U,2)) Q  ;replace OI
"RTN","ORCACT01",125,0)
 S ERROR="This order may not be renewed: "_$P(X,U,2)
"RTN","ORCACT01",126,0)
 Q
"RTN","ORCACT01",127,0)
 ;
"RTN","ORCACT01",128,0)
XX ; -- edit/change--
"RTN","ORCACT01",129,0)
 I PKG="RA",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Radiology cannot be changed!" Q
"RTN","ORCACT01",130,0)
 I PKG="LR",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Lab cannot be changed!" Q
"RTN","ORCACT01",131,0)
 I PKG="FH",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Dietetics cannot be changed!" Q
"RTN","ORCACT01",132,0)
 I PKG="GMRC",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Consults cannot be changed!" Q
"RTN","ORCACT01",133,0)
 I DG="TPN" S ERROR="TPN orders may not be changed!" Q
"RTN","ORCACT01",134,0)
 I ORDSTS=3 S ERROR="Orders on hold may not be changed!" Q
"RTN","ORCACT01",135,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be changed!" Q
"RTN","ORCACT01",136,0)
 I $O(^OR(100,+IFN,2,0)) S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",137,0)
 I $P(OR3,U,9) D  Q:$D(ERROR)
"RTN","ORCACT01",138,0)
 . Q:$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW"  ;NOW ok
"RTN","ORCACT01",139,0)
 . Q:'$O(^OR(100,+$P(OR3,U,9),4.5,"ID","CONJ",0))  ;no conj=1dose/ok
"RTN","ORCACT01",140,0)
 . S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",141,0)
 I $P(OR3,U,6) S ERROR="This order may not be changed - a "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"change",1:"renewal")_" order already exists!" Q
"RTN","ORCACT01",142,0)
 I $P(OR3,U,11)=2 D  Q:$D(ERROR)
"RTN","ORCACT01",143,0)
 . I (ORDSTS=10!(ORDSTS=11)),DG'="O RX" S ERROR="Unreleased renewals may not be changed!" Q
"RTN","ORCACT01",144,0)
 . I PKG="PS",ORDSTS=5 S ERROR="Pending renewals may not be changed!" Q
"RTN","ORCACT01",145,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be changed; please enter a new order!" Q
"RTN","ORCACT01",146,0)
 I PKG="PS",'$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",147,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",148,0)
 Q
"RTN","ORCACT01",149,0)
 ;
"RTN","ORCHTAB2")
0^1^B22057058
"RTN","ORCHTAB2",1,0)
ORCHTAB2 ;SLC/MKB/REV-Add item to tab listing cont ;03/18/11  12:02
"RTN","ORCHTAB2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**27,58,181,306**;Dec 17, 1997;Build 43
"RTN","ORCHTAB2",3,0)
GMRA ; -- allergies
"RTN","ORCHTAB2",4,0)
 N ORY,ORI,ALLG,SEV,ID,SIGNS,J,ORIFN,DATA,X,ORTX
"RTN","ORCHTAB2",5,0)
 D SUBHDR^ORCHTAB("Allergies/Adverse Reactions")
"RTN","ORCHTAB2",6,0)
 D EN1^GMRAOR1(+ORVP,"ORY")
"RTN","ORCHTAB2",7,0)
 I '$G(ORY) S X=$S($G(ORY)="":"No assessment available",1:"No known allergies") D LINE^ORCHTAB Q
"RTN","ORCHTAB2",8,0)
 S ORI=0 F  S ORI=$O(ORY(ORI)) Q:ORI'>0  D
"RTN","ORCHTAB2",9,0)
 . S ALLG=$P(ORY(ORI),U),SEV=$P(ORY(ORI),U,2),ID=$P(ORY(ORI),U,3)
"RTN","ORCHTAB2",10,0)
 . S X=$S($L(SEV):$$LOWER^VALM1(SEV)_" reaction to ",1:"")_ALLG
"RTN","ORCHTAB2",11,0)
 . S SIGNS="",J=0 F  S J=$O(ORY(ORI,"S",J)) Q:J'>0  S SIGNS=SIGNS_$S($L(SIGNS):", ",1:"")_$$LOW^XLFSTR(ORY(ORI,"S",J))
"RTN","ORCHTAB2",12,0)
 . S:$L(SIGNS) X=X_" ("_SIGNS_")"
"RTN","ORCHTAB2",13,0)
 . S:$L(X)'>ORMAX ORTX=1,ORTX(1)=X I $L(X)>ORMAX D TXT^ORCHTAB
"RTN","ORCHTAB2",14,0)
 . S DATA(1)=$$DATE^ORCHTAB($P(^GMR(120.8,ID,0),U,4)),DATA=1,ORIFN="GMRA"
"RTN","ORCHTAB2",15,0)
 . D ADD^ORCHTAB
"RTN","ORCHTAB2",16,0)
 Q
"RTN","ORCHTAB2",17,0)
 ;
"RTN","ORCHTAB2",18,0)
GMRV ; -- Vitals
"RTN","ORCHTAB2",19,0)
 N ORY,ORI,X,Y,DATA
"RTN","ORCHTAB2",20,0)
 D SUBHDR^ORCHTAB("Recent Vitals"),FASTVIT^ORQQVI(.ORY,+ORVP)
"RTN","ORCHTAB2",21,0)
 I '$O(ORY(0)) S X="No data available" D LINE^ORCHTAB Q
"RTN","ORCHTAB2",22,0)
 S ORI=0 F  S ORI=$O(ORY(ORI)) Q:ORI'>0  D
"RTN","ORCHTAB2",23,0)
 . S Y=$P(ORY(ORI),U,5)_" "_$P(ORY(ORI),U,6) S:$L(Y)'>1 Y=$P(ORY(ORI),U,3)
"RTN","ORCHTAB2",24,0)
 . S X=$P(ORY(ORI),U,2),X=$S(X="BP":"B/P:   ",X="HT":"Ht:    ",X="P":"Pulse: ",X="R":"Resp:  ",X="T":"Temp:  ",X="WT":"Wt:    ",X="PN":"Pain:  ",1:$$LJ^XLFSTR(X_":",7))_Y
"RTN","ORCHTAB2",25,0)
 . S DATA=$$DATETIME^ORCHTAB($P(ORY(ORI),U,4))
"RTN","ORCHTAB2",26,0)
 . D LINE^ORCHTAB
"RTN","ORCHTAB2",27,0)
 Q
"RTN","ORCHTAB2",28,0)
 ;
"RTN","ORCHTAB2",29,0)
IMM ; -- Immunizations
"RTN","ORCHTAB2",30,0)
 N ORIMM,ORIDT,ORI,X,Y,DATA K ^TMP("PXI",$J)
"RTN","ORCHTAB2",31,0)
 D SUBHDR^ORCHTAB("Recent Immunizations"),IMMUN^PXRHS03(+ORVP)
"RTN","ORCHTAB2",32,0)
 S ORIMM=0 F  S ORIMM=$O(^TMP("PXI",$J,ORIMM)) Q:ORIMM=""  D
"RTN","ORCHTAB2",33,0)
 . S ORIDT=$O(^TMP("PXI",$J,ORIMM,0)),ORI=$O(^(ORIDT,0)),Y=$G(^(ORI,0))
"RTN","ORCHTAB2",34,0)
 . S X=ORIMM_$S($L($P(Y,U,6)):" ("_$P(Y,U,6)_")",1:"")
"RTN","ORCHTAB2",35,0)
 . S DATA=$S('ORI:"",1:$$DATETIME^ORCHTAB($P(Y,U,3)))
"RTN","ORCHTAB2",36,0)
 . D LINE^ORCHTAB
"RTN","ORCHTAB2",37,0)
 Q
"RTN","ORCHTAB2",38,0)
 ;
"RTN","ORCHTAB2",39,0)
SC ; -- Service Connected data
"RTN","ORCHTAB2",40,0)
 N DFN,VAEL,VASV,VAERR,X,DATA
"RTN","ORCHTAB2",41,0)
 S DFN=+ORVP D 7^VADPT,SUBHDR^ORCHTAB("Eligibility")
"RTN","ORCHTAB2",42,0)
 I VAEL(3) S X="Service Connected "_$P(VAEL(3),U,2)_"%"
"RTN","ORCHTAB2",43,0)
 E  S X="Not Service Connected"
"RTN","ORCHTAB2",44,0)
 D LINE^ORCHTAB
"RTN","ORCHTAB2",45,0)
 I VASV(2) S X="Agent Orange Exposure" D LINE^ORCHTAB
"RTN","ORCHTAB2",46,0)
 I VASV(3) S X="Radiation Exposure" D LINE^ORCHTAB
"RTN","ORCHTAB2",47,0)
 I $P($G(^DPT(+ORVP,.322)),U,10) S X="Environmental Contaminants exposure" D LINE^ORCHTAB
"RTN","ORCHTAB2",48,0)
 Q
"RTN","ORCHTAB2",49,0)
 ;
"RTN","ORCHTAB2",50,0)
CWAD ; -- postings
"RTN","ORCHTAB2",51,0)
 N ORI,ORX,MSG,CNT,X,ID,DATA,ORIFN,ORTX K ^TMP("TIUPPCV",$J)
"RTN","ORCHTAB2",52,0)
 D SUBHDR^ORCHTAB("Patient Postings")
"RTN","ORCHTAB2",53,0)
 D ENCOVER^TIUPP3(+ORVP)
"RTN","ORCHTAB2",54,0)
 S CNT=0,ORIFN="TIU"
"RTN","ORCHTAB2",55,0)
 S ORI=0 F  S ORI=$O(^TMP("TIUPPCV",$J,ORI)) Q:ORI'>0  S ORX=$G(^(ORI)) D
"RTN","ORCHTAB2",56,0)
 . S ID=$P(ORX,U) Q:'$L(ID)
"RTN","ORCHTAB2",57,0)
 . S X=$P(ORX,U,3),DATA(1)=$$DATETIME^ORCHTAB($P(ORX,U,5)),DATA=1
"RTN","ORCHTAB2",58,0)
 . S:$L(X)'>ORMAX ORTX=1,ORTX(1)=X I $L(X)>ORMAX D TXT^ORCHTAB
"RTN","ORCHTAB2",59,0)
 . D ADD^ORCHTAB S CNT=CNT+1
"RTN","ORCHTAB2",60,0)
 I 'CNT S LCNT=LCNT+1,^TMP("OR",$J,ORTAB,LCNT,0)="     "_$$PAD^ORCHTAB("<None>",40)_"|"
"RTN","ORCHTAB2",61,0)
 K ^TMP("TIUPPCV",$J)
"RTN","ORCHTAB2",62,0)
 Q
"RTN","ORCHTAB2",63,0)
 ;
"RTN","ORCHTAB2",64,0)
PROB ; -- problem
"RTN","ORCHTAB2",65,0)
 N ID,DATA,X,ORTX,FIRST,ORJ,ORIFN
"RTN","ORCHTAB2",66,0)
 S ID=$P(ORX,U),ORIFN=$P(ORX,U,2) ;problem ptr, status
"RTN","ORCHTAB2",67,0)
 S X=$P(ORX,U,3)
"RTN","ORCHTAB2",68,0)
 S:$L(X)'>ORMAX ORTX=1,ORTX(1)=X I $L(X)>ORMAX D TXT^ORCHTAB
"RTN","ORCHTAB2",69,0)
 S DATA(1)=$$PAD^ORCHTAB($$DATE^ORCHTAB($P(ORX,U,5)),10)_$$PAD^ORCHTAB($$DATE^ORCHTAB($P(ORX,U,6)),10)_$S($P(ORX,U,2)="I":"inactive",1:"active "_$P(ORX,U,9)),DATA=1
"RTN","ORCHTAB2",70,0)
 I COMM,$O(ORY(ORI,0)) S ORJ=0 F  S ORJ=$O(ORY(ORI,ORJ)) Q:ORJ'>0  S X=" "_ORY(ORI,ORJ) I $L(X)>1 S ORTX=ORTX+1,ORTX(ORTX)="" D TXT^ORCHTAB ;add comments
"RTN","ORCHTAB2",71,0)
 S FIRST=LCNT+1 D ADD^ORCHTAB
"RTN","ORCHTAB2",72,0)
 I $L($P(ORX,U,10)) S $E(^TMP("OR",$J,ORTAB,FIRST,0),5)=$P(ORX,U,10)  ; unverified flag    ($)
"RTN","ORCHTAB2",73,0)
 ; CSV change - check for active code, for active problem list only
"RTN","ORCHTAB2",74,0)
 ; Inactive code flag (#) takes precedence and replaces unverified flag ($)
"RTN","ORCHTAB2",75,0)
 I $P(ORX,U,2)="A",'$$CODESTS^GMPLX(ID,DT) S $E(^TMP("OR",$J,ORTAB,FIRST,0),5)="#"
"RTN","ORCHTAB2",76,0)
 Q
"RTN","ORCHTAB2",77,0)
 ;
"RTN","ORCHTAB2",78,0)
NOTE ; -- progress note
"RTN","ORCHTAB2",79,0)
 N ID,DATA,X,ORTX
"RTN","ORCHTAB2",80,0)
 S DATA(1)=$$PAD^ORCHTAB($$DATETIME^ORCHTAB($P(ORX,U,3)),16)_$$PAD^ORCHTAB($$LNAMEF^ORCHTAB(+$P(ORX,U,5)),12)_$E($P(ORX,U,7),1,5),DATA=1
"RTN","ORCHTAB2",81,0)
 S ID=$P(ORX,U),X=$P(ORX,U,2)
"RTN","ORCHTAB2",82,0)
 S:$L(X)'>ORMAX ORTX=1,ORTX(1)=X I $L(X)>ORMAX D TXT^ORCHTAB
"RTN","ORCHTAB2",83,0)
 I SUBJ,$L($P(ORX,U,12)) S X=" "_$P(ORX,U,12),ORTX=ORTX+1,ORTX(ORTX)="" D TXT^ORCHTAB ;add note subject
"RTN","ORCHTAB2",84,0)
 D ADD^ORCHTAB
"RTN","ORCHTAB2",85,0)
 Q
"RTN","ORCHTAB2",86,0)
 ;
"RTN","ORCHTAB2",87,0)
SUMM ; -- discharge summary
"RTN","ORCHTAB2",88,0)
 N ID,DATA,ORTX
"RTN","ORCHTAB2",89,0)
 S DATA(1)=$$DATE^ORCHTAB($P(ORX,U,3))_"     "_$$PAD^ORCHTAB($$LNAMEF^ORCHTAB(+$P(ORX,U,5)),15)_$E($P(ORX,U,7),1,5)_$P($P(ORX,U,8)," ",2)_"  "_$P($P(ORX,U,9)," ",2)
"RTN","ORCHTAB2",90,0)
 S ID=$P(ORX,U),ORTX=1,ORTX(1)=$P(ORX,U,2),DATA=1
"RTN","ORCHTAB2",91,0)
 D ADD^ORCHTAB
"RTN","ORCHTAB2",92,0)
 Q
"RTN","ORCHTAB2",93,0)
 ;
"RTN","ORCHTAB2",94,0)
INITIALS(USER) ; -- Return initials of USER
"RTN","ORCHTAB2",95,0)
 N X,Y S X=$G(^VA(200,+$G(USER),0)),Y=$P(X,U,2)
"RTN","ORCHTAB2",96,0)
 S:'$L(Y) Y=" x "
"RTN","ORCHTAB2",97,0)
 Q Y
"RTN","ORCMED")
0^53^B52490414
"RTN","ORCMED",1,0)
ORCMED ;SLC/MKB-Medication actions ;01/31/13  11:18
"RTN","ORCMED",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,7,38,48,94,141,178,190,195,243,306**;Dec 17, 1997;Build 43
"RTN","ORCMED",3,0)
XFER ; -- transfer to in/outpt meds
"RTN","ORCMED",4,0)
 N ORPTLK,ORTYPE,ORXFER,ORSRC,ORCAT,OREVENT,X,ORINPT,ORIDLG,ORODLG,ORIVDLG,ORNMSP,ORCNT,ORI,NMBR,ORIFN,OLDIFN,ORDIALOG,ORDG,ORCHECK,ORQUIT,ORDUZ,ORLOG,FIRST,ORDITM,ORD,ORERR
"RTN","ORCMED",5,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK D  G XFQ ; lock pt chart
"RTN","ORCMED",6,0)
 . W !!,$C(7),$P(ORPTLK,U,2) H 2
"RTN","ORCMED",7,0)
 . S:'$D(VALMBCK) VALMBCK=""
"RTN","ORCMED",8,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("transfer") G:'ORNMBR XFQ
"RTN","ORCMED",9,0)
 D FULL^VALM1 S VALMBCK="R",ORTYPE="Q",ORXFER=1,ORDUZ=DUZ,ORSRC="X"
"RTN","ORCMED",10,0)
 S X=$P($P($G(^TMP("OR",$J,"CURRENT",0)),U,3),";",3) S:X="" X=$G(ORWARD)
"RTN","ORCMED",11,0)
 S ORCAT=$S(X:"O",1:"I") I ORCAT="I"!$G(ORWARD) D  Q:$G(OREVENT)="^"
"RTN","ORCMED",12,0)
 . W !!,$$CURRENT^OREVNT
"RTN","ORCMED",13,0)
 . S X=$$DELAY^ORCACT I X="^" S OREVENT="^" Q
"RTN","ORCMED",14,0)
 . S:X OREVENT=+$$PTEVENT^OREVNT(+ORVP,1)
"RTN","ORCMED",15,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL="^" XFQ
"RTN","ORCMED",16,0)
 S ORINPT=$$INPT^ORCD,ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" XFQ
"RTN","ORCMED",17,0)
 I 'ORINPT,ORCAT="I" D IMOLOC^ORIMO(.ORINPT,+ORL,+ORVP) S:ORINPT<0 ORINPT=0 ;allow inpt meds at this location?
"RTN","ORCMED",18,0)
 S ORIDLG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORCMED",19,0)
 S ORODLG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORCMED",20,0)
 S ORIVDLG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORCMED",21,0)
 D PROVIDER^ORCDPSIV G:$G(ORQUIT) XFQ ;X:$D(^ORD(101.41,ORDIALOG,3)) ^(3)
"RTN","ORCMED",22,0)
 S ORNMSP="PS" D DISPLAY^ORCHECK
"RTN","ORCMED",23,0)
 S ORCNT=$L(ORNMBR,",") S:$P(ORNMBR,",",ORCNT)'>0 ORCNT=ORCNT-1
"RTN","ORCMED",24,0)
XF1 F ORI=1:1:ORCNT S NMBR=$P(ORNMBR,",",ORI) D:NMBR  I $D(ORQUIT),ORI<ORCNT Q:'$$CONT  ;if not last one, ask
"RTN","ORCMED",25,0)
 . K ORIFN,ORDIALOG,ORDG,ORDOSE,ORCHECK,ORQUIT,ORERR
"RTN","ORCMED",26,0)
 . K ^TMP("PSJMR",$J),^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",27,0)
 . S OLDIFN=+$P($G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),U,4)
"RTN","ORCMED",28,0)
 . S ORDITM=$$ORDITEM^ORCACT(OLDIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",29,0)
 . I '$$VALID^ORCACT0(OLDIFN,"XFR",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",30,0)
 . S ORD=$P($G(^OR(100,OLDIFN,0)),U,5) Q:ORD'["101.41"  ;error msg?
"RTN","ORCMED",31,0)
 . S ORDIALOG=$S(+ORD=ORIVDLG:ORIVDLG,ORCAT="I":ORIDLG,1:ORODLG)
"RTN","ORCMED",32,0)
 . S ORDG=+$P($G(^ORD(101.41,ORDIALOG,0)),U,5)
"RTN","ORCMED",33,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(OLDIFN)
"RTN","ORCMED",34,0)
 . I ORDIALOG'=ORIVDLG D OUT:ORCAT="I",IN:ORCAT="O" ;convert data
"RTN","ORCMED",35,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)
"RTN","ORCMED",36,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX NOW"),1)
"RTN","ORCMED",37,0)
 . S ORLOG=+$E($$NOW^XLFDT,1,12),FIRST=1
"RTN","ORCMED",38,0)
XF2 . D DIALOG^ORCDLG Q:$G(ORQUIT)&FIRST  K ORQUIT
"RTN","ORCMED",39,0)
 . D ACCEPT^ORCHECK(),DISPLAY^ORCDLG S X=$$OK^ORCDLG I X="^" S ORQUIT=1 Q
"RTN","ORCMED",40,0)
 . I X="E" K ORCHECK S FIRST=0 G XF2
"RTN","ORCMED",41,0)
 . I X="C" W !?10,"... order cancelled.",! Q
"RTN","ORCMED",42,0)
 . I X="P" D
"RTN","ORCMED",43,0)
 . . D EN^ORCSAVE W !?10,$S(ORIFN:"... order placed.",1:"ERROR"),!
"RTN","ORCMED",44,0)
 . . S:$G(ORIFN) ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCMED",45,0)
 . . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^(ORDIALOG)=ORDIALOG M:$D(^TMP("ORWORD",$J)) ^TMP("ORECALL",$J,ORDIALOG)=^TMP("ORWORD",$J) ;save 1st values
"RTN","ORCMED",46,0)
XFQ D EXIT^ORCDPS1 ;X:$D(^ORD(101.41,ORDIALOG,4)) ^(4)
"RTN","ORCMED",47,0)
 K ^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",48,0)
 D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",49,0)
 Q
"RTN","ORCMED",50,0)
 ;
"RTN","ORCMED",51,0)
IN ; -- Kill extra values, Reset ID's/DD from Inpt dialog
"RTN","ORCMED",52,0)
 N ORD1,ORDLI,ORDFIN,ORDCNT,ORDORIG,ORDORIGF
"RTN","ORCMED",53,0)
 N P F P="START DATE/TIME","NOW" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",54,0)
 S ORD1=$P(ORDIALOG($$PTR("DOSE"),1),"&",5)
"RTN","ORCMED",55,0)
 S ORDORIG=ORDIALOG($$PTR("INSTRUCTIONS"),1)
"RTN","ORCMED",56,0)
 D DOSES("O")
"RTN","ORCMED",57,0)
 S ORDFIN="",ORDCNT=0,ORDORIGF=0
"RTN","ORCMED",58,0)
 ;look in the new instructions list for the original inpatient instructions and the dose
"RTN","ORCMED",59,0)
 S ORDLI=0 F  S ORDLI=$O(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI)) Q:'ORDLI  D
"RTN","ORCMED",60,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)[ORD1 S ORDFIN=$P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U),ORDCNT=ORDCNT+1
"RTN","ORCMED",61,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)=ORDORIG S ORDORIGF=1
"RTN","ORCMED",62,0)
 ;If original instructions was not in the new instructions list then replace the instructions
"RTN","ORCMED",63,0)
 I ORDORIGF=0 D
"RTN","ORCMED",64,0)
 .I ORDCNT=1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=ORDFIN ;only one item in the list found containing the dose string - set the instructions to the item found
"RTN","ORCMED",65,0)
 .I ORDCNT=0 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;no items in the list found containing the dose string - blank the instructions
"RTN","ORCMED",66,0)
 .I ORDCNT>1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;more than one item in the list found containing the dose string - blank the instructions
"RTN","ORCMED",67,0)
 Q
"RTN","ORCMED",68,0)
 ;
"RTN","ORCMED",69,0)
OUT ; -- Kill extra values, Reset ID's/DD from Outpt dialog
"RTN","ORCMED",70,0)
 N P I '$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) D  ;old sig in comments
"RTN","ORCMED",71,0)
 . N WP S WP=$$PTR("WORD PROCESSING 1") K ^TMP("ORSIG",$J)
"RTN","ORCMED",72,0)
 . M ^TMP("ORSIG",$J)=^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",73,0)
 . K ORDIALOG(WP,1),^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",74,0)
 F P="PATIENT INSTRUCTIONS","START DATE/TIME","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",75,0)
 I $G(ORDIALOG($$PTR("URGENCY"),1))=99 K ORDIALOG($$PTR("URGENCY"),1)
"RTN","ORCMED",76,0)
 D DOSES("I")
"RTN","ORCMED",77,0)
 Q
"RTN","ORCMED",78,0)
 ;
"RTN","ORCMED",79,0)
DOSES(TYPE)     ; -- Convert doses to new TYPE, reset ID strings
"RTN","ORCMED",80,0)
 N PSOI,ORMED,PROMPT,DOSE,DRUG,I,X,DD,DRUG0,STR
"RTN","ORCMED",81,0)
 F I="DISPENSE DRUG","STRENGTH","DRUG NAME","SIG" K ORDIALOG($$PTR(I),1)
"RTN","ORCMED",82,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1)),0)),U,2),ORMED=$P($G(^(0)),U)
"RTN","ORCMED",83,0)
 D DOSE^PSSORUTL(.ORDOSE,PSOI,TYPE,+ORVP) I $G(ORDOSE(1))=-1 K ORDOSE
"RTN","ORCMED",84,0)
 S PROMPT=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORCMED",85,0)
 S DRUG=$$PTR("DISPENSE DRUG") D D1^ORCDPS2
"RTN","ORCMED",86,0)
 S I=0 F  S I=$O(ORDIALOG(PROMPT,I)) Q:I'>0  D
"RTN","ORCMED",87,0)
 . K ORDIALOG(DOSE,I) S X=$G(ORDIALOG(PROMPT,I)) Q:'$L(X)
"RTN","ORCMED",88,0)
 . S X=$$UP^XLFSTR(X),DD=+$G(ORDIALOG(PROMPT,"LIST","D",X)) Q:'DD
"RTN","ORCMED",89,0)
 . S ORDIALOG(DOSE,I)=$TR($G(ORDOSE("DD",DD,X)),"^","&")
"RTN","ORCMED",90,0)
 . S ORDIALOG(DRUG,I)=DD,DRUG0=$G(ORDOSE("DD",DD))
"RTN","ORCMED",91,0)
 . S STR=$P(DRUG0,U,5)_$P(DRUG0,U,6)
"RTN","ORCMED",92,0)
 . I STR'>0 S:'$G(ORDOSE(1)) ORDIALOG($$PTR("DRUG NAME"),1)=$P(DRUG0,U) Q
"RTN","ORCMED",93,0)
 . I ORMED'[STR,TYPE="O"!'$G(ORDOSE(1)) S ORDIALOG($$PTR("STRENGTH"),1)=STR
"RTN","ORCMED",94,0)
 Q
"RTN","ORCMED",95,0)
 ;
"RTN","ORCMED",96,0)
CONT() ; -- Want to continue processing orders?
"RTN","ORCMED",97,0)
 N X,Y,DIR
"RTN","ORCMED",98,0)
 S DIR(0)="YA",DIR("A")="Do you want to continue transferring orders? ",DIR("B")="YES"
"RTN","ORCMED",99,0)
 S DIR("?")="Enter YES to continue transferring the remaining orders selected, or NO to quit this option."
"RTN","ORCMED",100,0)
 D ^DIR
"RTN","ORCMED",101,0)
 Q +Y
"RTN","ORCMED",102,0)
 ;
"RTN","ORCMED",103,0)
SHOWSIG ; -- Show old sig for transfer in ^TMP("ORSIG",$J)
"RTN","ORCMED",104,0)
 N ORTX,I,X,ORMAX S ORMAX=72
"RTN","ORCMED",105,0)
 S I=0 F  S I=$O(^TMP("ORSIG",$J,I)) Q:I'>0  S X=$G(^(I,0)) D:$L(X) TXT^ORCHTAB
"RTN","ORCMED",106,0)
 S I=0 F  S I=$O(ORTX(I)) Q:I'>0  W !,$S(I=1:"(Sig: ",1:"      ")_ORTX(I)
"RTN","ORCMED",107,0)
 W ")"
"RTN","ORCMED",108,0)
 Q
"RTN","ORCMED",109,0)
 ;
"RTN","ORCMED",110,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORCMED",111,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORCMED",112,0)
 ;
"RTN","ORCMED",113,0)
REFILLS ; -- Request a refill for med orders
"RTN","ORCMED",114,0)
 ;    ORNMBR = #,#,...,# of selected orders
"RTN","ORCMED",115,0)
 ;
"RTN","ORCMED",116,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORERR,ORQUIT,OROUT
"RTN","ORCMED",117,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") G:'ORNMBR RFQ
"RTN","ORCMED",118,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",119,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" RFQ
"RTN","ORCMED",120,0)
 S:'$G(ORL) ORL=$$LOCATION^ORCMENU1 G:ORL="^" RFQ
"RTN","ORCMED",121,0)
 S OROUT=$$ROUTING G:OROUT="^" RFQ
"RTN","ORCMED",122,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCMED",123,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR)),ORIFN=+$P(IDX,U,4)
"RTN","ORCMED",124,0)
 . Q:'ORIFN  I '$D(^OR(100,ORIFN,0)) W !,"Invalid order number!" H 2 Q
"RTN","ORCMED",125,0)
 . S ORDITM=$$ORDITEM^ORCACT(ORIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",126,0)
 . I '$$VALID^ORCACT0(ORIFN,"RF",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",127,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !,$P(ORLK,U,2) H 2 Q
"RTN","ORCMED",128,0)
 . D REF^ORMBLDPS(ORIFN,OROUT),UNLK1^ORX2(+ORIFN)
"RTN","ORCMED",129,0)
 . W !?10,"... refill requested.",$$RETURN
"RTN","ORCMED",130,0)
RFQ Q
"RTN","ORCMED",131,0)
 ;
"RTN","ORCMED",132,0)
RETURN() ; -- press return to cont
"RTN","ORCMED",133,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCMED",134,0)
 Q ""
"RTN","ORCMED",135,0)
 ;
"RTN","ORCMED",136,0)
ROUTING() ; -- Routing for refill
"RTN","ORCMED",137,0)
 N X,Y,DIR S DIR(0)="SAM^W:WINDOW;M:MAIL;C:ADMINISTERED IN CLINIC;"
"RTN","ORCMED",138,0)
 S DIR("A")="Routing: ",DIR("B")=$S($D(^PSX(550,"C")):"MAIL",1:"WINDOW")
"RTN","ORCMED",139,0)
 S DIR("?")="Select how the patient is to receive this refill, by mail or at the window or in the clinic"
"RTN","ORCMED",140,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCMED",141,0)
 Q Y
"RTN","ORCMED",142,0)
 ;
"RTN","ORCMED",143,0)
NW ; -- Order New Medication from Meds tab
"RTN","ORCMED",144,0)
 ;    Requires ORDIALOG      = name of pkg dialog
"RTN","ORCMED",145,0)
 ;             OREVENT       = event, if delaying orders
"RTN","ORCMED",146,0)
 ;             OREVENT("TS") = treating spec, if admission or transfer
"RTN","ORCMED",147,0)
 N ORPTLK G:'$L($G(ORDIALOG)) NWQ
"RTN","ORCMED",148,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK W !!,$C(7),$P(ORPTLK,U,2) H 2 Q
"RTN","ORCMED",149,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",150,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" NWQ
"RTN","ORCMED",151,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL["^" NWQ
"RTN","ORCMED",152,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",$E(ORDIALOG,1,63),0)) G:'ORDIALOG NWQ
"RTN","ORCMED",153,0)
 D ADD^ORCDLG,REBLD^ORCMENU:$D(^TMP("ORNEW",$J))
"RTN","ORCMED",154,0)
 K ORDIALOG,^TMP("ORWORD",$J),^TMP("ORECALL",$J) S VALMBCK="R"
"RTN","ORCMED",155,0)
NWQ D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",156,0)
 Q
"RTN","ORCSAVE")
0^47^B93570621
"RTN","ORCSAVE",1,0)
ORCSAVE ;SLC/MKB/JDL-Save ;07/08/10  11:46
"RTN","ORCSAVE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,73,92,94,116,141,163,187,190,195,243,303,293,280,306**;Dec 17, 1997;Build 43
"RTN","ORCSAVE",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSAVE",4,0)
 ;
"RTN","ORCSAVE",5,0)
NEW(ORDIALOG,ORDG,ORPKG,ORCAT,OREVENT,ORDUZ,ORLOG) ; -- New order
"RTN","ORCSAVE",6,0)
 ; Returns ORIFN = [new] order number, if created/saved
"RTN","ORCSAVE",7,0)
 D EN
"RTN","ORCSAVE",8,0)
 Q
"RTN","ORCSAVE",9,0)
 ;
"RTN","ORCSAVE",10,0)
XX ; -- save new/unreleased edited order into Orders file
"RTN","ORCSAVE",11,0)
 ;    Requires: ORDIALOG() = array of dialog values
"RTN","ORCSAVE",12,0)
 ;              ORIFN      = IFN of original order that was edited
"RTN","ORCSAVE",13,0)
 ;
"RTN","ORCSAVE",14,0)
 N OLDIFN S ORIFN=+ORIFN,OLDIFN=0
"RTN","ORCSAVE",15,0)
 I $S($P(^OR(100,ORIFN,3),U,3)=11:0,$P(^(3),U,3)'=10:1,$P(^(8,1,0),U,4)=2:0,1:1) S OLDIFN=ORIFN K ORIFN ; create new order if released or delayed&signed
"RTN","ORCSAVE",16,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",17,0)
 I $G(OLDIFN) D  ;save links between orders
"RTN","ORCSAVE",18,0)
 . S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=1
"RTN","ORCSAVE",19,0)
 . S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",20,0)
 I $D(^OR(100,+OLDIFN,0)) D
"RTN","ORCSAVE",21,0)
 . Q:'$G(OREVTDF)
"RTN","ORCSAVE",22,0)
 . N OLDEVT,OLDSTS,LSTACT,PATID,NOW,WHEN
"RTN","ORCSAVE",23,0)
 . S (OLDEVT,OLDSTS,LSTACT)=0
"RTN","ORCSAVE",24,0)
 . S NOW=$$NOW^XLFDT
"RTN","ORCSAVE",25,0)
 . S OLDEVT=$P(^OR(100,+OLDIFN,0),U,17),OLDSTS=$P(^OR(100,+OLDIFN,3),U,3)
"RTN","ORCSAVE",26,0)
 . ; Active status = 6 from #100.01
"RTN","ORCSAVE",27,0)
 . I (OLDEVT>0),OLDSTS=6 D
"RTN","ORCSAVE",28,0)
 . . S $P(^OR(100,+ORIFN,0),U,17)=OLDEVT
"RTN","ORCSAVE",29,0)
 . . S $P(^OR(100,+ORIFN,3),U,3)=11
"RTN","ORCSAVE",30,0)
 . . S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORCSAVE",31,0)
 . . I $D(^OR(100,+ORIFN,8,LSTACT,0)) D
"RTN","ORCSAVE",32,0)
 . . . S $P(^OR(100,+ORIFN,8,LSTACT,0),U,15)=11
"RTN","ORCSAVE",33,0)
 . . . S PATID=$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORCSAVE",34,0)
 . . . S WHEN=$P(^OR(100,+ORIFN,8,LSTACT,0),U)
"RTN","ORCSAVE",35,0)
 . . . S ^OR(100,"AC",PATID,9999999-WHEN,+ORIFN,LSTACT)=""
"RTN","ORCSAVE",36,0)
 Q
"RTN","ORCSAVE",37,0)
 ;
"RTN","ORCSAVE",38,0)
RN ; -- save new/unreleased renewal order into Orders file
"RTN","ORCSAVE",39,0)
 ;    Requires: ORDIALOG() = array of new dialog values
"RTN","ORCSAVE",40,0)
 ;              ORIFN      = IFN of original order that was renewed
"RTN","ORCSAVE",41,0)
 ;
"RTN","ORCSAVE",42,0)
 N OLDIFN S OLDIFN=+ORIFN K ORIFN
"RTN","ORCSAVE",43,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",44,0)
 S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=2
"RTN","ORCSAVE",45,0)
 S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",46,0)
 Q
"RTN","ORCSAVE",47,0)
 ;
"RTN","ORCSAVE",48,0)
EN ; -- save new/unreleased order in ORDIALOG() into Orders file
"RTN","ORCSAVE",49,0)
 ;    Requires: ORVP, ORNP [and ORL, ORTS, ORAPPT if available]
"RTN","ORCSAVE",50,0)
 ;    If defined: ORCAT,ORPKG,ORDG,ORLOG,ORDUZ,OREVENT,ORDCNTRL,ORSRC
"RTN","ORCSAVE",51,0)
 ;     (else use values from ORDIALOG and current state)
"RTN","ORCSAVE",52,0)
 ;
"RTN","ORCSAVE",53,0)
 N PKG,NOW,NODE,CNT,CDL,I,X,STS,SIGNREQD,LOC,TRSPEC,NATR,CATG,DG,LOG,USR,TYPE,ORK
"RTN","ORCSAVE",54,0)
 Q:'$G(ORVP)  Q:'$G(ORDIALOG)  Q:'$D(^ORD(101.41,+ORDIALOG,0))
"RTN","ORCSAVE",55,0)
 S NOW=$$NOW^XLFDT,SIGNREQD=+$P(^ORD(101.41,+ORDIALOG,0),U,6)
"RTN","ORCSAVE",56,0)
 S CATG=$S($L($G(ORCAT)):ORCAT,1:$S($$INPT^ORCD:"I",1:"O"))
"RTN","ORCSAVE",57,0)
 S PKG=$S($G(ORPKG):ORPKG,1:$P(^ORD(101.41,+ORDIALOG,0),U,7))
"RTN","ORCSAVE",58,0)
 I $G(ORIFN),$D(^OR(100,ORIFN,0)) S STS=$P(^(3),U,3) G EN2 ; unrel order
"RTN","ORCSAVE",59,0)
 S DG=$S($G(ORDG):+ORDG,1:$P(^ORD(101.41,+ORDIALOG,0),U,5))
"RTN","ORCSAVE",60,0)
 I $G(OREVENT),$$GET1^DIQ(9.4,+PKG_",",1)'="PSO",'$G(DGPMT) S LOC="",TRSPEC="" ;195
"RTN","ORCSAVE",61,0)
 E  S LOC=$G(ORL),TRSPEC=$G(ORTS)
"RTN","ORCSAVE",62,0)
 S TYPE=$S("^B^C^X^P^0^"[(U_$G(ORSRC)_U):ORSRC,$G(ORDCNTRL)="SN":"P",1:0)
"RTN","ORCSAVE",63,0)
 S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ)
"RTN","ORCSAVE",64,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",65,0)
 S STS=$S($G(OREVENT):10,1:11),ORIFN=$$NEXTIFN Q:'ORIFN
"RTN","ORCSAVE",66,0)
EN1 S ^OR(100,ORIFN,0)=ORIFN_U_ORVP_U_U_$G(ORNP)_U_+ORDIALOG_";ORD(101.41,^"_USR_U_LOG_U_U_U_LOC_U_DG_U_CATG_U_TRSPEC_U_PKG_U_U_SIGNREQD_U_$G(OREVENT)_U_$G(ORAPPT)
"RTN","ORCSAVE",67,0)
 S ^OR(100,ORIFN,3)=LOG_"^90^"_STS_U_$S($G(ORIT):ORIT_";ORD(101.41,",1:"")_U_$G(ORDIALOG("PREV"))_"^^1^^^^"_TYPE
"RTN","ORCSAVE",68,0)
 S ^OR(100,ORIFN,8,0)="^100.008DA^1^1",^OR(100,ORIFN,8,1,0)=LOG_"^NW^"_$G(ORNP)_U_$S(SIGNREQD:2,1:3)_"^^^^^^^^"_NATR_U_USR_"^1^"_STS,^OR(100,ORIFN,8,"C","NW",1)=""
"RTN","ORCSAVE",69,0)
 S ^OR(100,"AF",LOG,ORIFN,1)=""
"RTN","ORCSAVE",70,0)
 S ^OR(100,"ACT",ORVP,9999999-LOG,+DG,ORIFN,1)=""
"RTN","ORCSAVE",71,0)
 S:STS'=10 ^OR(100,"AC",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",72,0)
 S:SIGNREQD ^OR(100,"AS",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",73,0)
 S:$G(OREVENT) ^OR(100,"AEVNT",ORVP,OREVENT,ORIFN)=""
"RTN","ORCSAVE",74,0)
 ;check if OR GTX STUDY REASON is in ORDIALOG and strip out control characters
"RTN","ORCSAVE",75,0)
 N ORRFSID
"RTN","ORCSAVE",76,0)
 S ORRFSID=$O(^ORD(101.41,"B","OR GTX STUDY REASON",""))
"RTN","ORCSAVE",77,0)
 I ORRFSID,$D(ORDIALOG(ORRFSID,1)) D
"RTN","ORCSAVE",78,0)
 .N X,I
"RTN","ORCSAVE",79,0)
 .S X=ORDIALOG(ORRFSID,1)
"RTN","ORCSAVE",80,0)
 .F I=1:1:31 S X=$TR(X,$C(I))
"RTN","ORCSAVE",81,0)
 .S ORDIALOG(ORRFSID,1)=X
"RTN","ORCSAVE",82,0)
EN2 S ORIFN=+ORIFN D RESPONSE ; save responses
"RTN","ORCSAVE",83,0)
 I $P(^OR(100,ORIFN,0),"^",5) D  ;Copy orders PKI fix
"RTN","ORCSAVE",84,0)
 . N OI,ORPKIU
"RTN","ORCSAVE",85,0)
 . S OI=+$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,ORIFN,4.5,OI,1)) Q:'OI
"RTN","ORCSAVE",86,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORCSAVE",87,0)
 . S ORPKIU=0 I $D(^ORD(100.7,"C",DUZ)) S ORPKIU=1
"RTN","ORCSAVE",88,0)
 . D PKI^ORWDPS1(.ORY,OI,CATG,+ORVP,ORPKIU)
"RTN","ORCSAVE",89,0)
 . I $E($G(ORY))=2 S ORDEA=ORY
"RTN","ORCSAVE",90,0)
 K ^OR(100,ORIFN,8,1,.1) D ORDTEXT^ORCSAVE1(ORIFN_";1") ; order text
"RTN","ORCSAVE",91,0)
 S NODE=$G(^OR(100,ORIFN,0)) D  S ^OR(100,ORIFN,0)=NODE
"RTN","ORCSAVE",92,0)
 . S $P(NODE,U,4)=$G(ORNP) ; COST?
"RTN","ORCSAVE",93,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","LOCATION",0))
"RTN","ORCSAVE",94,0)
 . I I,$P(NODE,U,10) S X=+$G(^OR(100,ORIFN,4.5,+I,1)) S:X $P(NODE,U,10)=X_";SC(" ;reset Loc if prev value
"RTN","ORCSAVE",95,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","CLASS",0))
"RTN","ORCSAVE",96,0)
 . I I S X=$G(^OR(100,ORIFN,4.5,+I,1)) S:"^I^O^"[(U_X_U) $P(NODE,U,12)=X
"RTN","ORCSAVE",97,0)
 S $P(^OR(100,ORIFN,3),U)=NOW
"RTN","ORCSAVE",98,0)
 D DELOCC^OROCAPI1(ORIFN,"ACCEPTANCE_CPRS")
"RTN","ORCSAVE",99,0)
 I $G(ORCHECK) D  ; save order checks
"RTN","ORCSAVE",100,0)
 . S (CNT,CDL)=0 F  S CDL=$O(ORCHECK("NEW",CDL)) Q:CDL'>0  S I=0 D
"RTN","ORCSAVE",101,0)
 . . F  S I=$O(ORCHECK("NEW",CDL,I)) Q:I'>0  D
"RTN","ORCSAVE",102,0)
 . . . I $D(ORCHECK("NEW",CDL,I,0)) D
"RTN","ORCSAVE",103,0)
 . . . . N J S J=0,ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I,J) F  S J=$O(ORCHECK("NEW",CDL,I,J)) Q:'J  S ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I)_ORCHECK("NEW",CDL,I,J)
"RTN","ORCSAVE",104,0)
 . . . S X=ORCHECK("NEW",CDL,I)
"RTN","ORCSAVE",105,0)
 . . . S ORK(I,1)=+ORIFN_U_"ACCEPTANCE_CPRS"_U_DUZ_U_$$NOW^XLFDT_U_$P(X,U)_U_CDL
"RTN","ORCSAVE",106,0)
 . . .; S ORK(I,2)=$E($P(X,U,3),1,500)
"RTN","ORCSAVE",107,0)
 . . . S ORK(I,2)=$P(X,U,3)
"RTN","ORCSAVE",108,0)
 . . . I $E(ORK(I,2),0,2)="||" D
"RTN","ORCSAVE",109,0)
 . . . . N ORGLOB,ORRULE,ORI
"RTN","ORCSAVE",110,0)
 . . . . S ORGLOB=$P($P(ORK(I,2),"||",2),"&"),ORRULE=$P($P(ORK(I,2),"||",2),"&",2)
"RTN","ORCSAVE",111,0)
 . . . . S ORK(I,2)=ORRULE
"RTN","ORCSAVE",112,0)
 . . . . S ORI=0 F  S ORI=$O(^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)) Q:'ORI  S ORK(I,2,ORI)=^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)
"RTN","ORCSAVE",113,0)
 . I $D(ORK) D
"RTN","ORCSAVE",114,0)
 . . N OCRET,ORKI
"RTN","ORCSAVE",115,0)
 . . D SAVEOC^OROCAPI1(.ORK,.OCRET)
"RTN","ORCSAVE",116,0)
 . . S ORKI=0 F  S ORKI=$O(ORK(ORKI)) Q:'ORKI  D
"RTN","ORCSAVE",117,0)
 . . . N OCINST,OCTXT S OCTXT=$G(ORK(ORKI,2))
"RTN","ORCSAVE",118,0)
 . . . S OCINST=$O(OCRET(ORKI,0))
"RTN","ORCSAVE",119,0)
 . . . N ORMONOI,ORMONOQ S ORMONOI=0,ORMONOQ=0 F  Q:ORMONOQ=1  S ORMONOI=$O(^TMP($J,"ORMONOGRAPH",ORMONOI)) Q:'ORMONOI  D
"RTN","ORCSAVE",120,0)
 . . . . I OCTXT[$G(^TMP($J,"ORMONOGRAPH",ORMONOI,"OC")) D
"RTN","ORCSAVE",121,0)
 . . . . . S ORMONOQ=1
"RTN","ORCSAVE",122,0)
 . . . . . S ^ORD(100.05,OCINST,17)=^TMP($J,"ORMONOGRAPH",ORMONOI,"INT")
"RTN","ORCSAVE",123,0)
 . . . . . M ^ORD(100.05,OCINST,16)=^TMP($J,"ORMONOGRAPH",ORMONOI,"DATA")
"RTN","ORCSAVE",124,0)
 . . . . . S ^ORD(100.05,OCINST,16,0)="^^"_$O(^ORD(100.05,OCINST,16,""),-1)_U_$O(^ORD(100.05,OCINST,16,""),-1)_U_+$$NOW^XLFDT_U
"RTN","ORCSAVE",125,0)
 . . K ^TMP($J,"ORMONOGRAPH")
"RTN","ORCSAVE",126,0)
 . . K ^TMP($J,"ORK XTRA TXT")
"RTN","ORCSAVE",127,0)
 K ORDEA
"RTN","ORCSAVE",128,0)
ENQ Q
"RTN","ORCSAVE",129,0)
 ;
"RTN","ORCSAVE",130,0)
NEXTIFN() ; -- Returns next available ORIFN
"RTN","ORCSAVE",131,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","ORCSAVE",132,0)
 L +^OR(100,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORCSAVE",133,0)
 I '$T Q "^"
"RTN","ORCSAVE",134,0)
 S HDR=$G(^OR(100,0)),TOTAL=+$P(HDR,U,4),LAST=$O(^OR(100,"?"),-1)
"RTN","ORCSAVE",135,0)
 S I=LAST\1 F I=(I+1):1 Q:'$D(^OR(100,I,0))
"RTN","ORCSAVE",136,0)
 S DA=I,^OR(100,DA,0)=DA,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","ORCSAVE",137,0)
 S ^OR(100,0)=HDR L -^OR(100,0)
"RTN","ORCSAVE",138,0)
 Q DA
"RTN","ORCSAVE",139,0)
 ;
"RTN","ORCSAVE",140,0)
RESPONSE ; -- Save responses in ORDIALOG() into ^OR(100,ORIFN,4.5)
"RTN","ORCSAVE",141,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,I,START,PAT,X
"RTN","ORCSAVE",142,0)
 S PAT=$P(^OR(100,ORIFN,0),U,2),START=$P(^(0),U,8) K ^(4.5)
"RTN","ORCSAVE",143,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE",144,0)
 . S ITM=$G(ORDIALOG(PROMPT)) Q:'ITM
"RTN","ORCSAVE",145,0)
 . S TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE",146,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE",147,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)) Q:VALUE=""  S CNT=CNT+1
"RTN","ORCSAVE",148,0)
 . . S ^OR(100,ORIFN,4.5,CNT,0)=+ITM_U_PROMPT_U_INST_U_$P(ITM,U,2)
"RTN","ORCSAVE",149,0)
 . . S:$L($P(ITM,U,2)) ^OR(100,ORIFN,4.5,"ID",$P(ITM,U,2),CNT)=""
"RTN","ORCSAVE",150,0)
 . . I VALUE<1,TYPE="N" S VALUE=0_+VALUE I VALUE="00" S VALUE=0
"RTN","ORCSAVE",151,0)
 . . S:TYPE'="W" ^OR(100,ORIFN,4.5,CNT,1)=VALUE
"RTN","ORCSAVE",152,0)
 . . M:TYPE="W" ^OR(100,ORIFN,4.5,CNT,2)=@VALUE ; array root
"RTN","ORCSAVE",153,0)
 S ^OR(100,ORIFN,4.5,0)="^100.045A^"_CNT_U_CNT
"RTN","ORCSAVE",154,0)
R1 ; [Reset] Orderables
"RTN","ORCSAVE",155,0)
 I $D(^OR(100,ORIFN,.1)) S I=0 F  S I=$O(^OR(100,ORIFN,.1,I)) Q:I'>0  S X=$G(^(I,0)) I X,PAT,START K ^OR(100,"AOI",X,PAT,9999999-START,ORIFN) ; kill xref
"RTN","ORCSAVE",156,0)
 K ^OR(100,ORIFN,.1) I $D(^OR(100,ORIFN,4.5,"ID","ORDERABLE")) D
"RTN","ORCSAVE",157,0)
 . S (I,CNT)=0
"RTN","ORCSAVE",158,0)
 . F  S I=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D
"RTN","ORCSAVE",159,0)
 . . S X=$G(^OR(100,ORIFN,4.5,I,1)) Q:'X
"RTN","ORCSAVE",160,0)
 . . S CNT=CNT+1,^OR(100,ORIFN,.1,CNT,0)=X,^OR(100,ORIFN,.1,"B",X,CNT)=""
"RTN","ORCSAVE",161,0)
 . . I PAT,START S ^OR(100,"AOI",X,PAT,9999999-START,ORIFN)=""
"RTN","ORCSAVE",162,0)
 . S ^OR(100,ORIFN,.1,0)="^100.001PA^"_CNT_U_CNT
"RTN","ORCSAVE",163,0)
 Q
"RTN","ORCSAVE",164,0)
 ;
"RTN","ORCSAVE",165,0)
RESUME(IFN) ; -- add Response nodes for RESUME tray service
"RTN","ORCSAVE",166,0)
 ; S ^OR(100,+IFN,4.5,<next>,0)=DT_"^^^RESUME",^(1)=1
"RTN","ORCSAVE",167,0)
 ;
"RTN","ORCSAVE",168,0)
 N X,Y,DA,DIC,DLAYGO
"RTN","ORCSAVE",169,0)
 S DIC="^OR(100,"_+IFN_",4.5,",DIC(0)="LX",DA(1)=+IFN,X=DT
"RTN","ORCSAVE",170,0)
 S DIC("DR")=".04///RESUME",DIC("P")=$P(^DD(100,4.5,0),U,2),DLAYGO=100
"RTN","ORCSAVE",171,0)
 D ^DIC S:Y ^OR(100,+IFN,4.5,+Y,1)=1
"RTN","ORCSAVE",172,0)
 Q
"RTN","ORCSAVE",173,0)
 ;
"RTN","ORCSAVE",174,0)
PROVIDER(ORDER,PROV) ; -- Change PROVider assigned to ORDER
"RTN","ORCSAVE",175,0)
 Q:'$G(ORDER)  Q:'$G(PROV)
"RTN","ORCSAVE",176,0)
 N ORACT S ORACT=+$P(ORDER,";",2) S:'ORACT ORACT=1
"RTN","ORCSAVE",177,0)
 S $P(^OR(100,+ORDER,8,ORACT,0),U,3)=PROV
"RTN","ORCSAVE",178,0)
 S:ORACT=1 $P(^OR(100,+ORDER,0),U,4)=PROV
"RTN","ORCSAVE",179,0)
 Q
"RTN","ORCSAVE",180,0)
 ;
"RTN","ORCSAVE",181,0)
ACTION(CODE,DA,PROV,REASON,WHEN,WHO) ; -- save new action
"RTN","ORCSAVE",182,0)
 N NEXT,TOTAL,HDR,LAST,X,PAT,DGRP,SIG,NATR,TXT S DA=+DA
"RTN","ORCSAVE",183,0)
 Q:'$D(^OR(100,DA,0)) 0 Q:$G(CODE)'?2U 0
"RTN","ORCSAVE",184,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE",185,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",186,0)
 S PAT=$P(^OR(100,DA,0),U,2),DGRP=$P(^(0),U,11),SIG=$P(^(0),U,16),X=+$P($G(^(3)),U,7),HDR=$G(^(8,0))
"RTN","ORCSAVE",187,0)
 S:X'>0 X=1 S TXT=$P($G(^OR(100,DA,8,X,0)),U,14) ;current actn's txt ptr
"RTN","ORCSAVE",188,0)
 S:HDR="" HDR="^100.008DA^^" S TOTAL=+$P(HDR,U,4)
"RTN","ORCSAVE",189,0)
 S LAST=$O(^OR(100,DA,8,"C",CODE,"?"),-1) I LAST D
"RTN","ORCSAVE",190,0)
 . S X=$G(^OR(100,DA,8,LAST,0)) Q:$P(X,U,15)'=11  Q:$P(X,U,4)'=2
"RTN","ORCSAVE",191,0)
 . S NEXT=LAST I PAT,$P(X,U) D  ; kill old xref entries
"RTN","ORCSAVE",192,0)
 . . K:DGRP ^OR(100,"ACT",PAT,(9999999-$P(X,U)),DGRP,DA,NEXT)
"RTN","ORCSAVE",193,0)
 . . K ^OR(100,"AC",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AS",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AF",$P(X,U),DA,NEXT)
"RTN","ORCSAVE",194,0)
 S:'$G(NEXT) NEXT=$O(^OR(100,DA,8,"?"),-1)+1,TOTAL=TOTAL+1
"RTN","ORCSAVE",195,0)
 S ^OR(100,DA,8,NEXT,0)=WHEN_U_CODE_U_$G(PROV)_U_$S(SIG:2,1:3)_"^^^^^^^^"_NATR_U_WHO_U_TXT_"^11",^OR(100,DA,8,"C",CODE,NEXT)=""
"RTN","ORCSAVE",196,0)
 S ^OR(100,"AF",WHEN,DA,NEXT)=""
"RTN","ORCSAVE",197,0)
 I PAT,DGRP S ^OR(100,"ACT",PAT,9999999-WHEN,DGRP,DA,NEXT)=""
"RTN","ORCSAVE",198,0)
 I PAT S ^OR(100,"AC",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",199,0)
 I SIG S ^OR(100,"AS",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",200,0)
 S:$L($G(REASON)) ^OR(100,DA,8,NEXT,1)=REASON
"RTN","ORCSAVE",201,0)
 S $P(HDR,U,3,4)=NEXT_U_TOTAL,^OR(100,DA,8,0)=HDR
"RTN","ORCSAVE",202,0)
 Q NEXT
"RTN","ORCSAVE",203,0)
 ;
"RTN","ORCSAVE",204,0)
SET(DLG) ; -- Create new parent for order set ORDIALOG
"RTN","ORCSAVE",205,0)
 ; Returns ORPIFN = ifn of new parent order for set
"RTN","ORCSAVE",206,0)
 ;
"RTN","ORCSAVE",207,0)
 Q:'$G(ORVP)  Q:'$G(DLG)  N OR0,PKG,NOW,CATG,STS,ORLOC,TRSPEC,X
"RTN","ORCSAVE",208,0)
 S OR0=$G(^ORD(101.41,DLG,0)) Q:OR0=""  S ORPIFN=$$NEXTIFN Q:'ORPIFN
"RTN","ORCSAVE",209,0)
 S PKG=$O(^DIC(9.4,"C","OR",0)),CATG=$S($$INPT^ORCD:"I",1:"O"),STS=$S($G(OREVENT):10,1:11),NOW=$S($G(ORSLOG):ORSLOG,1:+$E($$NOW^XLFDT,1,12))
"RTN","ORCSAVE",210,0)
 I $G(OREVENT) S ORLOC="",TRSPEC=""
"RTN","ORCSAVE",211,0)
 S ^OR(100,ORPIFN,0)=ORPIFN_U_ORVP_U_U_$G(ORNP)_U_DLG_";ORD(101.41,^"_DUZ_U_NOW_U_U_U_ORLOC_U_U_CATG_U_TRSPEC_U_PKG_"^^^"_$G(OREVENT),^(3)=NOW_"^90^"_STS_U_$S($G(ORIT):ORIT_"ORD(101.41,",1:"")_"^^^1^^^^0^^"_+$P(OR0,U,6)
"RTN","ORCSAVE",212,0)
 S ^OR(100,ORPIFN,8,0)="^100.008DA^1^1",^(1,0)=NOW_"^NW^"_$G(ORNP)_"^^^^^^^^^^"_DUZ_"^^"_STS,^OR(100,ORPIFN,8,"C","NW",1)="",^OR(100,"AF",NOW,ORPIFN,1)=""
"RTN","ORCSAVE",213,0)
 S ^OR(100,"ACT",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",214,0)
 S:STS=11 ^OR(100,"AC",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",215,0)
 ; AEVNT ??
"RTN","ORCSAVE",216,0)
 S ^OR(100,ORPIFN,1,0)="^100.011^1^1",^(1,0)=$P(OR0,U,2) ; Order text
"RTN","ORCSAVE",217,0)
 Q
"RTN","ORCXPND1")
0^19^B82803363
"RTN","ORCXPND1",1,0)
ORCXPND1 ; SLC/MKB - Expanded Display cont ;09/21/12  05:58
"RTN","ORCXPND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,67,75,89,92,94,148,159,188,172,215,243,280,340,306**;Dec 17, 1997;Build 43
"RTN","ORCXPND1",3,0)
 ;
"RTN","ORCXPND1",4,0)
 ; External References
"RTN","ORCXPND1",5,0)
 ;   DBIA  2387  ^LAB(60
"RTN","ORCXPND1",6,0)
 ;   DBIA  3420  ^DPT(  file #2
"RTN","ORCXPND1",7,0)
 ;   DBIA 10035  ^DPT(  file #2
"RTN","ORCXPND1",8,0)
 ;   DBIA 10037  EN^DGRPD
"RTN","ORCXPND1",9,0)
 ;   DBIA   700  DIS^DGRPDB
"RTN","ORCXPND1",10,0)
 ;   DBIA  2926  RT^GMRCGUIA
"RTN","ORCXPND1",11,0)
 ;   DBIA  2925  DT^GMRCSLM2                     ^TMP("GMRCR"
"RTN","ORCXPND1",12,0)
 ;   DBIA  2503  RR^LR7OR1                       ^TMP("LRRR"
"RTN","ORCXPND1",13,0)
 ;   DBIA  2951  EN1^LR7OSBR                     ^TMP("LRC"
"RTN","ORCXPND1",14,0)
 ;   DBIA  2952  EN^LR7OSMZ0
"RTN","ORCXPND1",15,0)
 ;   DBIA  2400  OEL^PSOORRL                     ^TMP("PS"
"RTN","ORCXPND1",16,0)
 ;   DBIA  2877  EN3^RAO7PC3
"RTN","ORCXPND1",17,0)
 ;   DBIA  2877  EN30^RAO7PC3
"RTN","ORCXPND1",18,0)
 ;   DBIA  1252  $$OUTPTPR^SDUTL3
"RTN","ORCXPND1",19,0)
 ;   DBIA  1252  $$OUTPTTM^SDUTL3
"RTN","ORCXPND1",20,0)
 ;   DBIA  2832  RPC^TIUSRV
"RTN","ORCXPND1",21,0)
 ;   DBIA 10061  DEM^VADPT
"RTN","ORCXPND1",22,0)
 ;   DBIA 10061  KVAR^VADPT
"RTN","ORCXPND1",23,0)
 ;   DBIA 10061  OAD^VADPT
"RTN","ORCXPND1",24,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","ORCXPND1",25,0)
 ;   DBIA  4408  DISP^DGIBDSP
"RTN","ORCXPND1",26,0)
 ;   DBIA  5697  START^SCMCMHTC
"RTN","ORCXPND1",27,0)
 ;
"RTN","ORCXPND1",28,0)
COVER ; -- Cover Sheet
"RTN","ORCXPND1",29,0)
 N PKG S PKG=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",30,0)
 D ALLERGY^ORCXPND2:PKG="GMRA",NOTES:PKG="TIU"
"RTN","ORCXPND1",31,0)
 Q
"RTN","ORCXPND1",32,0)
NOTES ; -- Progress Notes
"RTN","ORCXPND1",33,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",34,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",35,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",36,0)
 K @ORY
"RTN","ORCXPND1",37,0)
 Q
"RTN","ORCXPND1",38,0)
PROBLEMS ; -- Problem List
"RTN","ORCXPND1",39,0)
 D PL^ORCXPND4
"RTN","ORCXPND1",40,0)
 Q
"RTN","ORCXPND1",41,0)
MEDS ; -- Pharmacy
"RTN","ORCXPND1",42,0)
 ;N NODE,ORIFN
"RTN","ORCXPND1",43,0)
 K ^TMP("PS",$J)
"RTN","ORCXPND1",44,0)
 D OEL^PSOORRL(+ORVP,ID) ;S NODE=$G(^TMP("PS",$J,0)),ORIFN=+$P(NODE,U,11)
"RTN","ORCXPND1",45,0)
 S ID=+$P($G(^TMP("PS",$J,0)),U,11) D ORDERS  ;DBIA 2400
"RTN","ORCXPND1",46,0)
 ;D @($S($P($G(^OR(100,ORIFN,0)),U,11)=$O(^ORD(100.98,"B","IV RX",0)):"IV",1:"DRUG")_"^ORCXPND2")
"RTN","ORCXPND1",47,0)
 K ^TMP("PS",$J)
"RTN","ORCXPND1",48,0)
 Q
"RTN","ORCXPND1",49,0)
LABS ; -- Laboratory [RESULTS ONLY for ID=OE order #]
"RTN","ORCXPND1",50,0)
 N ORIFN,X,SUB,TEST,NAME,SS,IDE,IVDT,TST,CCNT,ORCY,IG,TCNT
"RTN","ORCXPND1",51,0)
 K ^TMP("LRRR",$J)  ;DBIA 2503
"RTN","ORCXPND1",52,0)
 I (ID?2.5E1" "2N1" "1.N1"-"7N1"."1.4N)!(ID?2.5E1" "2N1" "1.N1"-"7N) D AP^ORCXPND3 Q  ;ID=Accession #-Date/time specimen taken
"RTN","ORCXPND1",53,0)
 S ORIFN=+ID,IDE=$G(^OR(100,+ID,4)) Q:'$L(IDE)  ; OE# -> Lab#
"RTN","ORCXPND1",54,0)
 I +IDE  D RR^LR7OR1(+ORVP,IDE) I '$D(^TMP("LRRR",$J,+ORVP)) S $P(IDE,";",1,3)=";;" ;Order possibly purged, reset to lookup on file 63
"RTN","ORCXPND1",55,0)
 I '+IDE,$P(IDE,";",5)  D RR^LR7OR1(+ORVP,,9999999-$P(IDE,";",5),9999999-$P(IDE,";",5),$P(IDE,";",4))
"RTN","ORCXPND1",56,0)
 K ORCY D TEXT^ORQ12(.ORCY,ORIFN,80)
"RTN","ORCXPND1",57,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S X=ORCY(IG) D ITEM^ORCXPND(X)
"RTN","ORCXPND1",58,0)
 D BLANK^ORCXPND I '$D(^TMP("LRRR",$J,+ORVP)) S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",59,0)
 M TEST=^TMP("LRRR",$J,+ORVP) S CCNT=0,SS=""
"RTN","ORCXPND1",60,0)
 F  S SS=$O(TEST(SS)) Q:SS=""  S IVDT=0 F  S IVDT=$O(TEST(SS,IVDT)) Q:'IVDT  D
"RTN","ORCXPND1",61,0)
 . I SS="BB" D
"RTN","ORCXPND1",62,0)
 .. I $$GET^XPAR("DIV^SYS^PKG","OR VBECS ON",1,"Q"),$L($T(EN^ORWLR1)),$L($T(CPRS^VBECA3B)) D  Q  ;Transition to VBEC's interface
"RTN","ORCXPND1",63,0)
 ... K ^TMP("ORLRC",$J)
"RTN","ORCXPND1",64,0)
 ... D EN^ORWLR1(DFN)
"RTN","ORCXPND1",65,0)
 ... I '$O(^TMP("ORLRC",$J,0)) S ^TMP("ORLRC",$J,1,0)="",^TMP("ORLRC",$J,2,0)="No Blood Bank report available..."
"RTN","ORCXPND1",66,0)
 ... N I S I=0 F  S I=$O(^TMP("ORLRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",67,0)
 ... K ^TMP("ORLRC",$J)
"RTN","ORCXPND1",68,0)
 .. K ^TMP("LRC",$J) D EN1^LR7OSBR(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q  ;DBIA 2951
"RTN","ORCXPND1",69,0)
 ... N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",70,0)
 ... K ^TMP("LRC",$J)
"RTN","ORCXPND1",71,0)
 . I SS="MI" K ^TMP("LRC",$J) D EN^LR7OSMZ0(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q
"RTN","ORCXPND1",72,0)
 .. N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",73,0)
 .. K ^TMP("LRC",$J)
"RTN","ORCXPND1",74,0)
 . I SS="CH" D  Q
"RTN","ORCXPND1",75,0)
 .. S (TCNT,TST)=0 F  S TST=$O(TEST(SS,IVDT,TST)) Q:TST=""  S CCNT=0,TCNT=TCNT+1 D
"RTN","ORCXPND1",76,0)
 ... I TCNT=1 D
"RTN","ORCXPND1",77,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="   Collection time:          "_$$FMTE^XLFDT(9999999-IVDT,1)
"RTN","ORCXPND1",78,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT," ")_$$S(3,CCNT,"Test Name")_$$S(29,CCNT,"Result")_$$S(39,CCNT,"Units")_$$S(55,CCNT,"Range") D:$D(IOUON) SETVIDEO^ORCXPND(LCNT,1,70,IOUON,IOUOFF)
"RTN","ORCXPND1",79,0)
 ... I TST S X=TEST(SS,IVDT,TST),CCNT=0 I +X D
"RTN","ORCXPND1",80,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT,$P(^LAB(60,+X,0),U))_$$S(26,CCNT,$J($P(X,U,2),7))_$$S(34,CCNT,$S($L($P(X,U,3)):$P(X,U,3),1:""))_$$S(39,CCNT,$P(X,U,4))_$$S(45,CCNT,$J($P(X,U,5),15))
"RTN","ORCXPND1",81,0)
 .... I $L($P(X,U,3)),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOINHI,IOINORM)
"RTN","ORCXPND1",82,0)
 .... I $P(X,U,3)["*",$D(IOBON),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOBON_IOINHI,IOBOFF_IOINORM)
"RTN","ORCXPND1",83,0)
 ... I TST="N" S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" Comments: " D
"RTN","ORCXPND1",84,0)
 .... N CMT S CMT=0 F  S CMT=$O(TEST(SS,IVDT,"N",CMT)) Q:'CMT  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" "_TEST(SS,IVDT,"N",CMT)
"RTN","ORCXPND1",85,0)
 K ^TMP("LRRR",$J)
"RTN","ORCXPND1",86,0)
 Q
"RTN","ORCXPND1",87,0)
 ;
"RTN","ORCXPND1",88,0)
DELAY ; -- Delayed Orders
"RTN","ORCXPND1",89,0)
NEW ; -- New Orders
"RTN","ORCXPND1",90,0)
ORDERS ; -- Orders
"RTN","ORCXPND1",91,0)
 I '$G(ORESULTS) D ORDERS^ORCXPND2 Q
"RTN","ORCXPND1",92,0)
 ; -- Results Display (Add more packages as available)
"RTN","ORCXPND1",93,0)
 N PKG,TAB,ORIFN
"RTN","ORCXPND1",94,0)
 S PKG=+$P($G(^OR(100,+ID,0)),"^",14),PKG=$$NMSP^ORCD(PKG)
"RTN","ORCXPND1",95,0)
 S TAB=$S(PKG="LR":"LABS",PKG="GMRC":"CONSULTS",PKG="RA":"XRAYS",1:"")
"RTN","ORCXPND1",96,0)
 I '$L(TAB)!(ID'>0) D  Q  ; no display available
"RTN","ORCXPND1",97,0)
 . N ORY,I D TEXT^ORQ12(.ORY,+ID,80)
"RTN","ORCXPND1",98,0)
 . S I=0 F  S I=$O(ORY(I)) Q:I'>0  D ITEM^ORCXPND(ORY(I))
"RTN","ORCXPND1",99,0)
 . D BLANK^ORCXPND
"RTN","ORCXPND1",100,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="There are no results to report."
"RTN","ORCXPND1",101,0)
 I $O(^OR(100,+ID,2,0)) S ORIFN=+ID,ID=0 F  S ID=$O(^OR(100,ORIFN,2,ID)) Q:ID<1  I $D(^OR(100,ID,0)) D @TAB
"RTN","ORCXPND1",102,0)
 I '$O(^OR(100,+ID,2,0)) D @TAB
"RTN","ORCXPND1",103,0)
 Q
"RTN","ORCXPND1",104,0)
REPORTS ; -- Patient Profiles
"RTN","ORCXPND1",105,0)
 D EN^ORCXPNDR ; Reports
"RTN","ORCXPND1",106,0)
 Q
"RTN","ORCXPND1",107,0)
CONSULTS ; -- Consults
"RTN","ORCXPND1",108,0)
 N I,X,SUB,ORTX ;,VALMAR
"RTN","ORCXPND1",109,0)
 I $G(ORTAB)="CONSULTS" S X=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",110,0)
 E  D TEXT^ORQ12(.ORTX,+ID) S X=ORTX(1),ID=+$G(^OR(100,+ID,4)) ; OE->GMRC order#
"RTN","ORCXPND1",111,0)
 D ITEM^ORCXPND(X),BLANK^ORCXPND
"RTN","ORCXPND1",112,0)
 I ID'>0 S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",113,0)
 I '$G(ORESULTS) D  ;DT action
"RTN","ORCXPND1",114,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Consult No.:           "_ID
"RTN","ORCXPND1",115,0)
 . N GMRCOER S GMRCOER=2 D DT^GMRCSLM2(ID) S SUB="DT"  ;DBIA 2925
"RTN","ORCXPND1",116,0)
 I $G(ORESULTS) D RT^GMRCGUIA(ID,"^TMP(""GMRCR"",$J,""RT"")") S SUB="RT"
"RTN","ORCXPND1",117,0)
 S I=0 F  S I=$O(^TMP("GMRCR",$J,SUB,I)) Q:I'>0  S X=$G(^(I,0)),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X  ;DBIA 2925
"RTN","ORCXPND1",118,0)
 K ^TMP("GMRCR",$J)
"RTN","ORCXPND1",119,0)
 Q
"RTN","ORCXPND1",120,0)
XRAYS ; -- Radiology
"RTN","ORCXPND1",121,0)
 I '$G(ORESULTS) S ID=+ORVP_U_$TR(ID,"-","^") D EN3^RAO7PC3(ID)
"RTN","ORCXPND1",122,0)
 I $G(ORESULTS) S ID=+$G(^OR(100,+ID,4)) D EN30^RAO7PC3(ID)
"RTN","ORCXPND1",123,0)
 N CASE,PROC,PSET S PSET=$D(^TMP($J,"RAE3",+ORVP,"PRINT_SET"))
"RTN","ORCXPND1",124,0)
 S CASE=0 F  S CASE=$O(^TMP($J,"RAE3",+ORVP,CASE)) Q:CASE'>0  D
"RTN","ORCXPND1",125,0)
 . I PSET S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,"")) D ITEM^ORCXPND(PROC) Q
"RTN","ORCXPND1",126,0)
 . S PROC="" F  S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC)) Q:PROC=""  D ITEM^ORCXPND(PROC),BLANK^ORCXPND,XRPT,BLANK^ORCXPND
"RTN","ORCXPND1",127,0)
 I PSET S CASE=$O(^TMP($J,"RAE3",+ORVP,0)),PROC=$O(^(CASE,"")) D BLANK^ORCXPND,XRPT,BLANK^ORCXPND ;printset=list all procs, then one report
"RTN","ORCXPND1",128,0)
 K ^TMP($J,"RAE3",+ORVP),^UTILITY($J,"W")
"RTN","ORCXPND1",129,0)
 S VALM("RM")=81
"RTN","ORCXPND1",130,0)
 Q
"RTN","ORCXPND1",131,0)
 ;
"RTN","ORCXPND1",132,0)
XRPT ; -- Body of Report for CASE, PROC
"RTN","ORCXPND1",133,0)
 N ORD,X,I
"RTN","ORCXPND1",134,0)
 S ORD=$S($L($G(^TMP($J,"RAE3",+ORVP,"ORD"))):^("ORD"),$L($G(^("ORD",CASE))):^(CASE),1:"") I $L(ORD),ORD'=PROC S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Proc Ord: "_ORD
"RTN","ORCXPND1",135,0)
 S I=1 F  S I=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC,I)) Q:I'>0  S X=^(I),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X ;Skip pt ID on line 1
"RTN","ORCXPND1",136,0)
 Q
"RTN","ORCXPND1",137,0)
 ;
"RTN","ORCXPND1",138,0)
SUMMRIES ; -- Discharge Summaries
"RTN","ORCXPND1",139,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",140,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",141,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",142,0)
 K @ORY
"RTN","ORCXPND1",143,0)
 Q
"RTN","ORCXPND1",144,0)
PTINQ ; Print Patient Inquiry in List Manager
"RTN","ORCXPND1",145,0)
 N DFN,ORI,X
"RTN","ORCXPND1",146,0)
 S DFN=+ORVP
"RTN","ORCXPND1",147,0)
 D DGINQ(DFN)
"RTN","ORCXPND1",148,0)
 S ORI=4,LCNT=0
"RTN","ORCXPND1",149,0)
 F  S ORI=$O(^TMP("ORDATA",$J,1,ORI)) Q:'ORI  S X=^(ORI) D
"RTN","ORCXPND1",150,0)
 . S LCNT=LCNT+1
"RTN","ORCXPND1",151,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",152,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORCXPND1",153,0)
 Q
"RTN","ORCXPND1",154,0)
 ;
"RTN","ORCXPND1",155,0)
DGINQ(DFN) ; Patient Inquiry
"RTN","ORCXPND1",156,0)
 D START^ORWRP(80,"DGINQB^ORCXPND1(DFN)")
"RTN","ORCXPND1",157,0)
 Q
"RTN","ORCXPND1",158,0)
DGINQB(DFN) ; Build Patient Inquiry
"RTN","ORCXPND1",159,0)
 N CONTACT,ORDOC,ORTEAM,ORMHP,ORVP,XQORNOD,ORSSTRT,ORSSTOPT,VAOA,CPRSGUI,ORINP,ORATP,ORASS
"RTN","ORCXPND1",160,0)
 S ORVP=DFN_";DPT(",XQORNOD=1,CPRSGUI=1
"RTN","ORCXPND1",161,0)
 D EN^DGRPD ; MAS Patient Inquiry
"RTN","ORCXPND1",162,0)
 K CPRSGUI
"RTN","ORCXPND1",163,0)
 ;
"RTN","ORCXPND1",164,0)
 S ORDOC=$$OUTPTPR^SDUTL3(DFN)
"RTN","ORCXPND1",165,0)
 S ORTEAM=$$OUTPTTM^SDUTL3(DFN)
"RTN","ORCXPND1",166,0)
 S ORMHP=$$START^SCMCMHTC(DFN) ;Retrieve Mental Health Provider
"RTN","ORCXPND1",167,0)
 S ORINP=$G(^DPT(DFN,.104))
"RTN","ORCXPND1",168,0)
 S ORATP=$G(^DPT(DFN,.1041))
"RTN","ORCXPND1",169,0)
 S ORASS=$P($$OUTPTAP^SDUTL3(DFN,DT),U,2)
"RTN","ORCXPND1",170,0)
 I ORDOC!ORTEAM!ORMHP!ORINP!ORATP  D
"RTN","ORCXPND1",171,0)
 . W !!,"Primary Care Information:"
"RTN","ORCXPND1",172,0)
 . I ORDOC W !,"Primary Practitioner: ",$P(ORDOC,"^",2)
"RTN","ORCXPND1",173,0)
 . I ORTEAM W !,"Primary Care Team:    ",$P(ORTEAM,"^",2)
"RTN","ORCXPND1",174,0)
 . I $$INPT^ORWPT1(DFN) D
"RTN","ORCXPND1",175,0)
 . . I ORATP W !,"Attending Physician:  ",$P($G(^VA(200,+ORATP,0)),U)
"RTN","ORCXPND1",176,0)
 . . I ORINP W !,"Inpatient Provider:   ",$P($G(^VA(200,+ORINP,0)),U)
"RTN","ORCXPND1",177,0)
 . I $L(ORASS) W !,"Associate Provider:   ",ORASS
"RTN","ORCXPND1",178,0)
 . I ORMHP D
"RTN","ORCXPND1",179,0)
 .. W !!,"MH Treatment Information:"
"RTN","ORCXPND1",180,0)
 .. W !,"MH Treatment Coord:   ",$E($P(ORMHP,"^",2),1,28) D
"RTN","ORCXPND1",181,0)
 ... W ?52,"Position: ",$E($P(ORMHP,"^",3),1,18)
"RTN","ORCXPND1",182,0)
 .. W !,"MH Treatment Team:    ",$E($P(ORMHP,"^",5),1,56)
"RTN","ORCXPND1",183,0)
 W !!,"Health Insurance Information:"
"RTN","ORCXPND1",184,0)
 D DISP^DGIBDSP  ;DBIA #4408
"RTN","ORCXPND1",185,0)
 W !!,"Service Connection/Rated Disabilities:"
"RTN","ORCXPND1",186,0)
 D DIS^DGRPDB
"RTN","ORCXPND1",187,0)
 F CONTACT="N","S" D
"RTN","ORCXPND1",188,0)
 .S VAOA("A")=$S(CONTACT="N":"",1:3)
"RTN","ORCXPND1",189,0)
 .D OAD^VADPT ;   Get NOK Information
"RTN","ORCXPND1",190,0)
 .I VAOA(9)]"" D
"RTN","ORCXPND1",191,0)
 .. W !!,$S(CONTACT="N":"Next of Kin Information:",1:"Secondary Next of Kin Information:")
"RTN","ORCXPND1",192,0)
 .. W !,"Name:  ",VAOA(9)                          ;     NOK Name
"RTN","ORCXPND1",193,0)
 .. I VAOA(10)]"" W " (",VAOA(10),")"              ;     Relationship
"RTN","ORCXPND1",194,0)
 .. I VAOA(1)]"" W !?7,VAOA(1)                     ;     Address Line 1
"RTN","ORCXPND1",195,0)
 .. I VAOA(2)]"" W !?7,VAOA(2)                     ;     Line 2
"RTN","ORCXPND1",196,0)
 .. I VAOA(3)]"" W !?7,VAOA(3)                     ;     Line 3
"RTN","ORCXPND1",197,0)
 .. I VAOA(4)]"" D
"RTN","ORCXPND1",198,0)
 .. . W !?7,VAOA(4)                                ;     City
"RTN","ORCXPND1",199,0)
 .. . I VAOA(5)]"" W ", "_$P(VAOA(5),"^",2)        ;     State
"RTN","ORCXPND1",200,0)
 .. . W "  ",$P(VAOA(11),"^",2)                    ;     Zip+4
"RTN","ORCXPND1",201,0)
 .. I VAOA(8)]"" W !!?7,"Phone number:  ",VAOA(8)  ;     Phone
"RTN","ORCXPND1",202,0)
 .. I CONTACT="N",$P($G(^DPT(DFN,.21)),U,11)]"" W !?7,"Work phone number:  ",$P(^DPT(DFN,.21),U,11)
"RTN","ORCXPND1",203,0)
 .. I CONTACT="S",$P($G(^DPT(DFN,.211)),U,11)]"" W !?7,"Work phone number:  ",$P(^DPT(DFN,.211),U,11)
"RTN","ORCXPND1",204,0)
 D KVAR^VADPT
"RTN","ORCXPND1",205,0)
 Q
"RTN","ORCXPND1",206,0)
TRIM(X) ;   Trim Spaces
"RTN","ORCXPND1",207,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ORCXPND1",208,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ORCXPND1",209,0)
 Q X
"RTN","ORCXPND1",210,0)
S(X,Y,Z) ; Pad Over
"RTN","ORCXPND1",211,0)
 ;   X=Column #
"RTN","ORCXPND1",212,0)
 ;   Y=Current Length
"RTN","ORCXPND1",213,0)
 ;   Z=Text
"RTN","ORCXPND1",214,0)
 ;   SP=Text Sent
"RTN","ORCXPND1",215,0)
 ;   CCNT=Line Position After Input Text
"RTN","ORCXPND1",216,0)
 I '$D(Z) Q ""
"RTN","ORCXPND1",217,0)
 N SP S SP=Z I X,Y,X>Y S SP=$E("                                                                             ",1,X-Y)_Z
"RTN","ORCXPND1",218,0)
 S CCNT=$$INC(CCNT,SP)
"RTN","ORCXPND1",219,0)
 Q SP
"RTN","ORCXPND1",220,0)
INC(X,Y) ; Character Position Count
"RTN","ORCXPND1",221,0)
 ;   X=Current Count
"RTN","ORCXPND1",222,0)
 ;   Y=Text
"RTN","ORCXPND1",223,0)
 N INC S INC=X+$L(Y)
"RTN","ORCXPND1",224,0)
 Q INC
"RTN","ORCXPND4")
0^2^B27943000
"RTN","ORCXPND4",1,0)
ORCXPND4 ; SLC/MKB,MA - Expanded Display cont ;06/24/11  11:44
"RTN","ORCXPND4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**67,306**;Dec 17, 1997;Build 43
"RTN","ORCXPND4",3,0)
 ;
"RTN","ORCXPND4",4,0)
PL ; -- problem list
"RTN","ORCXPND4",5,0)
 N ORPL,X,I,J,T,CNT,PROBLEM,II,CMTFLG,CNT1
"RTN","ORCXPND4",6,0)
 D DETAIL^GMPLUTL2(+ID,.ORPL)
"RTN","ORCXPND4",7,0)
 S PROBLEM=(LCNT+1)_U_ORPL("NARRATIVE") ; #^Provider Narrative
"RTN","ORCXPND4",8,0)
 S J=1,X(J)=$P(PROBLEM,U,2),J=J+1
"RTN","ORCXPND4",9,0)
 I $L($G(ORPL("SCTC")))!$L($G(ORPL("SCTD"))) D  I 1
"RTN","ORCXPND4",10,0)
 .I $P(ORPL("NARRATIVE")," (SCT")'=ORPL("SCTT") S X(J)="         SNOMED-CT: "_ORPL("SCTT"),J=J+1
"RTN","ORCXPND4",11,0)
 .I $L($G(ORPL("DIAGNOSIS")))&(ORPL("DIAGNOSIS")'="799.9")&($L($G(ORPL("ICDD")))) S X(J)="  Primary ICD-9-CM: "_$G(ORPL("DIAGNOSIS"))_$$PAD^ORUTL($G(ORPL("DIAGNOSIS")),6)_" ["_$G(ORPL("ICDD"))_"]",J=J+1
"RTN","ORCXPND4",12,0)
 E  I $L($G(ORPL("VHATC")))!$L($G(ORPL("VHATD"))) D  I 1
"RTN","ORCXPND4",13,0)
 .I $P(ORPL("NARRATIVE")," (VHAT")'=ORPL("VHATT") S X(J)="              VHAT: "_ORPL("VHATT"),J=J+1
"RTN","ORCXPND4",14,0)
 .I $L($G(ORPL("DIAGNOSIS")))&(ORPL("DIAGNOSIS")'="799.9")&($L($G(ORPL("ICDD")))) S X(J)="  Primary ICD-9-CM: "_$G(ORPL("DIAGNOSIS"))_$$PAD^ORUTL($G(ORPL("DIAGNOSIS")),6)_" ["_$G(ORPL("ICDD"))_"]",J=J+1
"RTN","ORCXPND4",15,0)
 E  I ORPL("DIAGNOSIS")'="799.9",$L($G(ORPL("ICDD"))) D
"RTN","ORCXPND4",16,0)
 .N ICDD,I S ICDD=$$WRAP^ORU2($G(ORPL("ICDD")),65)
"RTN","ORCXPND4",17,0)
 .F I=1:1:$L(ICDD,"|") S X(J)=$S(I=1:"ICD-9-CM TEXT: ",1:"              ")_$P(ICDD,"|",I),J=J+1
"RTN","ORCXPND4",18,0)
 I ORPL("ICD9MLTP")'="" F T=1:1:ORPL("ICD9MLTP") D
"RTN","ORCXPND4",19,0)
 . S X(J)=$S(T=1:"Secondary ICD-9-CM: ",T>1:"                  : ")_$P($G(ORPL("ICD9MLTP",T)),U)_$$PAD^ORUTL($P($G(ORPL("ICD9MLTP",T)),U),6)_" ["_$P($G(ORPL("ICD9MLTP",T)),U,2)_"]",J=J+1
"RTN","ORCXPND4",20,0)
 S X(J)="          ",J=J+1
"RTN","ORCXPND4",21,0)
 S X(J)="        Onset: "_ORPL("ONSET"),X(J)=X(J)_$J("SC Condition: ",61-$L(X(J)))_ORPL("SC"),J=J+1
"RTN","ORCXPND4",22,0)
 S X(J)="       Status: "_ORPL("STATUS")_$S($L(ORPL("PRIORITY")):"/"_ORPL("PRIORITY"),1:""),X(J)=X(J)_$J("Exposure: ",61-$L(X(J)))_$S('ORPL("EXPOSURE"):"NONE",1:ORPL("EXPOSURE",1)),J=J+1
"RTN","ORCXPND4",23,0)
 S X(J)="     Provider: "_ORPL("PROVIDER"),J=J+1
"RTN","ORCXPND4",24,0)
 S:ORPL("EXPOSURE")>1 X(J)=X(J)_$$REPEAT^XLFSTR(" ",61-$L(X(J)))_ORPL("EXPOSURE",2),J=J+1
"RTN","ORCXPND4",25,0)
 S X(J)="       Clinic: "_ORPL("CLINIC"),J=J+1
"RTN","ORCXPND4",26,0)
 S:ORPL("EXPOSURE")>2 X(J)=X(J)_$$REPEAT^XLFSTR(" ",61-$L(X(J)))_ORPL("EXPOSURE",3),J=J+1
"RTN","ORCXPND4",27,0)
PL1 S X(J)="          ",J=J+1
"RTN","ORCXPND4",28,0)
 S X(J)="     Recorded: "_$P(ORPL("RECORDED"),U)_", by "_$P(ORPL("RECORDED"),U,2),J=J+1
"RTN","ORCXPND4",29,0)
 S X(J)="      Entered: "_$P(ORPL("ENTERED"),U)_", by "_$P(ORPL("ENTERED"),U,2),J=J+1
"RTN","ORCXPND4",30,0)
 S X(J)="      Updated: "_ORPL("MODIFIED"),J=J+1
"RTN","ORCXPND4",31,0)
 S X(J)="          ",J=J+1,X(J)="Comments: ",CMTFLG=J,CNT=J,J=J+1
"RTN","ORCXPND4",32,0)
 S:ORPL("COMMENT")'>0 X(J)="   <None>",CNT=J
"RTN","ORCXPND4",33,0)
 I ORPL("COMMENT") F I=1:1:ORPL("COMMENT") D
"RTN","ORCXPND4",34,0)
 . S CNT=CNT+1,X(CNT)=$J($P(ORPL("COMMENT",I),U),8)_": "_$P(ORPL("COMMENT",I),U,3)
"RTN","ORCXPND4",35,0)
 . S CNT=CNT+1,X(CNT)="          "_$P(ORPL("COMMENT",I),U,2)
"RTN","ORCXPND4",36,0)
 S CNT=CNT+1,X(CNT)="          "
"RTN","ORCXPND4",37,0)
 F I=1:1:CNT S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X(I)
"RTN","ORCXPND4",38,0)
 D:$D(IORVON) SETVIDEO^ORCXPND(+PROBLEM,1,$L($P(PROBLEM,U,2)),IORVON,IORVOFF)
"RTN","ORCXPND4",39,0)
 D:$D(IOUON) SETVIDEO^ORCXPND(CMTFLG,1,8,IOUON,IOUOFF)
"RTN","ORCXPND4",40,0)
PL2 ; Changes added to include PROBLEM LIST AUDIT TRAIL 8 Sep 99
"RTN","ORCXPND4",41,0)
 S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="History:"
"RTN","ORCXPND4",42,0)
 D:$D(IOUON) SETVIDEO^ORCXPND(LCNT,1,7,IOUON,IOUOFF)
"RTN","ORCXPND4",43,0)
 I ORPL("AUDIT")=0 S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="   <No Changes>" Q
"RTN","ORCXPND4",44,0)
 I ORPL("AUDIT")>0 F II=1:1:ORPL("AUDIT") D COVPRT
"RTN","ORCXPND4",45,0)
 Q
"RTN","ORCXPND4",46,0)
 ;
"RTN","ORCXPND4",47,0)
COVPRT ; This will convert GMPL("AUDIT") to printable format and write it
"RTN","ORCXPND4",48,0)
 ; out to ^TMP("ORXPND",$J)
"RTN","ORCXPND4",49,0)
 N NODE,DATE,FLD,PROV,OLD,NEW,ROOT,CHNGE
"RTN","ORCXPND4",50,0)
 S NODE=ORPL("AUDIT",II,0)
"RTN","ORCXPND4",51,0)
 S DATE=$$DATE^ORCHTAB($P(NODE,U,3)),FLD=+$P(NODE,U),PROV=+$P(NODE,U,8)
"RTN","ORCXPND4",52,0)
 S:'PROV PROV=$P(NODE,U,4) S PROV=$P($G(^VA(200,PROV,0)),U) ;Entr vs Prov
"RTN","ORCXPND4",53,0)
 S OLD=$P(NODE,U,5),NEW=$P(NODE,U,6),LCNT=LCNT+1
"RTN","ORCXPND4",54,0)
 I +FLD=1101 D  Q
"RTN","ORCXPND4",55,0)
 . S NODE=ORPL("AUDIT",II,1) ; old note
"RTN","ORCXPND4",56,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=$J(DATE,10)_": NOTE "_$$DATE^ORCHTAB($P(NODE,U,5))_" removed by "_PROV
"RTN","ORCXPND4",57,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="            "_$P(NODE,U,3)
"RTN","ORCXPND4",58,0)
 I +FLD=1.02 D  Q
"RTN","ORCXPND4",59,0)
 . S CHNGE=$S(NEW="H":"removed",OLD="T":"verified",1:"placed back on list")
"RTN","ORCXPND4",60,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=$J(DATE,10)_": PROBLEM "_CHNGE_" by "_PROV
"RTN","ORCXPND4",61,0)
 S ^TMP("ORXPND",$J,LCNT,0)=$J(DATE,10)_": "_$P(NODE,U,2)_" changed by "_PROV,LCNT=LCNT+1
"RTN","ORCXPND4",62,0)
 I +FLD=.12 S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_$S(OLD="A":"ACTIVE",OLD="I":"INACTIVE",1:"UNKNOWN")_" to "_$S(NEW="A":"ACTIVE",NEW="I":"INACTIVE",1:"UNKNOWN") Q
"RTN","ORCXPND4",63,0)
 I (+FLD=.13)!(+FLD=1.07) S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_$$DATE^ORCHTAB(OLD)_" to "_$$DATE^ORCHTAB(NEW) Q
"RTN","ORCXPND4",64,0)
 I +FLD=1.14 S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_$S(OLD="A":"ACUTE",OLD="C":"CHRONIC",1:"UNSPECIFIED")_" to "_$S(NEW="A":"ACUTE",NEW="C":"CHRONIC",1:"UNSPECIFIED") Q
"RTN","ORCXPND4",65,0)
 I +FLD=302 D  Q
"RTN","ORCXPND4",66,0)
 . ; if NEW value non-null, register change
"RTN","ORCXPND4",67,0)
 . I NEW]"" D
"RTN","ORCXPND4",68,0)
 . . S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_OLD,LCNT=LCNT+1
"RTN","ORCXPND4",69,0)
 . . S ^TMP("ORXPND",$J,LCNT,0)=$J("to ",17)_NEW
"RTN","ORCXPND4",70,0)
 . ; otherwise, register removal
"RTN","ORCXPND4",71,0)
 . E  S ^TMP("ORXPND",$J,LCNT,0)=$J(OLD_$$PAD^ORUTL(OLD,6),23)_" removed."
"RTN","ORCXPND4",72,0)
 I +FLD>1.09 S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_$S(+OLD:"YES",OLD=0:"NO",1:"UNKNOWN")_" to "_$S(+NEW:"YES",NEW=0:"NO",1:"UNKNOWN") Q
"RTN","ORCXPND4",73,0)
 I "^.01^.05^1.01^1.04^1.05^1.06^1.08^"[(U_+FLD_U) D
"RTN","ORCXPND4",74,0)
 . S ROOT=$S(+FLD=.01:"ICD9(",+FLD=.05:"AUTNPOV(",+FLD=1.01:"LEX(757.01,",(+FLD=1.04)!(+FLD=1.05):"VA(200,",+FLD=1.06:"DIC(49,",+FLD=1.08:"SC(",1:"") Q:ROOT=""
"RTN","ORCXPND4",75,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=$J("from ",17)_$S(OLD:$P(@(U_ROOT_OLD_",0)"),U),1:"UNSPECIFIED")
"RTN","ORCXPND4",76,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$J("to ",17)_$S(NEW:$P(@(U_ROOT_NEW_",0)"),U),1:"UNSPECIFIED")
"RTN","ORCXPND4",77,0)
 Q
"RTN","ORDEA")
0^37^B85981983
"RTN","ORDEA",1,0)
ORDEA ;ISL/TC & JMH & JLC - DEA related items ;08/27/12  07:49
"RTN","ORDEA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17, 1997;Build 43
"RTN","ORDEA",3,0)
 ;
"RTN","ORDEA",4,0)
 ;
"RTN","ORDEA",5,0)
 ;
"RTN","ORDEA",6,0)
 ;
"RTN","ORDEA",7,0)
DEATEXT(ORY) ;returns the mandatory dea text to show when a user checks a controlled substance order to be signed on the signature dialog
"RTN","ORDEA",8,0)
 N I,ORTY
"RTN","ORDEA",9,0)
 D GETWP^XPAR(.ORTY,"SYS","OR DEA TEXT")
"RTN","ORDEA",10,0)
 S I=0 F  S I=$O(ORTY(I)) Q:'I  S ORY(I)=ORTY(I,0)
"RTN","ORDEA",11,0)
 Q
"RTN","ORDEA",12,0)
 ;
"RTN","ORDEA",13,0)
CSVALUE(ORY,ORID) ;return 1 if the order (ORID) is a controlled substance, 0 for non-controlled substance
"RTN","ORDEA",14,0)
 N OROI,ORPSTYPE,ORRXDG
"RTN","ORDEA",15,0)
 S ORY=0,ORPSTYPE=""
"RTN","ORDEA",16,0)
 S OROI=$$OI^ORQOR2(+ORID)
"RTN","ORDEA",17,0)
 S ORRXDG=$$DGRX^ORQOR2(+ORID)
"RTN","ORDEA",18,0)
 I ORRXDG="UNIT DOSE MEDICATIONS" S ORPSTYPE="I"
"RTN","ORDEA",19,0)
 I ORRXDG="INPATIENT MEDICATIONS" S ORPSTYPE="I"
"RTN","ORDEA",20,0)
 I ORRXDG="IV MEDICATIONS" S ORPSTYPE="I"
"RTN","ORDEA",21,0)
 I ORRXDG="OUTPATIENT MEDICATIONS" S ORPSTYPE="O"
"RTN","ORDEA",22,0)
 I ORRXDG="PHARMACY" S ORPSTYPE="O"
"RTN","ORDEA",23,0)
 Q:ORPSTYPE=""
"RTN","ORDEA",24,0)
 D CSCHECK(.ORY,OROI,ORPSTYPE)
"RTN","ORDEA",25,0)
 S ORY=+ORY
"RTN","ORDEA",26,0)
 Q
"RTN","ORDEA",27,0)
 ;
"RTN","ORDEA",28,0)
PNDHLD(ORY,ORID) ;return 1 if the order is pending a HOLD, 0 otherwise
"RTN","ORDEA",29,0)
 S ORY=0
"RTN","ORDEA",30,0)
 N ORLSTACT S ORLSTACT=$O(^OR(100,+ORID,8,"A"),-1)
"RTN","ORDEA",31,0)
 I $P(^OR(100,+ORID,8,ORLSTACT,0),U,2)="HD" S ORY=1
"RTN","ORDEA",32,0)
 Q
"RTN","ORDEA",33,0)
 ;
"RTN","ORDEA",34,0)
CSCHECK(ORCSVAL,OROI,ORPSTYPE) ; return 1 if OI is a controlled substance, 0 for non-controlled substance
"RTN","ORDEA",35,0)
 ;ORCSVAL=1:controlled substance, 0:non-controlled substance
"RTN","ORDEA",36,0)
 ;OROI=OR orderable item
"RTN","ORDEA",37,0)
 ;ORPSTYPE="O":Outpatient pharmacy order, "I" or "U":Inpatient med order
"RTN","ORDEA",38,0)
 N ORPSOI,ORTPKG,ORDEAFLG,ORDETOX
"RTN","ORDEA",39,0)
 S ORCSVAL=0_U_0,ORTPKG=$P($G(^ORD(101.43,+$G(OROI),0)),U,2)
"RTN","ORDEA",40,0)
 I ORPSTYPE="I" Q
"RTN","ORDEA",41,0)
 Q:ORTPKG'["PS"
"RTN","ORDEA",42,0)
 S ORPSOI=+ORTPKG Q:ORPSOI'>0
"RTN","ORDEA",43,0)
 I '$L($T(OIDEA^PSSUTLA1)) Q
"RTN","ORDEA",44,0)
 S ORDEAFLG=+$$OIDEA^PSSOPKI(ORPSOI,ORPSTYPE)
"RTN","ORDEA",45,0)
 I ORDEAFLG'>0 S ORCSVAL=0
"RTN","ORDEA",46,0)
 I ORDEAFLG>0 S ORCSVAL=1
"RTN","ORDEA",47,0)
 S ORDETOX=0
"RTN","ORDEA",48,0)
 ;get detox value either from OIDEA^PSSUTLA1 or from different api or method
"RTN","ORDEA",49,0)
 S ORDETOX=$$OIDETOX^PSSOPKI(ORPSOI,ORPSTYPE)
"RTN","ORDEA",50,0)
 S ORCSVAL=ORCSVAL_U_ORDETOX
"RTN","ORDEA",51,0)
 Q
"RTN","ORDEA",52,0)
SIGINFO(ORY,ORDFN,ORPROV) ;returns the provider/patient info that must be displayed when signing controlled substance orders
"RTN","ORDEA",53,0)
 N ORI S ORI=0
"RTN","ORDEA",54,0)
 ;patient name
"RTN","ORDEA",55,0)
 S ORI=ORI+1,ORY(ORI)=$P(^DPT(+ORDFN,0),U)
"RTN","ORDEA",56,0)
 ;date of issuance
"RTN","ORDEA",57,0)
 S ORI=ORI+1,ORY(ORI)="Date of Issuance: "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","ORDEA",58,0)
 ;provider name
"RTN","ORDEA",59,0)
 S ORI=ORI+1,ORY(ORI)="Provider: "_$$GET1^DIQ(200,ORPROV,.01,"E")
"RTN","ORDEA",60,0)
 ;provider address (facility address)
"RTN","ORDEA",61,0)
 N ORINST
"RTN","ORDEA",62,0)
 D GETS^DIQ(4,DUZ(2),".01;.02;1.01;1.02;1.03;1.04","E","ORINST")
"RTN","ORDEA",63,0)
 N ORADDNUM S ORADDNUM=0
"RTN","ORDEA",64,0)
 I $L(ORINST(4,DUZ(2)_",",1.01,"E"))>0 S ORI=ORI+1,ORY(ORI)=ORINST(4,DUZ(2)_",",1.01,"E"),ORADDNUM=ORADDNUM+1
"RTN","ORDEA",65,0)
 I $L(ORINST(4,DUZ(2)_",",1.02,"E"))>0 S ORI=ORI+1,ORY(ORI)=ORINST(4,DUZ(2)_",",1.02,"E"),ORADDNUM=ORADDNUM+1
"RTN","ORDEA",66,0)
 I $L(ORINST(4,DUZ(2)_",",1.03,"E"))>0 S ORI=ORI+1,ORY(ORI)=ORINST(4,DUZ(2)_",",1.03,"E"),ORADDNUM=ORADDNUM+1
"RTN","ORDEA",67,0)
 I $L(ORINST(4,DUZ(2)_",",.02,"E"))>0 S ORY(ORI)=ORY(ORI)_", "_ORINST(4,DUZ(2)_",",.02,"E"),ORADDNUM=ORADDNUM+1
"RTN","ORDEA",68,0)
 I $L(ORINST(4,DUZ(2)_",",1.04,"E"))>0 S ORY(ORI)=ORY(ORI)_"  "_ORINST(4,DUZ(2)_",",1.04,"E"),ORADDNUM=ORADDNUM+1
"RTN","ORDEA",69,0)
 I ORADDNUM=0 D
"RTN","ORDEA",70,0)
 .S ORI=ORI+1,ORY(ORI)="No Address on record"
"RTN","ORDEA",71,0)
 .I $L(ORINST(4,DUZ(2)_",",.01,"E"))>0 S ORI=ORI+1,ORY(ORI)="for "_ORINST(4,DUZ(2)_",",.01,"E")
"RTN","ORDEA",72,0)
 ;dea #
"RTN","ORDEA",73,0)
 S ORI=ORI+1,ORY(ORI)="DEA: "_$$DEA^XUSER(,ORPROV)
"RTN","ORDEA",74,0)
 ;detox #
"RTN","ORDEA",75,0)
 N ORDETOX S ORDETOX=$$DETOX^XUSER(ORPROV)
"RTN","ORDEA",76,0)
 I $L(ORDETOX)>0 S ORI=ORI+1,ORY(ORI)="Detox: "_ORDETOX
"RTN","ORDEA",77,0)
 Q
"RTN","ORDEA",78,0)
HASHINFO(ORY,ORDFN,ORPROV) ;basic data for all orders getting signed
"RTN","ORDEA",79,0)
 N ORI S ORI=0
"RTN","ORDEA",80,0)
 ;patient name
"RTN","ORDEA",81,0)
 S ORI=ORI+1,ORY(ORI)="PatientName:"_$P(^DPT(+ORDFN,0),U)
"RTN","ORDEA",82,0)
 ;patient address
"RTN","ORDEA",83,0)
 N VAPA,DFN,ORPATADD
"RTN","ORDEA",84,0)
 S DFN=ORDFN
"RTN","ORDEA",85,0)
 D ADD^VADPT
"RTN","ORDEA",86,0)
 S ORPATADD=VAPA(1)_U_VAPA(2)_U_VAPA(3)_U_VAPA(4)_U_$P(VAPA(5),"^")_U_$P(VAPA(5),"^",2)_U_VAPA(6)_U_VAPA(7)
"RTN","ORDEA",87,0)
 S ORI=ORI+1,ORY(ORI)="PatientAddress:"_ORPATADD
"RTN","ORDEA",88,0)
 ;date of issuance
"RTN","ORDEA",89,0)
 S ORI=ORI+1,ORY(ORI)="IssuanceDate:"_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","ORDEA",90,0)
 S ORI=ORI+1,ORY(ORI)="IssuanceInt:"_$$DT^XLFDT
"RTN","ORDEA",91,0)
 ;provider name
"RTN","ORDEA",92,0)
 S ORI=ORI+1,ORY(ORI)="ProviderName:"_$$GET1^DIQ(200,ORPROV,.01,"E")
"RTN","ORDEA",93,0)
 S ORI=ORI+1,ORY(ORI)="ProviderNumber:"_ORPROV
"RTN","ORDEA",94,0)
 ;provider address (facility address)
"RTN","ORDEA",95,0)
 N ORINST
"RTN","ORDEA",96,0)
 D GETS^DIQ(4,DUZ(2),".01;.02;1.01;1.02;1.03;1.04","E","ORINST")
"RTN","ORDEA",97,0)
 S ORI=ORI+1,ORY(ORI)="ProviderAddress:"_ORINST(4,DUZ(2)_",",1.01,"E")_U_ORINST(4,DUZ(2)_",",1.02,"E")_U_ORINST(4,DUZ(2)_",",1.03,"E")_U_ORINST(4,DUZ(2)_",",.02,"E")_U_ORINST(4,DUZ(2)_",",1.04,"E")
"RTN","ORDEA",98,0)
 S ORI=ORI+1,ORY(ORI)="ProviderAdd1:"_ORINST(4,DUZ(2)_",",.01,"E")
"RTN","ORDEA",99,0)
 ;dea #
"RTN","ORDEA",100,0)
 S ORI=ORI+1,ORY(ORI)="DeaNumber:"_$$DEA^XUSER(,ORPROV)
"RTN","ORDEA",101,0)
 ;detox #
"RTN","ORDEA",102,0)
 N ORDETOX S ORDETOX=$$DETOX^XUSER(ORPROV)
"RTN","ORDEA",103,0)
 I $L(ORDETOX)>0 S ORI=ORI+1,ORY(ORI)="DetoxNumber:"_ORDETOX
"RTN","ORDEA",104,0)
 Q
"RTN","ORDEA",105,0)
ORDHINFO(ORY,ORIFN,HASH,OHINFO) ;
"RTN","ORDEA",106,0)
 N IENS
"RTN","ORDEA",107,0)
 D BUILDFDA(ORIFN,.ORDFDA,.ORY,$G(HASH),.OHINFO)
"RTN","ORDEA",108,0)
 Q
"RTN","ORDEA",109,0)
BUILDFDA(ORIFN,ORDFDA,OROUT,HASH,OHD) ;
"RTN","ORDEA",110,0)
 ;ORIFN is the CPRS order number to use
"RTN","ORDEA",111,0)
 ;this will need to be updated once we have a way to store DEA and DETOX
"RTN","ORDEA",112,0)
 ;numbers that are retrieved during validation
"RTN","ORDEA",113,0)
 ;returns 0 if not successful, 1 if successful
"RTN","ORDEA",114,0)
 N ERROR,ORDIALOG,ISSDATE,A,B,PDRUG,PIEN,PROVIDER,DFN,PTNM,NIENS,S1,PNAME,DOSE,SCHED,ROUTE,DURA
"RTN","ORDEA",115,0)
 N CONJ,INSTR,SCHED,DUR,DOSE
"RTN","ORDEA",116,0)
 I $G(ORIFN)="" Q 0
"RTN","ORDEA",117,0)
 K ^TMP($J,"ORDEA")
"RTN","ORDEA",118,0)
 S ORDIALOG=$$GET1^DIQ(100,ORIFN_",",2,"I") I ORDIALOG="" Q 0
"RTN","ORDEA",119,0)
 D GETDLG^ORCD(+ORDIALOG),GETORDER^ORCD("^OR(100,"_ORIFN_",4.5)")
"RTN","ORDEA",120,0)
 S INSTR=$$PTR("INSTRUCTIONS"),SCHED=$$PTR("SCHEDULE"),DUR=$$PTR("DURATION"),DOSE=$$PTR("DOSE")
"RTN","ORDEA",121,0)
 S CONJ=$$PTR("AND/THEN"),ROUTE=$$PTR("ROUTE")
"RTN","ORDEA",122,0)
 S IENS="+1,"
"RTN","ORDEA",123,0)
 F I=1:1 Q:'$D(OHD(I))  D
"RTN","ORDEA",124,0)
 . I $G(OHD(I))["IssuanceInt" S ORDFDA(101.52,IENS,4)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",125,0)
 . I $G(OHD(I))["ProviderNumber" S ORDFDA(101.52,IENS,31)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",126,0)
 . I $G(OHD(I))["ProviderName" S ORDFDA(101.52,IENS,12)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",127,0)
 . I $G(OHD(I))["DeaNumber" S ORDFDA(101.52,IENS,10)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",128,0)
 . I $G(OHD(I))["DetoxNumber" S ORDFDA(101.52,IENS,11)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",129,0)
 . I $G(OHD(I))["ProviderAdd1" S ORDFDA(101.52,IENS,13)=$P(OHD(I),":",2,99) Q
"RTN","ORDEA",130,0)
 . I $G(OHD(I))["ProviderAddress" D
"RTN","ORDEA",131,0)
 .. S A=$P(OHD(I),":",2,99)
"RTN","ORDEA",132,0)
 .. S ORDFDA(101.52,IENS,14)=$P(A,"^"),ORDFDA(101.52,IENS,15)=$P(A,"^",2)
"RTN","ORDEA",133,0)
 .. S ORDFDA(101.52,IENS,16)=$P(A,"^",3),ORDFDA(101.52,IENS,17)=$P(A,"^",4)
"RTN","ORDEA",134,0)
 .. S ORDFDA(101.52,IENS,17.5)=$P(A,"^",5)
"RTN","ORDEA",135,0)
 . I $G(OHD(I))["PatientAddress" D
"RTN","ORDEA",136,0)
 .. S A=$P(OHD(I),":",2,99)
"RTN","ORDEA",137,0)
 .. S ORDFDA(101.52,IENS,21)=$P(A,"^"),ORDFDA(101.52,IENS,22)=$P(A,"^",2),ORDFDA(101.52,IENS,24)=$P(A,"^",3)
"RTN","ORDEA",138,0)
 .. S ORDFDA(101.52,IENS,25)=$P(A,"^",4),ORDFDA(101.52,IENS,26)=$P(A,"^",6),ORDFDA(101.52,IENS,27)=$P(A,"^",7)
"RTN","ORDEA",139,0)
 S ORDFDA(101.52,IENS,.01)=ORIFN
"RTN","ORDEA",140,0)
 S A=$P($G(ORDIALOG("B","DISPENSE DRUG")),"^",2),PIEN=$G(ORDIALOG(A,1)) D
"RTN","ORDEA",141,0)
 . I PIEN="" S OROUT(1)="DrugName:" Q
"RTN","ORDEA",142,0)
 . D DATA^PSS50(PIEN,"","","","","ORDEA")
"RTN","ORDEA",143,0)
 . S ORDFDA(101.52,IENS,6)=^TMP($J,"ORDEA",PIEN,.01),ORDFDA(101.52,IENS,29)=PIEN,ORDFDA(101.52,IENS,30)=^TMP($J,"ORDEA",PIEN,3)
"RTN","ORDEA",144,0)
 . S OROUT(1)="DrugName:"_^TMP($J,"ORDEA",PIEN,.01)
"RTN","ORDEA",145,0)
 S INSTR=$O(^ORD(101.41,"AB","OR GTX INSTRUCTIONS",0))
"RTN","ORDEA",146,0)
 S A=$P($G(ORDIALOG("B","QUANTITY")),"^",2),ORDFDA(101.52,IENS,8)=$G(ORDIALOG(A,1))
"RTN","ORDEA",147,0)
 S OROUT(2)="Quantity:"_$G(ORDIALOG(A,1))
"RTN","ORDEA",148,0)
 S A=$P($G(ORDIALOG("B","REFILLS")),"^",2),ORDFDA(101.52,IENS,28)=$G(ORDIALOG(A,1))
"RTN","ORDEA",149,0)
 S S1=0 F I=1:1 Q:'$D(ORDIALOG(INSTR,I))  D
"RTN","ORDEA",150,0)
 . S A=$P($G(ORDIALOG(DOSE,I)),"&",1,6)_"|"_$G(ORDIALOG(SCHED,I))_"|"_$$DUR($G(ORDIALOG(DUR,I)))_"|"_$$CONJ($G(ORDIALOG(CONJ,I)))_"|"_$G(ORDIALOG(ROUTE,I))
"RTN","ORDEA",151,0)
 . S ORDFDA(101.529,"+"_(I+1)_","_IENS,.01)=A
"RTN","ORDEA",152,0)
 . I '$D(OROUT(3)) S OROUT(3)="Directions:"_A
"RTN","ORDEA",153,0)
 . E  S OROUT(3)=OROUT(3)_A
"RTN","ORDEA",154,0)
 S A=+$$GET1^DIQ(100,ORIFN_",",6,"I"),A=$$GET1^DIQ(44,A,3,"I")
"RTN","ORDEA",155,0)
 D GETS^DIQ(4,A,".01;.02;1.01;1.02;1.03;1.04","E","ORINST")
"RTN","ORDEA",156,0)
 S DFN=+$$GET1^DIQ(100,ORIFN_",",.02,"I"),ORDFDA(101.52,IENS,20)=$$GETICN^MPIF001(DFN)
"RTN","ORDEA",157,0)
 D DEM^VADPT S ORDFDA(101.52,IENS,18)=VADM(1),ORDFDA(101.52,IENS,19)=DFN
"RTN","ORDEA",158,0)
 S ORDFDA(101.52,IENS,2)=$G(HASH)
"RTN","ORDEA",159,0)
 Q
"RTN","ORDEA",160,0)
BUILD(ORIFN) ;Build ARCHIVE entry for CPRS order number
"RTN","ORDEA",161,0)
 N ORDFDA,OROUT
"RTN","ORDEA",162,0)
 D BUILDFDA(ORIFN,.ORDFDA,.OROUT)
"RTN","ORDEA",163,0)
 D UPDATE^DIE("","ORDFDA","ORIEN","ERROR")
"RTN","ORDEA",164,0)
 Q 1
"RTN","ORDEA",165,0)
SUBSCRIB(ORIFN,RXN) ;API for Pharmacy to subscribe to an archive entry
"RTN","ORDEA",166,0)
 ;ORIFN is the CPRS order number of the archive Pharmacy wants to use
"RTN","ORDEA",167,0)
 ;RXN is the Pharmacy prescription number that is subscribing to the archive
"RTN","ORDEA",168,0)
 ;returns a 0 if not successful
"RTN","ORDEA",169,0)
 ;returns a 1 if successful
"RTN","ORDEA",170,0)
 N A,IEN,ORDFDA,ERROR
"RTN","ORDEA",171,0)
 I $G(ORIFN)=""!($G(RXN)="") Q 0
"RTN","ORDEA",172,0)
 S IEN=$$FIND1^DIC(101.52,"","MXQ",ORIFN,"","","ERR")
"RTN","ORDEA",173,0)
 I 'IEN Q 0
"RTN","ORDEA",174,0)
 S A=$$GET1^DIQ(101.52,IEN_",",1,"I") I A]"",A'=RXN Q 0
"RTN","ORDEA",175,0)
 S ORDFDA(101.52,IEN_",",1)=RXN
"RTN","ORDEA",176,0)
 D FILE^DIE("","ORDFDA","ERROR")
"RTN","ORDEA",177,0)
 I $D(ERROR) Q 0
"RTN","ORDEA",178,0)
 Q 1
"RTN","ORDEA",179,0)
ARCHIVE(ORIFN) ;retrieve archive for specified order number
"RTN","ORDEA",180,0)
 ;ORIFN is the CPRS order number whose archive is requested
"RTN","ORDEA",181,0)
 I $G(ORIFN)="" Q
"RTN","ORDEA",182,0)
 K ^TMP($J,"ORDEA",ORIFN) N IEN,ERROR,ORDEA,A,I,S1
"RTN","ORDEA",183,0)
 S IEN=$$FIND1^DIC(101.52,"","MXQ",ORIFN,"","","ERR")
"RTN","ORDEA",184,0)
 I 'IEN Q
"RTN","ORDEA",185,0)
 S IEN=IEN_","
"RTN","ORDEA",186,0)
 D GETS^DIQ(101.52,IEN,"**","IE","ORDEA","ERROR") I $D(ERROR) Q
"RTN","ORDEA",187,0)
 S A(1)="" F I=1,4,6,29,30,8,28 S A(1)=A(1)_$G(ORDEA(101.52,IEN,I,"I"))_"^"
"RTN","ORDEA",188,0)
 S A(1)=$P(A(1),"^",1,7)
"RTN","ORDEA",189,0)
 S A(2)="" F I=10,11,12,31 S A(2)=A(2)_$G(ORDEA(101.52,IEN,I,"I"))_"^"
"RTN","ORDEA",190,0)
 S A(2)=$P(A(2),"^",1,4)
"RTN","ORDEA",191,0)
 S A(3)="" F I=13,14,15,16,17,17.5 S A(3)=A(3)_$G(ORDEA(101.52,IEN,I,"I"))_"^"
"RTN","ORDEA",192,0)
 S A(3)=$P(A(3),"^",1,6)
"RTN","ORDEA",193,0)
 S A(4)="" F I=18,19,20 S A(4)=A(4)_$G(ORDEA(101.52,IEN,I,"I"))_"^"
"RTN","ORDEA",194,0)
 S A(4)=$P(A(4),"^",1,3)
"RTN","ORDEA",195,0)
 S A(5)="" F I=21,22,24,25,26,27 S A(5)=A(5)_$G(ORDEA(101.52,IEN,I,"I"))_"^"
"RTN","ORDEA",196,0)
 S A(5)=$P(A(5),"^",1,6)
"RTN","ORDEA",197,0)
 F I=1:1:5 S ^TMP($J,"ORDEA",ORIFN,I)=A(I)
"RTN","ORDEA",198,0)
 S S1=0 F  S S1=$O(ORDEA(101.529,S1)) Q:'S1  S ^TMP($J,"ORDEA",ORIFN,6,$P(S1,","))=ORDEA(101.529,S1,.01,"I")
"RTN","ORDEA",199,0)
 Q
"RTN","ORDEA",200,0)
HASHRTN(ORIFN) ;returns hash of a specified archive entry
"RTN","ORDEA",201,0)
 ;ORIFN is the CPRS order number for the archive
"RTN","ORDEA",202,0)
 N IEN,ORHASH
"RTN","ORDEA",203,0)
 S IEN=$$FIND1^DIC(101.52,"","MXQ",ORIFN,"","","ERR")
"RTN","ORDEA",204,0)
 I 'IEN Q 0
"RTN","ORDEA",205,0)
 S IEN=IEN_","
"RTN","ORDEA",206,0)
 S ORHASH=$$GET1^DIQ(101.52,IEN,2,"I","","ERROR") I $D(ERROR) Q 0
"RTN","ORDEA",207,0)
 Q ORHASH
"RTN","ORDEA",208,0)
BACKDOOR(ORIFN,ORPROV,ORD) ;create archive for new backdoor order
"RTN","ORDEA",209,0)
 ;called from ORMPS
"RTN","ORDEA",210,0)
 N DFN,OHD,OUT,ORDFDA,PIEN,A,ORSCHED,S1
"RTN","ORDEA",211,0)
 K ^TMP($J,"ORDEAB")
"RTN","ORDEA",212,0)
 Q:$G(ORIFN)=""  I '$D(^OR(100,ORIFN,0)) Q
"RTN","ORDEA",213,0)
 I $P($G(^ORD(101.41,+ORD,0)),"^")'="PSO OERR" Q
"RTN","ORDEA",214,0)
 S S1=0 F  S S1=$O(ORD(S1)) Q:'S1  I $P(ORD(S1),"^",2)["DRUG" S PIEN=$G(ORD(S1,1)) I PIEN]"" Q
"RTN","ORDEA",215,0)
 I $G(PIEN)="" Q
"RTN","ORDEA",216,0)
 D DATA^PSS50(PIEN,"","","","","ORDEAB") S ORSCHED=$G(^TMP($J,"ORDEAB",PIEN,3))
"RTN","ORDEA",217,0)
 I ORSCHED'?1N.E Q
"RTN","ORDEA",218,0)
 I ",2,3,4,5,"'[$E(ORSCHED) Q
"RTN","ORDEA",219,0)
 S DFN=+$P($G(^OR(100,ORIFN,0)),"^",2)
"RTN","ORDEA",220,0)
 D HASHINFO(.OHD,DFN,ORPROV)
"RTN","ORDEA",221,0)
 D BUILDFDA(ORIFN,.ORDFDA,.OUT,"",.OHD)
"RTN","ORDEA",222,0)
 S ORDFDA(101.52,IENS,1)=$G(^OR(100,ORIFN,4))
"RTN","ORDEA",223,0)
 D UPDATE^DIE("","ORDFDA","","ERROR")
"RTN","ORDEA",224,0)
 Q
"RTN","ORDEA",225,0)
PINLKCHK(ORY) ;check if the current user has an active PIN lock
"RTN","ORDEA",226,0)
 ;ORY=1 if there is an active lock and ORY=0 if no active lock
"RTN","ORDEA",227,0)
 S ORY=0
"RTN","ORDEA",228,0)
 Q:'$D(^XTMP("OR DEA PIN LOCK",DUZ))
"RTN","ORDEA",229,0)
 N ORDIFF
"RTN","ORDEA",230,0)
 S ORDIFF=$$FMDIFF^XLFDT($$NOW^XLFDT,$G(^XTMP("OR DEA PIN LOCK",DUZ)),2)
"RTN","ORDEA",231,0)
 ;CHECK IF LOCK IS LESS THAN 15 MINUTES OLD
"RTN","ORDEA",232,0)
 I ORDIFF<900 S ORY=1
"RTN","ORDEA",233,0)
 Q
"RTN","ORDEA",234,0)
PINLKSET(ORY) ;set a PIN lock on the current user
"RTN","ORDEA",235,0)
 S ^XTMP("OR DEA PIN LOCK",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","ORDEA",236,0)
 S ^XTMP("OR DEA PIN LOCK",DUZ)=$$NOW^XLFDT
"RTN","ORDEA",237,0)
 S ORY=^XTMP("OR DEA PIN LOCK",DUZ)
"RTN","ORDEA",238,0)
 Q
"RTN","ORDEA",239,0)
LNKMSG(ORY) ;message to display after successful PIV link for admin contact person
"RTN","ORDEA",240,0)
 N I,ORTY
"RTN","ORDEA",241,0)
 D GETWP^XPAR(.ORTY,"DIV^SYS^PKG","OR DEA PIV LINK MSG")
"RTN","ORDEA",242,0)
 S I=0 F  S I=$O(ORTY(I)) Q:'I  S ORY(I)=ORTY(I,0)
"RTN","ORDEA",243,0)
 Q
"RTN","ORDEA",244,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORDEA",245,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORDEA",246,0)
DUR(DUR) ;
"RTN","ORDEA",247,0)
 Q $S(DUR="":"",DUR=0:"",1:$E($P(DUR," ",2))_+DUR)
"RTN","ORDEA",248,0)
CONJ(CNJ) ;
"RTN","ORDEA",249,0)
 Q $S(CNJ="":"",CNJ'="T":CNJ,1:"S")
"RTN","ORDEA",250,0)
 
"RTN","ORDEAAUD")
0^54^B166040
"RTN","ORDEAAUD",1,0)
ORDEAAUD ;ISL/TC & JMH & JLC - DEA related items ;08/27/12  07:49
"RTN","ORDEAAUD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17, 1997;Build 43
"RTN","ORDEAAUD",3,0)
 ;
"RTN","ORDEAAUD",4,0)
AUDIT ;
"RTN","ORDEAAUD",5,0)
 N A,ORI
"RTN","ORDEAAUD",6,0)
 S A="",ORI=0
"RTN","ORDEAAUD",7,0)
 F  S A=A_">>"_$ST(ORI,"PLACE"),ORI=ORI+1 Q:ORI>$ST(-1)
"RTN","ORDEAAUD",8,0)
 S ^ORPA(101.52,DA,8)=A
"RTN","ORDEAAUD",9,0)
 Q
"RTN","ORDV04")
0^3^B74664100
"RTN","ORDV04",1,0)
ORDV04 ; SLC/DAN - OE/RR Components ;08/08/12  12:44
"RTN","ORDV04",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,148,160,208,195,241,215,274,256,243,306**;Dec 17,1997;Build 43
"RTN","ORDV04",3,0)
 ;
"RTN","ORDV04",4,0)
 ; ^TMP("GMPLHS",$J) DBIA 1183
"RTN","ORDV04",5,0)
 ; ^UTILITY & ^TMP("GMRVD") DBIA 10061
"RTN","ORDV04",6,0)
 ;
"RTN","ORDV04",7,0)
ORC(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; Current Orders
"RTN","ORDV04",8,0)
 N ORCNT,ORJ,ORSITE,SITE,ORX0,ORLIST,GO
"RTN","ORDV04",9,0)
 Q:'$L(OREXT)
"RTN","ORDV04",10,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",11,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",12,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",13,0)
 K ^TMP("ORR",$J),^TMP("ORDATA",$J)
"RTN","ORDV04",14,0)
 D @GO
"RTN","ORDV04",15,0)
 I '$D(^TMP("ORR",$J)) Q
"RTN","ORDV04",16,0)
 S ORCNT=0,ORJ=0
"RTN","ORDV04",17,0)
 F  S ORJ=$O(^TMP("ORR",$J,ORLIST,ORJ)) Q:'+ORJ!(ORCNT'<ORMAX)  S ORX0=^(ORJ) D
"RTN","ORDV04",18,0)
 . S ORCNT=ORCNT+1,SITE=$S($L($G(^TMP("ORR",$J,ORLIST,ORJ,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",19,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",20,0)
 . D SPMRG^ORDVU("^TMP(""ORR"","_$J_","""_ORLIST_""","_ORJ_",""TX"")","^TMP(""ORDATA"","_$J_","""_ORLIST_""","_ORJ_",""WP"",2)",2) ;order text
"RTN","ORDV04",21,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",3)="3^"_$P(ORX0,"^",6) ; status
"RTN","ORDV04",22,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",4)="4^"_$$DATE^ORDVU($P(ORX0,"^",4)) ;start date
"RTN","ORDV04",23,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",5)="5^"_$$DATE^ORDVU($P(ORX0,"^",5)) ;stop date
"RTN","ORDV04",24,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",7)="7^"_$P(^TMP("ORR",$J,ORLIST,ORJ),U) ;Order Number
"RTN","ORDV04",25,0)
 . I $O(^TMP("ORR",$J,ORLIST,ORJ,"TX",1)) S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",6)="6^[+]" ;flag for details
"RTN","ORDV04",26,0)
 K ^TMP("ORR",$J)
"RTN","ORDV04",27,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",28,0)
 Q
"RTN","ORDV04",29,0)
ORCVA ; Current Orders
"RTN","ORDV04",30,0)
 N ORVP
"RTN","ORDV04",31,0)
 S ORVP=DFN_";DPT("
"RTN","ORDV04",32,0)
 I '$D(^OR(100,"AC",ORVP)) Q
"RTN","ORDV04",33,0)
 D EN^ORQ1(ORVP,,2,,ORDBEG,ORDEND,1) ; current orders. ORLIST is set in ORQ1
"RTN","ORDV04",34,0)
 Q
"RTN","ORDV04",35,0)
PLAILALL(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - ALL problems
"RTN","ORDV04",36,0)
 N GO
"RTN","ORDV04",37,0)
 Q:'$L(OREXT)
"RTN","ORDV04",38,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",39,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",40,0)
 D PLAIL
"RTN","ORDV04",41,0)
 Q
"RTN","ORDV04",42,0)
PLALL ; All Problems
"RTN","ORDV04",43,0)
 D GETLIST^GMPLHS(DFN,"ALL")
"RTN","ORDV04",44,0)
 Q
"RTN","ORDV04",45,0)
PLAILI(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - INACTIVE problems
"RTN","ORDV04",46,0)
 N GO
"RTN","ORDV04",47,0)
 Q:'$L(OREXT)
"RTN","ORDV04",48,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",49,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",50,0)
 D PLAIL
"RTN","ORDV04",51,0)
 Q
"RTN","ORDV04",52,0)
PLI ; Inactive Problems
"RTN","ORDV04",53,0)
 D GETLIST^GMPLHS(DFN,"I")
"RTN","ORDV04",54,0)
 Q
"RTN","ORDV04",55,0)
PLAILA(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - ACTIVE problems
"RTN","ORDV04",56,0)
 N GO
"RTN","ORDV04",57,0)
 Q:'$L(OREXT)
"RTN","ORDV04",58,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",59,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",60,0)
 D PLAIL
"RTN","ORDV04",61,0)
 Q
"RTN","ORDV04",62,0)
PLA ; Active Problems
"RTN","ORDV04",63,0)
 D GETLIST^GMPLHS(DFN,"A")
"RTN","ORDV04",64,0)
 Q
"RTN","ORDV04",65,0)
PLAIL ; problems(active, inactive or all)
"RTN","ORDV04",66,0)
 ;Ext call: GMPLHS
"RTN","ORDV04",67,0)
 ; input:
"RTN","ORDV04",68,0)
 ;   STATUS = "A"   => active
"RTN","ORDV04",69,0)
 ;   STATUS = "I"   => inactive
"RTN","ORDV04",70,0)
 ;   STATUS = "ALL" => all
"RTN","ORDV04",71,0)
 ;
"RTN","ORDV04",72,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",73,0)
 . S ORDBEG=0,ORDEND=9999999,ORMAX=99999
"RTN","ORDV04",74,0)
 . D GCPR^OMGCOAS1(DFN,"PLL",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",75,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",76,0)
 N ORPROBNO,ORLOC,I,ORSITE
"RTN","ORDV04",77,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",78,0)
 K ^TMP("ORDATA",$J),^TMP("GMPLHS",$J)  ;DBIA #1183
"RTN","ORDV04",79,0)
 D @GO
"RTN","ORDV04",80,0)
 I '$D(^TMP("GMPLHS",$J)) Q
"RTN","ORDV04",81,0)
 S ORPROBNO=0
"RTN","ORDV04",82,0)
 F I=1:1 S ORPROBNO=$O(^TMP("GMPLHS",$J,ORPROBNO)) Q:'ORPROBNO  D
"RTN","ORDV04",83,0)
 . N ORXREC0,SITE,ICD,SCTC,VHATC,PROVNARR,ORMORE,K
"RTN","ORDV04",84,0)
 . S ORXREC0=$G(^TMP("GMPLHS",$J,ORPROBNO,0)),ORMORE=0
"RTN","ORDV04",85,0)
 . S SITE=$S($L($G(^TMP("GMPLHS",$J,ORPROBNO,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",86,0)
 . S ICD=$P(ORXREC0,U,17),SCTC=$P(ORXREC0,U,15),VHATC=$P(ORXREC0,U,19)
"RTN","ORDV04",87,0)
 . S PROVNARR=$P($G(^TMP("GMPLHS",$J,ORPROBNO,"N"))," (SN")_$S($L($G(ICD))&('$L($G(SCTC))&'$L($G(VHATC))):" (ICD-9-CM "_$G(ICD)_")",$L($G(SCTC)):" (SCT "_$G(SCTC)_")",$L($G(VHATC)):" (VHAT "_$G(VHATC)_")",1:"")
"RTN","ORDV04",88,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",89,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",2)="2^"_$P(ORXREC0,U,5) ;status
"RTN","ORDV04",90,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",3)="3^"_PROVNARR ;provider narrative
"RTN","ORDV04",91,0)
 . I $S(PROVNARR["(SCT":1,PROVNARR["(VHAT":1,1:0)&($G(ICD)'="799.9") D
"RTN","ORDV04",92,0)
 . . N PLAINARR,PREFTEXT
"RTN","ORDV04",93,0)
 . . I PROVNARR["(SCT" S PLAINARR=$P(PROVNARR," (S"),PREFTEXT=$P(ORXREC0,U,16)
"RTN","ORDV04",94,0)
 . . E  I PROVNARR["(VHAT" S PLAINARR=$P(PROVNARR," (V"),PREFTEXT=$P(ORXREC0,U,20)
"RTN","ORDV04",95,0)
 . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",4)="4^"_$S((PREFTEXT]"")&(PLAINARR'=PREFTEXT):PREFTEXT,1:"") ; Preferred Text
"RTN","ORDV04",96,0)
 . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",5)="5^"_$S($L($G(ICD))&($L($G(SCTC))!$L(VHATC)):$G(ICD)_" ["_$P(ORXREC0,U,18)_"]",1:"") ; Primary ICD-9-CM Code & Description
"RTN","ORDV04",97,0)
 . . I $G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9"))'="" N T,J S J=0 F T=1:1:$G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9")) D  ;Check for the existence of multiple ICD-9-CM codes
"RTN","ORDV04",98,0)
 . . . ;N T,J S J=0 F T=1:1:$G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9")) D
"RTN","ORDV04",99,0)
 . . . N ICD9MLT S J=J+1,ICD9MLT=$G(^TMP("GMPLHS",$J,ORPROBNO,T,"ICD9"))
"RTN","ORDV04",100,0)
 . . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",6,J)="6^"_$P($G(ICD9MLT),U)_" ["_$P($G(ICD9MLT),U,2)_"]" ;Secondary ICD-9-CM Code & Description
"RTN","ORDV04",101,0)
 . E  I PROVNARR["(ICD"&($G(ICD)'="799.9") S ^TMP("ORDATA",$J,ORPROBNO,"WP",5)="5^"_$S($L($G(ICD)):$G(ICD)_" ["_$P(ORXREC0,U,18)_"]",1:"")
"RTN","ORDV04",102,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",7)="7^"_$$DATE^ORDVU($P(ORXREC0,U,6)) ;onset date
"RTN","ORDV04",103,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",8)="8^"_$$DATE^ORDVU($P(ORXREC0,U,2)) ;last modified date
"RTN","ORDV04",104,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",9)="9^"_$P(ORXREC0,U,7) ;provider
"RTN","ORDV04",105,0)
 . S ORLOC=0,K=0
"RTN","ORDV04",106,0)
 . F  S ORLOC=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC)) Q:'ORLOC  D
"RTN","ORDV04",107,0)
 .. N X S X=0
"RTN","ORDV04",108,0)
 .. F  S X=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X)) Q:'X  D
"RTN","ORDV04",109,0)
 ... S K=K+1,ORMORE=1
"RTN","ORDV04",110,0)
 ... S ^TMP("ORDATA",$J,ORPROBNO,"WP",10,K)="10^"_$P($G(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X,0)),U) ;note narrative
"RTN","ORDV04",111,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",11)="11^"_$P(ORXREC0,U,14) ;exposures
"RTN","ORDV04",112,0)
 . I ORMORE S ^TMP("ORDATA",$J,ORPROBNO,"WP",12)="12^[+]" ;flag for details
"RTN","ORDV04",113,0)
 K ^TMP("GMPLHS",$J)
"RTN","ORDV04",114,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",115,0)
 Q
"RTN","ORDV04",116,0)
SR(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Surgery Report
"RTN","ORDV04",117,0)
 N ORCNT
"RTN","ORDV04",118,0)
 S ORCNT=0
"RTN","ORDV04",119,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",120,0)
 D ENSR^ORDV04A
"RTN","ORDV04",121,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",122,0)
 Q
"RTN","ORDV04",123,0)
VS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; get vital Signs
"RTN","ORDV04",124,0)
 D VS^ORDV04A
"RTN","ORDV04",125,0)
 Q
"RTN","ORDV04",126,0)
TIUPRG(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  progress notes
"RTN","ORDV04",127,0)
 ;Ext calls: TIUSRVLO, TIUSRVR1, VASITE
"RTN","ORDV04",128,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",129,0)
 . D GCPR^OMGCOAS1(DFN,"PN",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",130,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",131,0)
 N ORDT,DATE,ORCI,ORGLOB,ORGLOBA,ORTEMP,ORSITE,SITE,I,ORNODE,GO,ORIMAG
"RTN","ORDV04",132,0)
 Q:'$L(OREXT)
"RTN","ORDV04",133,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",134,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",135,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",136,0)
 D @GO
"RTN","ORDV04",137,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",138,0)
 S ORNODE=0,ORCI=0
"RTN","ORDV04",139,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",140,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORCI'<ORMAX)  D
"RTN","ORDV04",141,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",142,0)
 . S ORIMAG=$P($$RESOLVE^TIUSRVLO($P(ORTEMP,U)),U,10)
"RTN","ORDV04",143,0)
 . S DATE=$P(ORTEMP,U,3)       ;date
"RTN","ORDV04",144,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",145,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",146,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$P(ORTEMP,U) ;TIU ien
"RTN","ORDV04",147,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATE^ORDVU(DATE) ;date
"RTN","ORDV04",148,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$P(ORTEMP,U,2) ;type
"RTN","ORDV04",149,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$P($P(ORTEMP,U,5),";",2) ;author
"RTN","ORDV04",150,0)
 . S ORCI=ORCI+1
"RTN","ORDV04",151,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call back to get note text
"RTN","ORDV04",152,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",6)),6) ;Notes Text
"RTN","ORDV04",153,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",7)="7^[+]"
"RTN","ORDV04",154,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",8)="8^"_ORIMAG
"RTN","ORDV04",155,0)
 . K @ORGLOBA
"RTN","ORDV04",156,0)
 K @ORGLOB
"RTN","ORDV04",157,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",158,0)
 Q
"RTN","ORDV04",159,0)
TPRG ; Progress Notes
"RTN","ORDV04",160,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,3,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",161,0)
 Q
"RTN","ORDV04",162,0)
TIUDCS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  Discharge Summaries
"RTN","ORDV04",163,0)
 ;Ext calls: VASITE, DIQ1, TIUSRVLO
"RTN","ORDV04",164,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",165,0)
 . D GCPR^OMGCOAS1(DFN,"DS",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",166,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",167,0)
 N ORGLOB,ORGLOBA,ORI,ORNODE,ORICDIEN,ORARRAY,ORTEMP,ORSITE,SITE,DIC,DR,DIQ,DA,GO
"RTN","ORDV04",168,0)
 Q:'$L(OREXT)
"RTN","ORDV04",169,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",170,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",171,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",172,0)
 D @GO
"RTN","ORDV04",173,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",174,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",175,0)
 S ORNODE=0,ORI=0
"RTN","ORDV04",176,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORI'<ORMAX)  D
"RTN","ORDV04",177,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",178,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",179,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",180,0)
 . K ORARRAY S DIC=8925,DA=$P(ORTEMP,U),DR=".05;.07;.08;1202;1502",DIQ="ORARRAY"
"RTN","ORDV04",181,0)
 . D EN^DIQ1
"RTN","ORDV04",182,0)
 . S DIQ="ORARRAY(8925,"_DA_")"
"RTN","ORDV04",183,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$$DATEMMM^ORDVU($G(@DIQ@(.07))) ;episode begin date/time
"RTN","ORDV04",184,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATEMMM^ORDVU($G(@DIQ@(.08))) ;episode end date/time
"RTN","ORDV04",185,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$G(@DIQ@(1202)) ;author/dicator
"RTN","ORDV04",186,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$G(@DIQ@(1502)) ;signed by
"RTN","ORDV04",187,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",6)="6^"_$G(@DIQ@(.05)) ;status
"RTN","ORDV04",188,0)
 . S ORI=ORI+1
"RTN","ORDV04",189,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call to get summary text
"RTN","ORDV04",190,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",7)),7) ;summary Text
"RTN","ORDV04",191,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",8)="8^[+]" ;detail flag
"RTN","ORDV04",192,0)
 . K @ORGLOBA
"RTN","ORDV04",193,0)
 K @ORGLOB
"RTN","ORDV04",194,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",195,0)
 Q
"RTN","ORDV04",196,0)
TDCS ; Discharge Summary
"RTN","ORDV04",197,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,244,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",198,0)
 Q
"RTN","ORMPS")
0^45^B82154291
"RTN","ORMPS",1,0)
ORMPS ; SLC/MKB/TC - Process Pharmacy ORM msgs ;03/15/12  13:09
"RTN","ORMPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,54,62,86,92,94,116,138,152,141,165,149,213,195,243,306**;Dec 17, 1997;Build 43
"RTN","ORMPS",3,0)
 ;
"RTN","ORMPS",4,0)
EN ; -- entry point
"RTN","ORMPS",5,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMPS",6,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZC",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMPS",7,0)
 N ORSTS,RXE,ZRX,ORWHO,ORNOW
"RTN","ORMPS",8,0)
 S ORSTS=$$STATUS(ORDSTS),RXE=$$RXE,ZRX=$$ZRX D QT^ORMPS1 ;QT in RXE
"RTN","ORMPS",9,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORWHO=+$P(ZRX,"|",6) S:'ORWHO ORWHO=DUZ
"RTN","ORMPS",10,0)
 S:ORLOG ORLOG=+$E(ORLOG,1,12) ;no seconds
"RTN","ORMPS",11,0)
 S:'$L(ORNATR) ORNATR=$P(ZRX,"|",3) S:OREASON["^" OREASON=$P(OREASON,U,5)
"RTN","ORMPS",12,0)
 I ORNATR="D",'$L(OREASON) S OREASON="DUPLICATE"
"RTN","ORMPS",13,0)
 D @ORDCNTRL
"RTN","ORMPS",14,0)
 Q
"RTN","ORMPS",15,0)
 ;
"RTN","ORMPS",16,0)
ZV ; -- Verified
"RTN","ORMPS",17,0)
 N ORUSR,ORVER,ORDA,ORES,ORI
"RTN","ORMPS",18,0)
 S ORUSR=+$P(ORC,"|",12),ORVER="N" Q:'ORUSR
"RTN","ORMPS",19,0)
 S ORDA=+$P($G(^OR(100,+ORIFN,3)),U,7),ORES(+ORIFN_";"_ORDA)=""
"RTN","ORMPS",20,0)
 Q:$P($G(^OR(100,+ORIFN,8,ORDA,0)),U,8)  ;already verified
"RTN","ORMPS",21,0)
 D REPLCD^ORCACT1 ;get unverified replaced orders
"RTN","ORMPS",22,0)
 S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D
"RTN","ORMPS",23,0)
 . S ORDA=+$P(ORI,";",2)
"RTN","ORMPS",24,0)
 . D VERIFY^ORCSAVE2(+ORI,ORDA,"N",ORUSR,ORLOG)
"RTN","ORMPS",25,0)
 Q
"RTN","ORMPS",26,0)
 ;
"RTN","ORMPS",27,0)
ZP ; -- Purged
"RTN","ORMPS",28,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORMPS",29,0)
 K ^OR(100,+ORIFN,4) I "^3^5^6^15^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(+ORIFN,14) ;Remove pkg reference, sts=lapsed if still active
"RTN","ORMPS",30,0)
 Q
"RTN","ORMPS",31,0)
 ;
"RTN","ORMPS",32,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMPS",33,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMPS",34,0)
 Q
"RTN","ORMPS",35,0)
 ;
"RTN","ORMPS",36,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMPS",37,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ;update Last Activity
"RTN","ORMPS",38,0)
 Q
"RTN","ORMPS",39,0)
 ;
"RTN","ORMPS",40,0)
XR ; -- Changed as requested [ack]
"RTN","ORMPS",41,0)
 N ORIG S ORIG=$P(^OR(100,+ORIFN,3),U,5) I ORIG,$P(^OR(100,ORIG,3),U,3)'=12 D STATUS^ORCSAVE2(ORIG,12)
"RTN","ORMPS",42,0)
OK ; -- Order accepted, PS order # assigned [ack]
"RTN","ORMPS",43,0)
 S ^OR(100,+ORIFN,4)=PKGIFN ;PS identifier
"RTN","ORMPS",44,0)
 D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",45,0)
 Q
"RTN","ORMPS",46,0)
 ;
"RTN","ORMPS",47,0)
ZC ; -- convert orders
"RTN","ORMPS",48,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORP,ORSIG,ORIG,TYPE,EVNT
"RTN","ORMPS",49,0)
 I '$D(^VA(200,ORDUZ,0)) S ORERR="Missing or invalid entering person" Q
"RTN","ORMPS",50,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS",51,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS",52,0)
 S RXO=$$RXO,RXC=$$RXC K ^TMP("ORWORD",$J)
"RTN","ORMPS",53,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1")
"RTN","ORMPS",54,0)
ZC1 ; continue
"RTN","ORMPS",55,0)
 Q:$D(ORERR)  I 'ORIFN!('$D(^OR(100,+ORIFN,0))) D  Q  ;create
"RTN","ORMPS",56,0)
 . K ORIFN D SN1 Q:'$G(ORIFN)  S ORDCNTRL="SN"
"RTN","ORMPS",57,0)
 . I ORSTOP,ORSTOP<ORNOW S $P(^OR(100,ORIFN,3),U)=ORSTOP
"RTN","ORMPS",58,0)
 S ORIFN=+ORIFN D RESPONSE^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMPS",59,0)
 S ^OR(100,ORIFN,4)=PKGIFN,$P(^(0),U,5)=+ORDIALOG_";ORD(101.41,"
"RTN","ORMPS",60,0)
 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP),STATUS^ORCSAVE2(ORIFN,ORSTS):ORSTS
"RTN","ORMPS",61,0)
 Q
"RTN","ORMPS",62,0)
 ;
"RTN","ORMPS",63,0)
SN ; -- New backdoor order, return OE# via NA msg
"RTN","ORMPS",64,0)
 I $$FINISHED^ORMPS2 D RO^ORMPS2 Q  ;change action instead
"RTN","ORMPS",65,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORP,ORSIG,ORIG,TYPE,EVNT,ZSC
"RTN","ORMPS",66,0)
 I '$D(^VA(200,ORDUZ,0)) S ORERR="Missing or invalid entering person" Q
"RTN","ORMPS",67,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS",68,0)
 ; I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMPS",69,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS",70,0)
 S RXO=$$RXO,RXC=$$RXC K ^TMP("ORWORD",$J),ORIFN
"RTN","ORMPS",71,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1") Q:$D(ORERR)
"RTN","ORMPS",72,0)
SN1 ; save order
"RTN","ORMPS",73,0)
 D EN^ORCSAVE I '$G(ORIFN) S ORERR="Cannot create new order" G SNQ
"RTN","ORMPS",74,0)
 D BDOSTR^ORWDBA3 ;DG1 & ZCL data
"RTN","ORMPS",75,0)
 S ORIG=+$P(ZRX,"|",2),TYPE=$P(ZRX,"|",4) I ORIG D  ;set fwd/bwd ptrs
"RTN","ORMPS",76,0)
 . S TYPE=$S(TYPE="R":2,1:1) Q:'$D(^OR(100,ORIG,0))
"RTN","ORMPS",77,0)
 . S $P(^OR(100,ORIFN,3),U,5)=ORIG,$P(^(3),U,11)=TYPE
"RTN","ORMPS",78,0)
 . S $P(^OR(100,ORIG,3),U,6)=ORIFN,EVNT=$P(^(0),U,17)
"RTN","ORMPS",79,0)
 . I $L(EVNT),TYPE=1 S $P(^OR(100,ORIFN,0),U,17)=EVNT
"RTN","ORMPS",80,0)
 . I TYPE=2,$G(ORCAT)="I" S ORSTRT=ORLOG D PARENT^ORMPS3 ;ck if complex
"RTN","ORMPS",81,0)
 I $G(ORCAT)="O" S ZSC=$$ZSC^ORMPS3 I ZSC,$P(ZSC,"|",2)'?2.3U S ^OR(100,ORIFN,5)=$TR($P(ZSC,"|",2,9),"|","^") ;1 or 0 instead of [N]SC
"RTN","ORMPS",82,0)
SN2 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",83,0)
 D:ORSTS STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMPS",84,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR)
"RTN","ORMPS",85,0)
 ; if unsigned edit, leave ORIFN unsigned & mark ORIG as Sig Not Req'd
"RTN","ORMPS",86,0)
 S ORSIG=1 ;$S('ORIG:1,TYPE'=1:1,$P($G(^OR(100,ORIG,8,1,0)),U,4)'=2:1,1:0)
"RTN","ORMPS",87,0)
 D SIGSTS^ORCSAVE2(ORIFN,1):ORSIG,SIGN^ORCSAVE2(ORIG,,,5,1):'ORSIG
"RTN","ORMPS",88,0)
 I ORDCNTRL="SN" D  ;print
"RTN","ORMPS",89,0)
 . S:ORNATR="" $P(^OR(100,ORIFN,8,1,0),U,12)="" ;CHCS/OP orders
"RTN","ORMPS",90,0)
 . S ORP(1)=ORIFN_";1"_$S(ORNATR="":"^^^^1",$G(ORL):"^1",1:"")
"RTN","ORMPS",91,0)
 . I ORP(1)["^" D PRINTS^ORWD1(.ORP,+$G(ORL))
"RTN","ORMPS",92,0)
 S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMPS",93,0)
 D BACKDOOR^ORDEA(ORIFN,ORNP,.ORDIALOG)
"RTN","ORMPS",94,0)
SNQ K ^TMP("ORWORD",$J)
"RTN","ORMPS",95,0)
 Q
"RTN","ORMPS",96,0)
 ;
"RTN","ORMPS",97,0)
XX ; -- Changed (new order not necessary)
"RTN","ORMPS",98,0)
 Q:$P($G(^OR(100,+ORIFN,3)),U,3)=5  ;pending - update when finished
"RTN","ORMPS",99,0)
 I '$$CHANGED^ORMPS2 D SC Q  ;ck sts/dates only
"RTN","ORMPS",100,0)
RO ; -- Replacement order (finished)
"RTN","ORMPS",101,0)
 S:ORNATR="" ORNATR="S" D RO^ORMPS2
"RTN","ORMPS",102,0)
 Q
"RTN","ORMPS",103,0)
 ;
"RTN","ORMPS",104,0)
SC ; -- Status changed (verified, expired, suspended, renewed, reinstate)
"RTN","ORMPS",105,0)
 N OR0,OR3,ZSC,DONE S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORMPS",106,0)
 I "^1^13^"[(U_$P(OR3,U,3)_U),ORSTS=7 Q  ;retain DC status
"RTN","ORMPS",107,0)
 I $P(OR3,U,3)=5,ORSTS=6 D  Q:$G(DONE)
"RTN","ORMPS",108,0)
 . I $$CHANGED^ORMPS2 S ORNATR="S" D RO^ORMPS2 S DONE=1 Q
"RTN","ORMPS",109,0)
 . I $P(ZRX,"|",7)="TPN",+$P(OR0,U,11)'=$O(^ORD(100.98,"B","TPN",0)) D
"RTN","ORMPS",110,0)
 .. N DA,DR,DIE,ORDG S ORDG=+$O(^ORD(100.98,"B","TPN",0))
"RTN","ORMPS",111,0)
 .. S DA=+ORIFN,DR="23////"_ORDG,DIE="^OR(100," D ^DIE
"RTN","ORMPS",112,0)
 . I $P(OR3,U,11)=2,$P(OR0,U,12)="I" S ORSTRT=+$P($G(^OR(100,+ORIFN,8,1,0)),U,16) ;use Release Date for inpt renewals
"RTN","ORMPS",113,0)
 I $P(OR0,U,12)="I",$P(ZRX,"|",4)="R",+$P(ZRX,"|",2)=+ORIFN S ORSTRT=$P(OR0,U,8) ;keep orig start when renewed
"RTN","ORMPS",114,0)
 I ORSTS=7,ORSTOP S $P(^OR(100,+ORIFN,6),U,6)=ORSTOP ;save exp date
"RTN","ORMPS",115,0)
 I ORSTS=1 D EXPDT
"RTN","ORMPS",116,0)
 D DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",117,0)
 D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",118,0)
 I ORSTS=$P(OR3,U,3),ORSTOP'=$P(OR0,U,9) D SETALL^ORDD100(+ORIFN) ;AC xrf
"RTN","ORMPS",119,0)
 S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",120,0)
 I "^1^13^"[(U_$P(OR3,U,3)_U),"^3^5^6^15^"[(U_ORSTS_U) D  ;reinstated
"RTN","ORMPS",121,0)
 . I $P($G(^OR(100,+ORIFN,8,+$P(OR3,U,7),0)),U,2)="DC" S ^(2)=ORNOW_U_ORWHO ; When^Who reinstated order
"RTN","ORMPS",122,0)
 . S I="?" F  S I=$O(^OR(100,+ORIFN,8,I),-1) Q:'+I  I $P(^(I,0),U,15)="" S $P(^OR(100,+ORIFN,3),U,7)=I Q  ;138 Finds current action
"RTN","ORMPS",123,0)
 . K ^OR(100,+ORIFN,6) D SETALL^ORDD100(+ORIFN)
"RTN","ORMPS",124,0)
 D UPD^ORMPS3 ;update some responses
"RTN","ORMPS",125,0)
 Q
"RTN","ORMPS",126,0)
 ;
"RTN","ORMPS",127,0)
STATUS(X) ; -- HL7 order status
"RTN","ORMPS",128,0)
 N Y S Y=$S(X="IP":5,X="CM":6,X="DC":1,X="ZE":7,X="HD":3,X="ZX":11,X="RP":12,X="ZZ":15,X="ZS":6,X="ZU":6,1:"")
"RTN","ORMPS",129,0)
 Q Y
"RTN","ORMPS",130,0)
 ;
"RTN","ORMPS",131,0)
DE ; -- Data Errors
"RTN","ORMPS",132,0)
 Q
"RTN","ORMPS",133,0)
 ;
"RTN","ORMPS",134,0)
UA ; -- Unable to accept [ack]
"RTN","ORMPS",135,0)
UX ; -- Unable to change [ack]
"RTN","ORMPS",136,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMPS",137,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_ORNOW_U_U_OREASON
"RTN","ORMPS",138,0)
 I $P($G(^OR(100,+ORIFN,3)),U,11)=2 N ORIG S ORIG=$P(^(3),U,5) S:ORIG $P(^OR(100,ORIG,3),U,6)="" ;remove fwd ptr if pending renewal
"RTN","ORMPS",139,0)
 D STATUS^ORCSAVE2(+ORIFN,13)
"RTN","ORMPS",140,0)
UC ; -- Unable to cancel [ack]
"RTN","ORMPS",141,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMPS",142,0)
UH ; -- Unable to hold [ack]
"RTN","ORMPS",143,0)
UR ; -- Unable to release hold [ack]
"RTN","ORMPS",144,0)
 N ORDA S ORDA=+$P(ORIFN,";",2) I ORDA D
"RTN","ORMPS",145,0)
 . S $P(^OR(100,+ORIFN,8,ORDA,0),U,15)=13 ;request rejected
"RTN","ORMPS",146,0)
 . S:$L(OREASON) ^OR(100,+ORIFN,8,ORDA,1)=OREASON
"RTN","ORMPS",147,0)
 Q
"RTN","ORMPS",148,0)
 ;
"RTN","ORMPS",149,0)
OC ; -- Cancelled (before pharmacist's verification)
"RTN","ORMPS",150,0)
 G:ORTYPE="ORR" UA S:ORNATR="A" ORWHO=""
"RTN","ORMPS",151,0)
 S:'ORSTS ORSTS=13 S:ORSTS=12 ORNATR="S"
"RTN","ORMPS",152,0)
 S $P(^OR(100,+ORIFN,6),U,1,5)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORWHO_U_ORNOW_U_U_$S((OREASON["16:")!(OREASON["17:"):$P(OREASON,":",2),1:OREASON)
"RTN","ORMPS",153,0)
 I $P($G(^OR(100,+ORIFN,3)),U,11)=2 N ORIG S ORIG=$P(^(3),U,5) S:ORIG $P(^OR(100,ORIG,3),U,6)="" ;remove fwd ptr when pending renewal cancelled
"RTN","ORMPS",154,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:ORSTOP>ORNOW ORSTOP=ORNOW
"RTN","ORMPS",155,0)
 D EXPDT,UPDATE(ORSTS,"DC")
"RTN","ORMPS",156,0)
 Q
"RTN","ORMPS",157,0)
 ;
"RTN","ORMPS",158,0)
CR ; -- Cancelled [ack]
"RTN","ORMPS",159,0)
 D EXPDT ;save exp date, if past
"RTN","ORMPS",160,0)
 D STATUS^ORCSAVE2(+ORIFN,13) S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",161,0)
 Q
"RTN","ORMPS",162,0)
 ;
"RTN","ORMPS",163,0)
OD ; -- Discontinued (cancelled after pharmacist's verification)
"RTN","ORMPS",164,0)
 S:'ORSTS ORSTS=1 S:ORSTS=12 ORNATR="C"
"RTN","ORMPS",165,0)
 I ORNATR="A" S ORWHO="" I $G(DGPMT)=3,$$MVT^DGPMOBS(DGPMDA) D XTMP^ORMEVNT ;save order#
"RTN","ORMPS",166,0)
 S $P(^OR(100,+ORIFN,6),U,1,5)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORWHO_U_ORNOW_U_U_$S((OREASON["16:")!(OREASON["17:"):$P(OREASON,":",2),1:OREASON)
"RTN","ORMPS",167,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:ORSTOP>ORNOW ORSTOP=ORNOW
"RTN","ORMPS",168,0)
 D EXPDT,UPDATE(ORSTS,"DC")
"RTN","ORMPS",169,0)
 Q
"RTN","ORMPS",170,0)
 ;
"RTN","ORMPS",171,0)
DR ; -- Discontinued [ack]
"RTN","ORMPS",172,0)
 D EXPDT ;save exp date, if past
"RTN","ORMPS",173,0)
 D STATUS^ORCSAVE2(+ORIFN,1) S ^OR(100,+ORIFN,4)=PKGIFN
"RTN","ORMPS",174,0)
 Q
"RTN","ORMPS",175,0)
 ;
"RTN","ORMPS",176,0)
EXPDT ; -- save exp date when dc'd
"RTN","ORMPS",177,0)
 N STOP S STOP=$P($G(^OR(100,+ORIFN,0)),U,9)
"RTN","ORMPS",178,0)
 I STOP,STOP<ORNOW,'$P($G(^OR(100,+ORIFN,6)),U,6) S $P(^(6),U,6)=STOP
"RTN","ORMPS",179,0)
 Q
"RTN","ORMPS",180,0)
 ;
"RTN","ORMPS",181,0)
OH ; -- Held
"RTN","ORMPS",182,0)
 S:'ORSTS ORSTS=3 D UPDATE(ORSTS,"HD")
"RTN","ORMPS",183,0)
 Q
"RTN","ORMPS",184,0)
 ;
"RTN","ORMPS",185,0)
HR ; -- Held [ack]
"RTN","ORMPS",186,0)
 D STATUS^ORCSAVE2(+ORIFN,3)
"RTN","ORMPS",187,0)
 Q
"RTN","ORMPS",188,0)
 ;
"RTN","ORMPS",189,0)
RL ; -- Released hold
"RTN","ORMPS",190,0)
OE ; -- Released hold
"RTN","ORMPS",191,0)
 N ORDA S ORDA=+$P(^OR(100,+ORIFN,3),U,7)
"RTN","ORMPS",192,0)
 I $P($G(^OR(100,+ORIFN,8,ORDA,0)),U,2)="HD" S $P(^(2),U,1,2)=ORNOW_U_ORWHO
"RTN","ORMPS",193,0)
 S:'$G(ORSTS) ORSTS=6 D UPDATE(ORSTS,"RL")
"RTN","ORMPS",194,0)
 Q
"RTN","ORMPS",195,0)
 ;
"RTN","ORMPS",196,0)
OR ; -- Released / [ack]
"RTN","ORMPS",197,0)
 S:'ORSTS ORSTS=6 D STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",198,0)
 D:ORSTRT!ORSTOP DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",199,0)
 Q
"RTN","ORMPS",200,0)
 ;
"RTN","ORMPS",201,0)
UPDATE(ORSTS,ORACT) ; -- continue
"RTN","ORMPS",202,0)
 N ORX,ORDA,ORP D:$G(ORSTS) STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMPS",203,0)
 D:ORSTRT!ORSTOP DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS",204,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMPS",205,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON,ORNOW,ORWHO)
"RTN","ORMPS",206,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMPS",207,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORNOW,ORWHO,ORNATR)
"RTN","ORMPS",208,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMPS",209,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMPS",210,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMPS",211,0)
 I ORACT="DC",'$$ACTV^ORX1(ORNATR) S $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMPS",212,0)
 D:$G(ORACT)="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMPS",213,0)
 Q
"RTN","ORMPS",214,0)
 ;
"RTN","ORMPS",215,0)
RXO() ; -- RXO segment
"RTN","ORMPS",216,0)
 N I,X S X="",I=$O(@ORMSG@(+ORC))
"RTN","ORMPS",217,0)
 I I,$E(@ORMSG@(I),1,3)="RXO" S X=I_U_@ORMSG@(I)
"RTN","ORMPS",218,0)
 Q X
"RTN","ORMPS",219,0)
 ;
"RTN","ORMPS",220,0)
RXE() ; -- RXE segment
"RTN","ORMPS",221,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMPS",222,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXE" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",223,0)
 Q X
"RTN","ORMPS",224,0)
 ;
"RTN","ORMPS",225,0)
RXR() ; -- RXR segment
"RTN","ORMPS",226,0)
 N X,I,SEG S X="",I=+RXE
"RTN","ORMPS",227,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXR" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",228,0)
 Q X
"RTN","ORMPS",229,0)
 ;
"RTN","ORMPS",230,0)
RXC() ; -- [First] RXC segment
"RTN","ORMPS",231,0)
 N X,I,SEG S X="",I=+RXE
"RTN","ORMPS",232,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="RXC" S X=I Q
"RTN","ORMPS",233,0)
 Q X
"RTN","ORMPS",234,0)
 ;
"RTN","ORMPS",235,0)
ZRX() ; -- ZRX segment
"RTN","ORMPS",236,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMPS",237,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="ZRX" S X=I_U_@ORMSG@(I) Q
"RTN","ORMPS",238,0)
 Q X
"RTN","ORQQPL")
0^4^B25909130
"RTN","ORQQPL",1,0)
ORQQPL ; ISL/CLA,REV,JER - RPCs to return problem list data ;08/08/12  12:43
"RTN","ORQQPL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,10,85,173,306**;Dec 17, 1997;Build 43
"RTN","ORQQPL",3,0)
LIST(ORPY,DFN,STATUS)  ;return pt's problem list in format: ien^description^
"RTN","ORQQPL",4,0)
 ; ICD^onset^last modified^SC^SpExp
"RTN","ORQQPL",5,0)
 ; STATUS = status of problems to return: (A)CTIVE, (I)NACTIVE, ("")ALL
"RTN","ORQQPL",6,0)
 Q:'DFN
"RTN","ORQQPL",7,0)
 N ORGMPL,I,DETAIL
"RTN","ORQQPL",8,0)
 I $L($T(LIST^GMPLUTL2))>0 D
"RTN","ORQQPL",9,0)
 .D LIST^GMPLUTL2(.ORGMPL,DFN,STATUS)
"RTN","ORQQPL",10,0)
 .Q:'$D(ORGMPL(0))
"RTN","ORQQPL",11,0)
 .S DETAIL=$$DETAIL^ORWCV1(10)
"RTN","ORQQPL",12,0)
 .F I=1:1:ORGMPL(0) D
"RTN","ORQQPL",13,0)
 ..N LEX,X
"RTN","ORQQPL",14,0)
 ..S X=ORGMPL(I)
"RTN","ORQQPL",15,0)
 ..S ORPY(I)=$P(X,U)_U_$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4)_U_$P(X,U,5)_U_$P(X,U,6)_U_$P(X,U,7)_U_$P(X,U,8)_U_$P(X,U,10)_U_$P(X,U,9)_U_U_DETAIL_U_U_$P(X,U,11)_U_$P(X,U,12)
"RTN","ORQQPL",16,0)
 ..I '+$$STATCHK^ICDAPIU($P(ORPY(I),U,4),DT) D  I 1
"RTN","ORQQPL",17,0)
 ...S $P(ORPY(I),U,13)="#",$P(ORPY(I),U,9)="#"
"RTN","ORQQPL",18,0)
 ..E  I $L($P(ORPY(I),U,14)),(+$$STATCHK^LEXSRC2($P(ORPY(I),U,14),DT,.LEX)'=1) S $P(ORPY(I),U,13)="$",$P(ORPY(I),U,9)="#"
"RTN","ORQQPL",19,0)
 .S:+$G(ORPY(1))<1 ORPY(1)="^No problems found."
"RTN","ORQQPL",20,0)
 I $L($T(LIST^GMPLUTL2))<1 S ORPY(1)="^Problem list not available.^"
"RTN","ORQQPL",21,0)
 K X
"RTN","ORQQPL",22,0)
 Q
"RTN","ORQQPL",23,0)
DETAIL(Y,DFN,PROBIEN,ID)  ; RETURN DETAILED PROBLEM DATA
"RTN","ORQQPL",24,0)
 N ORGMPL,GMPDT
"RTN","ORQQPL",25,0)
 I $L($T(DETAIL^GMPLUTL2))>0 D
"RTN","ORQQPL",26,0)
 .N CR,I,J,T,LEX S CR=$CHAR(13),I=1
"RTN","ORQQPL",27,0)
 .D DETAIL^GMPLUTL2(PROBIEN,.ORGMPL)
"RTN","ORQQPL",28,0)
 .S Y(I)=ORGMPL("NARRATIVE"),I=I+1
"RTN","ORQQPL",29,0)
 .I '+$$STATCHK^ICDAPIU(ORGMPL("DIAGNOSIS"),DT) D  I 1
"RTN","ORQQPL",30,0)
 ..S Y(I)="*** The ICD-9-CM code "_ORGMPL("DIAGNOSIS")_" is currently inactive. ***",I=I+1
"RTN","ORQQPL",31,0)
 .I +$G(ORGMPL("SCTC")),(+$$STATCHK^LEXSRC2($G(ORGMPL("SCTC")),DT,.LEX)'=1) D
"RTN","ORQQPL",32,0)
 ..S Y(I)="*** The SNOMED-CT code "_ORGMPL("SCTC")_" is currently inactive. ***",I=I+1
"RTN","ORQQPL",33,0)
 .I $L($G(ORGMPL("SCTC")))!$L($G(ORGMPL("SCTD"))) D  I 1
"RTN","ORQQPL",34,0)
 ..I $P(ORGMPL("NARRATIVE")," (SCT")'=ORGMPL("SCTT") S Y(I)="         SNOMED-CT: "_ORGMPL("SCTT"),I=I+1
"RTN","ORQQPL",35,0)
 ..I $L($G(ORGMPL("DIAGNOSIS")))&$L($G(ORGMPL("ICDD"))) S Y(I)="  Primary ICD-9-CM: "_$G(ORGMPL("DIAGNOSIS"))_$$PAD^ORUTL($G(ORGMPL("DIAGNOSIS")),6)_" ["_$G(ORGMPL("ICDD"))_"]",I=I+1
"RTN","ORQQPL",36,0)
 .E  I $L($G(ORGMPL("ICDD"))) D
"RTN","ORQQPL",37,0)
 ..N ICDD,J S ICDD=$$WRAP^ORU2($G(ORGMPL("ICDD")),65)
"RTN","ORQQPL",38,0)
 ..F J=1:1:$L(ICDD,"|") S Y(I)=$S(J=1:"ICD-9-CM TEXT: ",1:"              ")_$P(ICDD,"|",J),I=I+1
"RTN","ORQQPL",39,0)
 .I ORGMPL("ICD9MLTP")'="" F T=1:1:ORGMPL("ICD9MLTP") D
"RTN","ORQQPL",40,0)
 ..S Y(I)=$S(T=1:"Secondary ICD-9-CM: ",T>1:"                  : ")_$P($G(ORGMPL("ICD9MLTP",T)),U)_$$PAD^ORUTL($P($G(ORGMPL("ICD9MLTP",T)),U),6)_" ["_$P($G(ORGMPL("ICD9MLTP",T)),U,2)_"]",I=I+1
"RTN","ORQQPL",41,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",42,0)
 .S Y(I)="        Onset: "_ORGMPL("ONSET"),I=I+1
"RTN","ORQQPL",43,0)
 .S Y(I)="       Status: "_ORGMPL("STATUS")
"RTN","ORQQPL",44,0)
 .S Y(I)=Y(I)_$S(ORGMPL("PRIORITY")="ACUTE":"/ACUTE",ORGMPL("PRIORITY")="CHRONIC":"/CHRONIC",1:""),I=I+1
"RTN","ORQQPL",45,0)
 .S Y(I)="      SC Cond: "_ORGMPL("SC"),I=I+1
"RTN","ORQQPL",46,0)
 .S Y(I)="     Exposure: "_$S($G(ORGMPL("EXPOSURE"))>0:ORGMPL("EXPOSURE",1),1:"None"),I=I+1
"RTN","ORQQPL",47,0)
 .I $G(ORGMPL("EXPOSURE"))>1 F J=2:1:ORGMPL("EXPOSURE")  D
"RTN","ORQQPL",48,0)
 ..S Y(I)="               "_ORGMPL("EXPOSURE",J),I=I+1
"RTN","ORQQPL",49,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",50,0)
 .S Y(I)="     Provider: "_ORGMPL("PROVIDER"),I=I+1
"RTN","ORQQPL",51,0)
 .S Y(I)="       Clinic: "_ORGMPL("CLINIC"),I=I+1
"RTN","ORQQPL",52,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",53,0)
 .S Y(I)="     Recorded: "_$P(ORGMPL("RECORDED"),U)_", by "_$P(ORGMPL("RECORDED"),U,2),I=I+1
"RTN","ORQQPL",54,0)
 .S Y(I)="      Entered: "_$P(ORGMPL("ENTERED"),U)_", by "_$P(ORGMPL("ENTERED"),U,2),I=I+1
"RTN","ORQQPL",55,0)
 .S Y(I)="      Updated: "_ORGMPL("MODIFIED"),I=I+1
"RTN","ORQQPL",56,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",57,0)
 .;S Y(I)=" Comment: "_$S($G(ORGMPL("COMMENT"))>0:ORGMPL("COMMENT"),1:"")
"RTN","ORQQPL",58,0)
 .I $G(ORGMPL("COMMENT"))>0 D
"RTN","ORQQPL",59,0)
 ..S Y(I)="----------- Comments -----------",I=I+1
"RTN","ORQQPL",60,0)
 ..;F J=ORGMPL("COMMENT"):-1:1  D
"RTN","ORQQPL",61,0)
 ..;.S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",62,0)
 ..;.S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",63,0)
 ..F J=1:1:ORGMPL("COMMENT")  D
"RTN","ORQQPL",64,0)
 ...S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",65,0)
 ...S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",66,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",67,0)
 .D HIST^ORQQPL2(.GMPDT,PROBIEN)
"RTN","ORQQPL",68,0)
 .I $G(GMPDT(0))>0 D
"RTN","ORQQPL",69,0)
 ..S Y(I)="----------- Audit History -----------",I=I+1
"RTN","ORQQPL",70,0)
 ..F J=1:1:GMPDT(0)  S Y(I)=$P(GMPDT(J),U)_":  "_$P(GMPDT(J),U,2),I=I+1
"RTN","ORQQPL",71,0)
 I $L($T(DETAIL^GMPLUTL2))<1 S Y(1)="Problem list not available."
"RTN","ORQQPL",72,0)
 Q
"RTN","ORQQPL",73,0)
HASPROB(ORDFN,ORPROB) ;extrinsic function returns 1^problem text;ICD9 if
"RTN","ORQQPL",74,0)
 ;pt has an active problem which contains any piece of ORPROB
"RTN","ORQQPL",75,0)
 ;ORDFN   patient DFN
"RTN","ORQQPL",76,0)
 ;ORPROB  problems to check vs. active prob list in format: PROB1TEXT;PROB1ICD^PROB2TEXT;PROB2ICD^PROB3...
"RTN","ORQQPL",77,0)
 ;if ICD includes "." an exact match will be sought
"RTN","ORQQPL",78,0)
 ;if not, a match of general ICD category will be sought
"RTN","ORQQPL",79,0)
 ;Note: All ICD codes passed must be preceded with ";"
"RTN","ORQQPL",80,0)
 Q:+$G(ORDFN)<1 "0^Patient not identified."
"RTN","ORQQPL",81,0)
 Q:'$L($G(ORPROB)) "0^Problem not identified."
"RTN","ORQQPL",82,0)
 N ORQAPL,ORQY,ORI,ORJ,ORCNT,ORQPL,ORQICD,ORQRSLT
"RTN","ORQQPL",83,0)
 D LIST(.ORQY,ORDFN,"A")
"RTN","ORQQPL",84,0)
 Q:$P(ORQY(1),U)="" "0^No active problems found."
"RTN","ORQQPL",85,0)
 S ORQRSLT="0^No matching problems found."
"RTN","ORQQPL",86,0)
 S ORCNT=$L(ORPROB,U)
"RTN","ORQQPL",87,0)
 S ORI=0 F  S ORI=$O(ORQY(ORI)) Q:ORI<1  D
"RTN","ORQQPL",88,0)
 .S ORQAPL=ORQY(ORI)
"RTN","ORQQPL",89,0)
 .F ORJ=1:1:ORCNT D
"RTN","ORQQPL",90,0)
 ..S ORQPL=$P($P(ORPROB,U,ORJ),";"),ORQICD=$P($P(ORPROB,U,ORJ),";",2)
"RTN","ORQQPL",91,0)
 ..;if problem text and pt's problem contains problem text passed:
"RTN","ORQQPL",92,0)
 ..I $L(ORQPL),($P(ORQAPL,U,2)[ORQPL) D
"RTN","ORQQPL",93,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",94,0)
 ..;
"RTN","ORQQPL",95,0)
 ..;if specific ICD (contains ".") and pt's ICD equals ICD passed:
"RTN","ORQQPL",96,0)
 ..I $L(ORQICD),(ORQICD["."),($P(ORQAPL,U,4)=ORQICD) D
"RTN","ORQQPL",97,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",98,0)
 ..;
"RTN","ORQQPL",99,0)
 ..;if non-specific ICD and pt's ICD category equals ICD category passed:
"RTN","ORQQPL",100,0)
 ..I $L(ORQICD),(ORQICD'["."),($P($P(ORQAPL,U,4),".")=ORQICD) D
"RTN","ORQQPL",101,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",102,0)
 Q ORQRSLT
"RTN","ORQQPL1")
0^5^B77752949
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR,REV,ISL/JER - PROBLEM LIST FOR CPRS GUI ;02/05/13  16:49
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148,173,203,206,249,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW,ORDATE) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME
"RTN","ORQQPL1",8,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL1",9,0)
 S:'$G(N) N=100
"RTN","ORQQPL1",10,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",11,0)
 D CONFIG^LEXSET("GMPL",VIEW,ORDATE)
"RTN","ORQQPL1",12,0)
 D LOOK^LEXA(FROM,"GMPL",N,"",ORDATE)
"RTN","ORQQPL1",13,0)
 S S=0
"RTN","ORQQPL1",14,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",15,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",16,0)
 . S COD="",CIEN="",SYS="",NAME=""
"RTN","ORQQPL1",17,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",18,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",19,0)
 .. S COD="799.9"
"RTN","ORQQPL1",20,0)
 .. S CIEN=""
"RTN","ORQQPL1",21,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",22,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",23,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",24,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",25,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",26,0)
 .. S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",27,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",28,0)
 .. ;
"RTN","ORQQPL1",29,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",30,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",31,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",32,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",33,0)
 .. S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",34,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",35,0)
 .. ;
"RTN","ORQQPL1",36,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",37,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",38,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",39,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",40,0)
 .. S CIEN=+$$CODEN^ICDCODE(COD,80)
"RTN","ORQQPL1",41,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",42,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",43,0)
 . ;
"RTN","ORQQPL1",44,0)
 . ; jeh Clean left over codes
"RTN","ORQQPL1",45,0)
 . S NAME=$P(NAME," (CPT-4")
"RTN","ORQQPL1",46,0)
 . S NAME=$P(NAME," (DSM-IV")
"RTN","ORQQPL1",47,0)
 . S NAME=$P(NAME,"(TITLE 38 ")
"RTN","ORQQPL1",48,0)
 . S NAME=$P(NAME," (ICD-9-CM")
"RTN","ORQQPL1",49,0)
 . ;
"RTN","ORQQPL1",50,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",51,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",52,0)
 . S MAX=S
"RTN","ORQQPL1",53,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT"))
"RTN","ORQQPL1",54,0)
 K ^TMP("LEXSCH",$J)
"RTN","ORQQPL1",55,0)
 Q
"RTN","ORQQPL1",56,0)
 ;
"RTN","ORQQPL1",57,0)
SORT(LEX) ; Sort terms alphabetically
"RTN","ORQQPL1",58,0)
 N ORI S ORI=0
"RTN","ORQQPL1",59,0)
 F  S ORI=$O(LEX("LIST",ORI)) Q:+ORI'>0  S LEX("ALPHA",$E($P(LEX("LIST",ORI),U,2),1,255),ORI)=""
"RTN","ORQQPL1",60,0)
 Q
"RTN","ORQQPL1",61,0)
 ;
"RTN","ORQQPL1",62,0)
ICDREC(COD) ;
"RTN","ORQQPL1",63,0)
 N CODIEN
"RTN","ORQQPL1",64,0)
 I COD="" Q ""
"RTN","ORQQPL1",65,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",66,0)
 S CODIEN=$$CODEN^ICDCODE(COD,80) ;ICR #3990
"RTN","ORQQPL1",67,0)
 Q CODIEN
"RTN","ORQQPL1",68,0)
 ;
"RTN","ORQQPL1",69,0)
CPTREC(COD) ;
"RTN","ORQQPL1",70,0)
 I COD="" Q ""
"RTN","ORQQPL1",71,0)
 Q $$CODEN^ICPTCOD(COD) ;ICR #1995
"RTN","ORQQPL1",72,0)
 ;
"RTN","ORQQPL1",73,0)
EDLOAD(RETURN,DA,GMPROV,GMPVAMC) ; LOAD  EDIT ARRAYS
"RTN","ORQQPL1",74,0)
 ; DA=problem IFN
"RTN","ORQQPL1",75,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",76,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",77,0)
 S I=0
"RTN","ORQQPL1",78,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",79,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",80,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",81,0)
 Q
"RTN","ORQQPL1",82,0)
 ;
"RTN","ORQQPL1",83,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",84,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",85,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",86,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",87,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",88,0)
 . S I=I+1
"RTN","ORQQPL1",89,0)
 S S=""
"RTN","ORQQPL1",90,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",91,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",92,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",93,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",94,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",95,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",96,0)
 . S I=I+1
"RTN","ORQQPL1",97,0)
 Q
"RTN","ORQQPL1",98,0)
 ;
"RTN","ORQQPL1",99,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY,GMPSRCH) ; SAVE EDITED RES
"RTN","ORQQPL1",100,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",101,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",102,0)
 ;
"RTN","ORQQPL1",103,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",104,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",105,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",106,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",107,0)
 ;
"RTN","ORQQPL1",108,0)
 S S=""
"RTN","ORQQPL1",109,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",110,0)
 . S @EDARRAY(S)
"RTN","ORQQPL1",111,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",112,0)
 . L +^AUPNPROB(GMPIFN,11):10  ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",113,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",114,0)
 ;
"RTN","ORQQPL1",115,0)
 D EN^GMPLSAVE  ; save the data
"RTN","ORQQPL1",116,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",117,0)
 ;
"RTN","ORQQPL1",118,0)
 L -^AUPNPROB(GMPIFN,11)  ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",119,0)
 S RETURN=1
"RTN","ORQQPL1",120,0)
 Q
"RTN","ORQQPL1",121,0)
 ;
"RTN","ORQQPL1",122,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",123,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",124,0)
 ; or addition of multiple comments.
"RTN","ORQQPL1",125,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",126,0)
 ;
"RTN","ORQQPL1",127,0)
 N S,GMPL,GMPORIG,ORARRAY ; last 2 vars created in nested call
"RTN","ORQQPL1",128,0)
 S S=""
"RTN","ORQQPL1",129,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",130,0)
 . S @UPDARRAY(S)
"RTN","ORQQPL1",131,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",132,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",133,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",134,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",135,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",136,0)
 Q
"RTN","ORQQPL1",137,0)
 ;
"RTN","ORQQPL1",138,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY,GMPSRCH) ; SAVE NEW RECORD
"RTN","ORQQPL1",139,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",140,0)
 ; ADDARRAY - array used for indirect sets of  GMPFLDS()
"RTN","ORQQPL1",141,0)
 ;
"RTN","ORQQPL1",142,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",143,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",144,0)
 S RETURN=0 ;
"RTN","ORQQPL1",145,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",146,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",147,0)
 ;
"RTN","ORQQPL1",148,0)
 S S=""
"RTN","ORQQPL1",149,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",150,0)
 . S @ADDARRAY(S)
"RTN","ORQQPL1",151,0)
 ;
"RTN","ORQQPL1",152,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",153,0)
 ;
"RTN","ORQQPL1",154,0)
 S RETURN=DA
"RTN","ORQQPL1",155,0)
 ;
"RTN","ORQQPL1",156,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",157,0)
 S RETURN=1
"RTN","ORQQPL1",158,0)
 Q
"RTN","ORQQPL1",159,0)
 ;
"RTN","ORQQPL1",160,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",161,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",162,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",163,0)
 ;
"RTN","ORQQPL1",164,0)
 N X,PV,CTXT,GMPLPROV,ORENT
"RTN","ORQQPL1",165,0)
 S GMPLUSER=$$CLINUSER(ORDUZ)
"RTN","ORQQPL1",166,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",167,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",168,0)
 S RETURN(0)=GMPLUSER ;  problem list user, or other user
"RTN","ORQQPL1",169,0)
 S RETURN(1)=$$VIEW^GMPLX1(ORDUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",170,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",171,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",172,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",173,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",174,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",175,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",176,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",177,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",178,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",179,0)
 S RETURN(8)=$$SERVICE^GMPLX1(ORDUZ) ; user's service/section
"RTN","ORQQPL1",180,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",181,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",182,0)
 ;                                                      /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",183,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",184,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",185,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",186,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",187,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",188,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",189,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",190,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",191,0)
 S RETURN(11)=""
"RTN","ORQQPL1",192,0)
 S RETURN(12)=+$P($G(CTXT),";",4)    ; should comments display?
"RTN","ORQQPL1",193,0)
 S ORENT="ALL^SRV.`"_+$$SERVICE^GMPLX1(ORDUZ,1)
"RTN","ORQQPL1",194,0)
 S RETURN(13)=+$$GET^XPAR(ORENT,"ORQQPL SUPPRESS CODES",1) ; suppress codes?
"RTN","ORQQPL1",195,0)
 K GMPLVIEW
"RTN","ORQQPL1",196,0)
 Q
"RTN","ORQQPL1",197,0)
 ;
"RTN","ORQQPL1",198,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",199,0)
 N ORUSER
"RTN","ORQQPL1",200,0)
 S ORUSER=0
"RTN","ORQQPL1",201,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",202,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",203,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",204,0)
 Q ORUSER
"RTN","ORQQPL1",205,0)
 ;
"RTN","ORQQPL1",206,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",207,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",208,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","ORQQPL1",209,0)
 ;
"RTN","ORQQPL1",210,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",211,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",212,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",213,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",214,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",215,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",216,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",217,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",218,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",219,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",220,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",221,0)
 S RETURN(9)=$G(GMPCV) ; CV
"RTN","ORQQPL1",222,0)
 S RETURN(10)=$G(GMPSHD) ; SHAD
"RTN","ORQQPL1",223,0)
 Q
"RTN","ORQQPL1",224,0)
 ;
"RTN","ORQQPL1",225,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",226,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",227,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",228,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",229,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",230,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",231,0)
 S NS=""
"RTN","ORQQPL1",232,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",233,0)
 . S IEN=""
"RTN","ORQQPL1",234,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",235,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01)  ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",236,0)
 Q
"RTN","ORQQPL1",237,0)
 ;
"RTN","ORQQPL1",238,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",239,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of
"RTN","ORQQPL1",240,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",241,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",242,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",243,0)
 N I,NAME,IEN
"RTN","ORQQPL1",244,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",245,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",246,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",247,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",248,0)
 Q
"RTN","ORQQPL1",249,0)
 ;
"RTN","ORQQPL1",250,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",251,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",252,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",253,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",254,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",255,0)
 Q
"RTN","ORQQPL1",256,0)
 ;
"RTN","ORQQPL1",257,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",258,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",259,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",260,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",261,0)
 Q
"RTN","ORQQPL1",262,0)
GETDX(CODE,SYS,ORDT) ; Get ICD associated with SNOMED CT or VHAT Code
"RTN","ORQQPL1",263,0)
 N LEX,ORI,ORY S ORY="",ORDT=$G(ORDT,DT)
"RTN","ORQQPL1",264,0)
 I SYS["VHAT" S ORY=$$GETASSN^LEXTRAN1(CODE,"VHAT2ICD") I 1
"RTN","ORQQPL1",265,0)
 E  S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD")
"RTN","ORQQPL1",266,0)
 I $S(+ORY'>0:1,+$P(ORY,U,2)'>0:1,+LEX'>0:1,1:0) S ORY=799.9 G GETDXX
"RTN","ORQQPL1",267,0)
 S ORI=0,ORY=""
"RTN","ORQQPL1",268,0)
 F  S ORI=$O(LEX(ORI)) Q:+ORI'>0  D
"RTN","ORQQPL1",269,0)
 . N ICD
"RTN","ORQQPL1",270,0)
 . S ICD=$O(LEX(ORI,""))
"RTN","ORQQPL1",271,0)
 . I +$$STATCHK^ICDAPIU(ICD,ORDT)'>0 S ICD=""
"RTN","ORQQPL1",272,0)
 . I ICD]"" S ORY=$S(ORY'="":ORY_"/",1:"")_ICD
"RTN","ORQQPL1",273,0)
 I (ORY]""),(ORY'[".") S ORY=ORY_"."
"RTN","ORQQPL1",274,0)
GETDXX Q ORY
"RTN","ORQQPL1",275,0)
TEST ; test invocation
"RTN","ORQQPL1",276,0)
 N LIST,I S I=""
"RTN","ORQQPL1",277,0)
 D LEXSRCH(.LIST,"diabetes with neuro",10,"GMPL",DT)
"RTN","ORQQPL1",278,0)
 F  S I=$O(LIST(I)) Q:+I'>0  W !,LIST(I)
"RTN","ORQQPL1",279,0)
 Q
"RTN","ORQQPL2")
0^6^B35231801
"RTN","ORQQPL2",1,0)
ORQQPL2 ; ALB/PDR/REV - RPCs FOR CPRS GUI IMPLEMENTATION ;02/07/13  08:43
"RTN","ORQQPL2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,306**;Dec 17, 1997;Build 43
"RTN","ORQQPL2",3,0)
 ;
"RTN","ORQQPL2",4,0)
 ; -------------- GET HISTORY FOR DETAIL DISPLAY ----------------------
"RTN","ORQQPL2",5,0)
 ;
"RTN","ORQQPL2",6,0)
HIST(RETURN,GMPIFN) ; GET AUDIT HISTORY
"RTN","ORQQPL2",7,0)
 ; taken from EN^GMPLDISP
"RTN","ORQQPL2",8,0)
 N IDT,AIFN,S,ORDT,TXT,I,L,GMPDT,LCNT
"RTN","ORQQPL2",9,0)
 S LCNT=0
"RTN","ORQQPL2",10,0)
 I +$O(^GMPL(125.8,"AD",GMPIFN,0))'>0 D  Q  ;BAIL OUT - NO CHANGES
"RTN","ORQQPL2",11,0)
 . S RETURN(0)="NONE"
"RTN","ORQQPL2",12,0)
 ;       get change history
"RTN","ORQQPL2",13,0)
 S IDT=""
"RTN","ORQQPL2",14,0)
 F  S IDT=$O(^GMPL(125.8,"AD",GMPIFN,IDT)) Q:IDT'>0  D
"RTN","ORQQPL2",15,0)
 . S AIFN=""
"RTN","ORQQPL2",16,0)
 . F  S AIFN=$O(^GMPL(125.8,"AD",GMPIFN,IDT,AIFN)) Q:AIFN'>0  D
"RTN","ORQQPL2",17,0)
 .. D DT^GMPLHIST
"RTN","ORQQPL2",18,0)
 ;         Transfer data and clean up for return to GUI
"RTN","ORQQPL2",19,0)
 S S="",I=0,TXT=""
"RTN","ORQQPL2",20,0)
 F  S S=$O(GMPDT(S)) Q:S=""  D
"RTN","ORQQPL2",21,0)
 . S L=GMPDT(S,0)
"RTN","ORQQPL2",22,0)
 . I $L(L,": ")>1 D  Q  ; does line begin with date? (hope ": " can't be part of text)
"RTN","ORQQPL2",23,0)
 .. D FLUSH(.RETURN,.I,$G(ORDT),$G(TXT))
"RTN","ORQQPL2",24,0)
 .. S ORDT=$P(L,": ") ; get new date
"RTN","ORQQPL2",25,0)
 .. S TXT=$$STRIP($P(L,": ",2,999)) ; start new text string
"RTN","ORQQPL2",26,0)
 . S TXT=TXT_" "_$$STRIP(L)  ; line does not begin with date, so add to existing text line
"RTN","ORQQPL2",27,0)
 I '$D(RETURN(0)) S RETURN(0)=I
"RTN","ORQQPL2",28,0)
 D FLUSH(.RETURN,.I,$G(ORDT),TXT)
"RTN","ORQQPL2",29,0)
 Q
"RTN","ORQQPL2",30,0)
 ;
"RTN","ORQQPL2",31,0)
FLUSH(RETURN,I,ORDT,TXT) ; FLUSH FORMATTED AUDIT STRING
"RTN","ORQQPL2",32,0)
  I I'=0 D  ; do we have a text string built?
"RTN","ORQQPL2",33,0)
 . S RETURN(I)=$$STRIP(ORDT)_U_TXT  ; return date and text
"RTN","ORQQPL2",34,0)
  S I=I+1
"RTN","ORQQPL2",35,0)
 Q
"RTN","ORQQPL2",36,0)
 ;
"RTN","ORQQPL2",37,0)
STRIP(VAL) ; STRIP LEADING SPACES FROM VALUES
"RTN","ORQQPL2",38,0)
 N J
"RTN","ORQQPL2",39,0)
 F J=1:1 Q:$E(VAL,J)'=" "
"RTN","ORQQPL2",40,0)
 Q $E(VAL,J,9999)
"RTN","ORQQPL2",41,0)
 ;
"RTN","ORQQPL2",42,0)
 ; ------------------- DELETE A PROBLEM FROM LIST ---------------------
"RTN","ORQQPL2",43,0)
 ;
"RTN","ORQQPL2",44,0)
DELETE(RESULT,GMPIFN,GMPROV,GMPVAMC,REASON) ; DELETE A PROBLEM
"RTN","ORQQPL2",45,0)
 ; From GMPL1 - silent version
"RTN","ORQQPL2",46,0)
 N CHNGE
"RTN","ORQQPL2",47,0)
 I REASON'="" D
"RTN","ORQQPL2",48,0)
 . S GMPFLD(10,"NEW",1)=REASON
"RTN","ORQQPL2",49,0)
 . D NEWNOTE^GMPLSAVE
"RTN","ORQQPL2",50,0)
 S CHNGE=GMPIFN_"^1.02^"_$$HTFM^XLFDT($H)
"RTN","ORQQPL2",51,0)
 S CHNGE=CHNGE_U_DUZ_"^P^H^Deleted^"_+$G(GMPROV)
"RTN","ORQQPL2",52,0)
 S $P(^AUPNPROB(GMPIFN,1),U,2)="H"
"RTN","ORQQPL2",53,0)
 S RESULT=1
"RTN","ORQQPL2",54,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",55,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",56,0)
 K GMPFLD
"RTN","ORQQPL2",57,0)
 Q
"RTN","ORQQPL2",58,0)
 ; ------------------ REPLACE REMOVED PROBLEM ----------------------
"RTN","ORQQPL2",59,0)
 ;
"RTN","ORQQPL2",60,0)
REPLACE(RETURN,DA) ; -- replace problem on patient's list
"RTN","ORQQPL2",61,0)
 ; taken from REPLACE^GMPLRPTR
"RTN","ORQQPL2",62,0)
 N CHNGE,DIE,DR
"RTN","ORQQPL2",63,0)
 I $P($G(^AUPNPROB(DA,1)),U,2)'="H" D  Q  ; BAIL OUT - INVALID RECORD
"RTN","ORQQPL2",64,0)
 . S RETURN=0
"RTN","ORQQPL2",65,0)
 S DR="1.02////P"
"RTN","ORQQPL2",66,0)
 S DIE="^AUPNPROB("
"RTN","ORQQPL2",67,0)
 D ^DIE
"RTN","ORQQPL2",68,0)
 S CHNGE=DA_"^1.02^"_$$HTFM^XLFDT($H)_U_DUZ_"^H^P^Replaced^"_DUZ
"RTN","ORQQPL2",69,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",70,0)
 D DTMOD^GMPLX(DA)
"RTN","ORQQPL2",71,0)
 S RETURN=1
"RTN","ORQQPL2",72,0)
 Q
"RTN","ORQQPL2",73,0)
 ;
"RTN","ORQQPL2",74,0)
 ; -------------------  VERIFY A PROBLEM ------------------------
"RTN","ORQQPL2",75,0)
 ;
"RTN","ORQQPL2",76,0)
VERIFY(RETURN,GMPIFN) ; -- verify a transcribed problem
"RTN","ORQQPL2",77,0)
 ; RETURN:  ;(consistent with UPDATE function)
"RTN","ORQQPL2",78,0)
 ;   SUCCESS:
"RTN","ORQQPL2",79,0)
 ;     RETURN>0, RETURN(0)=""
"RTN","ORQQPL2",80,0)
 ;   FAILURE:
"RTN","ORQQPL2",81,0)
 ;      RETURN<0, RETURN(0)=verbose error message
"RTN","ORQQPL2",82,0)
 N NOW,CHNGE
"RTN","ORQQPL2",83,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","ORQQPL2",84,0)
 I $P(^AUPNPROB(GMPIFN,1),U,2)'="T" D  Q  ; BAIL OUT - ALREADY VERIFIED
"RTN","ORQQPL2",85,0)
 . S RETURN=-1
"RTN","ORQQPL2",86,0)
 . S RETURN(0)="Problem Already Verified"
"RTN","ORQQPL2",87,0)
 L +^AUPNPROB(GMPIFN,0):10
"RTN","ORQQPL2",88,0)
 I '$T D  Q  ; BAIL OUT - NO LOCK
"RTN","ORQQPL2",89,0)
 . S RETURN=-1
"RTN","ORQQPL2",90,0)
 . S RETURN(0)="Record in use. Try again in a few moments"
"RTN","ORQQPL2",91,0)
 S $P(^AUPNPROB(GMPIFN,1),U,2)="P"
"RTN","ORQQPL2",92,0)
 S CHNGE=GMPIFN_"^1.02^"_NOW_U_DUZ_"^T^P^Verified^"_DUZ
"RTN","ORQQPL2",93,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",94,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",95,0)
 L -^AUPNPROB(GMPIFN,0)
"RTN","ORQQPL2",96,0)
 S RETURN=1
"RTN","ORQQPL2",97,0)
 S RETURN(0)=""
"RTN","ORQQPL2",98,0)
 Q
"RTN","ORQQPL2",99,0)
INACT(RETURN,GMPIFN) ; -- inactivate a problem
"RTN","ORQQPL2",100,0)
 ; RETURN:  ;(consistent with UPDATE function)
"RTN","ORQQPL2",101,0)
 ;   SUCCESS:
"RTN","ORQQPL2",102,0)
 ;     RETURN>0, RETURN(0)=""
"RTN","ORQQPL2",103,0)
 ;   FAILURE:
"RTN","ORQQPL2",104,0)
 ;      RETURN<0, RETURN(0)=verbose error message
"RTN","ORQQPL2",105,0)
 N NOW,CHNGE
"RTN","ORQQPL2",106,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","ORQQPL2",107,0)
 I $P(^AUPNPROB(GMPIFN,0),U,12)'="A" D  Q  ; BAIL OUT - ALREADY INACTIVE
"RTN","ORQQPL2",108,0)
 . S RETURN=-1
"RTN","ORQQPL2",109,0)
 . S RETURN(0)="Problem Already Inactive"
"RTN","ORQQPL2",110,0)
 L +^AUPNPROB(GMPIFN,0):10
"RTN","ORQQPL2",111,0)
 I '$T D  Q  ; BAIL OUT - NO LOCK
"RTN","ORQQPL2",112,0)
 . S RETURN=-1
"RTN","ORQQPL2",113,0)
 . S RETURN(0)="Record in use. Try again in a few moments"
"RTN","ORQQPL2",114,0)
 S $P(^AUPNPROB(GMPIFN,0),U,12)="I"
"RTN","ORQQPL2",115,0)
 S CHNGE=GMPIFN_"^.12^"_NOW_U_DUZ_"^A^I^Inactivated^"_DUZ
"RTN","ORQQPL2",116,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",117,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",118,0)
 L -^AUPNPROB(GMPIFN,0)
"RTN","ORQQPL2",119,0)
 S RETURN=1
"RTN","ORQQPL2",120,0)
 S RETURN(0)=""
"RTN","ORQQPL2",121,0)
 Q
"RTN","ORQQPL2",122,0)
OLDCOMM(ORY,PIFN) ; Return comments for a problem - SINGLE DIVISION!
"RTN","ORQQPL2",123,0)
 ;N FAC,NIFN,NOTE,NOTECNT
"RTN","ORQQPL2",124,0)
 ;S NOTECNT=0
"RTN","ORQQPL2",125,0)
 ;S FAC=$O(^AUPNPROB(PIFN,11,"B",+$G(DUZ(2)),0)) Q:'FAC
"RTN","ORQQPL2",126,0)
 ;F NIFN=0:0 S NIFN=$O(^AUPNPROB(PIFN,11,FAC,11,"B",NIFN)) Q:NIFN'>0  D
"RTN","ORQQPL2",127,0)
 ;. Q:$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,4)'="A"
"RTN","ORQQPL2",128,0)
 ;. S NOTE=$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,3)
"RTN","ORQQPL2",129,0)
 ;. S NOTECNT=NOTECNT+1,ORY(NOTECNT)=NOTE
"RTN","ORQQPL2",130,0)
 Q
"RTN","ORQQPL2",131,0)
GETCOMM(ORY,PIFN)       ; Return comments for a problem - MULTI-DIVISIONAL
"RTN","ORQQPL2",132,0)
 N FAC,NIFN,NOTE,NOTECNT
"RTN","ORQQPL2",133,0)
 S NOTECNT=0,FAC=0
"RTN","ORQQPL2",134,0)
 F  S FAC=$O(^AUPNPROB(PIFN,11,FAC)) Q:+FAC'>0  D
"RTN","ORQQPL2",135,0)
 . S NIFN=0
"RTN","ORQQPL2",136,0)
 . F  S NIFN=$O(^AUPNPROB(PIFN,11,FAC,11,NIFN)) Q:NIFN'>0  D
"RTN","ORQQPL2",137,0)
 . . Q:$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,4)'="A"
"RTN","ORQQPL2",138,0)
 . . S NOTE=$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,3)
"RTN","ORQQPL2",139,0)
 . . S NOTECNT=NOTECNT+1,ORY(NOTECNT)=NOTE
"RTN","ORQQPL2",140,0)
 Q
"RTN","ORQQPL2",141,0)
SAVEVIEW(Y,GMPLVIEW) ; -- save new view in File #200/Field #125
"RTN","ORQQPL2",142,0)
 N TMP
"RTN","ORQQPL2",143,0)
 Q:'$D(GMPLVIEW)
"RTN","ORQQPL2",144,0)
 S TMP=$P($G(^VA(200,DUZ,125)),U,2,999)
"RTN","ORQQPL2",145,0)
 S ^VA(200,DUZ,125)=$P(GMPLVIEW,U,1)_U_TMP
"RTN","ORQQPL2",146,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL2",147,0)
 I TMP'="" D  Q
"RTN","ORQQPL2",148,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1,$P(GMPLVIEW,U,2))
"RTN","ORQQPL2",149,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1,$P(GMPLVIEW,U,2))
"RTN","ORQQPL2",150,0)
 Q
"RTN","ORQQPL2",151,0)
NTRTBULL(ORY,ORTERM,ORNP,ORPT,ORCOMM) ; Send NTRT Request bulletin to CAC mailgroup
"RTN","ORQQPL2",152,0)
 N ORSITE,ORSVC,ORUSER,OREQSTR,OREQSVC,ORDGRP,XMB,XMDUZ,XMY
"RTN","ORQQPL2",153,0)
 D USERINFO^XUSRB2(.ORUSER) S ORSITE=$G(ORUSER(3)),ORSVC=$G(ORUSER(5))
"RTN","ORQQPL2",154,0)
 S OREQSTR=$S(DUZ'=ORNP:ORUSER(2)_" for "_$$NAME^XUSER(ORNP),1:ORUSER(2))
"RTN","ORQQPL2",155,0)
 S OREQSVC=$P($$SERVICE^GMPLX1(ORNP,1),U,2)
"RTN","ORQQPL2",156,0)
 S ORSVC=$S(ORSVC=OREQSVC:ORSVC,1:ORSVC_"/"_OREQSVC)
"RTN","ORQQPL2",157,0)
 S:ORSITE']"" ORSITE=$$SITE^VASITE
"RTN","ORQQPL2",158,0)
 I '$L(ORTERM) S ORY="0^Empty String - a valid term must be sent." Q
"RTN","ORQQPL2",159,0)
 I '+$G(DUZ)!'$D(^VA(200,+$G(DUZ))) S ORY="0^A valid user must be identified." Q
"RTN","ORQQPL2",160,0)
 S XMB="OR PROBLEM NTRT BULLETIN"
"RTN","ORQQPL2",161,0)
 S XMDUZ="OR PROBLEM NTRT BULLETIN"
"RTN","ORQQPL2",162,0)
 ; Recipients = g.OR CACS [defined in BULLETIN File entry] &
"RTN","ORQQPL2",163,0)
 ;              [Divisional mail group defined in OR PROBLEM NTRT BY DIVISION param]
"RTN","ORQQPL2",164,0)
 S ORDGRP=$$GET^XPAR("DIV.`"_DUZ(2),"OR PROBLEM NTRT BY DIVISION",1,"E")
"RTN","ORQQPL2",165,0)
 S:ORDGRP]"" XMY("G."_ORDGRP)=""
"RTN","ORQQPL2",166,0)
 S XMB(1)=ORTERM
"RTN","ORQQPL2",167,0)
 S XMB(2)=$$FMTE^XLFDT($E(($$NOW^XLFDT),1,12),2)
"RTN","ORQQPL2",168,0)
 S XMB(3)=OREQSTR
"RTN","ORQQPL2",169,0)
 S XMB(4)=ORSVC
"RTN","ORQQPL2",170,0)
 S XMB(5)=$P(ORSITE,U,2)_"("_$P(ORSITE,U,3)_")"
"RTN","ORQQPL2",171,0)
 S XMB(6)=$G(ORPT,"")
"RTN","ORQQPL2",172,0)
 S XMB(7)=$G(ORCOMM,"None")
"RTN","ORQQPL2",173,0)
 D ^XMB,KILL^XM S ORY=1
"RTN","ORQQPL2",174,0)
 Q
"RTN","ORQQPL2",175,0)
TESTBULL ; Test setting up and sending PL NTRT bulletin
"RTN","ORQQPL2",176,0)
 N ORY
"RTN","ORQQPL2",177,0)
 D NTRTBULL(.ORY,"PL NTRT Test!")
"RTN","ORQQPL2",178,0)
 W !,"Call Result: ",$S(+ORY:"Success!",1:$P(ORY,U,2))
"RTN","ORQQPL2",179,0)
 Q
"RTN","ORQQPL3")
0^7^B52966029
"RTN","ORQQPL3",1,0)
ORQQPL3 ; ALB/PDR,REV,ISL/JER - Problem List RPCs ;08/23/12  15:39
"RTN","ORQQPL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,148,173,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORQQPL3",3,0)
 ;
"RTN","ORQQPL3",4,0)
 ;---------------- LIST PATIENT PROBLEMS ------------------------
"RTN","ORQQPL3",5,0)
 ;
"RTN","ORQQPL3",6,0)
PROBL(ROOT,DFN,CONTEXT) ;  GET LIST OF PATIENT PROBLEMS
"RTN","ORQQPL3",7,0)
 N DIWL,DIWR,DIWF
"RTN","ORQQPL3",8,0)
 N ST,ORI,ORX
"RTN","ORQQPL3",9,0)
 S (LCNT,NUM)=0
"RTN","ORQQPL3",10,0)
 S DIWL=1,DIWR=48,DIWF="C48"
"RTN","ORQQPL3",11,0)
 S CONTEXT=";;"_$G(CONTEXT)
"RTN","ORQQPL3",12,0)
 I CONTEXT=";;" S CONTEXT=";;A"
"RTN","ORQQPL3",13,0)
 S ST=$P(CONTEXT,";",3)
"RTN","ORQQPL3",14,0)
 ;
"RTN","ORQQPL3",15,0)
 I ST="R" D DELLIST(.ROOT,+DFN) ; show deleted only
"RTN","ORQQPL3",16,0)
 I ST'="R"  D LIST(.ROOT,+DFN,ST) ; show others - don't trust ELSE here
"RTN","ORQQPL3",17,0)
 ;
"RTN","ORQQPL3",18,0)
 I ROOT(0)<1 D
"RTN","ORQQPL3",19,0)
 . S LCNT=1
"RTN","ORQQPL3",20,0)
 . S ROOT(1)="     "_$$PAD^ORCHTAB("No data available.",49)_"|"
"RTN","ORQQPL3",21,0)
 Q
"RTN","ORQQPL3",22,0)
 ;
"RTN","ORQQPL3",23,0)
 ;
"RTN","ORQQPL3",24,0)
LIST(GMPL,GMPDFN,GMPSTAT) ; -- Returns list of problems for patient GMPDFN
"RTN","ORQQPL3",25,0)
 ;    in GMPL(#)=ifn^status^description^ICD^onset^last modified^SC^SpExp^Condition^Loc^
"RTN","ORQQPL3",26,0)
 ;                          loc.type^prov^service
"RTN","ORQQPL3",27,0)
 ;     & GMPL(0)=number of problems returned
"RTN","ORQQPL3",28,0)
 ; This is virtually same as LIST^GMPLUTL2 except that it appends the
"RTN","ORQQPL3",29,0)
 ; condition - T)ranscribed or P)ermanent,location,loc type,provider, service.
"RTN","ORQQPL3",30,0)
 ;
"RTN","ORQQPL3",31,0)
 N CNT,SP,NUM,ORLIST,ORVIEW,GMPARAM
"RTN","ORQQPL3",32,0)
 Q:$G(GMPDFN)'>0
"RTN","ORQQPL3",33,0)
 S CNT=0,SP=""
"RTN","ORQQPL3",34,0)
 S GMPARAM("QUIET")=1
"RTN","ORQQPL3",35,0)
 S GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","ORQQPL3",36,0)
 S ORVIEW("ACT")=GMPSTAT
"RTN","ORQQPL3",37,0)
 S ORVIEW("PROV")=0
"RTN","ORQQPL3",38,0)
 S ORVIEW("VIEW")=""
"RTN","ORQQPL3",39,0)
 ;
"RTN","ORQQPL3",40,0)
 D GETPLIST^GMPLMGR1(.ORLIST,.ORTOTAL,.ORVIEW)
"RTN","ORQQPL3",41,0)
 ;
"RTN","ORQQPL3",42,0)
 F NUM=0:0 S NUM=$O(ORLIST(NUM)) Q:NUM'>0  D
"RTN","ORQQPL3",43,0)
 . N GMPL0,GMPL1,GMPL800,I,IFN,SCT,ST,ONSET,ICD,LASTMOD,PRIO,DTREC,ICDD
"RTN","ORQQPL3",44,0)
 . N SC,ORTOTAL,LIN,LOC,LT,PROV,SERV,HASCMT,SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,INACT
"RTN","ORQQPL3",45,0)
 . S IFN=+ORLIST(NUM) Q:IFN'>0
"RTN","ORQQPL3",46,0)
 . S (ICDD,INACT)=""
"RTN","ORQQPL3",47,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",48,0)
 . S GMPL1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",49,0)
 . S GMPL800=$G(^AUPNPROB(IFN,800)),SCT=$P(GMPL800,U)
"RTN","ORQQPL3",50,0)
 . S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",51,0)
 . S CNT=CNT+1
"RTN","ORQQPL3",52,0)
 . N LEX
"RTN","ORQQPL3",53,0)
 . S ICD=$P($$ICDDX^ICDCODE(+GMPL0),U,2)
"RTN","ORQQPL3",54,0)
 . I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#" I 1
"RTN","ORQQPL3",55,0)
 . I +$G(SCT),(+$$STATCHK^LEXSRC2(SCT,DT,.LEX)'=1) S INACT="$"
"RTN","ORQQPL3",56,0)
 . I $D(^AUPNPROB(IFN,803)) D
"RTN","ORQQPL3",57,0)
 . . N I S I=0
"RTN","ORQQPL3",58,0)
 . . F  S I=$O(^AUPNPROB(IFN,803,I)) Q:+I'>0  S $P(ICD,"/",(I+1))=$P($G(^AUPNPROB(IFN,803,I,0)),U)
"RTN","ORQQPL3",59,0)
 . I +SCT'>0,(+ICD>0) S ICDD=$$ICDDESC^GMPLUTL2(ICD,DT)
"RTN","ORQQPL3",60,0)
 . S LASTMOD=$P(GMPL0,U,3)
"RTN","ORQQPL3",61,0)
 . S ST=$P(GMPL0,U,12)
"RTN","ORQQPL3",62,0)
 . S ONSET=$P(GMPL0,U,13)
"RTN","ORQQPL3",63,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",64,0)
 . S AO=$S(+$P(GMPL1,U,11):"/AO",1:"")
"RTN","ORQQPL3",65,0)
 . S IR=$S(+$P(GMPL1,U,12):"/IR",1:"")
"RTN","ORQQPL3",66,0)
 . S ENV=$S(+$P(GMPL1,U,13):"/EC",1:"")
"RTN","ORQQPL3",67,0)
 . S HNC=$S(+$P(GMPL1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",68,0)
 . S MST=$S(+$P(GMPL1,U,16):"/MST",1:"")
"RTN","ORQQPL3",69,0)
 . S CV=$S(+$P(GMPL1,U,17):"/CV",1:"")
"RTN","ORQQPL3",70,0)
 . S SHD=$S(+$P(GMPL1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",71,0)
 . S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",72,0)
 . S LOC=$P(GMPL1,U,8)
"RTN","ORQQPL3",73,0)
 . S DTREC=$P(GMPL1,U,9)
"RTN","ORQQPL3",74,0)
 . S LT=""
"RTN","ORQQPL3",75,0)
 . I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3),LOC=LOC_";"_$P($G(^SC(LOC,0)),U,1)
"RTN","ORQQPL3",76,0)
 . S PROV=$P(GMPL1,U,5) ; responsible provider
"RTN","ORQQPL3",77,0)
 . I PROV'="" S PROV=PROV_";"_$P($G(^VA(200,PROV,0)),U,1)
"RTN","ORQQPL3",78,0)
 . S SERV=$P(GMPL1,U,6)
"RTN","ORQQPL3",79,0)
 . I SERV=0 S SERV="" ; not sure how it gets set to 0, but need consistency in GUI
"RTN","ORQQPL3",80,0)
 . I SERV'="" S SERV=SERV_";"_$P($G(^DIC(49,SERV,0)),U,1)
"RTN","ORQQPL3",81,0)
 . S SP=""
"RTN","ORQQPL3",82,0)
 . F I=11,12,13 S:$P(GMPL1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",83,0)
 . S PRIO=$P(GMPL1,U,14)
"RTN","ORQQPL3",84,0)
 . S LIN=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET
"RTN","ORQQPL3",85,0)
 . S LIN=LIN_U_LASTMOD_U_SC_U_SP_U_$P(GMPL1,U,2)
"RTN","ORQQPL3",86,0)
 . S LIN=LIN_U_LOC_U_LT_U_PROV_U_SERV_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT_U_ICDD
"RTN","ORQQPL3",87,0)
 . S GMPL(CNT)=LIN
"RTN","ORQQPL3",88,0)
 S GMPL(0)=CNT
"RTN","ORQQPL3",89,0)
 Q
"RTN","ORQQPL3",90,0)
 ;
"RTN","ORQQPL3",91,0)
 ;
"RTN","ORQQPL3",92,0)
 ;------------------------ GET LIST OF DELETED PROBLEMS -----------------------------
"RTN","ORQQPL3",93,0)
 ;
"RTN","ORQQPL3",94,0)
DELLIST(RETURN,GMPDFN) ; GET LIST OF DELETED PROBLEMS
"RTN","ORQQPL3",95,0)
 ; see GETPLIST^GMPLMGR1 and LIST^GMPUTL2
"RTN","ORQQPL3",96,0)
 N S,I
"RTN","ORQQPL3",97,0)
 S I=0,S=""
"RTN","ORQQPL3",98,0)
 F  S S=$O(^AUPNPROB("ACTIVE",GMPDFN,S)) Q:S=""  D
"RTN","ORQQPL3",99,0)
 . N IFN,L0,L1,ST,TXT,ICD,ONSET,MOD,SC,SP,LOC,LT,PROV,SERV,PRIO,HASCMT,DTREC
"RTN","ORQQPL3",100,0)
 . N SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,INACT
"RTN","ORQQPL3",101,0)
 . S IFN=""
"RTN","ORQQPL3",102,0)
 . F  S IFN=$O(^AUPNPROB("ACTIVE",+GMPDFN,S,IFN)) Q:IFN=""  D
"RTN","ORQQPL3",103,0)
 .. I $P($G(^AUPNPROB(IFN,1)),U,2)="H" D
"RTN","ORQQPL3",104,0)
 ... S L0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",105,0)
 ... Q:L0=""
"RTN","ORQQPL3",106,0)
 ... S INACT=""
"RTN","ORQQPL3",107,0)
 ... S L1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",108,0)
 ... S ST=$P(L0,U,12)
"RTN","ORQQPL3",109,0)
 ... S TXT=$$PROBTEXT^GMPLX(IFN)
"RTN","ORQQPL3",110,0)
 ... S ICD=$P($$ICDDX^ICDCODE(+L0),U,2)
"RTN","ORQQPL3",111,0)
 ... I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#"
"RTN","ORQQPL3",112,0)
 ... S ONSET=$P(L0,U,13)
"RTN","ORQQPL3",113,0)
 ... S MOD=$P(L0,U,3)
"RTN","ORQQPL3",114,0)
 ... S SC=$S(+$P(L1,U,10):"SC",$P(L1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",115,0)
 ... S AO=$S(+$P(L1,U,11):"/AO",1:"")
"RTN","ORQQPL3",116,0)
 ... S IR=$S(+$P(L1,U,12):"/IR",1:"")
"RTN","ORQQPL3",117,0)
 ... S ENV=$S(+$P(L1,U,13):"/EC",1:"")
"RTN","ORQQPL3",118,0)
 ... S HNC=$S(+$P(L1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",119,0)
 ... S MST=$S(+$P(L1,U,16):"/MST",1:"")
"RTN","ORQQPL3",120,0)
 ... S CV=$S(+$P(L1,U,17):"/CV",1:"")
"RTN","ORQQPL3",121,0)
 ... S SHD=$S(+$P(L1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",122,0)
 ... S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",123,0)
 ... S SP=$$GETSP
"RTN","ORQQPL3",124,0)
 ... S LOC=$P(L1,U,8)
"RTN","ORQQPL3",125,0)
 ... S LT=""
"RTN","ORQQPL3",126,0)
 ... I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3)
"RTN","ORQQPL3",127,0)
 ... S PROV=$P(L1,U,5) ; responsible provider
"RTN","ORQQPL3",128,0)
 ... S SERV=$P(L1,U,6)
"RTN","ORQQPL3",129,0)
 ... S PRIO=$P(L1,U,14)
"RTN","ORQQPL3",130,0)
 ... S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",131,0)
 ... S DTREC=$P(L1,U,9)
"RTN","ORQQPL3",132,0)
 ... S I=I+1
"RTN","ORQQPL3",133,0)
 ... S RETURN(I)=IFN_U_ST_U_TXT_U_ICD_U_ONSET
"RTN","ORQQPL3",134,0)
 ... S RETURN(I)=RETURN(I)_U_MOD_U_SC_U_SP_U_$P(L1,U,2)
"RTN","ORQQPL3",135,0)
 ... S RETURN(I)=RETURN(I)_U_LOC_U_LT_U_PROV_U_SERV
"RTN","ORQQPL3",136,0)
 ... S RETURN(I)=RETURN(I)_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT
"RTN","ORQQPL3",137,0)
 S RETURN(0)=I
"RTN","ORQQPL3",138,0)
 Q
"RTN","ORQQPL3",139,0)
 ;
"RTN","ORQQPL3",140,0)
GETSP() ; GET EXPOSURES
"RTN","ORQQPL3",141,0)
 N I
"RTN","ORQQPL3",142,0)
 S SP=""
"RTN","ORQQPL3",143,0)
 F I=11,12,13 S:$P(L1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",144,0)
 Q SP
"RTN","ORQQPL3",145,0)
 ;
"RTN","ORQQPL3",146,0)
 ; adapted from ^GMPLBLD3 ;9/96
"RTN","ORQQPL3",147,0)
 ;
"RTN","ORQQPL3",148,0)
 ; ----------------------- GET USER PROBLEM CATEGORIES --------------
"RTN","ORQQPL3",149,0)
 ;
"RTN","ORQQPL3",150,0)
CAT(TMP,ORDUZ,CLIN) ; Get user category list
"RTN","ORQQPL3",151,0)
 N GSEQ,GCNT,GROUP,HDR,IFN,LCNT,ITEM,TG,GMPLSLST
"RTN","ORQQPL3",152,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",153,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",154,0)
 K @TG
"RTN","ORQQPL3",155,0)
 S (GSEQ,GCNT,LCNT)=0
"RTN","ORQQPL3",156,0)
 ;
"RTN","ORQQPL3",157,0)
 S GMPLSLST=$$GETUSLST(DUZ,CLIN) ; get approp list for user
"RTN","ORQQPL3",158,0)
 ; Build multiple of category\problems
"RTN","ORQQPL3",159,0)
 ; Iterate categories
"RTN","ORQQPL3",160,0)
 F  S GSEQ=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ)) Q:GSEQ'>0  D
"RTN","ORQQPL3",161,0)
 . S IFN=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",162,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0))
"RTN","ORQQPL3",163,0)
 . S GROUP=+$P(ITEM,U,3)
"RTN","ORQQPL3",164,0)
 . S HDR=GROUP_U_$P(ITEM,U,4,5)
"RTN","ORQQPL3",165,0)
 . S GCNT=GCNT+1
"RTN","ORQQPL3",166,0)
 . S @TG@(GCNT)=HDR ; put category into temp global
"RTN","ORQQPL3",167,0)
 Q
"RTN","ORQQPL3",168,0)
 ;
"RTN","ORQQPL3",169,0)
GETUSLST(ORDUZ,CLIN) ; GET AN APPROPRIATE CATEGORY LIST FOR THE USER
"RTN","ORQQPL3",170,0)
 N GMPLSLST
"RTN","ORQQPL3",171,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2)
"RTN","ORQQPL3",172,0)
 ;I 'GMPLSLST D
"RTN","ORQQPL3",173,0)
 I 'GMPLSLST,CLIN,$D(^GMPL(125,"C",+CLIN)) S GMPLSLST=$O(^(+CLIN,0))
"RTN","ORQQPL3",174,0)
 ;. S GMPLSLST=$O(^VA(200,DUZ,+CLIN,0))  ;$O(^(+CLIN,0))
"RTN","ORQQPL3",175,0)
 Q GMPLSLST
"RTN","ORQQPL3",176,0)
 ;
"RTN","ORQQPL3",177,0)
 ;----------------------- USER PROBLEM LIST --------------------------
"RTN","ORQQPL3",178,0)
 ;
"RTN","ORQQPL3",179,0)
PROB(TMP,GROUP) ; Get user problem list for given group
"RTN","ORQQPL3",180,0)
 N PSEQ,PCNT,IFN,ITEM,TG,CODE,TEXT
"RTN","ORQQPL3",181,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",182,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",183,0)
 K @TG
"RTN","ORQQPL3",184,0)
 S LCNT=0
"RTN","ORQQPL3",185,0)
 ;
"RTN","ORQQPL3",186,0)
 ; iterate through problems in category
"RTN","ORQQPL3",187,0)
 S (PSEQ,PCNT)=0
"RTN","ORQQPL3",188,0)
 F  S PSEQ=$O(^GMPL(125.12,"C",GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","ORQQPL3",189,0)
 . N ORI,ORQUIT S ORQUIT=0
"RTN","ORQQPL3",190,0)
 . S IFN=$O(^GMPL(125.12,"C",GROUP,PSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",191,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0))
"RTN","ORQQPL3",192,0)
 . S TEXT=$P(ITEM,U,4)
"RTN","ORQQPL3",193,0)
 . ; SEE DD for GMPL(125.12,4 :
"RTN","ORQQPL3",194,0)
 . ; "...code which is to be displayed... generally assumed to be ICD"
"RTN","ORQQPL3",195,0)
 . S CODE=$P(ITEM,U,5)
"RTN","ORQQPL3",196,0)
 . ; if any codes inactive, exclude from list
"RTN","ORQQPL3",197,0)
 . F ORI=1:1:$L(CODE,"/") I '+$$STATCHK^ICDAPIU($P(CODE,"/",ORI),DT) S ORQUIT=1 Q
"RTN","ORQQPL3",198,0)
 . I +ORQUIT Q
"RTN","ORQQPL3",199,0)
 . S PCNT=PCNT+1
"RTN","ORQQPL3",200,0)
 . ; RETURN:
"RTN","ORQQPL3",201,0)
 . ; PROBLEM^DISPLAY TEXT^CODE^CODE IFN
"RTN","ORQQPL3",202,0)
 . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$CODEN^ICDCODE($P(CODE,"/"),80)_U_$P(ITEM,U,6,7)
"RTN","ORQQPL3",203,0)
 Q
"RTN","ORQQPL3",204,0)
 ;
"RTN","ORQQPL3",205,0)
 ;------------------ Filter Providers ---------------------
"RTN","ORQQPL3",206,0)
 ;
"RTN","ORQQPL3",207,0)
GETRPRV(RETURN,INP) ; GET LIST OF RESPONSIBLE PROVIDERS FROM PRBLM LIST
"RTN","ORQQPL3",208,0)
 ; RETURN - aa list of responsible providers from which to select for filtering
"RTN","ORQQPL3",209,0)
 ; INP - array of problem list providers to select from
"RTN","ORQQPL3",210,0)
 ;
"RTN","ORQQPL3",211,0)
 N S
"RTN","ORQQPL3",212,0)
 S S=""
"RTN","ORQQPL3",213,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",214,0)
 . I INP(S)'="",$G(^VA(200,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",215,0)
 .. S RETURN(I)=INP(S)_U_$P(^VA(200,INP(S),0),U)
"RTN","ORQQPL3",216,0)
 S RETURN(0)="-1"_U_"<None recorded>" ; return empty provider
"RTN","ORQQPL3",217,0)
 Q
"RTN","ORQQPL3",218,0)
 ;
"RTN","ORQQPL3",219,0)
 ;------------------- GET FILTERED CLINIC LIST ------------------------
"RTN","ORQQPL3",220,0)
 ;
"RTN","ORQQPL3",221,0)
GETCLIN(RETURN,INP) ; Get FILTERED LIST OF CLINICS
"RTN","ORQQPL3",222,0)
 ; RETURN NAMES FOR LIST OF CLINICS PASSED IN
"RTN","ORQQPL3",223,0)
 N I,S
"RTN","ORQQPL3",224,0)
 S S=""
"RTN","ORQQPL3",225,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",226,0)
 . I INP(S)'="",$G(^SC(INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",227,0)
 .. S RETURN(I)=INP(S)_U_$P(^SC(INP(S),0),U,1)
"RTN","ORQQPL3",228,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty location
"RTN","ORQQPL3",229,0)
 Q
"RTN","ORQQPL3",230,0)
 ;
"RTN","ORQQPL3",231,0)
GETSRVC(RETURN,INP) ; GET FILTERED LIST OF INPATIENT SERVICES
"RTN","ORQQPL3",232,0)
 ; RETURN NAMES FOR LIST OF IEN PASSED IN
"RTN","ORQQPL3",233,0)
 N I,S
"RTN","ORQQPL3",234,0)
 S S=""
"RTN","ORQQPL3",235,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",236,0)
 . I INP(S)'="",$G(^DIC(49,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",237,0)
 .. S RETURN(I)=INP(S)_U_$P(^DIC(49,INP(S),0),U,1)
"RTN","ORQQPL3",238,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty service
"RTN","ORQQPL3",239,0)
 Q
"RTN","ORQQPL4")
0^44^B10666256
"RTN","ORQQPL4",1,0)
ORQQPL4 ; ISL/JER - Lexicon Look-up w/Synonyms ;12/19/12  13:53
"RTN","ORQQPL4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17, 1997;Build 43
"RTN","ORQQPL4",3,0)
 ;
"RTN","ORQQPL4",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORQQPL4",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORQQPL4",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORQQPL4",7,0)
 ; DBIA 3991   $$STATCHK^ICDAPIU
"RTN","ORQQPL4",8,0)
 ;
"RTN","ORQQPL4",9,0)
 Q
"RTN","ORQQPL4",10,0)
LEX(LST,X,VIEW,ORDATE,ORINCSYN) ; return list after lexicon lookup
"RTN","ORQQPL4",11,0)
 N LEX,ILST,I,IEN,APP
"RTN","ORQQPL4",12,0)
 S APP="GMPX",LST=$NA(^TMP("ORLEX",$J)) K @LST
"RTN","ORQQPL4",13,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL4",14,0)
 S:'$L($G(VIEW)) VIEW="PLS"
"RTN","ORQQPL4",15,0)
 S ORINCSYN=+$G(ORINCSYN)
"RTN","ORQQPL4",16,0)
 I $S(X?.1A2.3N1".".2N:1,X?.1A2.3N1"+":1,1:0) D  Q
"RTN","ORQQPL4",17,0)
 . S @LST@(1)="icd^Searching by code on the Problems Tab supports SNOMED CT, and not ICD-9-CM."
"RTN","ORQQPL4",18,0)
 . S @LST@(2)="Please try a different search"
"RTN","ORQQPL4",19,0)
 D CONFIG^LEXSET(APP,VIEW,ORDATE)
"RTN","ORQQPL4",20,0)
 ; call LOOK^LEXA to execute the search as defined by the call to CONFIG^LEXSET
"RTN","ORQQPL4",21,0)
 D LOOK^LEXA(X,,1,,ORDATE)
"RTN","ORQQPL4",22,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORQQPL4",23,0)
 . S:X?.N @LST@(1)="Code search failed"
"RTN","ORQQPL4",24,0)
 S ILST=0
"RTN","ORQQPL4",25,0)
 S @LST@(1)=$$LEXXFRM(LEX("LIST",1),ORDATE,APP),ILST=1
"RTN","ORQQPL4",26,0)
 D:ORINCSYN SYNONYMS(.LST,.ILST,"SCT",$P(@LST@(1),U,6),ORDATE)
"RTN","ORQQPL4",27,0)
 S (I,IEN)=""
"RTN","ORQQPL4",28,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORQQPL4",29,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORQQPL4",30,0)
 ..N TXT,ELEMENT S TXT=^TMP("LEXFND",$J,I,IEN)
"RTN","ORQQPL4",31,0)
 ..S ELEMENT=IEN_U_TXT
"RTN","ORQQPL4",32,0)
 ..S ELEMENT=$$LEXXFRM(ELEMENT,ORDATE,APP)
"RTN","ORQQPL4",33,0)
 ..S ILST=ILST+1,@LST@(ILST)=ELEMENT
"RTN","ORQQPL4",34,0)
 ..D:ORINCSYN SYNONYMS(.LST,.ILST,"SCT",$P(ELEMENT,U,6),ORDATE)
"RTN","ORQQPL4",35,0)
 I '$D(@LST@(1)) S @LST@(1)="No matches found"
"RTN","ORQQPL4",36,0)
 E  S @LST@(ILST+1)=ILST_$S(ILST=1:" match",1:" matches")_" found"
"RTN","ORQQPL4",37,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORQQPL4",38,0)
 Q
"RTN","ORQQPL4",39,0)
LEXXFRM(ORX,ORDATE,ORAPP) ; Transform text for SCT look-up
"RTN","ORQQPL4",40,0)
 N ORLEX,ORY,ORICD,ORSCT,ORTXT,ORCODSYS,ORCCODE,ORDCODE
"RTN","ORQQPL4",41,0)
 S ORLEX=$P(ORX,U),ORTXT=$P(ORX,U,2),(ORCCODE,ORCODSYS)=""
"RTN","ORQQPL4",42,0)
 I (ORTXT["("),(ORTXT[")") D
"RTN","ORQQPL4",43,0)
 . S ORCODSYS=$RE($P($P($RE(ORTXT),"("),")",2))
"RTN","ORQQPL4",44,0)
 . S ORCCODE=$RE($P($RE(ORCODSYS)," ")),ORCODSYS=$RE($P($RE(ORCODSYS)," ",2,99))
"RTN","ORQQPL4",45,0)
 . S ORTXT=$$TRIM^XLFSTR($RE($P($RE(ORTXT),"(",2,99)))
"RTN","ORQQPL4",46,0)
 S ORY=$$SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE)
"RTN","ORQQPL4",47,0)
 Q ORY
"RTN","ORQQPL4",48,0)
SYNONYMS(LST,ILST,ORCSYS,ORCCODE,ORDT) ; Get synonyms for expression
"RTN","ORQQPL4",49,0)
 N ORSYN,ORI,ORDAD S ORDT=$G(ORDT,DT),ORDAD=ILST
"RTN","ORQQPL4",50,0)
 D GETSYN^LEXTRAN1(ORCSYS,ORCCODE,ORDT,"ORSYN",1)
"RTN","ORQQPL4",51,0)
 S ORI=0 F  S ORI=$O(ORSYN("S",ORI)) Q:+ORI'>0  D
"RTN","ORQQPL4",52,0)
 . N ELEMENT,TXT,IEN,ORDCODE
"RTN","ORQQPL4",53,0)
 . S IEN=$P(ORSYN("S",ORI),U,2),TXT=$P(ORSYN("S",ORI),U)
"RTN","ORQQPL4",54,0)
 . S ELEMENT=$$SETELEM(IEN,TXT,"SNOMED CT",ORCCODE,ORDT)_U_ORDAD
"RTN","ORQQPL4",55,0)
 . S ILST=ILST+1,@LST@(ILST)=ELEMENT
"RTN","ORQQPL4",56,0)
 Q
"RTN","ORQQPL4",57,0)
SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE) ; Set List Element
"RTN","ORQQPL4",58,0)
 N ORY,ORDCODE,ORIMPDT,ORICD,ORICDID
"RTN","ORQQPL4",59,0)
 S ORIMPDT=$S($L($T(IMPDATE^LEXU)):$$IMPDATE^LEXU("10D"),1:0)
"RTN","ORQQPL4",60,0)
 S ORDCODE=$$GETDES^LEXTRAN1("SCT",ORTXT,ORDATE)
"RTN","ORQQPL4",61,0)
 S ORDCODE=$S(+ORDCODE=1:$P(ORDCODE,U,2),1:"")
"RTN","ORQQPL4",62,0)
 S ORICD=$$GETDX^ORQQPL1(ORCCODE,ORCODSYS)
"RTN","ORQQPL4",63,0)
 S ORICDID=+$$CODEN^ICDCODE($P(ORICD,"/"),80)
"RTN","ORQQPL4",64,0)
 S ORY=ORLEX_U_ORTXT_U_ORICD_U_ORICDID_U_ORCODSYS_U_ORCCODE_U_ORDCODE
"RTN","ORQQPL4",65,0)
 I (ORCODSYS["SNOMED")!(ORCODSYS["VHAT") D
"RTN","ORQQPL4",66,0)
 .S ORY=ORY_U_$S(ORIMPDT=0:"ICD-9-CM",ORDATE<ORIMPDT:"ICD-9-CM",1:"ICD-10-CM")
"RTN","ORQQPL4",67,0)
 Q ORY
"RTN","ORQQPXRM")
0^42^B16643774
"RTN","ORQQPXRM",1,0)
ORQQPXRM ; SLC/PJH - Functions for reminder data ;03/21/12  08:15
"RTN","ORQQPXRM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,187,190,215,243,306**;Dec 17, 1997;Build 43
"RTN","ORQQPXRM",3,0)
 ;
"RTN","ORQQPXRM",4,0)
 ;ORQQPXRM DIALOG ACTIVE
"RTN","ORQQPXRM",5,0)
ACTIVE(ORY,ORLIST) D ACTIVE^PXRMRPCC(.ORY,.ORLIST) Q  ; DBIA 3080
"RTN","ORQQPXRM",6,0)
 ;
"RTN","ORQQPXRM",7,0)
 ;ORQQPXRM REMINDER EVALUATION
"RTN","ORQQPXRM",8,0)
ALIST(ORY,ORPT,ORLIST) D ALIST^PXRMRPCA(.ORY,.ORPT,.ORLIST) Q  ; DBIA 3078
"RTN","ORQQPXRM",9,0)
 ;
"RTN","ORQQPXRM",10,0)
 ;ORQQPXRM REMINDERS APPLICABLE
"RTN","ORQQPXRM",11,0)
APPL(ORY,ORPT,ORLOC) D EVALCOVR^ORQQPX(.ORY,ORPT,ORLOC) Q
"RTN","ORQQPXRM",12,0)
 ;D APPL^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",13,0)
 ;
"RTN","ORQQPXRM",14,0)
 ;ORQQPXRM REMINDER CATEGORIES
"RTN","ORQQPXRM",15,0)
CATEGORY(ORY,ORPT,ORLOC) ;
"RTN","ORQQPXRM",16,0)
 D CATEGORY^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",17,0)
 ;
"RTN","ORQQPXRM",18,0)
 ;ORQQPXRM REMINDER DIALOG
"RTN","ORQQPXRM",19,0)
DIALOG(ORY,ORREM,DFN) ;
"RTN","ORQQPXRM",20,0)
 ; DBIA 3080
"RTN","ORQQPXRM",21,0)
 N DIEN
"RTN","ORQQPXRM",22,0)
 D DIALOG^PXRMRPCC(.ORY,ORREM,DFN)
"RTN","ORQQPXRM",23,0)
 ;I $G(DFN)'="" D DIALOG^PXRMRPCC(.ORY,ORREM,DFN)
"RTN","ORQQPXRM",24,0)
 ;I $G(DFN)="" D DIALOG^PXRMRPCC(.ORY,ORREM)
"RTN","ORQQPXRM",25,0)
 I $P($G(ORY(1)),U)=-1 Q
"RTN","ORQQPXRM",26,0)
 S DIEN=$G(^PXD(811.9,ORREM,51))
"RTN","ORQQPXRM",27,0)
 S ORY(0)=0_U_+$P($G(^PXRMD(801.41,DIEN,0)),U,17)
"RTN","ORQQPXRM",28,0)
 Q
"RTN","ORQQPXRM",29,0)
 ;
"RTN","ORQQPXRM",30,0)
 ;ORQQPXRM EDUCATION SUBTOPICS
"RTN","ORQQPXRM",31,0)
EDS(ORY,OREDU) D EDS^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",32,0)
 ;
"RTN","ORQQPXRM",33,0)
 ;ORQQPXRM EDUCATION SUMMARY
"RTN","ORQQPXRM",34,0)
EDL(ORY,OREM) D EDL^PXRMRPCB(.ORY,OREM) Q  ; DBIA 3079
"RTN","ORQQPXRM",35,0)
 ;
"RTN","ORQQPXRM",36,0)
 ;ORQQPXRM EDUCATION TOPIC
"RTN","ORQQPXRM",37,0)
EDU(ORY,OREDU) D EDU^PXRMRPCB(.ORY,OREDU) Q  ; DBIA 3079
"RTN","ORQQPXRM",38,0)
 ;
"RTN","ORQQPXRM",39,0)
 ;ORQQPXRM PROGRESS NOTE HEADER
"RTN","ORQQPXRM",40,0)
HDR(ORY,ORLOC) D HDR^PXRMRPCC(.ORY,ORLOC) Q  ; DBIA 3080
"RTN","ORQQPXRM",41,0)
 ;
"RTN","ORQQPXRM",42,0)
 ;ORQQPXRM REMINDERS UNEVALUATED
"RTN","ORQQPXRM",43,0)
LIST(ORY,ORPT,ORLOC) D GETLIST^ORQQPX(.ORY,ORLOC) Q
"RTN","ORQQPXRM",44,0)
 ;D LIST^PXRMRPCA(.ORY,ORPT,ORLOC) Q  ; DBIA 3078
"RTN","ORQQPXRM",45,0)
 ;
"RTN","ORQQPXRM",46,0)
 ;ORQQPXRM MENTAL HEALTH
"RTN","ORQQPXRM",47,0)
MH(ORY,OTEST) ;
"RTN","ORQQPXRM",48,0)
 D MH^PXRMRPCC(.ORY,OTEST)  ; DBIA 3080
"RTN","ORQQPXRM",49,0)
 S ORY(0)=0
"RTN","ORQQPXRM",50,0)
 I $$PATCH^XPDUTL("YS*5.01*85") S ORY(0)=1
"RTN","ORQQPXRM",51,0)
 Q
"RTN","ORQQPXRM",52,0)
 ;
"RTN","ORQQPXRM",53,0)
MHDLL(ORY,DFN,INPUTS) ;
"RTN","ORQQPXRM",54,0)
 N CNT,CNT1,ORRESULT,ORSCORES,TEXT
"RTN","ORQQPXRM",55,0)
 F TEXT="RESULTS","SCORES" D
"RTN","ORQQPXRM",56,0)
 .S CNT=0,CNT1=0
"RTN","ORQQPXRM",57,0)
 .F  S CNT=$O(INPUTS(TEXT,CNT)) Q:CNT=""  D
"RTN","ORQQPXRM",58,0)
 ..S CNT1=CNT1+1
"RTN","ORQQPXRM",59,0)
 ..I TEXT="RESULTS" S ORRESULT(CNT1)=$G(INPUTS(TEXT,CNT))
"RTN","ORQQPXRM",60,0)
 ..I TEXT="SCORES" S ORSCORES(CNT1)=$G(INPUTS(TEXT,CNT))
"RTN","ORQQPXRM",61,0)
 D MHDLL^PXRMDRSG(.ORY,.ORRESULT,.ORSCORES,DFN)
"RTN","ORQQPXRM",62,0)
 Q
"RTN","ORQQPXRM",63,0)
 ;
"RTN","ORQQPXRM",64,0)
 ;ORQQPXRM MENTAL HEALTH RESULTS
"RTN","ORQQPXRM",65,0)
MHR(ORY,RESULT,ORES) ;
"RTN","ORQQPXRM",66,0)
 ; DBIA 3080
"RTN","ORQQPXRM",67,0)
 D MHR^PXRMRPCC(.ORY,RESULT,.ORES)
"RTN","ORQQPXRM",68,0)
 Q
"RTN","ORQQPXRM",69,0)
 ;
"RTN","ORQQPXRM",70,0)
 ;ORQQPXRM MENTAL HEALTH SAVE
"RTN","ORQQPXRM",71,0)
MHS(ORY,ORES) D MHS^PXRMRPCC(.ORY,.ORES) Q  ; DBIA 3080
"RTN","ORQQPXRM",72,0)
 ;
"RTN","ORQQPXRM",73,0)
MHV(ORY,DFN,NAME,ANS) ;
"RTN","ORQQPXRM",74,0)
 N ORDATA,ORES,X
"RTN","ORQQPXRM",75,0)
 S ORY(0)=0
"RTN","ORQQPXRM",76,0)
 I '$$PATCH^XPDUTL("YS*5.01*85") S ORY(0)=2 Q
"RTN","ORQQPXRM",77,0)
 I '$L(ANS) Q
"RTN","ORQQPXRM",78,0)
 S ORES("DFN")=DFN,ORES("CODE")=NAME
"RTN","ORQQPXRM",79,0)
 F X=1:1:$L(ANS) I $E(ANS,X)'="X" D
"RTN","ORQQPXRM",80,0)
 .;I $E(ANS,X)="T" S $E(ANS,X)=1
"RTN","ORQQPXRM",81,0)
 .;I $E(ANS,X)="F" S $E(ANS,X)=2
"RTN","ORQQPXRM",82,0)
 .S ORES(X)=X_U_$E(ANS,X)
"RTN","ORQQPXRM",83,0)
 D CHECKCR^YTQPXRM4(.ORDATA,.ORES)
"RTN","ORQQPXRM",84,0)
 I $G(ORDATA(2))="OK" S ORY(0)=1 Q
"RTN","ORQQPXRM",85,0)
 S ORY(1)=$P($G(ORDATA(2)),U,2)
"RTN","ORQQPXRM",86,0)
 Q
"RTN","ORQQPXRM",87,0)
 ;
"RTN","ORQQPXRM",88,0)
 ;ORQQPXRM MST UPDATE
"RTN","ORQQPXRM",89,0)
MST(ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) ;
"RTN","ORQQPXRM",90,0)
 D MST^PXRMRPCC(.ORY,ORPT,ORDATE,ORSTAT,ORPROV,ORFTYP,ORFIEN,ORRES) Q
"RTN","ORQQPXRM",91,0)
 ;
"RTN","ORQQPXRM",92,0)
 ;ORQQPXRM WOMEN HEALTH RESULT
"RTN","ORQQPXRM",93,0)
WH(ORY,ORRESULT) ;
"RTN","ORQQPXRM",94,0)
 D WH^PXRMRPCC(.ORY,.ORRESULT) Q
"RTN","ORQQPXRM",95,0)
 ;
"RTN","ORQQPXRM",96,0)
WHLETTER(ORY,ORIEN) ;
"RTN","ORQQPXRM",97,0)
 D LETTER^WVRPCNO1(.ORY,ORIEN) Q
"RTN","ORQQPXRM",98,0)
 ;
"RTN","ORQQPXRM",99,0)
WHREPORT(ORY,ORIEN) ;
"RTN","ORQQPXRM",100,0)
 D RESULTS^WVALERTF(.ORY,ORIEN) Q
"RTN","ORQQPXRM",101,0)
 ;
"RTN","ORQQPXRM",102,0)
 ;ORQQPXRM DIALOG PROMPTS
"RTN","ORQQPXRM",103,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;
"RTN","ORQQPXRM",104,0)
 D PROMPT^PXRMRPCC(.ORY,ORDLG,ORDCUR,ORFTYP) Q  ; DBIA 3080
"RTN","ORQQPXRM",105,0)
 ;
"RTN","ORQQPXRM",106,0)
 ;ORQQPXRM REMINDER DETAIL
"RTN","ORQQPXRM",107,0)
REMDET(ORY,ORPT,ORIEN) D REMDET^PXRMRPCA(.ORY,ORPT,ORIEN) Q  ; DBIA 3078
"RTN","ORQQPXRM",108,0)
 ;
"RTN","ORQQPXRM",109,0)
 ;ORQQPXRM REMINDER INQUIRY
"RTN","ORQQPXRM",110,0)
RES(ORY,ORREM) D RES^PXRMRPCC(.ORY,ORREM) Q  ; DBIA 3080
"RTN","ORQQPXRM",111,0)
 ;
"RTN","ORQQPXRM",112,0)
 ;ORQQPXRM REMINDER WEB
"RTN","ORQQPXRM",113,0)
WEB(ORY,ORREM) D WEB^PXRMRPCA(.ORY,ORREM) Q  ; DBIA 3078
"RTN","ORQQPXRM",114,0)
 ;
"RTN","ORQQPXRM",115,0)
 ;PXRM REMINDER DIALOG (TIU)
"RTN","ORQQPXRM",116,0)
TDIALOG(ORY,ORDLG,DFN) ;
"RTN","ORQQPXRM",117,0)
 D DIALOG^PXRMRPCD(.ORY,ORDLG,DFN)
"RTN","ORQQPXRM",118,0)
 I $P($G(ORY(1)),U)=-1 Q
"RTN","ORQQPXRM",119,0)
 S ORY(0)=0_U_+$P($G(^PXRMD(801.41,ORDLG,0)),U,17)
"RTN","ORQQPXRM",120,0)
 Q
"RTN","ORQQPXRM",121,0)
 ;
"RTN","ORQQPXRM",122,0)
ACT(REM) ;ORQQPX SEARCH ITEMS - XPAR value screen for active reminders
"RTN","ORQQPXRM",123,0)
 ;Treat a null value as inactive
"RTN","ORQQPXRM",124,0)
 I 'REM Q 0
"RTN","ORQQPXRM",125,0)
 ;Treat a non-existen entry as inactive
"RTN","ORQQPXRM",126,0)
 I $G(^PXD(811.9,REM,0))="" Q 0
"RTN","ORQQPXRM",127,0)
 ;Check IF inactive flag is set
"RTN","ORQQPXRM",128,0)
 I ($T(INACTIVE^PXRM)'=""),$$INACTIVE^PXRM(REM) Q 0 ; DBIA 2182
"RTN","ORQQPXRM",129,0)
 ;Otherwise active
"RTN","ORQQPXRM",130,0)
 Q 1
"RTN","ORQQPXRM",131,0)
 ;
"RTN","ORQQPXRM",132,0)
REMVER(ORLIST) ;
"RTN","ORQQPXRM",133,0)
 S ORLIST=$$VERSION^XPDUTL("PXRM")
"RTN","ORQQPXRM",134,0)
 Q
"RTN","ORQQPXRM",135,0)
 ;
"RTN","ORQQPXRM",136,0)
GEC(ORRESULT,IEN,DFN,VISIT,NOTEIEN) ;
"RTN","ORQQPXRM",137,0)
 D API^PXRMGECU(.ORRESULT,IEN,DFN,VISIT,1,NOTEIEN)
"RTN","ORQQPXRM",138,0)
 Q
"RTN","ORQQPXRM",139,0)
 ;
"RTN","ORQQPXRM",140,0)
GECF(RESULT,DFN,FIN) ;
"RTN","ORQQPXRM",141,0)
 D FINISHED^PXRMGECU(DFN,FIN)
"RTN","ORQQPXRM",142,0)
 Q
"RTN","ORQQPXRM",143,0)
 ;
"RTN","ORQQPXRM",144,0)
GECP(RESULT,DFN) ;
"RTN","ORQQPXRM",145,0)
 S RESULT=$$STATUS^PXRMGECU(DFN)
"RTN","ORQQPXRM",146,0)
 Q
"RTN","ORQQPXRM",147,0)
 ;
"RTN","ORRDI1")
0^43^B113704699
"RTN","ORRDI1",1,0)
ORRDI1 ;SLC/JMH - RDI routines for API supporting CDS data; 3/24/05 2:31 [8/11/05 6:25am] ;04/06/12  09:08
"RTN","ORRDI1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232,294,306**;Dec 17, 1997;Build 43
"RTN","ORRDI1",3,0)
 ;
"RTN","ORRDI1",4,0)
GET(DFN,DOMAIN) ;API for packages to call in order to get data from HDR for
"RTN","ORRDI1",5,0)
 I '$L($G(DOMAIN)) S DOMAIN="ART"
"RTN","ORRDI1",6,0)
 ; check if in OUTAGE state and quit if so
"RTN","ORRDI1",7,0)
 I $$DOWNXVAL^ORRDI2 D  Q -1
"RTN","ORRDI1",8,0)
 .K ^XTMP("ORRDI",DOMAIN,DFN)
"RTN","ORRDI1",9,0)
 .S ^XTMP("ORRDI",DOMAIN,DFN,0)="^^-1"
"RTN","ORRDI1",10,0)
 ;  order checking purposes
"RTN","ORRDI1",11,0)
 N I,ORCACHE,ORRET,ORRECDT
"RTN","ORRDI1",12,0)
 ;check if data was just retrieved a short time ago and if so return
"RTN","ORRDI1",13,0)
 S ORRECDT=$P($G(^XTMP("ORRDI",DOMAIN,DFN,0)),U) I 'ORRECDT S ORRECDT=3000101
"RTN","ORRDI1",14,0)
 S ORCACHE=$$GET^XPAR("SYS","OR RDI CACHE TIME")
"RTN","ORRDI1",15,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,ORRECDT,2)<(60*ORCACHE),$P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3)>-1 S ORRET=$P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3)
"RTN","ORRDI1",16,0)
 ;check if there has been an HDR down condition within last minute
"RTN","ORRDI1",17,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U),2)<60,$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U,3)<0 S ORRET=$P($G(^XTMP("ORRDI","PSOO",DFN,0)),U,3)
"RTN","ORRDI1",18,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$P($G(^XTMP("ORRDI","ART",DFN,0)),U),2)<60,$P($G(^XTMP("ORRDI","ART",DFN,0)),U,3)<0 S ORRET=$P($G(^XTMP("ORRDI","ART",DFN,0)),U,3)
"RTN","ORRDI1",19,0)
 ;if data is not "fresh" then go get it
"RTN","ORRDI1",20,0)
 I '$L($G(ORRET)) D
"RTN","ORRDI1",21,0)
 .S ORRET=$$RETRIEVE(DFN,DOMAIN)
"RTN","ORRDI1",22,0)
 .I ORRET>-1 S ^XTMP("ORRDI","OUTAGE INFO","FAILURES")=0
"RTN","ORRDI1",23,0)
 .I ORRET'>-1 D
"RTN","ORRDI1",24,0)
 ..Q:$P(ORRET,U,2)="PATIENT ICN NOT FOUND"
"RTN","ORRDI1",25,0)
 ..I ORRET=-9 S ORRET="-1^PROCESSING ERROR" Q
"RTN","ORRDI1",26,0)
 ..S ^XTMP("ORRDI","OUTAGE INFO","FAILURES")=$$FAILXVAL^ORRDI2+1
"RTN","ORRDI1",27,0)
 ..I $$FAILXVAL^ORRDI2'<$$FAILPVAL^ORRDI2 D
"RTN","ORRDI1",28,0)
 ...S ^XTMP("ORRDI","OUTAGE INFO","DOWN")=1
"RTN","ORRDI1",29,0)
 ...D SPAWN^ORRDI2
"RTN","ORRDI1",30,0)
 S $P(^XTMP("ORRDI",DOMAIN,DFN,0),U,3,4)=ORRET
"RTN","ORRDI1",31,0)
 I ORRET<1 D
"RTN","ORRDI1",32,0)
 .N TEMP S TEMP=^XTMP("ORRDI",DOMAIN,DFN,0)
"RTN","ORRDI1",33,0)
 .K ^XTMP("ORRDI",DOMAIN,DFN)
"RTN","ORRDI1",34,0)
 .S ^XTMP("ORRDI",DOMAIN,DFN,0)=TEMP
"RTN","ORRDI1",35,0)
 Q ORRET
"RTN","ORRDI1",36,0)
 ;
"RTN","ORRDI1",37,0)
RETRIEVE(DFN,DOMAIN) ;GET DATA
"RTN","ORRDI1",38,0)
 N $ES,$ET
"RTN","ORRDI1",39,0)
 S $ET="D ERRHNDL^ORRDI1(DFN) Q -1"
"RTN","ORRDI1",40,0)
 N Y,ORCSTART,ORPSTART,ORCDIF,ORPDIF,ORALNUM,ORPSNUM,ORREQ,ORXML,ORERR,ORRET,ORY,START,FACIL
"RTN","ORRDI1",41,0)
 K ^TMP($J,"ORRDI")
"RTN","ORRDI1",42,0)
 S ORY=-1
"RTN","ORRDI1",43,0)
 I '$L($G(DOMAIN)) S DOMAIN="ART"
"RTN","ORRDI1",44,0)
 ;GET ICN
"RTN","ORRDI1",45,0)
 D SELECT^ORWPT(.Y,DFN)
"RTN","ORRDI1",46,0)
 N ICN
"RTN","ORRDI1",47,0)
 ;S ICN=$P($G(Y),U,14)
"RTN","ORRDI1",48,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","ORRDI1",49,0)
 I +ICN<0 Q -1_"^PATIENT ICN NOT FOUND"
"RTN","ORRDI1",50,0)
 ;S ICN="1002016321V080363"
"RTN","ORRDI1",51,0)
 S START=$$FMADD^XLFDT($P($$NOW^XLFDT,"."),-30)
"RTN","ORRDI1",52,0)
 S START=$$FMTHL7^XLFDT(START)
"RTN","ORRDI1",53,0)
 S START=$E(START,1,4)_"-"_$E(START,5,6)_"-"_$E(START,7,8)
"RTN","ORRDI1",54,0)
 S FACIL=$P($$SITE^VASITE,U,3)
"RTN","ORRDI1",55,0)
 ;format request XML
"RTN","ORRDI1",56,0)
 S ORREQ="/readClinicalData1?&templateId=RDIIntoleranceConditionPharmacyRead40010&"
"RTN","ORRDI1",57,0)
 S ORREQ=ORREQ_"filterRequest=<?xml version=""1.0"" encoding=""UTF-8""?><filter:filter vhimVersion=""Vhim_4_00"" xmlns:f"
"RTN","ORRDI1",58,0)
 S ORREQ=ORREQ_"ilter=""Filter"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><filterId>RDI_IC_RX_SINGLE_PATIENT_FILTER</fil"
"RTN","ORRDI1",59,0)
 S ORREQ=ORREQ_"terId><patients><NationalId>"_ICN_"</NationalId><excludeIdentifiers><assigningAuthority"
"RTN","ORRDI1",60,0)
 S ORREQ=ORREQ_">USVHA</assigningAuthority><assigningFacility>"_FACIL_"</assigningFacility></excludeIdentifiers></patien"
"RTN","ORRDI1",61,0)
 S ORREQ=ORREQ_"ts><entryPointFilter queryName=""IC-Standardized""><domainEntryPoint>IntoleranceCondition</domainEnt"
"RTN","ORRDI1",62,0)
 S ORREQ=ORREQ_"ryPoint><xpathQuery><xpath>intoleranceConditions[((gmrAllergyAgent[(code!='') and (codingSystem = '99"
"RTN","ORRDI1",63,0)
 S ORREQ=ORREQ_"VHA_ERT' or contains(.,'99VA'))]) or (drugClass/code[(code!='') and (codingSystem = '99VHA_ERT' or co"
"RTN","ORRDI1",64,0)
 S ORREQ=ORREQ_"ntains(.,'99VA'))]) or (drugIngredient/code[(code!='') and (codingSystem = '99VHA_ERT' or contain"
"RTN","ORRDI1",65,0)
 S ORREQ=ORREQ_"s(.,'99VA'))])) and (status = 'F')]</xpath></xpathQuery></entryPointFilter><entryPointFilter queryNa"
"RTN","ORRDI1",66,0)
 S ORREQ=ORREQ_"me=""OMP-Standardized""><domainEntryPoint>OutpatientMedicationPromise</domainEntryPoint>"
"RTN","ORRDI1",67,0)
 S ORREQ=ORREQ_"<startDate>"_START_"</startDate><xpathQuery><xpath>outpatientMedicationPromises[pharmacyRe"
"RTN","ORRDI1",68,0)
 S ORREQ=ORREQ_"quest/orderedMedication/medicationCode[(code!='') and (codingSystem = '99VHA_ERT' or contain"
"RTN","ORRDI1",69,0)
 S ORREQ=ORREQ_"s(.,'99VA'))]]</xpath></xpathQuery></entryPointFilter></filter:filter>&filterId=RDI_IC_RX_SINGLE_PATIENT_FILTER&re"
"RTN","ORRDI1",70,0)
 S ORCSTART=$ZH
"RTN","ORRDI1",71,0)
 S ORREQ=ORREQ_"questId="_FACIL_"RDI"_$$NOW^XLFDT_";"_ORCSTART
"RTN","ORRDI1",72,0)
 ;make call to HDR
"RTN","ORRDI1",73,0)
 ;ZW ORREQ
"RTN","ORRDI1",74,0)
 S ORXML=$$GETREST^XOBWLIB("CDS WEB SERVICE","CDS SERVER")
"RTN","ORRDI1",75,0)
 S ORRET=$$GET^XOBWLIB(ORXML,ORREQ,.ORERR,0)
"RTN","ORRDI1",76,0)
 S ORCDIF=$ZH-ORCSTART
"RTN","ORRDI1",77,0)
 I ORRET D  Q ORY
"RTN","ORRDI1",78,0)
 .;parse out xml into temp global
"RTN","ORRDI1",79,0)
 .S ORPSTART=$ZH
"RTN","ORRDI1",80,0)
 .D PARSE(ORXML.HttpResponse.Data)
"RTN","ORRDI1",81,0)
 .S ORPDIF=$ZH-ORCSTART-ORCDIF
"RTN","ORRDI1",82,0)
 .;I $D(^TMP($J,"ORRDI","ClinicalData",0,"errorSection")) S ORY="-1^CDS ERROR" D  Q
"RTN","ORRDI1",83,0)
 .;.S ^XTMP("ORRDI","METRICS",ORCSTART)=DFN_U_ORCDIF_U_ORPDIF_U
"RTN","ORRDI1",84,0)
 .;move from temp global into ^XTMP("ORRDI" domain globals
"RTN","ORRDI1",85,0)
 .S ORALNUM=$$AL(DFN)
"RTN","ORRDI1",86,0)
 .S ORPSNUM=$$PS(DFN)
"RTN","ORRDI1",87,0)
 .S ^XTMP("ORRDI","ART",DFN,0)=$$NOW^XLFDT_U_U_ORALNUM
"RTN","ORRDI1",88,0)
 .S ^XTMP("ORRDI","PSOO",DFN,0)=$$NOW^XLFDT_U_U_ORPSNUM
"RTN","ORRDI1",89,0)
 .S ^XTMP("ORRDI",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","ORRDI1",90,0)
 .I DOMAIN="ART" S ORY=ORALNUM
"RTN","ORRDI1",91,0)
 .I DOMAIN="PSOO" S ORY=ORPSNUM
"RTN","ORRDI1",92,0)
 .I +ORY>-1 S ^XTMP("ORRDI","TESTREQ")=ORREQ
"RTN","ORRDI1",93,0)
 .;set metrics for data retrieval and parsing
"RTN","ORRDI1",94,0)
 .S ^XTMP("ORRDI","METRICS",$$NOW^XLFDT,ORCSTART)=DFN_U_ORCDIF_U_ORPDIF_U_ORALNUM_U_ORPSNUM
"RTN","ORRDI1",95,0)
 .;ZW ^TMP($J,"ORRDI") ;REMOVE OR COMMENT WHEN DONE
"RTN","ORRDI1",96,0)
 .K ^TMP($J,"ORRDI")
"RTN","ORRDI1",97,0)
 I 'ORRET!(ORERR) S ^XTMP("ORRDI","METRICS",$$NOW^XLFDT,ORCSTART)=DFN_U_"ERROR" D  Q "-1^"_ORERR
"RTN","ORRDI1",98,0)
 .S ^XTMP("ORRDI","ART",DFN,0)=U_U_"-1^"_ORERR
"RTN","ORRDI1",99,0)
 .S ^XTMP("ORRDI","PSOO",DFN,0)=U_U_"-1^"_ORERR
"RTN","ORRDI1",100,0)
RETQ Q -1
"RTN","ORRDI1",101,0)
 ;
"RTN","ORRDI1",102,0)
PS(DFN) ;expects ^TMP($J,"ORRDI")
"RTN","ORRDI1",103,0)
 K ^XTMP("ORRDI","PSOO",DFN)
"RTN","ORRDI1",104,0)
 N ORQ S ORQ=$$MSGERR Q:($L(ORQ)>0) -1_U_ORQ
"RTN","ORRDI1",105,0)
 N I,GL,CNT
"RTN","ORRDI1",106,0)
 S CNT=0,GL=$NA(^TMP($J,"ORRDI","ClinicalData",0,"patient",0,"outpatientMedicationPromises"))
"RTN","ORRDI1",107,0)
 S I="" F  S I=$O(@GL@(I)) Q:'$L(I)  D
"RTN","ORRDI1",108,0)
 .S CNT=CNT+1
"RTN","ORRDI1",109,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,1,0)=$G(@GL@(I,"pharmacyRequest",0,"orderingInstitutionIdentifier",0,"name",0))
"RTN","ORRDI1",110,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,2,0)=$G(@GL@(I,"pharmacyRequest",0,"orderedMedication",0,"medicationCode",0,"displayText",0))
"RTN","ORRDI1",111,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,3,0)=$G(@GL@(I,"pharmacyRequest",0,"orderedMedication",0,"medicationCode",0,"code",0))
"RTN","ORRDI1",112,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,4,0)=$G(@GL@(I,"prescriptionId",0))
"RTN","ORRDI1",113,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,5,0)=$G(@GL@(I,"pharmacyRequest",0,"statusModifier",0,"displayText",0))
"RTN","ORRDI1",114,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,6,0)=$G(@GL@(I,"originalDispense",0,"quantityDispensed",0,"value",0))_";"_$G(@GL@(I,"originalDispense",0,"daysSupply",0))
"RTN","ORRDI1",115,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,7,0)=$$DTCONV($G(@GL@(I,"expirationDate",0,"literal",0)))
"RTN","ORRDI1",116,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,8,0)=$$DTCONV($G(@GL@(I,"pharmacyRequest",0,"orderDate",0,"literal",0)))
"RTN","ORRDI1",117,0)
 .N K S K="" F  S K=$O(@GL@(I,"refillDispense",K)) Q:'$L(K)  D
"RTN","ORRDI1",118,0)
 ..I $G(@GL@(I,"refillDispense",K,"fillDate",0,"literal",0)) D
"RTN","ORRDI1",119,0)
 ...S ^XTMP("ORRDI","PSOO",DFN,I+1,9,0)=$$DTCONV($G(@GL@(I,"refillDispense",K,"fillDate",0,"literal",0)))
"RTN","ORRDI1",120,0)
 .I '$G(^XTMP("ORRDI","PSOO",DFN,I+1,9,0)) S ^XTMP("ORRDI","PSOO",DFN,I+1,9,0)=$$DTCONV($G(@GL@(I,"originalDispense",0,"fillDate",0,"literal",0)))
"RTN","ORRDI1",121,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,10,0)=$G(@GL@(I,"numberOfRefillsAuthorized",0))
"RTN","ORRDI1",122,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,11,0)=$G(@GL@(I,"originalDispense",0,"currentProvider",0,"name",0,"family",0))_","_$G(@GL@(I,"originalDispense",0,"currentProvider",0,"name",0,"given",0))
"RTN","ORRDI1",123,0)
 .S ^XTMP("ORRDI","PSOO",DFN,I+1,12,0)=$G(@GL@(I,"originalDispense",0,"dispensedDrug",0,"drugUnitPrice",0,"value",0))
"RTN","ORRDI1",124,0)
 .N L S L="" F  S L=$O(@GL@(I,"sig",L)) Q:'$L(L)  S ^XTMP("ORRDI","PSOO",DFN,I+1,14,0)=$G(^XTMP("ORRDI","PSOO",DFN,I+1,14,0))_" "_$G(@GL@(I,"sig",L))
"RTN","ORRDI1",125,0)
 .I '$D(^XTMP("ORRDI","PSOO",DFN,I+1,14,0)) S ^XTMP("ORRDI","PSOO",DFN,I+1,14,0)=""
"RTN","ORRDI1",126,0)
 .;S ^XTMP("ORRDI","PSOO",DFN,I+1,14,0)=$G(@GL@(I,"sig",0))
"RTN","ORRDI1",127,0)
 Q CNT
"RTN","ORRDI1",128,0)
 ;
"RTN","ORRDI1",129,0)
AL(DFN) ;expects ^TMP($J,"ORRDI")
"RTN","ORRDI1",130,0)
 K ^XTMP("ORRDI","ART",DFN)
"RTN","ORRDI1",131,0)
 N ORQ S ORQ=$$MSGERR Q:($L(ORQ)>0) -1_U_ORQ
"RTN","ORRDI1",132,0)
 N I,GL,CNT
"RTN","ORRDI1",133,0)
 S CNT=0,GL=$NA(^TMP($J,"ORRDI","ClinicalData",0,"patient",0,"intoleranceConditions"))
"RTN","ORRDI1",134,0)
 S I="" F  S I=$O(@GL@(I)) Q:'$L(I)  D
"RTN","ORRDI1",135,0)
 .S CNT=CNT+1
"RTN","ORRDI1",136,0)
 .S ^XTMP("ORRDI","ART",DFN,I+1,"FACILITY",0)=$G(@GL@(I,"facilityIdentifier",0,"name",0))
"RTN","ORRDI1",137,0)
 .I $G(@GL@(I,"gmrAllergyAgent",0,"code",0)),$E($G(@GL@(I,"gmrAllergyAgent",0,"codingSystem",0)),1,4)="99VA" D
"RTN","ORRDI1",138,0)
 ..S ^XTMP("ORRDI","ART",DFN,I+1,"REACTANT",0)=@GL@(I,"gmrAllergyAgent",0,"code",0)_U_@GL@(I,"gmrAllergyAgent",0,"displayText",0)_U_@GL@(I,"gmrAllergyAgent",0,"codingSystem",0)
"RTN","ORRDI1",139,0)
 .I $D(@GL@(I,"drugIngredient")) D
"RTN","ORRDI1",140,0)
 ..N J S J="" F  S J=$O(@GL@(I,"drugIngredient",J))  Q:'$L(J)  D
"RTN","ORRDI1",141,0)
 ...I $G(@GL@(I,"drugIngredient",J,"code",0,"code",0)),$E($G(@GL@(I,"drugIngredient",J,"code",0,"codingSystem",0)),1,4)="99VA" D
"RTN","ORRDI1",142,0)
 ....S ^XTMP("ORRDI","ART",DFN,I+1,"DRUG INGREDIENTS",J+1)=@GL@(I,"drugIngredient",J,"code",0,"code",0)_U_@GL@(I,"drugIngredient",J,"code",0,"displayText",0)_U_@GL@(I,"drugIngredient",J,"code",0,"codingSystem",0)
"RTN","ORRDI1",143,0)
 .I $D(@GL@(I,"drugClass")) D
"RTN","ORRDI1",144,0)
 ..N J S J="" F  S J=$O(@GL@(I,"drugClass",J))  Q:'$L(J)  D
"RTN","ORRDI1",145,0)
 ...I $G(@GL@(I,"drugClass",0,"code",0,"code",0)),$E($G(@GL@(I,"drugClass",0,"code",0,"codingSystem",0)),1,10)="99VA50.605" D
"RTN","ORRDI1",146,0)
 ....S ^XTMP("ORRDI","ART",DFN,I+1,"DRUG CLASSES",J+1)=@GL@(I,"drugClass",J,"code",0,"alternateCode",0)_U_@GL@(I,"drugClass",J,"code",0,"alternateCode",0)
"RTN","ORRDI1",147,0)
 ....S ^XTMP("ORRDI","ART",DFN,I+1,"DRUG CLASSES",J+1)=^XTMP("ORRDI","ART",DFN,I+1,"DRUG CLASSES",J+1)_U_@GL@(I,"drugClass",J,"code",0,"codingSystem",0)_U_@GL@(I,"drugClass",J,"code",0,"displayText",0)
"RTN","ORRDI1",148,0)
 Q CNT
"RTN","ORRDI1",149,0)
 ;
"RTN","ORRDI1",150,0)
HAVEHDR() ;call to check if this system has an HDR to perform order checks
"RTN","ORRDI1",151,0)
 ;  against
"RTN","ORRDI1",152,0)
 ;check parameter to see if there is an HDR and returns positive if so
"RTN","ORRDI1",153,0)
 I $$GET^XPAR("SYS","OR RDI HAVE HDR") Q 1
"RTN","ORRDI1",154,0)
 ;returns negative because the parameter indicates there is no HDR
"RTN","ORRDI1",155,0)
 Q 0
"RTN","ORRDI1",156,0)
 ;
"RTN","ORRDI1",157,0)
DTCONV(DATE) ;convert date in hl7 format to mm/dd/yy
"RTN","ORRDI1",158,0)
 I '$L(DATE) Q ""
"RTN","ORRDI1",159,0)
 Q $E(DATE,5,6)_"/"_$E(DATE,7,8)_"/"_$E(DATE,3,4)
"RTN","ORRDI1",160,0)
 ;
"RTN","ORRDI1",161,0)
REMESC(ORSTR) ;
"RTN","ORRDI1",162,0)
 ; Remove Escape Characters from HL7 Message Text
"RTN","ORRDI1",163,0)
 ; Escape Sequence codes:
"RTN","ORRDI1",164,0)
 ;         F = field separator (ORFS)
"RTN","ORRDI1",165,0)
 ;         S = component separator (ORCS)
"RTN","ORRDI1",166,0)
 ;         R = repetition separator (ORRS)
"RTN","ORRDI1",167,0)
 ;         E = escape character (ORES)
"RTN","ORRDI1",168,0)
 ;         T = subcomponent separator (ORSS)
"RTN","ORRDI1",169,0)
 N ORCHR,ORREP,I1,I2,J1,J2,K,VALUE
"RTN","ORRDI1",170,0)
 F ORCHR="F","S","R","E","T" S ORREP(ORES_ORCHR_ORES)=$S(ORCHR="F":ORFS,ORCHR="S":ORCS,ORCHR="R":ORRS,ORCHR="E":ORES,ORCHR="T":ORSS)
"RTN","ORRDI1",171,0)
 S ORSTR=$$REPLACE^XLFSTR(ORSTR,.ORREP)
"RTN","ORRDI1",172,0)
 F  S I1=$P(ORSTR,ORES_"X") Q:$L(I1)=$L(ORSTR)  D
"RTN","ORRDI1",173,0)
 .S I2=$P(ORSTR,ORES_"X",2,99)
"RTN","ORRDI1",174,0)
 .S J1=$P(I2,ORES) Q:'$L(J1)
"RTN","ORRDI1",175,0)
 .S J2=$P(I2,ORES,2,99)
"RTN","ORRDI1",176,0)
 .S VALUE=$$BASE^XLFUTL($$UP^XLFSTR(J1),16,10)
"RTN","ORRDI1",177,0)
 .S K=$S(VALUE>255:"?",VALUE<32!(VALUE>127&(VALUE<160)):"",1:$C(VALUE))
"RTN","ORRDI1",178,0)
 .S ORSTR=I1_K_J2
"RTN","ORRDI1",179,0)
 Q ORSTR
"RTN","ORRDI1",180,0)
 ;
"RTN","ORRDI1",181,0)
PARSE(STREAM) ;
"RTN","ORRDI1",182,0)
 N %XML,GL
"RTN","ORRDI1",183,0)
 S GL=$NA(^TMP($J,"ORRDI"))
"RTN","ORRDI1",184,0)
 K @GL
"RTN","ORRDI1",185,0)
 N STATUS,READER,XOBERR,S
"RTN","ORRDI1",186,0)
 ;S STATUS=##class(%XML.TextReader).ParseStream(STREAM,.READER)
"RTN","ORRDI1",187,0)
 S STATUS=##class(%XML.TextReader).ParseStream(STREAM,.READER,,,,,1)
"RTN","ORRDI1",188,0)
 I $$STATCHK^XOBWLIB(STATUS,.XOBERR,1) D
"RTN","ORRDI1",189,0)
 .N BREAK
"RTN","ORRDI1",190,0)
 .S BREAK=0 F  Q:BREAK||READER.EOF||'READER.Read()  D
"RTN","ORRDI1",191,0)
 ..N X
"RTN","ORRDI1",192,0)
 ..I READER.NodeType="element" D SPUSH(.S,READER.LocalName)
"RTN","ORRDI1",193,0)
 ..I READER.NodeType="endelement" D SPOP(.S,.X)
"RTN","ORRDI1",194,0)
 ..I READER.NodeType="chars" D SPUT(.S,READER.Value)
"RTN","ORRDI1",195,0)
 Q
"RTN","ORRDI1",196,0)
 ;
"RTN","ORRDI1",197,0)
SPUSH(S,X) ;places X on the stack S and returns the current level of the stack
"RTN","ORRDI1",198,0)
 N I S I=$O(S(""),-1)+1,S(I)=X
"RTN","ORRDI1",199,0)
 Q I
"RTN","ORRDI1",200,0)
 ;
"RTN","ORRDI1",201,0)
SPOP(S,X) ;removes the top item from the stack S and put it into the variable X and returns the level that X was at
"RTN","ORRDI1",202,0)
 N I S I=$O(S(""),-1)
"RTN","ORRDI1",203,0)
 I I S X=S(I) K S(I)
"RTN","ORRDI1",204,0)
 N J S J=$O(S(I),-1) I J S S(J,X)=$G(S(J,X))+1
"RTN","ORRDI1",205,0)
 Q I
"RTN","ORRDI1",206,0)
 ;
"RTN","ORRDI1",207,0)
SPEEK(S,X) ;same as SPOP except the top item is not removed
"RTN","ORRDI1",208,0)
 N I S I=$O(S(""),-1)
"RTN","ORRDI1",209,0)
 I I S X=S(I)
"RTN","ORRDI1",210,0)
 Q I
"RTN","ORRDI1",211,0)
 ;
"RTN","ORRDI1",212,0)
SPUT(S,X) ;implementation specific, uses the stack to form a global node
"RTN","ORRDI1",213,0)
 N I,STR
"RTN","ORRDI1",214,0)
 S STR=$P(GL,")")
"RTN","ORRDI1",215,0)
 S I=0 F  S I=$O(S(I)) Q:'I  D
"RTN","ORRDI1",216,0)
 .S STR=STR_","_""""_S(I)_""""_","
"RTN","ORRDI1",217,0)
 .N NUM S NUM=0
"RTN","ORRDI1",218,0)
 .I $D(S(I-1,S(I))) S NUM=+$G(S(I-1,S(I)))
"RTN","ORRDI1",219,0)
 .S STR=STR_NUM
"RTN","ORRDI1",220,0)
 S STR=STR_")"
"RTN","ORRDI1",221,0)
 I $D(@STR) S @STR=@STR_X
"RTN","ORRDI1",222,0)
 I '$D(@STR) S @STR=X
"RTN","ORRDI1",223,0)
 Q STR
"RTN","ORRDI1",224,0)
 ;
"RTN","ORRDI1",225,0)
MSGERR() ;check errors from XML return
"RTN","ORRDI1",226,0)
 ;returns empty string "" if there was no error
"RTN","ORRDI1",227,0)
 ;returns empty string "" if the only error was "ALL_PATIENT_IDS_EXCLUDED"
"RTN","ORRDI1",228,0)
 ;otherwise returns the exceptionMessage string from the errorSection
"RTN","ORRDI1",229,0)
 N ORRET S ORRET=""
"RTN","ORRDI1",230,0)
 I $D(^TMP($J,"ORRDI","ClinicalData",0,"errorSection")) D
"RTN","ORRDI1",231,0)
 .N I F I="fatalErrors","errors","warnings" D
"RTN","ORRDI1",232,0)
 ..N J S J="" F  S J=$O(^TMP($J,"ORRDI","ClinicalData",0,"errorSection",0,I,J)) Q:J=""  D
"RTN","ORRDI1",233,0)
 ...N ORSTR S ORSTR=$G(^TMP($J,"ORRDI","ClinicalData",0,"errorSection",0,I,J,"errorCode",0))
"RTN","ORRDI1",234,0)
 ...I ORSTR'="ALL_PATIENT_IDS_EXCLUDED" S ORRET=ORSTR
"RTN","ORRDI1",235,0)
 Q ORRET
"RTN","ORRDI1",236,0)
ERRHNDL(DFN) ;handle any errors that may get thrown in call to GET^ORRDI1
"RTN","ORRDI1",237,0)
 K ^TMP($J,"ORRDI"),^XTMP("ORRDI","PSOO",DFN),^XTMP("ORRDI","ART",DFN)
"RTN","ORRDI1",238,0)
 D UNWIND^%ZTER
"RTN","ORRDI1",239,0)
 Q
"RTN","ORWDCN32")
0^22^B19324752
"RTN","ORWDCN32",1,0)
ORWDCN32 ; SLC/KCM/REV - Consults calls [ 12/16/97  12:47 PM ] ;01/25/12  09:38
"RTN","ORWDCN32",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,306**;Dec 17, 1997;Build 43
"RTN","ORWDCN32",3,0)
 ;
"RTN","ORWDCN32",4,0)
DEF(LST,WHY)         ; load consult info
"RTN","ORWDCN32",5,0)
 N ILST,NAM,IEN,X
"RTN","ORWDCN32",6,0)
 S ILST=0
"RTN","ORWDCN32",7,0)
 S LST($$NXT)="~ShortList" D SHORT
"RTN","ORWDCN32",8,0)
 I WHY="C" D
"RTN","ORWDCN32",9,0)
 . S LST($$NXT)="~Inpt Cslt Urgencies" D INCURG
"RTN","ORWDCN32",10,0)
 I WHY="P" D
"RTN","ORWDCN32",11,0)
 . S LST($$NXT)="~Inpt Proc Urgencies" D INPURG
"RTN","ORWDCN32",12,0)
 S LST($$NXT)="~Outpt Urgencies" D OUTURG
"RTN","ORWDCN32",13,0)
 S LST($$NXT)="~Inpt Place" D INPLACE
"RTN","ORWDCN32",14,0)
 S LST($$NXT)="~Outpt Place" D OUTPLACE
"RTN","ORWDCN32",15,0)
 S LST($$NXT)="~EarliestDate" D EAD
"RTN","ORWDCN32",16,0)
 Q
"RTN","ORWDCN32",17,0)
EAD ; get default value for Earliest Appropriate Date ;WAT V29
"RTN","ORWDCN32",18,0)
 N DTDFLT,ENTITY
"RTN","ORWDCN32",19,0)
 S ENTITY="PKG"
"RTN","ORWDCN32",20,0)
 S DTDFLT=$$GET^XPAR(ENTITY,"ORCDGMRC EARLIEST DATE DEFAULT",1,"Q") ;ICR 2263
"RTN","ORWDCN32",21,0)
 S LST($$NXT)="d^"_DTDFLT
"RTN","ORWDCN32",22,0)
 Q
"RTN","ORWDCN32",23,0)
SHORT ;return list of Consults or Procedures quick orders
"RTN","ORWDCN32",24,0)
 N I,TMP
"RTN","ORWDCN32",25,0)
 Q:"CP"'[WHY
"RTN","ORWDCN32",26,0)
 S I=$O(^ORD(100.98,"B",$S(WHY="C":"CSLT",WHY="P":"PROC"),0))
"RTN","ORWDCN32",27,0)
 D GETQLST^ORWDXQ(.TMP,I,"Q")
"RTN","ORWDCN32",28,0)
 S I=0 F  S I=$O(TMP(I)) Q:'I  D
"RTN","ORWDCN32",29,0)
 . S LST($$NXT)="i"_TMP(I)
"RTN","ORWDCN32",30,0)
 Q
"RTN","ORWDCN32",31,0)
OUTPLACE ; load list of places
"RTN","ORWDCN32",32,0)
 N X
"RTN","ORWDCN32",33,0)
 F X="C^CONSULTANT'S CHOICE^C","E^EMERGENCY ROOM^E" D
"RTN","ORWDCN32",34,0)
 . S LST($$NXT)="i"_X
"RTN","ORWDCN32",35,0)
 S LST($$NXT)="d"_"C^CONSULTANT'S CHOICE^C"
"RTN","ORWDCN32",36,0)
 Q
"RTN","ORWDCN32",37,0)
INPLACE ; load list of places for outpatient
"RTN","ORWDCN32",38,0)
 N X
"RTN","ORWDCN32",39,0)
 F X="B^BEDSIDE^B","C^CONSULTANT'S CHOICE^C" D
"RTN","ORWDCN32",40,0)
 . S LST($$NXT)="i"_X
"RTN","ORWDCN32",41,0)
 S LST($$NXT)="d"_"B^BEDSIDE^B"
"RTN","ORWDCN32",42,0)
 Q
"RTN","ORWDCN32",43,0)
INCURG ; get list of urgencies for inpatient consults
"RTN","ORWDCN32",44,0)
 N IEN,GMRCURG,GMRCPRO,X
"RTN","ORWDCN32",45,0)
 S GMRCURG="",GMRCPRO=""
"RTN","ORWDCN32",46,0)
 F  S GMRCURG=$O(^ORD(101.42,"S.GMRCT",GMRCURG)) Q:GMRCURG=""  D
"RTN","ORWDCN32",47,0)
 . S GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - "_GMRCURG,0))
"RTN","ORWDCN32",48,0)
 . S LST($$NXT)="i"_$O(^ORD(101.42,"S.GMRCT",GMRCURG,0))_U_GMRCURG_U_GMRCPRO
"RTN","ORWDCN32",49,0)
 S IEN=$O(^ORD(101.42,"B","ROUTINE",0)),GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - ROUTINE",0))
"RTN","ORWDCN32",50,0)
 S LST($$NXT)="d"_IEN_U_"ROUTINE"_U_GMRCPRO
"RTN","ORWDCN32",51,0)
 Q
"RTN","ORWDCN32",52,0)
INPURG ; get list of urgencies for inpatient procedures
"RTN","ORWDCN32",53,0)
 N IEN,GMRCURG,GMRCPRO,X
"RTN","ORWDCN32",54,0)
 S GMRCURG="",GMRCPRO=""
"RTN","ORWDCN32",55,0)
 F  S GMRCURG=$O(^ORD(101.42,"S.GMRCR",GMRCURG)) Q:GMRCURG=""  D
"RTN","ORWDCN32",56,0)
 . S GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - "_GMRCURG,0))
"RTN","ORWDCN32",57,0)
 . S LST($$NXT)="i"_$O(^ORD(101.42,"S.GMRCR",GMRCURG,0))_U_GMRCURG_U_GMRCPRO
"RTN","ORWDCN32",58,0)
 S IEN=$O(^ORD(101.42,"B","ROUTINE",0)),GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - ROUTINE",0))
"RTN","ORWDCN32",59,0)
 S LST($$NXT)="d"_IEN_U_"ROUTINE"_U_GMRCPRO
"RTN","ORWDCN32",60,0)
 Q
"RTN","ORWDCN32",61,0)
OUTURG ; get list of urgencies for outpatient consults/procedures
"RTN","ORWDCN32",62,0)
 N IEN,GMRCURG,GMRCPRO,X
"RTN","ORWDCN32",63,0)
 S GMRCURG="",GMRCPRO=""
"RTN","ORWDCN32",64,0)
 F  S GMRCURG=$O(^ORD(101.42,"S.GMRCO",GMRCURG)) Q:GMRCURG=""  D
"RTN","ORWDCN32",65,0)
 . S GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - "_GMRCURG,0))
"RTN","ORWDCN32",66,0)
 . S LST($$NXT)="i"_$O(^ORD(101.42,"S.GMRCO",GMRCURG,0))_U_GMRCURG_U_GMRCPRO
"RTN","ORWDCN32",67,0)
 S IEN=$O(^ORD(101.42,"B","ROUTINE",0)),GMRCPRO=$O(^ORD(101,"B","GMRCURGENCY - ROUTINE",0))
"RTN","ORWDCN32",68,0)
 S LST($$NXT)="d"_IEN_U_"ROUTINE"_U_GMRCPRO
"RTN","ORWDCN32",69,0)
 Q
"RTN","ORWDCN32",70,0)
NXT() ; increments ILST
"RTN","ORWDCN32",71,0)
 S ILST=ILST+1
"RTN","ORWDCN32",72,0)
 Q ILST
"RTN","ORWDCN32",73,0)
LOOK200(VAL,X)     ; Lookup a person in 200
"RTN","ORWDCN32",74,0)
 S VAL=$$FIND1^DIC(200,"","",X) ;ICR 2051
"RTN","ORWDCN32",75,0)
 Q
"RTN","ORWDCN32",76,0)
ORDRMSG(Y,ORDITM) ;returns order message for this consult/procedure orderable
"RTN","ORWDCN32",77,0)
 N I
"RTN","ORWDCN32",78,0)
 S I=0 F  S I=$O(^ORD(101.43,ORDITM,8,I)) Q:I'>0  S Y(I)=^(I,0)
"RTN","ORWDCN32",79,0)
 Q
"RTN","ORWDCN32",80,0)
GETPROTO(Y,ORIEN) ;Get Protocol file IEN from OR IEN
"RTN","ORWDCN32",81,0)
 S Y=$P($G(^ORD(101.43,ORIEN,0)),U,2)
"RTN","ORWDCN32",82,0)
 Q
"RTN","ORWDCN32",83,0)
GETOINUM(Y,ORNUM) ;Get Orderable Item IEN from Protocol IEN
"RTN","ORWDCN32",84,0)
 S Y=$O(^ORD(101.43,"ID",ORNUM,0))
"RTN","ORWDCN32",85,0)
 Q
"RTN","ORWDCN32",86,0)
GETPRONM(Y,ORNAME) ;Get Protocol IEN given name
"RTN","ORWDCN32",87,0)
 S Y=$O(^ORD(101,"B",ORNAME,0))_";99PRO"
"RTN","ORWDCN32",88,0)
 Q
"RTN","ORWDCN32",89,0)
PROC(Y,FROM,DIR) ; Return a subset of orderable procedures
"RTN","ORWDCN32",90,0)
 ; .Return Array, Starting Text, Direction
"RTN","ORWDCN32",91,0)
 ; ^ORD(101.43,"S.PROC",UpperCase,DA)=Mne^MixedCase^InactvDt^.01IfMne
"RTN","ORWDCN32",92,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDCN32",93,0)
 N I,IEN,CNT,X,DTXT,ORID,ORSVCCNT S I=0,CNT=44
"RTN","ORWDCN32",94,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,"S.PROC",FROM),DIR) Q:FROM=""  D
"RTN","ORWDCN32",95,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.43,"S.PROC",FROM,IEN)) Q:'IEN  D
"RTN","ORWDCN32",96,0)
 . . S X=^ORD(101.43,"S.PROC",FROM,IEN)
"RTN","ORWDCN32",97,0)
 . . I +$P(X,U,3),$P(X,U,3)<$$NOW^XLFDT Q  ;ICR 10103
"RTN","ORWDCN32",98,0)
 . . S ORID=$P($G(^ORD(101.43,IEN,0)),U,2)
"RTN","ORWDCN32",99,0)
 . . ;I $P($G(^ORD(101,ORIEN,0)),U,3)'="" Q   ; Removed for v14
"RTN","ORWDCN32",100,0)
 . . D GETSVC^GMRCPR0(.ORSVCCNT,ORID) Q:+ORSVCCNT=0  ;ICR 2982
"RTN","ORWDCN32",101,0)
 . . S I=I+1
"RTN","ORWDCN32",102,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)_U_ORID
"RTN","ORWDCN32",103,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)_U_ORID
"RTN","ORWDCN32",104,0)
 Q
"RTN","ORWDCN32",105,0)
NEWDLG(Y,ORTYPE,ORLOC) ; Return order dialog info for New Consult OR PROCEDURE
"RTN","ORWDCN32",106,0)
 N DGRP,ID,IEN,TXT,TYP,X,X0,X5,ENT
"RTN","ORWDCN32",107,0)
 S ENT="ALL"
"RTN","ORWDCN32",108,0)
 I $G(ORLOC) S ORLOC=+ORLOC_";SC(",ENT=ENT_"^"_ORLOC
"RTN","ORWDCN32",109,0)
 I ORTYPE="C" S X=$$GET^XPAR(ENT,"ORWDX NEW CONSULT",1,"I") ;ICR 2263
"RTN","ORWDCN32",110,0)
 E  S X=$$GET^XPAR(ENT,"ORWDX NEW PROCEDURE",1,"I")
"RTN","ORWDCN32",111,0)
 S IEN=+X,X0=$G(^ORD(101.41,IEN,0)),X5=$G(^(5))
"RTN","ORWDCN32",112,0)
 S TYP=$P(X0,U,4),DGRP=+$P(X0,U,5),ID=+$P(X5,U,5),TXT=$P(X5,U,4)
"RTN","ORWDCN32",113,0)
 S Y=IEN_";"_ID_";"_DGRP_";"_TYP_U_TXT
"RTN","ORWDCN32",114,0)
 Q
"RTN","ORWDPS1")
0^36^B56868000
"RTN","ORWDPS1",1,0)
ORWDPS1 ; SLC/KCM/JLI/TC - Pharmacy Calls for Windows Dialog ;02/05/13  11:04
"RTN","ORWDPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,132,141,163,215,255,243,306**;Dec 17, 1997;Build 43
"RTN","ORWDPS1",3,0)
 ;
"RTN","ORWDPS1",4,0)
ODSLCT(LST,PSTYPE,DFN,LOC) ; return default lists for dialog
"RTN","ORWDPS1",5,0)
 ; PSTYPE: pharmacy type (U=unit dose, F=IV fluids, O=outpatient)
"RTN","ORWDPS1",6,0)
 N ILST S ILST=0
"RTN","ORWDPS1",7,0)
 S ILST=ILST+1,LST(ILST)="~Priority" D PRIOR
"RTN","ORWDPS1",8,0)
 S ILST=ILST+1,LST(ILST)="~DispMsg"
"RTN","ORWDPS1",9,0)
 S ILST=ILST+1,LST(ILST)="d"_$$DISPMSG
"RTN","ORWDPS1",10,0)
 ;
"RTN","ORWDPS1",11,0)
 ; I PSTYPE="F" D  Q                           ; IV Fluids
"RTN","ORWDPS1",12,0)
 ; . S ILST=ILST+1,LST(ILST)="~ShortList" D SHORT
"RTN","ORWDPS1",13,0)
 ;
"RTN","ORWDPS1",14,0)
 I PSTYPE="O" D                                ; Outpatient
"RTN","ORWDPS1",15,0)
 . S ILST=ILST+1,LST(ILST)="~Refills"
"RTN","ORWDPS1",16,0)
 . S ILST=ILST+1,LST(ILST)="d0^0"
"RTN","ORWDPS1",17,0)
 . S ILST=ILST+1,LST(ILST)="~Pickup"
"RTN","ORWDPS1",18,0)
 . S ILST=ILST+1,LST(ILST)="d"_$$DEFPICK($G(LOC))
"RTN","ORWDPS1",19,0)
 . ; S ILST=ILST+1,LST(ILST)="~Supply"
"RTN","ORWDPS1",20,0)
 . ; S ILST=ILST+1,LST(ILST)="d^"_$$DEFSPLY(DFN)
"RTN","ORWDPS1",21,0)
 Q
"RTN","ORWDPS1",22,0)
PKI(ORY,OI,PSTYPE,ORVP,PKIACTIV) ; return DEA Schedule for drug
"RTN","ORWDPS1",23,0)
 N ILST,ORDOSE,ORWPSOI,ORWDOSES,X1,X2,X
"RTN","ORWDPS1",24,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS1",25,0)
 S ILST=0
"RTN","ORWDPS1",26,0)
 S ORWPSOI=0
"RTN","ORWDPS1",27,0)
 S:+OI ORWPSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS1",28,0)
 D START^PSSJORDF(ORWPSOI,$S(PSTYPE="U":"I",1:"O")) ; dflt route, schedule, etc.
"RTN","ORWDPS1",29,0)
 I '$L($T(DOSE^PSSOPKI1)) D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses
"RTN","ORWDPS1",30,0)
 I $L($T(DOSE^PSSOPKI1)) D DOSE^PSSOPKI1(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses NEW PKI CODE from pharmacy
"RTN","ORWDPS1",31,0)
 D EN^PSSDIN(ORWPSOI)                               ; nfi text
"RTN","ORWDPS1",32,0)
 S ORY="" ;PKI
"RTN","ORWDPS1",33,0)
 I $D(ORDOSE("DEA")) S X="",X1=$P(ORDOSE("DEA"),";"),X2=$P(ORDOSE("DEA"),";",2) D
"RTN","ORWDPS1",34,0)
 . I '$L(X2) Q
"RTN","ORWDPS1",35,0)
 . I $G(PKIACTIV) S X=X2
"RTN","ORWDPS1",36,0)
 S ORY=X
"RTN","ORWDPS1",37,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS1",38,0)
 Q
"RTN","ORWDPS1",39,0)
PRIOR ; from DLGSLCT, get list of allowed priorities
"RTN","ORWDPS1",40,0)
 N X,XREF
"RTN","ORWDPS1",41,0)
 S XREF=$S(PSTYPE="O":"S.PSO",1:"S.PSJ")
"RTN","ORWDPS1",42,0)
 S X="" F  S X=$O(^ORD(101.42,XREF,X)) Q:'$L(X)  D
"RTN","ORWDPS1",43,0)
 . I XREF["PSJ",X'="ASAP",X'="ROUTINE",X'="STAT" Q
"RTN","ORWDPS1",44,0)
 . S ILST=ILST+1,LST(ILST)="i"_$O(^ORD(101.42,XREF,X,0))_U_X
"RTN","ORWDPS1",45,0)
 S ILST=ILST+1,LST(ILST)="d"_$O(^ORD(101.42,"B","ROUTINE",0))_U_"ROUTINE"
"RTN","ORWDPS1",46,0)
 Q
"RTN","ORWDPS1",47,0)
DEFPICK(LOC)       ; return default routing
"RTN","ORWDPS1",48,0)
 N X,DLG,PRMT
"RTN","ORWDPS1",49,0)
 S DLG=$O(^ORD(101.41,"AB","PSO OERR",0)),X=""
"RTN","ORWDPS1",50,0)
 S PRMT=$O(^ORD(101.41,"AB","OR GTX ROUTING",0))
"RTN","ORWDPS1",51,0)
 I $D(^TMP("ORECALL",$J,+DLG,+PRMT,1)) S X=^(1)
"RTN","ORWDPS1",52,0)
 I X'="" S EDITONLY=1 Q X  ; EDITONLY used by default action
"RTN","ORWDPS1",53,0)
 ;
"RTN","ORWDPS1",54,0)
 ;S X=$$GET^XPAR("ALL^"_"LOC.`"_LOC,"ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",55,0)
 S X=$$GET^XPAR("LOC.`"_LOC_"^SYS","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",56,0)
 I X="C" S X="C^in Clinic" G XPICK
"RTN","ORWDPS1",57,0)
 I X="M" S X="M^by Mail"   G XPICK
"RTN","ORWDPS1",58,0)
 I X="W" S X="W^at Window" G XPICK
"RTN","ORWDPS1",59,0)
 I X="N" S X=""            G XPICK
"RTN","ORWDPS1",60,0)
 I X=""  S X=$S($D(^PSX(550,"C")):"M^by Mail",1:"W^at Window")
"RTN","ORWDPS1",61,0)
XPICK Q X
"RTN","ORWDPS1",62,0)
 ;
"RTN","ORWDPS1",63,0)
DEFSPLY(DFN)    ; return default days supply for this patient
"RTN","ORWDPS1",64,0)
 N ORWX
"RTN","ORWDPS1",65,0)
 S ORWX("PATIENT")=DFN
"RTN","ORWDPS1",66,0)
 D DSUP^PSOSIGDS(.ORWX)
"RTN","ORWDPS1",67,0)
 Q $G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS1",68,0)
 ;
"RTN","ORWDPS1",69,0)
DFLTSPLY(VAL,UPD,SCH,PAT,DRG,OI)        ; return days supply given quantity
"RTN","ORWDPS1",70,0)
 ; VAL: default days supply
"RTN","ORWDPS1",71,0)
 N ORWX,I,PSOI,TPKG
"RTN","ORWDPS1",72,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS1",73,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS1",74,0)
 I $D(OI) D
"RTN","ORWDPS1",75,0)
 . S TPKG=$P($G(^ORD(101.43,+$G(OI),0)),U,2) Q:TPKG'["PS"
"RTN","ORWDPS1",76,0)
 . S PSOI=+TPKG Q:PSOI'>0
"RTN","ORWDPS1",77,0)
 . S ORWX("OI")=PSOI
"RTN","ORWDPS1",78,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS1",79,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS1",80,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS1",81,0)
 D DSUP^PSOSIGDS(.ORWX)
"RTN","ORWDPS1",82,0)
 S VAL=$G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS1",83,0)
 Q
"RTN","ORWDPS1",84,0)
DISPMSG()       ; return 1 to suppress dispense message
"RTN","ORWDPS1",85,0)
 Q +$$GET^XPAR("ALL","ORWDPS SUPPRESS DISPENSE MSG",1,"I")
"RTN","ORWDPS1",86,0)
 ;
"RTN","ORWDPS1",87,0)
DOWSCH(LST,DFN,LOCIEN)     ; return all schedules
"RTN","ORWDPS1",88,0)
 N CNT,FREQ,ILST,ORARRAY,WIEN
"RTN","ORWDPS1",89,0)
 S WIEN=$$WARDIEN^ORWDPS32(+$G(LOCIEN))
"RTN","ORWDPS1",90,0)
 D SCHED^PSS51P1(WIEN,.ORARRAY)
"RTN","ORWDPS1",91,0)
 S ILST=0
"RTN","ORWDPS1",92,0)
 S CNT=0 F  S CNT=$O(ORARRAY(CNT)) Q:CNT'>0  D
"RTN","ORWDPS1",93,0)
 .S NODE=$G(ORARRAY(CNT))
"RTN","ORWDPS1",94,0)
 .I $P(NODE,U,4)="C" D
"RTN","ORWDPS1",95,0)
 ..K ^TMP($J,"ORWDPS1 DOWSCH")
"RTN","ORWDPS1",96,0)
 ..D ZERO^PSS51P1($P(NODE,U),,,,"ORWDPS1 DOWSCH")
"RTN","ORWDPS1",97,0)
 ..S FREQ=$G(^TMP($J,"ORWDPS1 DOWSCH",$P(NODE,U),2))
"RTN","ORWDPS1",98,0)
 ..K ^TMP($J,"ORWDPS1 DOWSCH")
"RTN","ORWDPS1",99,0)
 ..I +FREQ=0 Q
"RTN","ORWDPS1",100,0)
 ..I +FREQ>1440 Q
"RTN","ORWDPS1",101,0)
 ..S ILST=ILST+1,LST(ILST)=$P(ORARRAY(CNT),U,2,5)
"RTN","ORWDPS1",102,0)
 Q
"RTN","ORWDPS1",103,0)
 ;
"RTN","ORWDPS1",104,0)
SCHALL(LST,DFN,LOCIEN)     ; return all schedules
"RTN","ORWDPS1",105,0)
 N CNT,ILST,ORARRAY,WIEN
"RTN","ORWDPS1",106,0)
 S WIEN=$$WARDIEN^ORWDPS32(+$G(LOCIEN))
"RTN","ORWDPS1",107,0)
 D SCHED^PSS51P1(WIEN,.ORARRAY)
"RTN","ORWDPS1",108,0)
 S ILST=0
"RTN","ORWDPS1",109,0)
 S CNT=0 F  S CNT=$O(ORARRAY(CNT)) Q:CNT'>0  D
"RTN","ORWDPS1",110,0)
 .S ILST=ILST+1,LST(ILST)=$P(ORARRAY(CNT),U,2,5)
"RTN","ORWDPS1",111,0)
 Q
"RTN","ORWDPS1",112,0)
 ;
"RTN","ORWDPS1",113,0)
FORMALT(ORLST,ORIEN,PSTYPE) ; return a list of formulary alternatives
"RTN","ORWDPS1",114,0)
 N PSID,I
"RTN","ORWDPS1",115,0)
 S ORIEN=+$P(^ORD(101.43,ORIEN,0),U,2)
"RTN","ORWDPS1",116,0)
 D EN1^PSSUTIL1(.ORIEN,PSTYPE)
"RTN","ORWDPS1",117,0)
 S PSID=0,I=0
"RTN","ORWDPS1",118,0)
 F  S PSID=$O(ORIEN(PSID)) Q:'PSID  D
"RTN","ORWDPS1",119,0)
 . S OI=+$O(^ORD(101.43,"ID",PSID_";99PSP",0))
"RTN","ORWDPS1",120,0)
 . I OI S I=I+1,ORLST(I)=OI,$P(ORLST(I),U,2)=$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS1",121,0)
 Q
"RTN","ORWDPS1",122,0)
DOSEALT(LST,DDRUG,CUROI,PSTYPE) ; return a list of formulary alternatives for dose
"RTN","ORWDPS1",123,0)
 N I,OI,ORWLST,ILST S ILST=0
"RTN","ORWDPS1",124,0)
 D ENRFA^PSJORUTL(DDRUG,PSTYPE,.ORWLST)
"RTN","ORWDPS1",125,0)
 S I=0 F  S I=$O(ORWLST(I)) Q:'I  D
"RTN","ORWDPS1",126,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(ORWLST(I),U,4)_";99PSP",0))
"RTN","ORWDPS1",127,0)
 . I OI,OI'=CUROI S ILST=ILST+1,LST(ILST)=OI_U_$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS1",128,0)
 Q
"RTN","ORWDPS1",129,0)
QOMEDALT(ORY,ODIEN) ;
"RTN","ORWDPS1",130,0)
 N ARRAY,IDIEN,ORDERID,PKG,PSTYPE,VALUE
"RTN","ORWDPS1",131,0)
 S ORY=0,PKG=+$P(^ORD(101.41,ODIEN,0),U,7)
"RTN","ORWDPS1",132,0)
 S PSTYPE=$S($$GET1^DIQ(9.4,PKG_",",1)="PSO":"O",1:"I")
"RTN","ORWDPS1",133,0)
 S ORDERID=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM","")) Q:ORDERID'>0
"RTN","ORWDPS1",134,0)
 S IDIEN=$O(^ORD(101.41,ODIEN,6,"D",ORDERID,"")) Q:IDIEN'>0
"RTN","ORWDPS1",135,0)
 S VALUE=$G(^ORD(101.41,ODIEN,6,IDIEN,1)) Q:VALUE'>0
"RTN","ORWDPS1",136,0)
 I $P($G(^ORD(101.43,VALUE,"PS")),U,6)=1 S ORY=VALUE
"RTN","ORWDPS1",137,0)
 ;D FORMALT(.ARRAY,VALUE,PSTYPE) I $D(ARRAY)>0 S ORY=VALUE
"RTN","ORWDPS1",138,0)
 ;I ORY=0,$P($G(^ORD(101.43,VALUE,"PS")),U,6)=1 S ORY=VALUE
"RTN","ORWDPS1",139,0)
 Q
"RTN","ORWDPS1",140,0)
FAILDEA(FAIL,OI,ORNP,PSTYPE)    ; return 1 if DEA check fails for this provider
"RTN","ORWDPS1",141,0)
 N DEAFLG,PSOI,TPKG,RT,DETFLG,DETPRO
"RTN","ORWDPS1",142,0)
 S FAIL=0,TPKG=$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORWDPS1",143,0)
 Q:TPKG'["PS"
"RTN","ORWDPS1",144,0)
 S PSOI=+TPKG Q:PSOI'>0
"RTN","ORWDPS1",145,0)
 S DETFLAG=$$OIDETOX^PSSOPKI(PSOI,PSTYPE)
"RTN","ORWDPS1",146,0)
 S DETPRO=$$DETOX^XUSER(+$G(ORNP))
"RTN","ORWDPS1",147,0)
 I DETFLAG,DETPRO="" S FAIL=3 Q
"RTN","ORWDPS1",148,0)
 I DETFLAG,DETPRO>0 S Y=DETPRO X ^DD("DD") S FAIL="5^"_Y Q
"RTN","ORWDPS1",149,0)
 S DEAFLG=$P($$OIDEA^PSSOPKI(PSOI,PSTYPE),";",2) Q:DEAFLG'>0
"RTN","ORWDPS1",150,0)
 S RT=$$SDEA^XUSER(,+$G(ORNP),DEAFLG) I RT=1 S FAIL=1
"RTN","ORWDPS1",151,0)
 I RT=2 S FAIL="2^"_$$UP^XLFSTR(DEAFLG)
"RTN","ORWDPS1",152,0)
 I RT?1"4".E S FAIL=RT
"RTN","ORWDPS1",153,0)
 Q
"RTN","ORWDPS1",154,0)
FDEA1(FAIL,OI,OITYPE,ORNP) ; only be called for an outpaitent and IV dialog
"RTN","ORWDPS1",155,0)
 ;OI: IV Orderable Item
"RTN","ORWDPS1",156,0)
 ;OITYPE: A:ADDITIVE  S:SOLUTION
"RTN","ORWDPS1",157,0)
 N DEAFLG,PSOI,TKPG,RT,DETFLG,DETPRO
"RTN","ORWDPS1",158,0)
 S FAIL=0,TPKG=$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORWDPS1",159,0)
 Q:TPKG'["PS"
"RTN","ORWDPS1",160,0)
 S PSOI=+TPKG Q:PSOI'>0
"RTN","ORWDPS1",161,0)
 S DETFLAG=$$OIDETOX^PSSOPKI(PSOI,"I")
"RTN","ORWDPS1",162,0)
 S DETPRO=$$DETOX^XUSER(+$G(ORNP))
"RTN","ORWDPS1",163,0)
 I DETFLAG,DETPRO="" S FAIL=3 Q
"RTN","ORWDPS1",164,0)
 I DETFLAG,DETPRO>0 S Y=DETPRO X ^DD("DD") S FAIL="5^"_Y Q
"RTN","ORWDPS1",165,0)
 S DEAFLG=$P($$IVDEA^PSSUTIL1(PSOI,OITYPE),";",2) Q:DEAFLG'>0
"RTN","ORWDPS1",166,0)
 S RT=$$SDEA^XUSER(,+$G(ORNP),DEAFLG) I RT=1 S FAIL=1
"RTN","ORWDPS1",167,0)
 I RT=2 S FAIL="2^"_$$UP^XLFSTR(DEAFLG)
"RTN","ORWDPS1",168,0)
 I RT?1"4".E S FAIL=RT
"RTN","ORWDPS1",169,0)
 Q
"RTN","ORWDPS1",170,0)
 ;
"RTN","ORWDPS1",171,0)
CHK94(VAL)      ; return 1 if patch 94 has been installed
"RTN","ORWDPS1",172,0)
 S VAL=0
"RTN","ORWDPS1",173,0)
 I $O(^ORD(101.41,"B","PS MEDS",0)) S VAL=1
"RTN","ORWDPS1",174,0)
 Q
"RTN","ORWDPS1",175,0)
LOCPICK(Y,LOC) ; return default Location level routing
"RTN","ORWDPS1",176,0)
 S Y=""
"RTN","ORWDPS1",177,0)
 S Y=$$GET^XPAR("LOC.`"_LOC_"^SYS","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS1",178,0)
 I Y="C" S Y="C^in Clinic"
"RTN","ORWDPS1",179,0)
 I Y="M" S Y="M^by Mail"
"RTN","ORWDPS1",180,0)
 I Y="W" S Y="W^at Window"
"RTN","ORWDPS1",181,0)
 I Y="N" S Y=""
"RTN","ORWDPS1",182,0)
 Q
"RTN","ORWDPS1",183,0)
HASOIPI(Y,QOID) ; Check if QO put orderable item's PI into Sig
"RTN","ORWDPS1",184,0)
 N PIIEN,OIX
"RTN","ORWDPS1",185,0)
 S Y=0
"RTN","ORWDPS1",186,0)
 Q:'$D(^ORD(101.41,QOID,0))
"RTN","ORWDPS1",187,0)
 S PIIEN=$O(^ORD(101.41,"B","OR GTX PATIENT INSTRUCTIONS",0))
"RTN","ORWDPS1",188,0)
 Q:'PIIEN
"RTN","ORWDPS1",189,0)
 S OIX=0
"RTN","ORWDPS1",190,0)
 Q:'$D(^ORD(101.41,QOID,6,"D"))
"RTN","ORWDPS1",191,0)
 F  S OIX=$O(^ORD(101.41,+QOID,6,"D",OIX)) Q:'OIX  D
"RTN","ORWDPS1",192,0)
 . I OIX=PIIEN S Y=1 Q
"RTN","ORWDPS1",193,0)
 Q
"RTN","ORWDPS1",194,0)
HASROUTE(Y,QOID) ;Check if QO has a ROUTE defined
"RTN","ORWDPS1",195,0)
 N ROUTID
"RTN","ORWDPS1",196,0)
 S Y=0,ROUTID=0
"RTN","ORWDPS1",197,0)
 S ROUTID=$O(^ORD(101.41,"B","OR GTX ROUTING",0))
"RTN","ORWDPS1",198,0)
 Q:'ROUTID
"RTN","ORWDPS1",199,0)
 Q:'$D(^ORD(101.41,+QOID))
"RTN","ORWDPS1",200,0)
 I $D(^ORD(101.41,+QOID,6,"D",ROUTID)) S Y=1
"RTN","ORWDPS1",201,0)
 Q
"RTN","ORWDPS1",202,0)
QOCHECK(ORY,DIEN) ;
"RTN","ORWDPS1",203,0)
 N ARY,DG,FORMIEN,NAME,OI,OIIEN,ORDIALOG,ORPKG,TYPE
"RTN","ORWDPS1",204,0)
 S ORPKG=$$NMSP^ORCD($P($G(^ORD(101.41,DIEN,0)),U,7)) Q:ORPKG'["PS"
"RTN","ORWDPS1",205,0)
 S DG=$P(^ORD(101.41,DIEN,0),U,5)
"RTN","ORWDPS1",206,0)
 S NAME=$P(^ORD(100.98,DIEN,0),U)
"RTN","ORWDPS1",207,0)
 S TYPE=$S(NAME="INPATIENT MEDICATIONS":"I",NAME="OUTPATIENT MEDICATIONS":"O",1:"")
"RTN","ORWDPS1",208,0)
 I TYPE="" Q
"RTN","ORWDPS1",209,0)
 S ORDIALOG=$$DEFDLG^ORCD(DIEN) Q:ORDIALOG
"RTN","ORWDPS1",210,0)
 D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD("^ORD(101.41,"_DIEN_",6)")
"RTN","ORWDPS1",211,0)
 I $D(ORDIALOG)'>0 Q
"RTN","ORWDPS1",212,0)
 S OI=$P($G(ORDIALOG("B","ORDERABLE")),U,2) Q:OI'>0
"RTN","ORWDPS1",213,0)
 S OIIEN=$G(ORDIALOG(OI,1)) Q:OIIEN'>0
"RTN","ORWDPS1",214,0)
 D FORMALT(.ARY,OIIEN,TYPE) I $D(ARY)'>0 Q
"RTN","ORWDPS1",215,0)
 S ORY=OIIEN
"RTN","ORWDPS1",216,0)
 Q
"RTN","ORWDX")
0^50^B66876839
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dialog utilities ;12/14/12  09:24
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190,195,215,246,243,283,296,280,306**;Dec 17, 1997;Build 43
"RTN","ORWDX",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWDX",4,0)
 ;Reference to DIC(9.4 supported by IA #2058
"RTN","ORWDX",5,0)
 ;
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF) ; Subset of orderable items
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM,DEFROUTE
"RTN","ORWDX",9,0)
 S DEFROUTE=""
"RTN","ORWDX",10,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",11,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",12,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",13,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",14,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",15,0)
 . . Q:$P(X,U,5)  S I=I+1
"RTN","ORWDX",16,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",17,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",18,0)
 Q
"RTN","ORWDX",19,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",20,0)
 N CNT,NM,XRF
"RTN","ORWDX",21,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",22,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",23,0)
 Q
"RTN","ORWDX",24,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",25,0)
 D FNDINFO^ORWDX1(.Y,.ODIEN)
"RTN","ORWDX",26,0)
 Q
"RTN","ORWDX",27,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",28,0)
 D DLGDEF^ORWDX1(.LST,.DLG)
"RTN","ORWDX",29,0)
 Q
"RTN","ORWDX",30,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",31,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",32,0)
 Q
"RTN","ORWDX",33,0)
LOADRSP(LST,RSPID,TRANS)      ; Load responses from 101.41 or 100
"RTN","ORWDX",34,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",35,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",36,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT,ORLOC S ROOT=""
"RTN","ORWDX",37,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT^ORWDX2
"RTN","ORWDX",38,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT^ORWDX2
"RTN","ORWDX",39,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT^ORWDX2
"RTN","ORWDX",40,0)
 Q:ROOT=""
"RTN","ORWDX",41,0)
 G XROOT^ORWDX2
"RTN","ORWDX",42,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF) ;
"RTN","ORWDX",43,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",44,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",45,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",46,0)
 N XCNT,XCOMM,XDONE,XX  ;SBR
"RTN","ORWDX",47,0)
 S (XCOMM,XCNT)=""  ;SBR
"RTN","ORWDX",48,0)
 I $G(ORIFN)'="" D  ;SBR problem only occurs on change or renew orders
"RTN","ORWDX",49,0)
 . S XCNT=$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",XCNT))  ;SBR
"RTN","ORWDX",50,0)
 . I XCNT'="" S XCOMM=$P($G(^OR(100,+ORIFN,4.5,XCNT,0)),"^",2)  ;SBR
"RTN","ORWDX",51,0)
 . I XCOMM'="" S XDONE=0,XX="" F  S XX=$O(ORDIALOG("WP",XCOMM,1,XX)) Q:XX=""  D  ;SBR
"RTN","ORWDX",52,0)
 . . I ORDIALOG("WP",XCOMM,1,XX,0)'="" S XDONE=1 Q  ;SBR
"RTN","ORWDX",53,0)
 . I XCOMM'="",'$G(XDONE),$D(ORDIALOG("WP",XCOMM)) K ORDIALOG("WP",XCOMM)  ;SBR
"RTN","ORWDX",54,0)
 S ORCATFN="" I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",55,0)
 ;Remove treating facility if inpatient and IMO order 26.42
"RTN","ORWDX",56,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC ORDERS" K ORDIALOG("ORTS")
"RTN","ORWDX",57,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",58,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",59,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",60,0)
 ;=====================================================
"RTN","ORWDX",61,0)
 ; Changed for v26.27 (RV)
"RTN","ORWDX",62,0)
 S ORCAT=$$INPT^ORCD,ORCAT=$S(ORCAT=1:"I",1:"O")
"RTN","ORWDX",63,0)
 ;I $L($G(OREVENT)) D
"RTN","ORWDX",64,0)
 ;. S ONPASS=0
"RTN","ORWDX",65,0)
 ;. S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",66,0)
 ;. I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",67,0)
 ;. S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",68,0)
 ;E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",69,0)
 ;=====================================================
"RTN","ORWDX",70,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",71,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",72,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",73,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",74,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",75,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",76,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",77,0)
 S:DLG="FHW1" ORCAT="I" S:DLG?1"FHW "2.7U1" MEAL" ORCAT="O"
"RTN","ORWDX",78,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",79,0)
 I ORDG=$O(^ORD(100.98,"B","LAB",0)) D  ;use section
"RTN","ORWDX",80,0)
 . N OI,SUB S OI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDX",81,0)
 . S SUB=$P($G(^ORD(101.43,OI,"LR")),U,6),ORDG=$$DGRP^ORMLR(SUB)
"RTN","ORWDX",82,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",83,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",84,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",85,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",86,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",87,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",88,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",89,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",90,0)
 I $G(ORWP94) D
"RTN","ORWDX",91,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",92,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",93,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",94,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",95,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",96,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",97,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",98,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",99,0)
 . D EN^ORCSAVE
"RTN","ORWDX",100,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",101,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",102,0)
 E  D
"RTN","ORWDX",103,0)
 . N OR0
"RTN","ORWDX",104,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",105,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",106,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",107,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",108,0)
 Q
"RTN","ORWDX",109,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",110,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN,J,EVENT,LOCK,OR3
"RTN","ORWDX",111,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",112,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D  Q:ORWERR]""
"RTN","ORWDX",113,0)
 . S (ORIFN,ORWLST(ORIX))=ORIENS(ORIX)
"RTN","ORWDX",114,0)
 . S PTEVT=$P(^OR(100,+ORIFN,0),U,17)
"RTN","ORWDX",115,0)
 . I PTEVT D
"RTN","ORWDX",116,0)
 .. I $D(EVENT(PTEVT)) S LOCK=1 Q
"RTN","ORWDX",117,0)
 .. S LOCK=$$LCKEVT^ORX2(PTEVT) S:LOCK EVENT(PTEVT)=""
"RTN","ORWDX",118,0)
 . I 'LOCK S ORWERR="1^delayed event is locked - another user is processing orders for this event" S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",119,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",120,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",121,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",122,0)
 .. S ORSIGST=$P($G(^(0)),U,4),ORNATURE=$P($G(^(0)),U,12) ;naked references refer to OR(100,+ORIFN,8,ORDA on line above
"RTN","ORWDX",123,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",124,0)
 . I OK,$G(LOCK) D
"RTN","ORWDX",125,0)
 .. S OR3=$G(^OR(100,+ORIFN,3)) I $P(OR3,"^",3)'=10!($P(OR3,"^",9)]"") D UNLK1^ORX2(ORIENS(ORIX)) Q  ;order already released or has a parent
"RTN","ORWDX",126,0)
 .. S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",127,0)
 .. S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty
"RTN","ORWDX",128,0)
 .. D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX)) ;add ,LOCK to if statement for 195
"RTN","ORWDX",129,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",130,0)
 . E  D
"RTN","ORWDX",131,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",132,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",133,0)
 . S X="RS"
"RTN","ORWDX",134,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",135,0)
 S J=0 F  S J=$O(EVENT(J)) Q:'+J  D UNLEVT^ORX2(J) ;195
"RTN","ORWDX",136,0)
 Q
"RTN","ORWDX",137,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",138,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",139,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",140,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X,I
"RTN","ORWDX",141,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",142,0)
 F I="LR","VBEC" S X=+$O(^DIC(9.4,"C",I,0)) S:X ORLR(X)=1
"RTN","ORWDX",143,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",144,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",145,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",146,0)
 . S ORBEF=0
"RTN","ORWDX",147,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",148,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",149,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",150,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",151,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",152,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",153,0)
 .. I $G(ORLR(+$P(^OR(100,+ORDERID,0),U,14))),'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",154,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",155,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",156,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",157,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",158,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",159,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",160,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",161,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",162,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",163,0)
 I $D(ORWLST)>9 D
"RTN","ORWDX",164,0)
 . N I,A
"RTN","ORWDX",165,0)
 . S I=0 F  S I=$O(ORWLST(I)) Q:I=""  S A=$G(ORWLST(I)) I A["Invalid Procedure, Inactive, no Imaging Type" D SM^ORWDX2(A)
"RTN","ORWDX",166,0)
  Q
"RTN","ORWDX",167,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",168,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",169,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",170,0)
 Q
"RTN","ORWDX",171,0)
FORMID(VAL,ORIFN) ; Base dlg FormID for an order
"RTN","ORWDX",172,0)
 N DLG
"RTN","ORWDX",173,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",174,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",175,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",176,0)
 Q
"RTN","ORWDX",177,0)
AGAIN(VAL,DLG) ; return true to keep dlg for another order
"RTN","ORWDX",178,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",179,0)
 Q
"RTN","ORWDX",180,0)
DGRP(VAL,DLG) ; Display grp pointer for a dlg
"RTN","ORWDX",181,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",182,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",183,0)
 Q
"RTN","ORWDX",184,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",185,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",186,0)
 Q
"RTN","ORWDX",187,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",188,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",189,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",190,0)
 N I
"RTN","ORWDX",191,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",192,0)
 Q
"RTN","ORWDX",193,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",194,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",195,0)
 Q
"RTN","ORWDX",196,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",197,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",198,0)
 Q
"RTN","ORWDX",199,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",200,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",201,0)
 Q
"RTN","ORWDX",202,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",203,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",204,0)
 Q
"RTN","ORWDX",205,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",206,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",207,0)
 Q
"RTN","ORWDX",208,0)
UNLKOTH(OK,ORIFN) ; Unlock pt not by this session
"RTN","ORWDX",209,0)
 K ^XTMP("ORPTLK-"_ORIFN) S OK=1
"RTN","ORWDX",210,0)
 Q
"RTN","ORWDXA")
0^48^B82710229
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions ;12/14/12  13:38
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149,187,213,195,215,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Is action valid for order?
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 N ORNSS S ORNSS=1
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D VALSCH^ORWNSS(.ORNSS,ORID)
"RTN","ORWDXA",11,0)
 I ORNSS=0 S VAL="This order contains an invalid administration schedule." Q
"RTN","ORWDXA",12,0)
 I (ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",13,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects
"RTN","ORWDXA",14,0)
 I (ACTION="RN") D  Q:$L(VAL)
"RTN","ORWDXA",15,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",16,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",17,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",18,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",19,0)
 . E  S VAL=""
"RTN","ORWDXA",20,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",21,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",22,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",23,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",24,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",25,0)
 I $L(VAL) Q
"RTN","ORWDXA",26,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",27,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",28,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",29,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",30,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",31,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",32,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",33,0)
 . N DLG,FRM
"RTN","ORWDXA",34,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",35,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",36,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",37,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",38,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",39,0)
 N OREBUILD
"RTN","ORWDXA",40,0)
 ;I (ACTION="RW")!(ACTION="XFR")!(ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",41,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",42,0)
 I ACTION="RN",$$UPCTCHK(ORID) S VAL="Cannot renew this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",43,0)
 I ACTION="RW",$$UPCTCHK(ORID) S VAL="Cannot copy this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",44,0)
 Q
"RTN","ORWDXA",45,0)
 ;
"RTN","ORWDXA",46,0)
HOLD(REC,ORID,ORNP) ; Place order on hold
"RTN","ORWDXA",47,0)
 N ACTDA
"RTN","ORWDXA",48,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",49,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",50,0)
 Q
"RTN","ORWDXA",51,0)
UNHOLD(REC,ORID,ORNP) ; Release order from hold
"RTN","ORWDXA",52,0)
 N ACTDA
"RTN","ORWDXA",53,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",54,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",55,0)
 Q
"RTN","ORWDXA",56,0)
DC(REC,ORID,ORNP,ORL,REASON,DCORIG,ISNEWORD) ; Discontinue/Cancel/Delete order
"RTN","ORWDXA",57,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",58,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",59,0)
 Q:'+ORID
"RTN","ORWDXA",60,0)
 I $G(DCORIG)="" S DCORIG=0
"RTN","ORWDXA",61,0)
 S CURRACT=0
"RTN","ORWDXA",62,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",63,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",64,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E"
"RTN","ORWDXA",65,0)
 ;change the way create work to support forcing signature for all DC
"RTN","ORWDXA",66,0)
 ;reasons
"RTN","ORWDXA",67,0)
 S CREATE=1,PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",68,0)
 ;S CREATE=$$CREATE^ORX1(NATURE)
"RTN","ORWDXA",69,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",70,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",71,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",72,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",73,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",74,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",75,0)
 E  D
"RTN","ORWDXA",76,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",77,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",78,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",79,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",80,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",81,0)
 . N RPLORD
"RTN","ORWDXA",82,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",83,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",84,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",85,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",86,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",87,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled",DCORIG)
"RTN","ORWDXA",88,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",89,0)
 . E  D                           ; CANCEL OR DELETE unsigned, unreleased
"RTN","ORWDXA",90,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",91,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",92,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",93,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",94,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",95,0)
 . . I $G(ISNEWORD) D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",96,0)
 . . I '$G(ISNEWORD) D CANCEL^ORCSAVE2(ORID)
"RTN","ORWDXA",97,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",98,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",99,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",100,0)
 . E  D
"RTN","ORWDXA",101,0)
 . . K REC
"RTN","ORWDXA",102,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",103,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",104,0)
 S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",105,0)
 D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",106,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",107,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",108,0)
 N PKG
"RTN","ORWDXA",109,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",110,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",111,0)
 I REASON=16&(PKG="PS") D
"RTN","ORWDXA",112,0)
 . N XMB
"RTN","ORWDXA",113,0)
 . S XMB="OR DRUG ORDER CANCELLED"
"RTN","ORWDXA",114,0)
 . S XMB(1)=$P($G(REC(2)),"tDiscontinue",2),XMB(4)=$P($G(^VA(200,DUZ,0)),U)
"RTN","ORWDXA",115,0)
 . S XMB(2)=+ORID
"RTN","ORWDXA",116,0)
 . S XMB(3)=+$P($G(^OR(100,+ORID,0)),U,2)
"RTN","ORWDXA",117,0)
 . S XMB(3)=$P($G(^DPT(XMB(3),0)),U)
"RTN","ORWDXA",118,0)
 . D ^XMB
"RTN","ORWDXA",119,0)
 Q
"RTN","ORWDXA",120,0)
DCREQIEN(VAL) ; Return IEN for Req Phys Cancelled reason
"RTN","ORWDXA",121,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",122,0)
 Q
"RTN","ORWDXA",123,0)
COMPLETE(REC,ORID,ESCODE) ; Complete order (generic)
"RTN","ORWDXA",124,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",125,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",126,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",127,0)
 ; validate ESCode
"RTN","ORWDXA",128,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",129,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",130,0)
 Q
"RTN","ORWDXA",131,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify order
"RTN","ORWDXA",132,0)
 ; validate ESCode
"RTN","ORWDXA",133,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",134,0)
 I ORVER'=U D
"RTN","ORWDXA",135,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",136,0)
 . ; VERIFY any replaced orders:
"RTN","ORWDXA",137,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",138,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",139,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",140,0)
 Q
"RTN","ORWDXA",141,0)
ALERT(DUMMY,ORID,ORDUZ) ; alert user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",142,0)
 ;if no user passed, use ordering provider:
"RTN","ORWDXA",143,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",144,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",145,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",146,0)
 Q
"RTN","ORWDXA",147,0)
FLAG(REC,ORIFN,OREASON,ORNP) ; Flag order
"RTN","ORWDXA",148,0)
 N ORB,ORVP,DA,ORPS
"RTN","ORWDXA",149,0)
 D BULLETIN
"RTN","ORWDXA",150,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",151,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON_$S($G(ORNP):"^^^^"_+ORNP,1:"")
"RTN","ORWDXA",152,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",153,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",154,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",155,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",156,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",157,0)
 Q
"RTN","ORWDXA",158,0)
BULLETIN ; flagged order bulletin
"RTN","ORWDXA",159,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",160,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",161,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",162,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",163,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",164,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",165,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",166,0)
 Q:$G(BULL)'="Y"   ;quit if parm val not 'Y'es
"RTN","ORWDXA",167,0)
 ;
"RTN","ORWDXA",168,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",169,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",170,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",171,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",172,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",173,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",174,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",175,0)
 D EN^XMB
"RTN","ORWDXA",176,0)
 Q
"RTN","ORWDXA",177,0)
UNFLAG(REC,ORIFN,OREASON) ; Unflag order
"RTN","ORWDXA",178,0)
 N DA,ORB,ORNP,ORVP,ORPS
"RTN","ORWDXA",179,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",180,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",181,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",182,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",183,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",184,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",185,0)
 Q
"RTN","ORWDXA",186,0)
FLAGTXT(LST,ORID) ; flag reason
"RTN","ORWDXA",187,0)
 N FLAG
"RTN","ORWDXA",188,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",189,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",190,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",191,0)
 Q
"RTN","ORWDXA",192,0)
WCGET(LST,ORID) ; ward comments
"RTN","ORWDXA",193,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",194,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",195,0)
 Q
"RTN","ORWDXA",196,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments
"RTN","ORWDXA",197,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",198,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",199,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",200,0)
 Q
"RTN","ORWDXA",201,0)
OFCPLX(ORY,ORID,PRTORDER) ; is ORID child of PRTORDER
"RTN","ORWDXA",202,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA,ISNOW
"RTN","ORWDXA",203,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",204,0)
 S ISNOW=0
"RTN","ORWDXA",205,0)
 D ISNOW^ORWDXR(.ISNOW,+ORID)
"RTN","ORWDXA",206,0)
 Q:ISNOW
"RTN","ORWDXA",207,0)
 N PKG
"RTN","ORWDXA",208,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",209,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",210,0)
 I PKG'="PS" Q
"RTN","ORWDXA",211,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",212,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",213,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",214,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",215,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",216,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",217,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",218,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",219,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",220,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",221,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",222,0)
 Q
"RTN","ORWDXA",223,0)
ISACTOI(ORY,OI) ; Is ord item active?
"RTN","ORWDXA",224,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",225,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",226,0)
 Q
"RTN","ORWDXA",227,0)
UPCTCHK(ORID) ;
"RTN","ORWDXA",228,0)
 ;ORID=ORDER NUMBER
"RTN","ORWDXA",229,0)
 ;RETURNS 1 IF THERE IS AN UPCARET IN THE ORDER'S COMMENTS
"RTN","ORWDXA",230,0)
 N RET,COMMID,WPCNT,PIID S RET=0
"RTN","ORWDXA",231,0)
 S COMMID=$O(^OR(100,+ORID,4.5,"ID","COMMENT",0))
"RTN","ORWDXA",232,0)
 I COMMID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,COMMID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",233,0)
 .I $G(^OR(100,+ORID,4.5,COMMID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",234,0)
 S PIID=$O(^OR(100,+ORID,4.5,"ID","PI",0))
"RTN","ORWDXA",235,0)
 I PIID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,PIID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",236,0)
 .I $G(^OR(100,+ORID,4.5,PIID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",237,0)
 Q RET
"RTN","ORWDXR")
0^39^B54765656
"RTN","ORWDXR",1,0)
ORWDXR ;SLC/KCM/JDL - Utilites for Order Actions ;12/14/12  09:25
"RTN","ORWDXR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,134,141,149,187,190,213,243,331,306**;Dec 17, 1997;Build 43
"RTN","ORWDXR",3,0)
 ;
"RTN","ORWDXR",4,0)
ACTDCREA(DCIEN) ; Valid DC Reason
"RTN","ORWDXR",5,0)
 N X
"RTN","ORWDXR",6,0)
 S X=$G(^ORD(100.03,DCIEN,0))
"RTN","ORWDXR",7,0)
 I $P(X,U,4) Q 0
"RTN","ORWDXR",8,0)
 I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q 0
"RTN","ORWDXR",9,0)
 I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q 0
"RTN","ORWDXR",10,0)
 Q 1
"RTN","ORWDXR",11,0)
 ;
"RTN","ORWDXR",12,0)
ISREL(VAL,ORIFN) ; Return true if an order has been released
"RTN","ORWDXR",13,0)
 N STS S STS=$P(^OR(100,+ORIFN,3),U,3)
"RTN","ORWDXR",14,0)
 S VAL=$S(STS=10:0,STS=11:0,1:1)  ; false if delayed or unreleased order
"RTN","ORWDXR",15,0)
 Q
"RTN","ORWDXR",16,0)
RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS,CPLX,ORAPPT) ; Renew an order
"RTN","ORWDXR",17,0)
 N ORDG
"RTN","ORWDXR",18,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORPKG
"RTN","ORWDXR",19,0)
 N ORDIALOG,PRMT,X0
"RTN","ORWDXR",20,0)
 N FSTDOSE,FST
"RTN","ORWDXR",21,0)
 S (FSTDOSE,FST)=0
"RTN","ORWDXR",22,0)
 I '$D(CPLX) S CPLX=0
"RTN","ORWDXR",23,0)
 I '$G(ORAPPT) S ORAPPT=""
"RTN","ORWDXR",24,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXR",25,0)
 S X0=^OR(100,+ORIFN,0)
"RTN","ORWDXR",26,0)
 S ORDG=$P(X0,U,11)
"RTN","ORWDXR",27,0)
 S ORPKG=$P(X0,U,14)
"RTN","ORWDXR",28,0)
 I $D(FLDS("ORCHECK")) M ORCHECK=FLDS("ORCHECK")
"RTN","ORWDXR",29,0)
 I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWDXR",30,0)
 . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWDXR",31,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWDXR",32,0)
 . I CPLX S FSTDOSE=$P($G(ORDIALOG("B","FIRST DOSE")),U,2) S:'FSTDOSE FSTDOSE=$$PTR^ORCD("OR GTX NOW")
"RTN","ORWDXR",33,0)
 . I FSTDOSE,$G(ORDIALOG(FSTDOSE,1)) K ORDIALOG(FSTDOSE,1)
"RTN","ORWDXR",34,0)
 E  D                                            ; version 2.5 generic
"RTN","ORWDXR",35,0)
 . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWDXR",36,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR",37,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXR",38,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",39,0)
 . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWDXR",40,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXR",41,0)
 . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWDXR",42,0)
 I +FLDS(1)=999 D  ; generic order
"RTN","ORWDXR",43,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=$P(FLDS(1),U,2)
"RTN","ORWDXR",44,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE/TIME"),1)=$P(FLDS(1),U,3)
"RTN","ORWDXR",45,0)
 I ($O(^ORD(101.41,"AB","PS MEDS",0))>0),(+FLDS(1)=130)!(+FLDS(1)=135)!(+FLDS(1)=140),'$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDXR",46,0)
 . N ORDOSE,ORDRUG,ORCAT,ORWPSOI,PROMPT,DRUG
"RTN","ORWDXR",47,0)
 . S ORCAT=$P($G(^OR(100,+ORIFN,0)),U,12)
"RTN","ORWDXR",48,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDXR",49,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDXR",50,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDXR",51,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDXR",52,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDXR",53,0)
 . D D1^ORCDPS2  ; set up ORDOSE
"RTN","ORWDXR",54,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDXR",55,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDXR",56,0)
 . D SIG^ORCDPS2
"RTN","ORWDXR",57,0)
 I +FLDS(1)=140 D  ; outpatient meds
"RTN","ORWDXR",58,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1) ; remove effective dt
"RTN","ORWDXR",59,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX REFILLS"),1)=$P(FLDS(1),U,4)
"RTN","ORWDXR",60,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX ROUTING"),1)=$P(FLDS(1),U,5)
"RTN","ORWDXR",61,0)
 . S PRMT=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORWDXR",62,0)
 . K ^TMP("ORWORD",$J,PRMT,1)
"RTN","ORWDXR",63,0)
 . S I=1 F  S I=$O(FLDS(I)) Q:'I  S ^TMP("ORWORD",$J,PRMT,1,I-1,0)=FLDS(I)
"RTN","ORWDXR",64,0)
 . S ^TMP("ORWORD",$J,PRMT,1,0)=U_U_(I-1)_U_(I-1)_U_DT_U
"RTN","ORWDXR",65,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",66,0)
 . N SIG,PI,X S SIG=$$PTR^ORCD("OR GTX SIG")
"RTN","ORWDXR",67,0)
 . S PI=$$PTR^ORCD("OR GTX PATIENT INSTRUCTIONS"),X=$$STR(PI)
"RTN","ORWDXR",68,0)
 . I $L(X),$$STR(SIG)[X S ORDIALOG(PI,"FORMAT")="@" ;PI in Sig
"RTN","ORWDXR",69,0)
 D RN^ORCSAVE
"RTN","ORWDXR",70,0)
 S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXR",71,0)
 Q
"RTN","ORWDXR",72,0)
RNWFLDS(LST,ORIFN) ; Return fields for renew action
"RTN","ORWDXR",73,0)
 ; LST(0)=RenewType^Start^Stop^Refills^Pickup  LST(n)=Comments
"RTN","ORWDXR",74,0)
 N X0,DG,PKG,RNWTYPE,START,STOP,REFILLS,OROI
"RTN","ORWDXR",75,0)
 S ORIFN=+ORIFN,X0=^OR(100,ORIFN,0),DG=$P(X0,U,11),PKG=$P(X0,U,14)
"RTN","ORWDXR",76,0)
 S PKG=$E($P(^DIC(9.4,PKG,0),U,2),1,2),DG=$P(^ORD(100.98,DG,0),U,3)
"RTN","ORWDXR",77,0)
 S LST(0)=$S(PKG="OR":999,PKG="PS"&(DG="O RX"):140,PKG="PS"&(DG="UD RX"):130,PKG="PS"&(DG="NV RX"):145,1:0)
"RTN","ORWDXR",78,0)
 I +LST(0)=140 D
"RTN","ORWDXR",79,0)
 . S LST(0)=LST(0)_U_U_U_+$$VAL(ORIFN,"REFILLS")_U_$$DEFPICK^ORWDPS1("")
"RTN","ORWDXR",80,0)
 . ;D WPVAL(.LST,ORIFN,"COMMENT")
"RTN","ORWDXR",81,0)
 I +LST(0)=999 S LST(0)=LST(0)_U_$$VAL(ORIFN,"START")_U_$$VAL(ORIFN,"STOP")
"RTN","ORWDXR",82,0)
 ; make sure start/stop times are relative times, otherwise use NOW, no Stop
"RTN","ORWDXR",83,0)
 ;I +$P(LST(0),U,2) S $P(LST(0),U,2)="NOW" ;DJE-VM *331 - moved to $$VAL
"RTN","ORWDXR",84,0)
 ;I +$P(LST(0),U,3)!($P(LST(0),U,3)="0") S $P(LST(0),U,3)=""
"RTN","ORWDXR",85,0)
 ;NEW STUFF AFTER THIS LINE OR*3*243
"RTN","ORWDXR",86,0)
 S $P(LST(0),U,9)=0
"RTN","ORWDXR",87,0)
 S OROI=$O(^OR(100,+ORIFN,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXR",88,0)
 Q:'OROI
"RTN","ORWDXR",89,0)
 S OROI=$G(^OR(100,+ORIFN,4.5,OROI,1))
"RTN","ORWDXR",90,0)
 Q:'OROI
"RTN","ORWDXR",91,0)
 S $P(LST(0),U,9)=$$ISCLOZ^ORALWORD(OROI)
"RTN","ORWDXR",92,0)
 ; add to LST node specifying if patient of ORIFN passes clozapine lab tests
"RTN","ORWDXR",93,0)
 I $P(LST(0),U,9) D
"RTN","ORWDXR",94,0)
 .N ORY,ORDFN,ORTMP
"RTN","ORWDXR",95,0)
 .S ORTMP=LST(0)
"RTN","ORWDXR",96,0)
 .K LST
"RTN","ORWDXR",97,0)
 .S LST(0)=ORTMP
"RTN","ORWDXR",98,0)
 .S ORDFN=$P(^OR(100,ORIFN,0),U,2)
"RTN","ORWDXR",99,0)
 .I $P(ORDFN,";",2)'="DPT(" Q
"RTN","ORWDXR",100,0)
 .S ORDFN=+ORDFN
"RTN","ORWDXR",101,0)
 .D ALLWORD^ORALWORD(.ORY,ORDFN,ORIFN,"E")
"RTN","ORWDXR",102,0)
 .M LST(1)=ORY
"RTN","ORWDXR",103,0)
 Q
"RTN","ORWDXR",104,0)
VAL(ORIFN,ID) ; Return value for order response
"RTN","ORWDXR",105,0)
 N DA,Y,ORDIALOG,ORDGDA,CAPS,XCODE
"RTN","ORWDXR",106,0)
 S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",107,0)
 I (ID="START")!(ID="STOP") D  I 1 ;DJE-VM *331
"RTN","ORWDXR",108,0)
 . ; make sure start/stop times are relative times, otherwise use dialog default values
"RTN","ORWDXR",109,0)
 . S CAPS=$$UP^XLFSTR($G(^OR(100,ORIFN,4.5,DA,1)))
"RTN","ORWDXR",110,0)
 . I ('$L(CAPS))!($E(CAPS)="T")!($E(CAPS)="V")!($E(CAPS)="N"&($E(CAPS,1,3)'="NOV")) S Y=CAPS Q
"RTN","ORWDXR",111,0)
 . S ORDIALOG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDXR",112,0)
 . S ORDGDA=+^OR(100,ORIFN,4.5,DA,0)
"RTN","ORWDXR",113,0)
 . S XCODE=$G(^ORD(101.41,+ORDIALOG,10,ORDGDA,7))
"RTN","ORWDXR",114,0)
 . I $L(XCODE) X XCODE
"RTN","ORWDXR",115,0)
 . I '$L($G(Y)),ID="START" S Y="NOW" ;if no default, set START to NOW
"RTN","ORWDXR",116,0)
 E  S Y=$G(^OR(100,ORIFN,4.5,DA,1))
"RTN","ORWDXR",117,0)
 Q $G(Y)
"RTN","ORWDXR",118,0)
WPVAL(TXT,ORIFN,ID) ; Return word processing value
"RTN","ORWDXR",119,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",120,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,4.5,DA,2,I)) Q:'I  S TXT(I)=^(I,0)
"RTN","ORWDXR",121,0)
 Q
"RTN","ORWDXR",122,0)
STR(PTR) ; -- Return word processing text as long string for comparison
"RTN","ORWDXR",123,0)
 N X,Y,I,ARRY
"RTN","ORWDXR",124,0)
 S ARRY=$G(ORDIALOG(+$G(PTR),1)) Q:'$L(ARRY) ""
"RTN","ORWDXR",125,0)
 S I=+$O(@ARRY@(0)),Y=$$UP^XLFSTR($G(@ARRY@(I,0)))
"RTN","ORWDXR",126,0)
 F  S I=+$O(@ARRY@(I)) Q:'I  S X=$G(@ARRY@(I,0)),Y=Y_$$UP^XLFSTR(X)
"RTN","ORWDXR",127,0)
 S Y=$TR(Y," ") ;remove all spaces, compare only text
"RTN","ORWDXR",128,0)
 Q Y
"RTN","ORWDXR",129,0)
CHKACT(ORDERID,ORWSIG,ORWREL,ORWNATR) ; Return error if can't sign/release order
"RTN","ORWDXR",130,0)
 N ORACT,ORWERR
"RTN","ORWDXR",131,0)
 ; begin case
"RTN","ORWDXR",132,0)
 S ORACT=""
"RTN","ORWDXR",133,0)
 I (ORWSIG=1),$D(^XUSEC("ORES",DUZ)) S ORACT="ES" G XC1
"RTN","ORWDXR",134,0)
 I (ORWSIG=7),$D(^XUSEC("ORES",DUZ)) S ORACT="DS" G XC1
"RTN","ORWDXR",135,0)
 I ORWREL,(ORWNATR="W") S ORACT="OC" G XC1
"RTN","ORWDXR",136,0)
 I ORWREL S ORACT="RS" S:$P($G(^OR(100,+ORDERID,0)),U,16)<2 ORACT="ES"
"RTN","ORWDXR",137,0)
XC1 ; end case
"RTN","ORWDXR",138,0)
 S ORWERR=""
"RTN","ORWDXR",139,0)
 I $L(ORACT),$$VALID^ORCACT0(ORDERID,ORACT,.ORWERR,ORWNATR) S ORWERR=""
"RTN","ORWDXR",140,0)
 Q ORWERR
"RTN","ORWDXR",141,0)
GTORITM(Y,ORIFN) ;-- Get back the orderable item IEN
"RTN","ORWDXR",142,0)
 S ORIFN=+ORIFN
"RTN","ORWDXR",143,0)
 S Y=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE")
"RTN","ORWDXR",144,0)
 Q
"RTN","ORWDXR",145,0)
GETPKG(Y,IFN) ;Get package for an order
"RTN","ORWDXR",146,0)
 N ORDERID,PKGID
"RTN","ORWDXR",147,0)
 Q:+IFN<1
"RTN","ORWDXR",148,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWDXR",149,0)
 S PKGID=$P(^OR(100,ORDERID,0),U,14)
"RTN","ORWDXR",150,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWDXR",151,0)
 Q
"RTN","ORWDXR",152,0)
ISCPLX(ORY,ORID) ; 1: is complex order 0: is not
"RTN","ORWDXR",153,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",154,0)
 N PKG
"RTN","ORWDXR",155,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",156,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",157,0)
 I PKG'="PS" Q
"RTN","ORWDXR",158,0)
 N NUMCHDS,NOWID,NOWVAL
"RTN","ORWDXR",159,0)
 S (NOWVAL,NOWID)=0
"RTN","ORWDXR",160,0)
 S NUMCHDS=$P($G(^OR(100,+ORID,2,0)),U,4)
"RTN","ORWDXR",161,0)
 I NUMCHDS>2 S ORY=1 Q
"RTN","ORWDXR",162,0)
 I NUMCHDS=2 D
"RTN","ORWDXR",163,0)
 . S ORY=1
"RTN","ORWDXR",164,0)
 . S:$D(^OR(100,+ORID,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXR",165,0)
 . S:NOWID NOWVAL=$G(^OR(100,+ORID,4.5,NOWID,1))
"RTN","ORWDXR",166,0)
 I NOWVAL=1 S ORY=0 Q
"RTN","ORWDXR",167,0)
 Q
"RTN","ORWDXR",168,0)
ORCPLX(ORY,ORID,ORACT) ;Return children orders of the complex order
"RTN","ORWDXR",169,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",170,0)
 N PKG,LACT,OELACT,ISNOW
"RTN","ORWDXR",171,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",172,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",173,0)
 I PKG'="PS" Q
"RTN","ORWDXR",174,0)
 N CHLDCNT,IDX,X3
"RTN","ORWDXR",175,0)
 S (CHLDCNT,IDX)=0
"RTN","ORWDXR",176,0)
 S:$L($G(^OR(100,+ORID,2,0))) CHLDCNT=$P(^(0),U,4)
"RTN","ORWDXR",177,0)
 I 'CHLDCNT Q
"RTN","ORWDXR",178,0)
 F  S IDX=$O(^OR(100,+ORID,2,IDX)) Q:'IDX  D
"RTN","ORWDXR",179,0)
 . S (LACT,OELACT,ISNOW)=0
"RTN","ORWDXR",180,0)
 . D ISNOW(.ISNOW,IDX)
"RTN","ORWDXR",181,0)
 . Q:ISNOW
"RTN","ORWDXR",182,0)
 . S X3=$G(^OR(100,IDX,3))
"RTN","ORWDXR",183,0)
 . S LACT=$P(X3,U,7)
"RTN","ORWDXR",184,0)
 . F  S OELACT=$O(^OR(100,IDX,8,OELACT),-1) Q:OELACT
"RTN","ORWDXR",185,0)
 . S:OELACT>LACT LACT=OELACT
"RTN","ORWDXR",186,0)
 . S ORY(IDX)=IDX_";"_LACT
"RTN","ORWDXR",187,0)
 Q
"RTN","ORWDXR",188,0)
CANRN(ORY,ORID) ; Check conjunction for renew.
"RTN","ORWDXR",189,0)
 ; All conjunctioni = "And" return 1
"RTN","ORWDXR",190,0)
 ; Has a "Then" return 0
"RTN","ORWDXR",191,0)
 Q:'$G(^OR(100,+ORID,0))
"RTN","ORWDXR",192,0)
 N PKG
"RTN","ORWDXR",193,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",194,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",195,0)
 I PKG'="PS" Q
"RTN","ORWDXR",196,0)
 N INDX,INDY,CANRENEW
"RTN","ORWDXR",197,0)
 S INDX=0
"RTN","ORWDXR",198,0)
 S CANRENEW=1
"RTN","ORWDXR",199,0)
 N CHID
"RTN","ORWDXR",200,0)
 S CHID=0 F  S CHID=$O(^OR(100,+ORID,2,CHID)) Q:'CHID  D
"RTN","ORWDXR",201,0)
 . N ORSTS,ACTIVE S ORSTS=0
"RTN","ORWDXR",202,0)
 . S ORSTS=$P($G(^OR(100,CHID,3)),U,3)
"RTN","ORWDXR",203,0)
 . S ACTIVE=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","ORWDXR",204,0)
 . I ACTIVE'=ORSTS S CANRENEW=0
"RTN","ORWDXR",205,0)
 I 'CANRENEW S ORY=CANRENEW Q
"RTN","ORWDXR",206,0)
 F  S INDX=$O(^OR(100,+ORID,4.5,"ID","CONJ",INDX)) Q:'INDX  D
"RTN","ORWDXR",207,0)
 . S INDY=0 F  S INDY=$O(^OR(100,+ORID,4.5,INDX,INDY)) Q:'INDY  D
"RTN","ORWDXR",208,0)
 . . I $G(^(INDY))="T" S CANRENEW=0 Q
"RTN","ORWDXR",209,0)
 . I CANRENEW=0 Q
"RTN","ORWDXR",210,0)
 S ORY=CANRENEW
"RTN","ORWDXR",211,0)
 Q
"RTN","ORWDXR",212,0)
ISNOW(ORY,ORID) ; Is first time now order?
"RTN","ORWDXR",213,0)
 N SCH
"RTN","ORWDXR",214,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",215,0)
 S SCH=""
"RTN","ORWDXR",216,0)
 S SCH=$O(^OR(100,+ORID,4.5,"ID","SCHEDULE",0))
"RTN","ORWDXR",217,0)
 S:SCH SCH=$G(^OR(100,+ORID,4.5,SCH,1))
"RTN","ORWDXR",218,0)
 S:SCH="NOW" ORY=1
"RTN","ORWDXR",219,0)
 Q
"RTN","ORWOR")
0^40^B50635965
"RTN","ORWOR",1,0)
ORWOR ; SLC/KCM - Orders Calls ;08/19/11  05:01
"RTN","ORWOR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,141,163,187,190,215,243,307,330,280,347,306**;Dec 17, 1997;Build 43
"RTN","ORWOR",3,0)
 ;
"RTN","ORWOR",4,0)
CURRENT(LST,DFN) ; Get Current Orders for a Patient
"RTN","ORWOR",5,0)
 ; Returns two lists in ^TMP("ORW",$J), fields and text
"RTN","ORWOR",6,0)
 N TM,IEN,X,X0,X3,CTR,IDX,I
"RTN","ORWOR",7,0)
 K ^TMP("ORW",$J)
"RTN","ORWOR",8,0)
 S IDX=0,DFN=DFN_";DPT("
"RTN","ORWOR",9,0)
 S TM=0 F  S TM=$O(^OR(100,"AC",DFN,TM)) Q:TM<1  D
"RTN","ORWOR",10,0)
 . S IEN=0 F  S IEN=$O(^OR(100,"AC",DFN,TM,IEN)) Q:IEN<1  D
"RTN","ORWOR",11,0)
 . . S X0=^OR(100,IEN,0),X3=^(3)
"RTN","ORWOR",12,0)
 . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)
"RTN","ORWOR",13,0)
 . . S ^TMP("ORW",$J,IDX+1)=X
"RTN","ORWOR",14,0)
 . . S (CTR,I)=0,X=""
"RTN","ORWOR",15,0)
 . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244
"RTN","ORWOR",16,0)
 . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)
"RTN","ORWOR",17,0)
 . . S ^TMP("ORW",$J,IDX+2)=X,IDX=IDX+2
"RTN","ORWOR",18,0)
 ; S LST=$NA(^TMP("ORW",$J))
"RTN","ORWOR",19,0)
 M LST=^TMP("ORW",$J)
"RTN","ORWOR",20,0)
 Q
"RTN","ORWOR",21,0)
DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)
"RTN","ORWOR",22,0)
 Q:'+ORID
"RTN","ORWOR",23,0)
 I $G(DFN) N ORVP S ORVP=DFN_";DPT("
"RTN","ORWOR",24,0)
 S LST="^TMP(""ORTXT"",$J)"
"RTN","ORWOR",25,0)
 D DETAIL^ORQ2(.LST,ORID)
"RTN","ORWOR",26,0)
 K @LST@("VIDEO")
"RTN","ORWOR",27,0)
 S LST=$NA(^TMP("ORTXT",$J)),@LST=""
"RTN","ORWOR",28,0)
 Q
"RTN","ORWOR",29,0)
RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID
"RTN","ORWOR",30,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",31,0)
 N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",32,0)
 D ORDERS^ORCXPND1
"RTN","ORWOR",33,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",34,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",35,0)
 Q
"RTN","ORWOR",36,0)
RESHIST(REF,DFN,ORID,ID)      ; Return result history of associated tests identified by ID
"RTN","ORWOR",37,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",38,0)
 N ORESULTS,ORVP,LCNT
"RTN","ORWOR",39,0)
 S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",40,0)
 D ORDHIST^ORWOR2
"RTN","ORWOR",41,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",42,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",43,0)
 Q
"RTN","ORWOR",44,0)
TSALL(LST)      ; Return list of treating specialties
"RTN","ORWOR",45,0)
 N Y S Y=0
"RTN","ORWOR",46,0)
 F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)
"RTN","ORWOR",47,0)
 Q
"RTN","ORWOR",48,0)
DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)
"RTN","ORWOR",49,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWOR",50,0)
 Q +Y
"RTN","ORWOR",51,0)
VWSET(ORERR,VIEW)       ; Set the preferred view for orders
"RTN","ORWOR",52,0)
 ; VIEW:  semi-colon delimited record
"RTN","ORWOR",53,0)
 ;        1 - Relative From Date/Time or ""
"RTN","ORWOR",54,0)
 ;        2 - Relative Thru Date/Time or ""
"RTN","ORWOR",55,0)
 ;        3 - Filter
"RTN","ORWOR",56,0)
 ;        4 - Display Group Pointer
"RTN","ORWOR",57,0)
 ;        5 - Format (preserve for list manager)
"RTN","ORWOR",58,0)
 ;        6 - chronological display (R or F)
"RTN","ORWOR",59,0)
 ;        7 - sort by display group
"RTN","ORWOR",60,0)
 N FMT
"RTN","ORWOR",61,0)
 ; use short name for display group instead of pointer
"RTN","ORWOR",62,0)
 ;*347 Allow times to be saved.
"RTN","ORWOR",63,0)
 ;I $E($P(VIEW,";",2))="T" S $P(VIEW,";",2)=$P($P(VIEW,";",2),"@") ;allows all orders for Today
"RTN","ORWOR",64,0)
 S $P(VIEW,";",4)=$P($G(^ORD(100.98,+$P(VIEW,";",4),0)),U,3)
"RTN","ORWOR",65,0)
 ; use last saved format, since this is used only by LM
"RTN","ORWOR",66,0)
 S FMT=$P($$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),";",5)
"RTN","ORWOR",67,0)
 S:'$L(FMT) FMT="L" S $P(VIEW,";",5)=FMT
"RTN","ORWOR",68,0)
 ; and save the parameter
"RTN","ORWOR",69,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT ORDERS",1,VIEW,.ORERR)
"RTN","ORWOR",70,0)
 Q
"RTN","ORWOR",71,0)
VWGET(REC)      ; Get the preferred view for orders
"RTN","ORWOR",72,0)
 N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL,I
"RTN","ORWOR",73,0)
 S REC=$$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),S=";"
"RTN","ORWOR",74,0)
 S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)
"RTN","ORWOR",75,0)
 S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)
"RTN","ORWOR",76,0)
 S:'$L(DGRP) DGRP="ALL" S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWOR",77,0)
 I FILTER="" S FILTER=2  ; active orders
"RTN","ORWOR",78,0)
 I CHRN="" S CHRN="R"    ; reverse chronological
"RTN","ORWOR",79,0)
 I BYGRP="" S BYGRP=1    ; sort by display group
"RTN","ORWOR",80,0)
 ; set up view name
"RTN","ORWOR",81,0)
 D REVSTS^ORWORDG(.FL)
"RTN","ORWOR",82,0)
 S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER
"RTN","ORWOR",83,0)
 S VNAME=$P($G(FL(+I)),U,2)
"RTN","ORWOR",84,0)
 I '("^6^8^9^10^19^20^"[(U_FILTER_U)) S VNAME=VNAME_" Orders"
"RTN","ORWOR",85,0)
 I FILTER=2 S VNAME="Active Orders (includes Pending & Recent Activity)"
"RTN","ORWOR",86,0)
 I FILTER=23 S VNAME="Current Orders (Active & Pending Status Only)"
"RTN","ORWOR",87,0)
 S VNAME=VNAME_" - "_$P($G(^ORD(100.98,DGRP,0)),U)
"RTN","ORWOR",88,0)
 I (FROM>0)!(THRU>0) D
"RTN","ORWOR",89,0)
 . S VNAME=VNAME_" ("_$$FMTE^XLFDT(FROM,"2D")_" thru "
"RTN","ORWOR",90,0)
 . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,"2D"),1:"")_")"
"RTN","ORWOR",91,0)
 S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME
"RTN","ORWOR",92,0)
 Q
"RTN","ORWOR",93,0)
SHEETS(LST,ORVP) ; Return Order Sheets for a patient
"RTN","ORWOR",94,0)
 N ELST,ETYP,ORIFN,TS,I
"RTN","ORWOR",95,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",96,0)
 S ETYP="" F  S ETYP=$O(^OR(100,"AEVNT",ORVP,ETYP)) Q:ETYP=""  D
"RTN","ORWOR",97,0)
 . S ORIFN=0 F  S ORIFN=$O(^OR(100,"AEVNT",ORVP,ETYP,ORIFN)) Q:'ORIFN  D
"RTN","ORWOR",98,0)
 . . I (ETYP="A")!(ETYP="T") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))=""
"RTN","ORWOR",99,0)
 S LST(1)="C;O^Current View",I=1
"RTN","ORWOR",100,0)
 S TS="" F  S TS=$O(ELST("A",TS)) Q:TS=""  D
"RTN","ORWOR",101,0)
 . S I=I+1,LST(I)="A;"_TS_U_"Admit to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",102,0)
 S I=I+1,LST(I)="A;-1^Admit..."
"RTN","ORWOR",103,0)
 S TS="" F  S TS=$O(ELST("T",TS)) Q:TS=""  D
"RTN","ORWOR",104,0)
 . S I=I+1,LST(I)="T;"_TS_U_"Transfer to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",105,0)
 I $L($G(^DPT(+ORVP,.1))) D
"RTN","ORWOR",106,0)
 . S I=I+1,LST(I)="T;-1^Transfer..."
"RTN","ORWOR",107,0)
 . S I=I+1,LST(I)="D;0^Discharge"
"RTN","ORWOR",108,0)
 Q
"RTN","ORWOR",109,0)
EVENTS(LST,EVT) ; Return general delayed events categories for a patient
"RTN","ORWOR",110,0)
 N EVTI
"RTN","ORWOR",111,0)
 S EVTI=0
"RTN","ORWOR",112,0)
 S EVTI=EVTI+1,LST(EVTI)="A;-1^Admit..."
"RTN","ORWOR",113,0)
 S EVTI=EVTI+1,LST(EVTI)="T;-1^Transfer..."
"RTN","ORWOR",114,0)
 S EVTI=EVTI+1,LST(EVTI)="D;0^Discharge"
"RTN","ORWOR",115,0)
 Q
"RTN","ORWOR",116,0)
UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client
"RTN","ORWOR",117,0)
 N DC,DEL,DG,IFN,ACT,X0,X3,X8,ENT,LVL,TM,ILST,ORELSE,CS,PKG,ORCSPKG,OI
"RTN","ORWOR",118,0)
 S ILST=0
"RTN","ORWOR",119,0)
 Q:'$D(^XUSEC("ORES",DUZ))&('$D(^XUSEC("ORELSE",DUZ))&'$D(^ORAM(103,+ORVP)))
"RTN","ORWOR",120,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",121,0)
 S ENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORWOR",122,0)
 S LVL=$$GET^XPAR(ENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORWOR",123,0)
 ; Nurses only see their own unsigned orders, independent of OR UNSIGNED ORDERS ON EXIT
"RTN","ORWOR",124,0)
 S ORELSE=$D(^XUSEC("ORELSE",DUZ))
"RTN","ORWOR",125,0)
 I ORELSE S LVL=1
"RTN","ORWOR",126,0)
 Q:'LVL
"RTN","ORWOR",127,0)
 S TM=0 F  S TM=$O(^OR(100,"AS",ORVP,TM)) Q:TM<1  D
"RTN","ORWOR",128,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",ORVP,TM,IFN)) Q:IFN<1  D
"RTN","ORWOR",129,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AS",ORVP,TM,IFN,ACT)) Q:ACT<1  D
"RTN","ORWOR",130,0)
 . . . Q:$D(HAVE(IFN_";"_ACT))  ;in Changes
"RTN","ORWOR",131,0)
 . . . S X0=$G(^OR(100,IFN,0)),X3=$G(^OR(100,IFN,3))
"RTN","ORWOR",132,0)
 . . . S X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWOR",133,0)
 . . . ;determine Display Group
"RTN","ORWOR",134,0)
 . . . S DG=$P($G(^ORD(100.98,$P(X0,U,11),0)),U,2)
"RTN","ORWOR",135,0)
 . . . ;determine if DC
"RTN","ORWOR",136,0)
 . . . S DC=$S($P(X8,U,2)="DC":1,1:0)
"RTN","ORWOR",137,0)
 . . . ;determine if Delay
"RTN","ORWOR",138,0)
 . . . S DEL=$$CHKORD^OREVNTX1(IFN)
"RTN","ORWOR",139,0)
 . . . ;determine if controlled substance
"RTN","ORWOR",140,0)
 . . . S PKG=$P(X0,"^",14)
"RTN","ORWOR",141,0)
 . . . S ORCSPKG=""
"RTN","ORWOR",142,0)
 . . . I PKG=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) S ORCSPKG="O"
"RTN","ORWOR",143,0)
 . . . I PKG=$O(^DIC(9.4,"B","UNIT DOSE MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWOR",144,0)
 . . . I PKG=$O(^DIC(9.4,"B","INPATIENT MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWOR",145,0)
 . . . I PKG=$O(^DIC(9.4,"B","IV MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWOR",146,0)
 . . . I ORCSPKG="" S CS="0^0"
"RTN","ORWOR",147,0)
 . . . I ORCSPKG'="" D
"RTN","ORWOR",148,0)
 . . . . S OI=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,IFN,4.5,OI,1))
"RTN","ORWOR",149,0)
 . . . . D CSCHECK^ORDEA(.CS,OI,ORCSPKG)
"RTN","ORWOR",150,0)
 . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,ORELSE&($P(X8,U,13)=DUZ):1,LVL=2:1,1:0) Q  ;chk user
"RTN","ORWOR",151,0)
 . . . ;if Nurse, and order is already released or held for signature, don't include in list
"RTN","ORWOR",152,0)
 . . . I ORELSE,$S((+$P(X8,U,16)>0):1,$D(^OR(100,IFN,5)):1,1:0) Q
"RTN","ORWOR",153,0)
 . . . S ILST=ILST+1,LST(ILST)=IFN_";"_ACT_U_$P(X8,U,3)_U_DG_U_DC_U_DEL_U_CS
"RTN","ORWOR",154,0)
 Q
"RTN","ORWOR",155,0)
PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature
"RTN","ORWOR",156,0)
 N ORPKIU
"RTN","ORWOR",157,0)
 S RETURN=0
"RTN","ORWOR",158,0)
 S ORPKIU=0 I $D(^ORD(100.7,"C",DUZ)) S ORPKIU=1
"RTN","ORWOR",159,0)
 I ORPKIU S RETURN=1
"RTN","ORWOR",160,0)
 Q
"RTN","ORWOR",161,0)
PKISITE(RETURN) ; RPC determines if PKI is turned on at the site
"RTN","ORWOR",162,0)
 N ORPKIS,ORSITE,IEN
"RTN","ORWOR",163,0)
 S RETURN=0
"RTN","ORWOR",164,0)
 Q:'$L($T(STORESIG^XUSSPKI))  ;Check for Kernel piece
"RTN","ORWOR",165,0)
 Q:'$L($T(OIDEA^PSSOPKI))  ;Check for Pharmacy piece
"RTN","ORWOR",166,0)
 S ORPKIS=0,ORSITE=+$$SITE^VASITE() I $D(^ORD(100.7,"B",ORSITE)) D
"RTN","ORWOR",167,0)
 . S IEN=$O(^ORD(100.7,"B",ORSITE,"")),ORPKIS=$P(^ORD(100.7,IEN,0),"^",2)
"RTN","ORWOR",168,0)
 I ORPKIS S RETURN=1
"RTN","ORWOR",169,0)
 Q
"RTN","ORWOR",170,0)
ACTXT(ORY,ORIFN) ;Return detail action information
"RTN","ORWOR",171,0)
 N ORI,CNT,OR0,OR3,OR6,ACTION
"RTN","ORWOR",172,0)
 K ^TMP("ORACTXT",$J)
"RTN","ORWOR",173,0)
 S ORY="^TMP(""ORACTXT"",$J)",ORI=$P(ORIFN,";",2)
"RTN","ORWOR",174,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORWOR",175,0)
 F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORWOR",176,0)
 S ORY=$NA(^TMP("ORACTXT",$J)),@ORY=""
"RTN","ORWOR",177,0)
 Q
"RTN","ORWOR",178,0)
EXPIRED(ORY) ;return FM date/time to begin search for expired orders
"RTN","ORWOR",179,0)
 N HRS
"RTN","ORWOR",180,0)
 S HRS=$$GET^XPAR("ALL","ORWOR EXPIRED ORDERS",1,"I")
"RTN","ORWOR",181,0)
 S ORY=$$FMADD^XLFDT($$NOW^XLFDT,"","-"_HRS,"","")
"RTN","ORWOR",182,0)
 Q
"RTN","ORWOR1")
0^38^B26597352
"RTN","ORWOR1",1,0)
ORWOR1 ; slc/dcm - PKI RPC functions ;02/08/13  09:51
"RTN","ORWOR1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132,141,163,306**;Dec 17, 1997;Build 43
"RTN","ORWOR1",3,0)
 ;
"RTN","ORWOR1",4,0)
 ;
"RTN","ORWOR1",5,0)
 ;
"RTN","ORWOR1",6,0)
 ;
"RTN","ORWOR1",7,0)
SIG(RET,ID,X1,X2,X3,X4,ORX5,X6,X7) ;Store the signature.
"RTN","ORWOR1",8,0)
 ;ID = orifn;action
"RTN","ORWOR1",9,0)
 ;X1 = Hash
"RTN","ORWOR1",10,0)
 ;X2 = Length of the array
"RTN","ORWOR1",11,0)
 ;X3 = Datafile (100)
"RTN","ORWOR1",12,0)
 ;X4 = Provider DUZ
"RTN","ORWOR1",13,0)
 ;ORX5 = Array for the sig
"RTN","ORWOR1",14,0)
 ;X6 = CRLURL
"RTN","ORWOR1",15,0)
 ;X7 = DFN
"RTN","ORWOR1",16,0)
 ;
"RTN","ORWOR1",17,0)
 N ORHINFO,ORDINFO,OROUT
"RTN","ORWOR1",18,0)
 ;gets patient/user specific info used in hash on GUI
"RTN","ORWOR1",19,0)
 K ORDFDA
"RTN","ORWOR1",20,0)
 D HASHINFO^ORDEA(.ORHINFO,X7,X4)
"RTN","ORWOR1",21,0)
 ;get order specific info used in hash on GUI
"RTN","ORWOR1",22,0)
 D ORDHINFO^ORDEA(.ORDINFO,+ID,X1,.ORHINFO)
"RTN","ORWOR1",23,0)
 D UPDATE^DIE("","ORDFDA","OROUT","ERROR") K ORDFDA
"RTN","ORWOR1",24,0)
 S Y1=$$STORESIG^XUSSPKI(X1,X2,.ORX5,X4,X3)
"RTN","ORWOR1",25,0)
 I +Y1>0 D
"RTN","ORWOR1",26,0)
 . S ORIFN=+ID,ACT=$P(ID,";",2)
"RTN","ORWOR1",27,0)
 . S $P(^OR(100,ORIFN,8,+ACT,2),"^",3)=X1
"RTN","ORWOR1",28,0)
 S RET=1
"RTN","ORWOR1",29,0)
 Q
"RTN","ORWOR1",30,0)
 N Y1,ORIFN,ACT
"RTN","ORWOR1",31,0)
 S Y1=$$STORESIG^XUSSPKI(X1,X2,.ORX5,X4,X3)
"RTN","ORWOR1",32,0)
 I +Y1>0,$L($G(X6)) S Y1=$$CRLURL^XUSSPKI(X6)
"RTN","ORWOR1",33,0)
 I +Y1>0 D
"RTN","ORWOR1",34,0)
 . S ORIFN=+ID,ACT=$P(ID,";",2)
"RTN","ORWOR1",35,0)
 . S $P(^OR(100,ORIFN,8,+ACT,2),"^",3)=X1
"RTN","ORWOR1",36,0)
 S RET=Y1
"RTN","ORWOR1",37,0)
 Q
"RTN","ORWOR1",38,0)
CRLURL(RET,X1) ;Store the URL's
"RTN","ORWOR1",39,0)
 S RET=$$CRLURL^XUSSPKI(X1)
"RTN","ORWOR1",40,0)
 Q
"RTN","ORWOR1",41,0)
VERIFY(RET,ORDER,DFN)       ;Verify PKI Data
"RTN","ORWOR1",42,0)
 ;DBIA #3750
"RTN","ORWOR1",43,0)
 ;ORDER = ORIFN;ACTION - NOTE: if no ACTION then 1 (new order) is assumed
"RTN","ORWOR1",44,0)
 ;Returned values: "1" if digital signature verifies
"RTN","ORWOR1",45,0)
 ;                 "-1^error message" if DS fails during initial parameter checking
"RTN","ORWOR1",46,0)
 ;                 "898020xx^message" if DS fails during verification
"RTN","ORWOR1",47,0)
 N ORIFN,ORACTION,HASH,DATE
"RTN","ORWOR1",48,0)
 K ^TMP("ORPKIDATA",$J)
"RTN","ORWOR1",49,0)
 I '$G(ORDER) S RET="-1^No order number passed" Q
"RTN","ORWOR1",50,0)
 I '$G(DFN) S RET="-1^No DFN passed" Q
"RTN","ORWOR1",51,0)
 S ORIFN=$P(ORDER,";"),ORACTION=$P(ORDER,";",2)
"RTN","ORWOR1",52,0)
 I 'ORACTION S ORACTION=1
"RTN","ORWOR1",53,0)
 I '$D(^OR(100,ORIFN,0)) S RET="-1^Invalid order number" Q
"RTN","ORWOR1",54,0)
 I DFN'=+$P(^OR(100,ORIFN,0),"^",2) S RET="-1^DFN does not match patient on order" Q
"RTN","ORWOR1",55,0)
 I '$D(^OR(100,ORIFN,8,ORACTION)) S RET="-1^Invalid order action passed" Q
"RTN","ORWOR1",56,0)
 S HASH=$P($G(^OR(100,ORIFN,8,ORACTION,2)),"^",3)
"RTN","ORWOR1",57,0)
 I '$L(HASH) S RET="-1^Order has no PKI Hash" Q
"RTN","ORWOR1",58,0)
 I '$O(^OR(100,ORIFN,8,ORACTION,.2,0)) S RET="-1^Order has no PKI Data" Q
"RTN","ORWOR1",59,0)
 S DATE=$P($G(^OR(100,ORIFN,8,ORACTION,.2,1,0)),"^")
"RTN","ORWOR1",60,0)
 I '$L(DATE) S RET="-1^No date associated with PKI Data" Q
"RTN","ORWOR1",61,0)
 S DATE=$$HL7TFM^XLFDT(DATE),I=0
"RTN","ORWOR1",62,0)
 F  S I=$O(^OR(100,ORIFN,8,ORACTION,.2,I)) Q:'I  S ^TMP("ORPKIDATA",$J,I)=^(I,0)
"RTN","ORWOR1",63,0)
 S RET=$$VERIFY^XUSSPKI(HASH,$NA(^TMP("ORPKIDATA",$J)),DATE)
"RTN","ORWOR1",64,0)
 I RET="OK" S RET=1 Q
"RTN","ORWOR1",65,0)
 I $E(RET,1,7)="-898020" S RET=$E(RET,2,99)
"RTN","ORWOR1",66,0)
 Q
"RTN","ORWOR1",67,0)
CHKDIG(REQ,ORDER)       ;Check if Digital Signature is required
"RTN","ORWOR1",68,0)
 N IFN,ACTION
"RTN","ORWOR1",69,0)
 S REQ=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",70,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,5) S REQ=1
"RTN","ORWOR1",71,0)
 Q
"RTN","ORWOR1",72,0)
GETDTEXT(TEXT,ORDER)    ;Get External Text
"RTN","ORWOR1",73,0)
 N IFN,ACTION
"RTN","ORWOR1",74,0)
 S IFN=+ORDER,ACTION=$P(ORDER,";",2),I=0
"RTN","ORWOR1",75,0)
 F  S I=$O(^OR(100,+IFN,8,+ACTION,.2,I)) Q:'I  S TEXT(I)=^(I,0)
"RTN","ORWOR1",76,0)
 Q
"RTN","ORWOR1",77,0)
GETDSIG(SIG,ORDER)      ;Get Digital Signature
"RTN","ORWOR1",78,0)
 N IFN,ACTION
"RTN","ORWOR1",79,0)
 S SIG=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",80,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,3) S SIG=$P(^(2),"^",3)
"RTN","ORWOR1",81,0)
 Q
"RTN","ORWOR1",82,0)
GETDEA(Y,ORUSER)        ;Get user DEA
"RTN","ORWOR1",83,0)
 S Y=$$DEA^XUSER(,$G(ORUSER))
"RTN","ORWOR1",84,0)
 Q
"RTN","ORWOR1",85,0)
GETDSCH(Y,ORDER)       ;Check if Drug Schedule
"RTN","ORWOR1",86,0)
 N IFN,ACTION
"RTN","ORWOR1",87,0)
 S IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",88,0)
 S Y=$P($G(^OR(100,+IFN,8,+ACTION,2)),U,4)
"RTN","ORWOR1",89,0)
 Q
"RTN","ORWOR1",90,0)
SETDTEXT(Y,ORDER,ORDEA,ORSIGNER)        ;Set Digital Text data into file 100 & return the array
"RTN","ORWOR1",91,0)
 ;ORDER = ORIFN;ACTION
"RTN","ORWOR1",92,0)
 ;ORDEA = Schedule of Drug (2-5)
"RTN","ORWOR1",93,0)
 ;ORSIGNER = DUZ of signer
"RTN","ORWOR1",94,0)
 N ORSET,IFN,ACT,I
"RTN","ORWOR1",95,0)
 S Y="-1^Digital Text failed to build",IFN=+ORDER,ACT=$P(ORDER,";",2)
"RTN","ORWOR1",96,0)
 I '$G(ORDEA) Q
"RTN","ORWOR1",97,0)
 I '$G(ORSIGNER) S ORSIGNER=DUZ
"RTN","ORWOR1",98,0)
 D DIGTEXT^ORCSAVE1(IFN,ORDEA,ORSIGNER)
"RTN","ORWOR1",99,0)
 S Y=0
"RTN","ORWOR1",100,0)
 I '$G(ORSET) Q
"RTN","ORWOR1",101,0)
 K ^OR(100,IFN,8,ACT,.2)
"RTN","ORWOR1",102,0)
 F I=1:1:ORSET S (Y(I),^OR(100,IFN,8,ACT,.2,I,0))=ORSET(I)
"RTN","ORWOR1",103,0)
 S ^OR(100,IFN,8,ACT,.2,0)="^^"_ORSET_"^"_ORSET_"^"_DT_"^",Y=ORSET
"RTN","ORWOR1",104,0)
 Q
"RTN","ORWOR1",105,0)
GETDATA(Y,ORDER,DFN)    ;Get PKI Data
"RTN","ORWOR1",106,0)
 ;DBIA #3750
"RTN","ORWOR1",107,0)
 ;On error: Y = -1^Error message
"RTN","ORWOR1",108,0)
 ;Else: Y = 1^ Order # ^ Nature of order ^ Order Status ^ Date Signed
"RTN","ORWOR1",109,0)
 ;Y(1) = Patient name ^ Street1 ^ Street2 ^ Street3 ^ City ^ State ^ Zip
"RTN","ORWOR1",110,0)
 ;Y(2) = Drug name_strength_dosage form (Dispense drug) ^ Drug IEN (file 50) ^ Drug quantity prescribed ^ Schedule of medication ^ DEA Schedule
"RTN","ORWOR1",111,0)
 ;Y(3) = Directions for use (SIG)
"RTN","ORWOR1",112,0)
 ;Y(4) = Practitioner's name ^ DUZ ^ Practitioner's (DEA) registration number
"RTN","ORWOR1",113,0)
 ;Y(5) = SiteName ^ SiteStreet1  ^ SiteStreet2 ^ SiteCity  ^ SiteState ^ SiteZip
"RTN","ORWOR1",114,0)
 ;Y(6) = Orderable Item ^ Orderable Item IEN (file 101.43)
"RTN","ORWOR1",115,0)
 N X0,X1,X2,X3,X4,X5,X6,ORNAT,ORSTAT
"RTN","ORWOR1",116,0)
 I '$D(^OR(100,+$G(ORDER),0)) S Y="-1^INVALID ORDER #" Q
"RTN","ORWOR1",117,0)
 I $G(DFN)'=+$P(^OR(100,ORDER,0),"^",2) S Y="-1^INVALID PATIENT ID" Q
"RTN","ORWOR1",118,0)
 I '$D(^OR(100,ORDER,8,1,.2,0)) S Y="-1^MISSING DIGITAL SIGNATURE TEXT" Q
"RTN","ORWOR1",119,0)
 S X0=$G(^OR(100,ORDER,8,1,0))
"RTN","ORWOR1",120,0)
 I $P($G(^OR(100,ORDER,8,1,0)),"^",4)'=7 S Y="-1^ORDER HAS NOT BEEN DIGITALLY SIGNED" Q
"RTN","ORWOR1",121,0)
 S X1=$G(^OR(100,ORDER,8,1,.2,1,0))
"RTN","ORWOR1",122,0)
 I DFN'=$P(X1,"^",4) S Y="-1^PKI PATIENT ID DOES NOT MATCH DFN" Q
"RTN","ORWOR1",123,0)
 S ORNAT=$P(X0,"^",12),ORSTAT=$P($G(^OR(100,ORDER,3)),"^",3)
"RTN","ORWOR1",124,0)
 I ORNAT S ORNAT=$P($G(^ORD(100.02,ORNAT,0)),"^")
"RTN","ORWOR1",125,0)
 I ORSTAT S ORSTAT=ORSTAT_";"_$P(^ORD(100.01,ORSTAT,0),"^")
"RTN","ORWOR1",126,0)
 S Y="1^"_ORDER_"^"_ORNAT_"^"_ORSTAT_"^"_$P(X0,"^",6)
"RTN","ORWOR1",127,0)
 S X2=$G(^OR(100,ORDER,8,1,.2,2,0)),X3=$G(^OR(100,ORDER,8,1,.2,3,0)),X4=$G(^OR(100,ORDER,8,1,.2,4,0)),X5=$G(^OR(100,ORDER,8,1,.2,5,0)),X6=$G(^OR(100,ORDER,8,1,.2,6,0))
"RTN","ORWOR1",128,0)
 S X3=$$VALUE^ORX8(ORDER,"DRUG",,"E")_"^"_$$VALUE^ORX8(ORDER,"DRUG",,"I")_"^"_$P(X3,"^",3,99)
"RTN","ORWOR1",129,0)
 S Y(1)=$P(X1,"^",2)_"^"_X2
"RTN","ORWOR1",130,0)
 S Y(2)=X3,Y(3)=X4,Y(4)=X5,Y(5)=X6
"RTN","ORWOR1",131,0)
 S Y(6)=$$VALUE^ORX8(ORDER,"ORDERABLE",,"E")_"^"_$$VALUE^ORX8(ORDER,"ORDERABLE",,"I")
"RTN","ORWOR1",132,0)
 Q
"RTN","ORWORR")
0^41^B76813647
"RTN","ORWORR",1,0)
ORWORR ; SLC/KCM/JLI - Retrieve Orders for Broker ;08/19/11  05:02
"RTN","ORWORR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,92,116,110,132,141,163,189,195,215,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORWORR",3,0)
 ;
"RTN","ORWORR",4,0)
GET(LST,DFN,FILTER,GROUPS) ; procedure
"RTN","ORWORR",5,0)
 Q  ; don't call until using same treating specialty logic as AGET
"RTN","ORWORR",6,0)
 ;    & until MULT, ORWARD, & ORIGVIEW implemented
"RTN","ORWORR",7,0)
 ;    & until the date ranges implemented
"RTN","ORWORR",8,0)
 ; Get orders for patient
"RTN","ORWORR",9,0)
 ;        1   2    3     4      5     6   7   8   9   10     11    12    13    14     15     16 17    18
"RTN","ORWORR",10,0)
 ; .LST=~IFN^Grp^ActTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^ActDA^Flag^DCType^ChrtRev^DEA#^^Schedule
"RTN","ORWORR",11,0)
 ; .LST=tOrder Text (repeating as necessary)
"RTN","ORWORR",12,0)
 ;     DFN=Patient ID
"RTN","ORWORR",13,0)
 ;  FILTER=# indicates which orders to return, default=2 (current)
"RTN","ORWORR",14,0)
 ;  GROUPS=display grp of orders to show (default=ALL)
"RTN","ORWORR",15,0)
 ; -- section uses ORQ1 to get orders list rather than XGET --
"RTN","ORWORR",16,0)
 N ORLIST,ORIFN,X0,X3,X8,IDX,IFN,ACT,PRV,LN,TXT,STRT,STOP,CSTS,EYE,DEA ;PKI
"RTN","ORWORR",17,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",18,0)
 S (IDX,LST)=0 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",19,0)
 D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"","","",0,1)
"RTN","ORWORR",20,0)
 S EYE=0 F  S EYE=$O(^TMP("ORR",$J,ORLIST,EYE)) Q:'EYE  S IFN=^(EYE) D
"RTN","ORWORR",21,0)
 . S ACT=$P(IFN,";",2),IFN=+IFN,X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",22,0)
 . D GETFLDS
"RTN","ORWORR",23,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",24,0)
 G EXIT
"RTN","ORWORR",25,0)
AGET(REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT,ORRECIP) ;Get abbrev. event delayed order list for patient
"RTN","ORWORR",26,0)
 ; returns ^TMP("ORR",$J,ORLIST,n)=IFN^DGrp^ActTm
"RTN","ORWORR",27,0)
 ; see input parameters above
"RTN","ORWORR",28,0)
 ; -- from ORWORR
"RTN","ORWORR",29,0)
 ; -- section uses ORQ1 to get orders list rather than XGET --
"RTN","ORWORR",30,0)
 N ORLIST,ORIFN,IFN,I,ORWTS,TOT,MULT,ORWARD,TXTVW,ORYD,PTEVTID,EVTNAME
"RTN","ORWORR",31,0)
 S (PTEVTID,EVTNAME)=""
"RTN","ORWORR",32,0)
 K ^TMP("ORR",$J),^TMP("ORRJD",$J)
"RTN","ORWORR",33,0)
 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",34,0)
 S ORWTS=+$P(FILTER,U,2),FILTER=+FILTER
"RTN","ORWORR",35,0)
 S MULT=$S("^1^6^8^9^10^11^13^14^20^22^"[(U_FILTER_U):1,1:0)
"RTN","ORWORR",36,0)
 I $L($G(^DPT(DFN,.1))) S ORWARD=1 ; normally ptr to 42
"RTN","ORWORR",37,0)
 S:'$L($G(DTFROM)) DTFROM=0
"RTN","ORWORR",38,0)
 S:'$L($G(DTTHRU)) DTTHRU=0
"RTN","ORWORR",39,0)
 I $P(DTFROM,".")=$P(DTTHRU,"."),$P(DTFROM,".",2)>$P(DTTHRU,".",2),$P(DTTHRU,".",2)="" S $P(DTTHRU,".",2)=2359
"RTN","ORWORR",40,0)
 S:'$L($G(EVENT)) EVENT=0
"RTN","ORWORR",41,0)
 I $G(EVTDCREL)="TRUE" D
"RTN","ORWORR",42,0)
 . D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"",DTFROM,DTTHRU,2,MULT,"",1,EVENT)
"RTN","ORWORR",43,0)
 . D GET2^ORWORR1
"RTN","ORWORR",44,0)
 E  D
"RTN","ORWORR",45,0)
 . D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"",DTFROM,DTTHRU,0,MULT,"",1,EVENT)
"RTN","ORWORR",46,0)
 . D GET1^ORWORR1
"RTN","ORWORR",47,0)
 Q
"RTN","ORWORR",48,0)
RGET(REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT) ;Orders of AutoDC/Release Event
"RTN","ORWORR",49,0)
 N EVTDCREL
"RTN","ORWORR",50,0)
 S EVTDCREL="TRUE"
"RTN","ORWORR",51,0)
 D AGET(.REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT)
"RTN","ORWORR",52,0)
 Q
"RTN","ORWORR",53,0)
XGET ; retrieval algorithm before all the AC xref changes
"RTN","ORWORR",54,0)
 N X,X0,X3,IDX,IFN,LN,TIME,DGRP,MASK,TXT,ACT,PRV,ID,DEA,PASS ;PKI
"RTN","ORWORR",55,0)
 S DFN=DFN_";DPT(",IDX=0,LST=0
"RTN","ORWORR",56,0)
 I '$G(FILTER) S FILTER=2                    ; Default: Current/Active
"RTN","ORWORR",57,0)
 I $D(GROUPS)=1 D
"RTN","ORWORR",58,0)
 . S:'GROUPS GROUPS=$O(^ORD(100.98,"B",GROUPS,0))
"RTN","ORWORR",59,0)
 . D XPND(GROUPS)
"RTN","ORWORR",60,0)
 I FILTER=1  D DOALL G EXIT                  ; All
"RTN","ORWORR",61,0)
 I FILTER=2  D DOCUR G EXIT                  ; Current
"RTN","ORWORR",62,0)
 I FILTER=3  S PASS=";1;"                    ; Discontinued
"RTN","ORWORR",63,0)
 I FILTER=4  S PASS=";2;7;"                  ; Comp/Expired
"RTN","ORWORR",64,0)
 I FILTER=5  S PASS=";3;4;5;6;8;9;"          ; Expiring
"RTN","ORWORR",65,0)
 I FILTER=6  S PASS=";1;2;3;4;5;6;7;8;9;11;" ; New Activity
"RTN","ORWORR",66,0)
 I FILTER=7  S PASS=";5;"                    ; Pending
"RTN","ORWORR",67,0)
 I FILTER=8  Q                               ; Expanded
"RTN","ORWORR",68,0)
 I FILTER=9  S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Nurse
"RTN","ORWORR",69,0)
 I FILTER=10 S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Clerk
"RTN","ORWORR",70,0)
 I FILTER=11 S PASS=";3;4;5;6;7;8;11;"       ; Unsigned
"RTN","ORWORR",71,0)
 I FILTER=12 S PASS=";4;"                    ; Flagged
"RTN","ORWORR",72,0)
 I FILTER=13 S PASS=""                       ; Verbal/Phone
"RTN","ORWORR",73,0)
 I FILTER=14 S PASS=""                       ; Verbal/Phone Unsigned
"RTN","ORWORR",74,0)
 D DOGET
"RTN","ORWORR",75,0)
EXIT I LST=0 D
"RTN","ORWORR",76,0)
 . N %,X,%I D NOW^%DTC
"RTN","ORWORR",77,0)
 . S LST(1)="~0^0^"_%_"^^^97",LST(2)="tNo Orders Found."
"RTN","ORWORR",78,0)
 Q
"RTN","ORWORR",79,0)
DOGET ; Here to filter orders
"RTN","ORWORR",80,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",81,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",82,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",83,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",84,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",85,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",86,0)
 . . . I $L(PASS),(PASS'[(";"_$P(X3,U,3)_";")) Q  ;filter by status
"RTN","ORWORR",87,0)
 . . . ; any other filtering
"RTN","ORWORR",88,0)
 . . . D GETFLDS
"RTN","ORWORR",89,0)
 Q
"RTN","ORWORR",90,0)
DOALL ; Here to get all orders (no filter by status)
"RTN","ORWORR",91,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",92,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",93,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",94,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",95,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",96,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",97,0)
 . . . D GETFLDS
"RTN","ORWORR",98,0)
 Q
"RTN","ORWORR",99,0)
DOCUR ; Here to get all current orders
"RTN","ORWORR",100,0)
 N AOCTXT,STS,STOP,%
"RTN","ORWORR",101,0)
 S X=-$$GET^XPAR("ALL","ORPF ACTIVE ORDERS CONTEXT HRS")
"RTN","ORWORR",102,0)
 S %H=$H,X=(%H*86400+$P(%H,",",2))+(X*3600),%H=(X\86400)_","_(X#86400)
"RTN","ORWORR",103,0)
 D YMD^%DTC S AOCTXT=X_%
"RTN","ORWORR",104,0)
 S MASK="110000100101110"   ; mask out STS=1,2,7,10,12,13,14
"RTN","ORWORR",105,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AC",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",106,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AC",DFN,TIME,IFN)) Q:'IFN  D
"RTN","ORWORR",107,0)
 . . ; filter out display groups here
"RTN","ORWORR",108,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AC",DFN,TIME,IFN,ACT)) Q:'ACT  D
"RTN","ORWORR",109,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",110,0)
 . . . S STS=$P(X3,U,3),STOP=$P(X0,U,9)
"RTN","ORWORR",111,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!(STS=99) Q
"RTN","ORWORR",112,0)
 . . . I $P(X8,U,15)=13,($P(X8,U)<AOCTXT) D ACKILL Q
"RTN","ORWORR",113,0)
 . . . I $P(X8,U,15)=13!($P(X8,U,15)=""),("RN^XX"[$P(X8,U,2)) D ACKILL Q
"RTN","ORWORR",114,0)
 . . . I $E(MASK,STS),STOP<AOCTXT D ACKILL Q
"RTN","ORWORR",115,0)
 . . . D GETFLDS
"RTN","ORWORR",116,0)
 Q
"RTN","ORWORR",117,0)
ACKILL ; called only from DOCUR - kill AC xref
"RTN","ORWORR",118,0)
 ; K ^OR(100,"AC",DFN,TIME,IFN,ACT)  ; let ORQ1 kill if for now
"RTN","ORWORR",119,0)
 Q
"RTN","ORWORR",120,0)
GET4V11(LST,TXTVW,ORYD,IFNLST) ; get order fields TEMP
"RTN","ORWORR",121,0)
 G GET41
"RTN","ORWORR",122,0)
GET4LST(LST,IFNLST) ; get order fields for list of orders
"RTN","ORWORR",123,0)
GET41 N ACT,ACTID,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,IFN,IFNIDX,ORIGVIEW,DEA ;PKI
"RTN","ORWORR",124,0)
 N LOC ;IMO
"RTN","ORWORR",125,0)
 S (IDX,LST,IFNIDX)=0
"RTN","ORWORR",126,0)
 F  S IFNIDX=$O(IFNLST(IFNIDX)) Q:'IFNIDX  S IFN=IFNLST(IFNIDX) D
"RTN","ORWORR",127,0)
 . S ACT=$S($P(IFN,";",2):$P(IFN,";",2),1:1),IFN=+IFN
"RTN","ORWORR",128,0)
 . S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X8=$G(^(8,ACT,0))
"RTN","ORWORR",129,0)
 . D GETFLDS
"RTN","ORWORR",130,0)
 Q
"RTN","ORWORR",131,0)
GETBYIFN(LST,IFN) ; procedure
"RTN","ORWORR",132,0)
 ; get fields for single order
"RTN","ORWORR",133,0)
 ; .LST(n)=described above in GET
"RTN","ORWORR",134,0)
 ;  IFN=internal entry # for order
"RTN","ORWORR",135,0)
 I 'IFN Q
"RTN","ORWORR",136,0)
 N ACT,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,ACTID,ORIGVIEW,ORYD,TXTVW,DEA ;PKI
"RTN","ORWORR",137,0)
 S IDX=0,LST=0,ORYD=0
"RTN","ORWORR",138,0)
 S X0=$G(^OR(100,+IFN,0)),X3=$G(^(3))
"RTN","ORWORR",139,0)
 S ACT=$S($P(IFN,";",2):$P(IFN,";",2),$P(X3,U,7):$P(X3,U,7),1:1)
"RTN","ORWORR",140,0)
 S IFN=+IFN,X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWORR",141,0)
GETFLDS ; used by entry points to place order fields into list
"RTN","ORWORR",142,0)
 ; expects IDX=sequence #, IFN=order, X0=node 0, X3=node 3, LST=results
"RTN","ORWORR",143,0)
 ; LST(IDX)=~IFN^Grp^OrdTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^Act^Flagged[^DCType]^ChartRev^DEA#^^DigSig^LOC^[DCORIGNAL]^IsPendingDCorder^IsDelayOrder
"RTN","ORWORR",144,0)
 S PRV=$P(X8,U,5) S:'PRV PRV=$P(X8,U,3) S PRV=PRV_U
"RTN","ORWORR",145,0)
 I PRV S PRV=PRV_$P(^VA(200,+PRV,0),U)
"RTN","ORWORR",146,0)
 S DEA=$$DEA^XUSER(,+PRV) ; get user DEA info - PKI
"RTN","ORWORR",147,0)
 S IDX=IDX+1,LST=LST+1,ID=IFN_";"_ACT,ACTID=$P(X8,U,2)
"RTN","ORWORR",148,0)
 S CSTS=$S($P(X8,U,15):$P(X8,U,15),1:$P(X3,U,3))
"RTN","ORWORR",149,0)
 I $P(X8,U,15)=10,$P(X3,U,3)=14 S CSTS=14 ;delayed-lapsed order
"RTN","ORWORR",150,0)
 S STRT=$S($P(X3,U,3)=11:$$RSTRT,ACTID="NW"!(ACTID="XX")!(ACTID="RL"):$P(X0,U,8),ACTID="DC":"",1:$P(X8,U)) ;110
"RTN","ORWORR",151,0)
 S STOP=$S($P(X3,U,3)=11:$$RSTOP,ACTID="HD":$P($G(^OR(100,+IFN,8,ACT,2)),U),1:$P(X0,U,9))
"RTN","ORWORR",152,0)
 S LST(IDX)="~"_ID_U_$P(X0,U,11)_U_$P(X8,U)_U_STRT_U_STOP_U_CSTS_U_$P(X8,U,4)_U_$P(X8,U,8)_U_$P(X8,U,10)_U_PRV
"RTN","ORWORR",153,0)
 S $P(LST(IDX),U,13)=+$G(^OR(100,IFN,8,ACT,3))    ; flagged
"RTN","ORWORR",154,0)
 I +$P(X8,U,8) S $P(LST(IDX),U,8)=$$INITIALS^ORCHTAB2(+$P(X8,U,8))    ;nurse
"RTN","ORWORR",155,0)
 I +$P(X8,U,10) S $P(LST(IDX),U,9)=$$INITIALS^ORCHTAB2(+$P(X8,U,10))  ;clerk
"RTN","ORWORR",156,0)
 I +$P(X8,U,18) S $P(LST(IDX),U,15)=$$INITIALS^ORCHTAB2(+$P(X8,U,18)) ;chart review
"RTN","ORWORR",157,0)
 I $L($G(DEA)) S $P(LST(IDX),U,16)=DEA ;PKI
"RTN","ORWORR",158,0)
 I $P($G(^OR(100,IFN,8,ACT,2)),"^",5) S $P(LST(IDX),U,18)=$P(^(2),"^",4)
"RTN","ORWORR",159,0)
 I '$P($G(^OR(100,IFN,8,ACT,2)),"^",5),$P(X0,"^",5) D  ;Copy orders PKI fix
"RTN","ORWORR",160,0)
 . N OI,ORVP,ORCAT,PKG,ORPKIU
"RTN","ORWORR",161,0)
 . S OI=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,IFN,4.5,OI,1)) Q:'OI
"RTN","ORWORR",162,0)
 . S ORVP=$P(X0,"^",2),PKG=$P(X0,"^",14)
"RTN","ORWORR",163,0)
 . S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWORR",164,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORWORR",165,0)
 . S ORPKIU=0 I $D(^ORD(100.7,"C",DUZ)) S ORPKIU=1
"RTN","ORWORR",166,0)
 . D PKI^ORWDPS1(.ORY,OI,ORCAT,+ORVP,ORPKIU)
"RTN","ORWORR",167,0)
 . I $E($G(ORY))=2 S $P(LST(IDX),U,18)=ORY
"RTN","ORWORR",168,0)
 ; Change to display location for Clinic Orders, Inpatients, & IV infusion orders.
"RTN","ORWORR",169,0)
 N DGID,DGNAM
"RTN","ORWORR",170,0)
 S LOC=""
"RTN","ORWORR",171,0)
 S DGID=$P(X0,U,11)
"RTN","ORWORR",172,0)
 I $L(DGID) D
"RTN","ORWORR",173,0)
 .S DGNAM=$P($G(^ORD(100.98,DGID,0)),U)
"RTN","ORWORR",174,0)
 .;I DGNAM="CLINIC ORDERS"!(DGNAM="INPATIENT MEDICATIONS")!(DGNAM="IV MEDICATIONS")!(DGNAM="UNIT DOSE MEDICATIONS") D
"RTN","ORWORR",175,0)
 .S LOC=$P(X0,U,10) ;IMO
"RTN","ORWORR",176,0)
 .S:+LOC LOC=$P($G(^SC(+LOC,0)),U)_":"_+LOC ;IMO
"RTN","ORWORR",177,0)
 S $P(LST(IDX),U,19)=LOC ;IMO
"RTN","ORWORR",178,0)
 ;need a way to determine if order is in an unsigned DC state.
"RTN","ORWORR",179,0)
 S $P(LST(IDX),U,21)=$S(ACTID="DC":1,1:0)
"RTN","ORWORR",180,0)
 S $P(LST(IDX),U,22)=$$CHKORD^OREVNTX1(IFN)
"RTN","ORWORR",181,0)
 D
"RTN","ORWORR",182,0)
 . N OI,ORVP,ORCAT,PKG,ORCONSUB,ORCSPKG,ORYD
"RTN","ORWORR",183,0)
 . S ORCSPKG=""
"RTN","ORWORR",184,0)
 . S OI=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,IFN,4.5,OI,1)) Q:'OI
"RTN","ORWORR",185,0)
 . S ORVP=$P(X0,"^",2),PKG=$P(X0,"^",14)
"RTN","ORWORR",186,0)
 . S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWORR",187,0)
 . I PKG=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) S ORCSPKG="O"
"RTN","ORWORR",188,0)
 . I PKG=$O(^DIC(9.4,"B","UNIT DOSE MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWORR",189,0)
 . I PKG=$O(^DIC(9.4,"B","INPATIENT MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWORR",190,0)
 . I PKG=$O(^DIC(9.4,"B","IV MEDICATIONS",0)) S ORCSPKG="I"
"RTN","ORWORR",191,0)
 . I ORCSPKG="" S $P(LST(IDX),U,23,24)="0^0" Q
"RTN","ORWORR",192,0)
 . D CSCHECK^ORDEA(.ORCONSUB,OI,ORCSPKG)
"RTN","ORWORR",193,0)
 . S $P(LST(IDX),U,23)=$P(ORCONSUB,U)
"RTN","ORWORR",194,0)
 . S $P(LST(IDX),U,24)=$P(ORCONSUB,U,2)
"RTN","ORWORR",195,0)
 ;
"RTN","ORWORR",196,0)
 S ORIGVIEW=$S($G(TXTVW)=0:0,$G(TXTVW)=1:1,ORYD=-1:1,'ORYD:1,$P(X8,U)'<ORYD:0,1:1)
"RTN","ORWORR",197,0)
 K TXT D TEXT^ORQ12(.TXT,ID,255)                  ; optimize later
"RTN","ORWORR",198,0)
 I $O(^OR(100,+IFN,2,0)) S LN=$O(TXT(0)),TXT(LN)="+"_TXT(LN)
"RTN","ORWORR",199,0)
 I $O(^OR(100,+IFN,8,"C","XX",0)) S LN=$O(TXT(0)),TXT(LN)="*"_TXT(LN)
"RTN","ORWORR",200,0)
 S LN=0 F  S LN=$O(TXT(LN)) Q:'LN  S IDX=IDX+1,LST(IDX)="t"_TXT(LN)
"RTN","ORWORR",201,0)
 I $O(^OR(100,+IFN,8,1,.2,0)) S IDX=IDX+1,LST(IDX)="|" D  ;PKI XMLText
"RTN","ORWORR",202,0)
 . S I=0 F  S I=$O(^OR(100,+IFN,8,1,.2,I)) Q:'I  S IDX=IDX+1,LST(IDX)="x"_^(I,0)
"RTN","ORWORR",203,0)
 Q
"RTN","ORWORR",204,0)
RSTRT() ; return start date from responses
"RTN","ORWORR",205,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","START",0)),1))
"RTN","ORWORR",206,0)
RSTOP() ; return stop date from responses
"RTN","ORWORR",207,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","STOP",0)),1))
"RTN","ORWORR",208,0)
GETTXT(LST,IFN) ; get text of an order
"RTN","ORWORR",209,0)
 I $L(IFN,";")=1 S IFN=IFN_";1"
"RTN","ORWORR",210,0)
 D TEXT^ORQ12(.LST,IFN,255)
"RTN","ORWORR",211,0)
 Q
"RTN","ORWORR",212,0)
XPND(AGRP) ; procedure
"RTN","ORWORR",213,0)
 ; Expand display group (GROUPS defined outside of call)
"RTN","ORWORR",214,0)
 N I,CHLD
"RTN","ORWORR",215,0)
 S GROUPS(AGRP)=^ORD(100.98,AGRP,0),I=0
"RTN","ORWORR",216,0)
 F  S I=$O(^ORD(100.98,AGRP,1,I)) Q:'I  S CHLD=$P(^(I,0),U) D XPND(CHLD)
"RTN","ORWORR",217,0)
 Q
"RTN","ORWORR",218,0)
GETPKG(Y,IFN) ; get order pkg
"RTN","ORWORR",219,0)
 N ORDERID,PKGID
"RTN","ORWORR",220,0)
 Q:+IFN<1
"RTN","ORWORR",221,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWORR",222,0)
 S PKGID=$P(OR(100,ORDERID,0),U,14)
"RTN","ORWORR",223,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWORR",224,0)
 Q
"RTN","ORWPCE")
0^8^B53783465
"RTN","ORWPCE",1,0)
ORWPCE ; SLC/JM/REV - wrap calls to PCE and AICS ;02/07/13  14:01
"RTN","ORWPCE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190,195,215,243,295,280,306**;Dec 17, 1997;Build 43
"RTN","ORWPCE",3,0)
 ;
"RTN","ORWPCE",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORWPCE",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORWPCE",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE",7,0)
 ; DBIA 3991   $$STATCHK^ICDAPIU
"RTN","ORWPCE",8,0)
 ;
"RTN","ORWPCE",9,0)
 Q
"RTN","ORWPCE",10,0)
VISIT(LST,CLINIC,ORDATE) ; get list of visit types for clinic
"RTN","ORWPCE",11,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",12,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST",,,,ORDATE)
"RTN","ORWPCE",13,0)
 Q
"RTN","ORWPCE",14,0)
PROC(LST,CLINIC,ORDATE) ; get list of procedures for clinic P12 for CPTMods
"RTN","ORWPCE",15,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",16,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1,ORDATE)
"RTN","ORWPCE",17,0)
 N IDX,MOD,CODES,FIRST S IDX=0
"RTN","ORWPCE",18,0)
 F  S IDX=$O(LST(IDX)) Q:'+IDX  D
"RTN","ORWPCE",19,0)
 . I LST(IDX)="" K LST(IDX) Q
"RTN","ORWPCE",20,0)
 . S MOD=0,CODES="",FIRST=1
"RTN","ORWPCE",21,0)
 . F  S MOD=$O(LST(IDX,"MODIFIER",MOD)) Q:(MOD="")  D
"RTN","ORWPCE",22,0)
 . . I FIRST S FIRST=0
"RTN","ORWPCE",23,0)
 . . E  S CODES=CODES_";"
"RTN","ORWPCE",24,0)
 . . S CODES=CODES_LST(IDX,"MODIFIER",MOD)
"RTN","ORWPCE",25,0)
 . K LST(IDX,"MODIFIER")
"RTN","ORWPCE",26,0)
 . I 'FIRST S $P(LST(IDX),U,12)=CODES
"RTN","ORWPCE",27,0)
 Q
"RTN","ORWPCE",28,0)
CPTMODS(LST,ORCPTCOD,ORDATE) ;Return CPT Modifiers for a CPT Code
"RTN","ORWPCE",29,0)
 N ORM,ORIDX,ORI,MODNAME
"RTN","ORWPCE",30,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",31,0)
 I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,ORDATE)),+$D(ORM) D
"RTN","ORWPCE",32,0)
 . S ORIDX="",ORI=0
"RTN","ORWPCE",33,0)
 . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",34,0)
 . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",35,0)
 . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",36,0)
 Q
"RTN","ORWPCE",37,0)
GETMOD(MODINFO,ORMODIEN,ORDATE) ;Returns info for a specific CPT Modifier
"RTN","ORWPCE",38,0)
 N ORDATA
"RTN","ORWPCE",39,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",40,0)
 S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I",ORDATE,1)
"RTN","ORWPCE",41,0)
 I +ORDATA>0 S MODINFO=ORMODIEN_U_$P(ORDATA,U,3)_U_$P(ORDATA,U,2)
"RTN","ORWPCE",42,0)
 Q
"RTN","ORWPCE",43,0)
DIAG(LST,CLINIC,ORDATE) ; get list of diagnoses for clinic
"RTN","ORWPCE",44,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",45,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST",,,,ORDATE)
"RTN","ORWPCE",46,0)
 Q
"RTN","ORWPCE",47,0)
IMM(LST,CLINIC) ;get list of immunizations for clinic
"RTN","ORWPCE",48,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT IMMUNIZATIONS","LST")
"RTN","ORWPCE",49,0)
 Q
"RTN","ORWPCE",50,0)
SK(LST,CLINIC) ;get list of skin test for clinic
"RTN","ORWPCE",51,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT SKIN TESTS","LST")
"RTN","ORWPCE",52,0)
 Q
"RTN","ORWPCE",53,0)
HF(LST,CLINIC) ;get list of health factors for clinic
"RTN","ORWPCE",54,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT HEALTH FACTORS","LST")
"RTN","ORWPCE",55,0)
 Q
"RTN","ORWPCE",56,0)
PED(LST,CLINIC) ;get list of education topices for clinic
"RTN","ORWPCE",57,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EDUCATION TOPICS","LST")
"RTN","ORWPCE",58,0)
 Q
"RTN","ORWPCE",59,0)
TRT(LST,CLINIC) ;get list of treatments for clinic
"RTN","ORWPCE",60,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT TREATMENTS","LST")
"RTN","ORWPCE",61,0)
 Q
"RTN","ORWPCE",62,0)
XAM(LST,CLINIC) ;get list of exams for clinic
"RTN","ORWPCE",63,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EXAMS","LST")
"RTN","ORWPCE",64,0)
 Q
"RTN","ORWPCE",65,0)
ACTPROB(GLST,DFN,ORDATE) ;get list of patient's active problems
"RTN","ORWPCE",66,0)
 N ORPROB,ORPROBIX,ORPRCNT,GMPINDT
"RTN","ORWPCE",67,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE",68,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",69,0)
 S GMPINDT=ORDATE
"RTN","ORWPCE",70,0)
 D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE",71,0)
 S ORPRCNT=0
"RTN","ORWPCE",72,0)
 S ORPROBIX=0
"RTN","ORWPCE",73,0)
 F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE",74,0)
 . S ORPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE",75,0)
 . I $L(ORPROB)>255 S $P(ORPROB,U)=$E($P(ORPROB,U),1,245)
"RTN","ORWPCE",76,0)
 . I $E(ORPROB,1)="$" S ORPROB=$E(ORPROB,2,255)
"RTN","ORWPCE",77,0)
 . I '$D(ORPROB(ORPROB)) D
"RTN","ORWPCE",78,0)
 .. S ORPROB(ORPROB)=""
"RTN","ORWPCE",79,0)
 .. S ORPRCNT=ORPRCNT+1
"RTN","ORWPCE",80,0)
 .. S $P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)=ORPROB
"RTN","ORWPCE",81,0)
 . E  K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)
"RTN","ORWPCE",82,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=ORPRCNT
"RTN","ORWPCE",83,0)
 S GLST=$NA(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS"))
"RTN","ORWPCE",84,0)
 Q
"RTN","ORWPCE",85,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; return SC conditions that may be selected
"RTN","ORWPCE",86,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt;
"RTN","ORWPCE",87,0)
 ;     MSTallow^MSTdflt;HNCallow^HNCdflt;CVAllow^CVDflt;SHADAllow^SHADDflt
"RTN","ORWPCE",88,0)
 N ORX,S S S=";"
"RTN","ORWPCE",89,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.ORX)
"RTN","ORWPCE",90,0)
 S VAL=$G(ORX("SC"))_S_$G(ORX("AO"))_S_$G(ORX("IR"))_S_$G(ORX("EC"))_S_$G(ORX("MST"))_S_$G(ORX("HNC"))_S_$G(ORX("CV"))_S_$G(ORX("SHAD"))
"RTN","ORWPCE",91,0)
 Q
"RTN","ORWPCE",92,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPCE",93,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPCE",94,0)
 D ELIG^VADPT
"RTN","ORWPCE",95,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPCE",96,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPCE",97,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPCE",98,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPCE",99,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPCE",100,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPCE",101,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPCE",102,0)
 Q
"RTN","ORWPCE",103,0)
CPTREQD(VAL,IEN) ; return 1 in VAL if note still needs a CPT code
"RTN","ORWPCE",104,0)
 S VAL=+$P(^TIU(8925,IEN,0),U,11)
"RTN","ORWPCE",105,0)
 Q
"RTN","ORWPCE",106,0)
NOTEVSTR(VAL,IEN) ; return the VSTR^AUTHOR for a note
"RTN","ORWPCE",107,0)
 N X0,X12,VISIT
"RTN","ORWPCE",108,0)
 S X0=$G(^TIU(8925,+IEN,0)),X12=$G(^(12)),VISIT=$P(X12,U,7)
"RTN","ORWPCE",109,0)
 I +VISIT S VAL=$$VSTRBLD^TIUSRVP(VISIT) I 1
"RTN","ORWPCE",110,0)
 E  S VAL=$P(X12,U,11)_";"_$P(X0,U,7)_";"_$P(X0,U,13)
"RTN","ORWPCE",111,0)
 Q
"RTN","ORWPCE",112,0)
HASVISIT(ORY,IEN,DFN,ORLOC,ORDTE) ;Has visit or is stand alone
"RTN","ORWPCE",113,0)
 N ORVISIT
"RTN","ORWPCE",114,0)
 S ORY=-1
"RTN","ORWPCE",115,0)
 I +$G(IEN)>0 S ORVISIT=+$P($G(^TIU(8925,+IEN,0)),U,3)
"RTN","ORWPCE",116,0)
 I +$G(ORVISIT)'>0 S ORVISIT=$$GETENC^PXAPI(DFN,ORDTE,ORLOC)
"RTN","ORWPCE",117,0)
 I +$G(ORVISIT)>0 S ORY=$$VST2APPT^PXAPI(ORVISIT)
"RTN","ORWPCE",118,0)
 Q
"RTN","ORWPCE",119,0)
DELETE(VAL,VSTR,DFN) ; delete PCE info when deleting a note
"RTN","ORWPCE",120,0)
 N VISIT,ORCOUNT,ORDTE,ORLOC
"RTN","ORWPCE",121,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",122,0)
 S ORLOC=$P(VSTR,";"),ORDTE=$P(VSTR,";",2)
"RTN","ORWPCE",123,0)
 I '$D(^TMP("ORWPCE",$J,VSTR))&('$$GETENC^PXAPI(DFN,ORDTE,ORLOC)) S VAL=0 Q  ; no PCE data saved yet
"RTN","ORWPCE",124,0)
 I $P(VSTR,";",3)="H" S VAL=0 Q           ; leave inpatient alone
"RTN","ORWPCE",125,0)
 I $L($T(DOCCNT^TIUSRVLV))=0 S VAL=0 Q    ; leave if no tiu entry point
"RTN","ORWPCE",126,0)
 D DOCCNT^TIUSRVLV(.ORCOUNT,DFN,VSTR)     ; Do not delete if another
"RTN","ORWPCE",127,0)
 I ORCOUNT>0 S VAL=0 Q                    ; title points to visit
"RTN","ORWPCE",128,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQDEL^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",129,0)
 S (ZTSAVE("VSTR"),ZTSAVE("DFN"))="",ZTDESC="CPRS Delete Note/PCE"
"RTN","ORWPCE",130,0)
 S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",131,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQDEL^ORWPCE1
"RTN","ORWPCE",132,0)
 Q
"RTN","ORWPCE",133,0)
SAVE(OK,PCELIST,NOTEIEN,ORLOC) ; save PCE information
"RTN","ORWPCE",134,0)
 N VSTR,GMPLUSER
"RTN","ORWPCE",135,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",136,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("ORWPCE",$J,VSTR)
"RTN","ORWPCE",137,0)
 M ^TMP("ORWPCE",$J,VSTR)=PCELIST
"RTN","ORWPCE",138,0)
 S GMPLUSER=$$CLINUSER^ORQQPL1(DUZ),NOTEIEN=+$G(NOTEIEN)
"RTN","ORWPCE",139,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQSAVE^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",140,0)
 S ZTSAVE("PCELIST(")="",ZTDESC="Data from CPRS to PCE"
"RTN","ORWPCE",141,0)
 S ZTSAVE("GMPLUSER")="",ZTSAVE("NOTEIEN")="",ZTSAVE("DUZ")=""
"RTN","ORWPCE",142,0)
 I VSTR'["E" S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",143,0)
 S ZTSAVE("ORLOC")=""
"RTN","ORWPCE",144,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQSAVE^ORWPCE1
"RTN","ORWPCE",145,0)
 Q
"RTN","ORWPCE",146,0)
LEX(LST,X,APP,ORDATE) ; return list after lexicon lookup
"RTN","ORWPCE",147,0)
 N LEX,ILST,I,IEN
"RTN","ORWPCE",148,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE",149,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",150,0)
 D CONFIG^LEXSET(APP,APP,ORDATE)  ;DBIA 1609
"RTN","ORWPCE",151,0)
 I APP="CHP" D
"RTN","ORWPCE",152,0)
 . ; Set the filter for CPT only using CS APIs - format is the same as for DIC("S")
"RTN","ORWPCE",153,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)="I $L($$CPTONE^LEXU(+Y,$G(ORDATE)))!($L($$CPCONE^LEXU(+Y,$G(ORDATE))))"  ;DBIA 1609
"RTN","ORWPCE",154,0)
 . ; Set Applications Default Flag (Lexicon can not overwrite filter)
"RTN","ORWPCE",155,0)
 . S ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","ORWPCE",156,0)
 D LOOK^LEXA(X,APP,1,"",ORDATE)
"RTN","ORWPCE",157,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORWPCE",158,0)
 . S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE",159,0)
 S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE",160,0)
 S (I,IEN)=""
"RTN","ORWPCE",161,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORWPCE",162,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORWPCE",163,0)
 ..S ILST=ILST+1,LST(ILST)=IEN_U_^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE",164,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORWPCE",165,0)
 Q
"RTN","ORWPCE",166,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE",167,0)
 S VAL=""
"RTN","ORWPCE",168,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",169,0)
 I APP="ICD" S VAL=$$ICDONE^LEXU(IEN,ORDATE)
"RTN","ORWPCE",170,0)
 I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",171,0)
 I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",172,0)
 Q
"RTN","ORWPCE",173,0)
ADDRES ; Add the ORW/PXAPI RESOURCE device
"RTN","ORWPCE",174,0)
 N X
"RTN","ORWPCE",175,0)
 S X=$$RES^XUDHSET("ORW/PXAPI RESOURCE",,5,"CPRS to PCE transactions")
"RTN","ORWPCE",176,0)
 Q
"RTN","ORWPCE",177,0)
GETSVC(NEWSVC,SVC,LOC,INP) ; Returns the correct Service Connected Category
"RTN","ORWPCE",178,0)
 N DSS,ORWSVC
"RTN","ORWPCE",179,0)
 S DSS=$P($G(^SC(+LOC,0)),U,7)
"RTN","ORWPCE",180,0)
 Q:'+DSS
"RTN","ORWPCE",181,0)
 M ORWSVC=SVC
"RTN","ORWPCE",182,0)
 S NEWSVC=$$SVC^PXKCO(.ORWSVC,DSS,INP,LOC) ; DBIA #3225
"RTN","ORWPCE",183,0)
 Q
"RTN","ORWPCE",184,0)
ICDVER(RESULT,ORDT) ; Get ICD codeset version (i.e., ICD-9-CM or ICD-10-CM)
"RTN","ORWPCE",185,0)
 S ORDT=+$G(ORDT) S:'ORDT ORDT=DT
"RTN","ORWPCE",186,0)
 S RESULT="ICD^ICD-9-CM"
"RTN","ORWPCE",187,0)
ICDVERX Q
"RTN","ORWPCE1")
0^9^B67787627
"RTN","ORWPCE1",1,0)
ORWPCE1 ;ISL/KCM,JER - PCE Calls from CPRS GUI;10/15/12  12:52
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,187,190,215,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORWPCE1",3,0)
 ;
"RTN","ORWPCE1",4,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE1",5,0)
 ;
"RTN","ORWPCE1",6,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",7,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",8,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",9,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",12,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",13,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",14,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",15,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",16,0)
 Q ORVISIT
"RTN","ORWPCE1",17,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",18,0)
 N VISIT,VAL
"RTN","ORWPCE1",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",20,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",21,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",22,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",23,0)
 Q
"RTN","ORWPCE1",24,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",25,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",26,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST,LEXIEN
"RTN","ORWPCE1",27,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",28,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",29,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",31,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",32,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",33,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",34,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",35,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",36,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",37,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",38,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",39,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",40,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",41,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",42,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",43,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",44,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",45,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",46,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",47,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",48,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",49,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",50,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . ;prevents checkout!
"RTN","ORWPCE1",54,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",55,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",58,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",59,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",60,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",61,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","ORWPCE1",62,0)
 . . I CODE="SHD" S @ROOT@("SHAD")=$P(X,U,3) Q
"RTN","ORWPCE1",63,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",64,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",65,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",66,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",67,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",68,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",69,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",70,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",71,0)
 . . S IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","ORWPCE1",72,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",73,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",74,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",75,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",76,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",77,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",78,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",79,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",80,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",81,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",82,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",83,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",84,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",85,0)
 . . N ORDXI,ORDX
"RTN","ORWPCE1",86,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",87,0)
 . . F ORDXI=1:1:$L(CODE,"/") D
"RTN","ORWPCE1",88,0)
 . . . S ORDX=$P(CODE,"/",ORDXI)
"RTN","ORWPCE1",89,0)
 . . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",90,0)
 . . . S IEN=+$$CODEN^ICDCODE(ORDX,80) ;ICR #3990
"RTN","ORWPCE1",91,0)
 . . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",92,0)
 . . . S @ROOT@("PRIMARY")=$S(ORDXI=1:$P(X,U,5),1:0)
"RTN","ORWPCE1",93,0)
 . . . S LEXIEN=$P($$EXP^LEXCODE(CODE,"ICD",DT),U),@ROOT@("LEXICON TERM")=$S(LEXIEN>0:LEXIEN,1:"")
"RTN","ORWPCE1",94,0)
 . . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",95,0)
 . . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",96,0)
 . . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",97,0)
 . . . I $L($P(X,U,7)),($P(X,U,7)=1),(ORDXI=1) S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",98,0)
 . . . S:$L($P(X,U,10))>0&(ORDXI=1) COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",99,0)
 . . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",100,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",101,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",102,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",103,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",104,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",105,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",106,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",107,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",108,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",109,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",110,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",111,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",112,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",113,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",114,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",115,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",116,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",117,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",118,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",119,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",120,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",121,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",122,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",123,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",124,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",125,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",126,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",127,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",128,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",129,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",130,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",131,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",132,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",133,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",135,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(ORPXAPI("PROVIDER",1,"NAME"))
"RTN","ORWPCE1",136,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",137,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","ORWPCE1",138,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","ORWPCE1",139,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",140,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",141,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",142,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",143,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",144,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",145,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",146,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",147,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",148,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",149,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",150,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",151,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",152,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",153,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",154,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",155,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",156,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",157,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",158,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",159,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",160,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",161,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",162,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",163,0)
 ;Store the comments
"RTN","ORWPCE1",164,0)
 S COM=""
"RTN","ORWPCE1",165,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",166,0)
 ;
"RTN","ORWPCE1",167,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",168,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",169,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",170,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",171,0)
 . D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE1",172,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",173,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE1",174,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",175,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",176,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",177,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",178,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",179,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",180,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",181,0)
 ;
"RTN","ORWPCE1",182,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) D
"RTN","ORWPCE1",183,0)
 .N ORTIME
"RTN","ORWPCE1",184,0)
 .S ORTIME=$$NOW^XLFDT
"RTN","ORWPCE1",185,0)
 .S ORTIME=+($P(ORTIME,".")_"."_$E($P(ORTIME,".",2),1,4))
"RTN","ORWPCE1",186,0)
 .S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=ORTIME
"RTN","ORWPCE1",187,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",188,0)
DATA2PCE ;
"RTN","ORWPCE1",189,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",190,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",191,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",192,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",193,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",194,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",195,0)
 .N OROK,ORX
"RTN","ORWPCE1",196,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",197,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",198,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",199,0)
 Q
"RTN","ORWPCE1",200,0)
 ;
"RTN","ORWPCE1",201,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed
"RTN","ORWPCE1",202,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",203,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",204,0)
 S (OROK,I)=0
"RTN","ORWPCE1",205,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",206,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",207,0)
 I 'OROK D
"RTN","ORWPCE1",208,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",209,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",210,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",211,0)
 Q OROK
"RTN","ORWPCE1",212,0)
NONCOUNT(ORY,ORLOC) ;  Is the location a non-count clinic? (DBIA #964)
"RTN","ORWPCE1",213,0)
 Q:'ORLOC
"RTN","ORWPCE1",214,0)
 S ORY=$S($P($G(^SC(ORLOC,0)),U,17)="Y":1,1:0)
"RTN","ORWPCE1",215,0)
 Q
"RTN","ORWPCE2")
0^10^B50908533
"RTN","ORWPCE2",1,0)
ORWPCE2 ; ISL/JM,RV,JER - wrap calls to PCE ;11/18/11  12:25
"RTN","ORWPCE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,173,195,243,306**;Dec 17, 1997;Build 43
"RTN","ORWPCE2",3,0)
GETSET(ORWLST,ORWFILE,ORWFIELD,ORWNULL) ;gets set of codes
"RTN","ORWPCE2",4,0)
 ; ORWLST(n)=code^text for code
"RTN","ORWPCE2",5,0)
 N ORWPCE,ORWPCEL,ORWPCEC,ORWPCELO,ORWPCEHI,ORWPCECD,ORWPCET
"RTN","ORWPCE2",6,0)
 S ORWPCELO="abcdefghijklmnopqrstuvwxyz"
"RTN","ORWPCE2",7,0)
 S ORWPCEHI="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","ORWPCE2",8,0)
 D FIELD^DID(ORWFILE,ORWFIELD,"","POINTER","ORWPCE","ORWPCE")
"RTN","ORWPCE2",9,0)
 S ORWPCEL=$L(ORWPCE("POINTER"),";")-1
"RTN","ORWPCE2",10,0)
 F ORWPCEC=1:1:ORWPCEL D
"RTN","ORWPCE2",11,0)
 . S ORWPCECD=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",1)
"RTN","ORWPCE2",12,0)
 . S ORWPCET=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",2)
"RTN","ORWPCE2",13,0)
 . S ORWLST(ORWPCEC)=ORWPCECD_"^"_$E(ORWPCET)_$TR($E(ORWPCET,2,99),ORWPCEHI,ORWPCELO)
"RTN","ORWPCE2",14,0)
 S:$G(ORWNULL) ORWLST(0)="@^(None selected)"
"RTN","ORWPCE2",15,0)
 Q
"RTN","ORWPCE2",16,0)
 ;
"RTN","ORWPCE2",17,0)
IMMTYPE(ORWLST,ORDT) ;get the list of active immunizations
"RTN","ORWPCE2",18,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",19,0)
 S:'$G(ORDT) ORDT=DT
"RTN","ORWPCE2",20,0)
 F  S BINDEX=$O(^AUTTIMM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",21,0)
 . I $D(^AUTTIMM(IEN,0))#2,+$P(^(0),"^",7)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",22,0)
 . ;I $D(^AUTTIMM(IEN,0))#2,+$$SCREEN^XTID(9999999.14,,IEN,ORDT)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",23,0)
 Q
"RTN","ORWPCE2",24,0)
 ;
"RTN","ORWPCE2",25,0)
SKTYPE(ORWLST,ORDT) ;get the list of active skin test
"RTN","ORWPCE2",26,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",27,0)
 S:'$G(ORDT) ORDT=DT
"RTN","ORWPCE2",28,0)
 F  S BINDEX=$O(^AUTTSK("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",29,0)
 . I $D(^AUTTSK(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",30,0)
 . ;I $D(^AUTTSK(IEN,0))#2,+$$SCREEN^XTID(9999999.28,,IEN,ORDT)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",31,0)
 Q
"RTN","ORWPCE2",32,0)
 ;
"RTN","ORWPCE2",33,0)
EDTTYPE(ORWLST) ;get the list of active education topics
"RTN","ORWPCE2",34,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",35,0)
 F  S BINDEX=$O(^AUTTEDT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEDT(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",36,0)
 Q
"RTN","ORWPCE2",37,0)
 ;
"RTN","ORWPCE2",38,0)
HFTYPE(ORWLST,ADDCATS) ;get the list of active  health factors
"RTN","ORWPCE2",39,0)
 N IEN,CNT,BINDEX,REC
"RTN","ORWPCE2",40,0)
 S (IEN,CNT,BINDEX)=0,ADDCATS=+$G(ADDCATS)
"RTN","ORWPCE2",41,0)
 F  S BINDEX=$O(^AUTTHF("B",BINDEX)) Q:BINDEX']""  D
"RTN","ORWPCE2",42,0)
 .F  S IEN=$O(^AUTTHF("B",BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",43,0)
 ..S REC=$G(^AUTTHF(IEN,0))
"RTN","ORWPCE2",44,0)
 ..I +$P(REC,U,11) S REC=""
"RTN","ORWPCE2",45,0)
 ..I 'ADDCATS,$P(REC,U,10)="C" S REC=""
"RTN","ORWPCE2",46,0)
 ..I REC'="" D
"RTN","ORWPCE2",47,0)
 ...S CNT=CNT+1,ORWLST(CNT)=IEN_U_$P(REC,U)
"RTN","ORWPCE2",48,0)
 ...I ADDCATS S ORWLST(CNT)=ORWLST(CNT)_U_$P(REC,U,10)_U_$P(REC,U,3)
"RTN","ORWPCE2",49,0)
 Q
"RTN","ORWPCE2",50,0)
 ;
"RTN","ORWPCE2",51,0)
EXAMTYPE(ORWLST) ;get the list of active exams
"RTN","ORWPCE2",52,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",53,0)
 F  S BINDEX=$O(^AUTTEXAM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEXAM(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",54,0)
 Q
"RTN","ORWPCE2",55,0)
 ;
"RTN","ORWPCE2",56,0)
TRTTYPE(ORWLST) ;get the list of active treatments
"RTN","ORWPCE2",57,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",58,0)
 F  S BINDEX=$O(^AUTTTRT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTTRT(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",59,0)
 Q
"RTN","ORWPCE2",60,0)
 ;
"RTN","ORWPCE2",61,0)
ACTIVPRV(ORRETURN,ORWPROV,ORWDT) ;get if provider is active or not
"RTN","ORWPCE2",62,0)
 S ORRETURN=$$ACTIVPRV^PXAPI(ORWPROV,ORWDT)
"RTN","ORWPCE2",63,0)
 Q
"RTN","ORWPCE2",64,0)
GETVISIT(VISIT,IEN,DFN,VSITSTR) ;Get the visit IEN
"RTN","ORWPCE2",65,0)
 I +$G(IEN)<1 D  I 1
"RTN","ORWPCE2",66,0)
 .S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE2",67,0)
 E  S VISIT=$P(^TIU(8925,IEN,0),U,3)
"RTN","ORWPCE2",68,0)
 Q
"RTN","ORWPCE2",69,0)
GAFOK(ORY) ; Returns true if all supporting MH GAF Code exists
"RTN","ORWPCE2",70,0)
 S ORY=0
"RTN","ORWPCE2",71,0)
 I $T(GAFHX^YSGAFAPI)'="",$T(ENT^YSGAFAP1)'="" S ORY=1
"RTN","ORWPCE2",72,0)
 Q
"RTN","ORWPCE2",73,0)
MHCLINIC(ORY,ORIEN)     ; See if this is a mental health clinic
"RTN","ORWPCE2",74,0)
 I $T(MHCLIN^SDUTL2)="" S ORY=1
"RTN","ORWPCE2",75,0)
 E  S ORY=$$MHCLIN^SDUTL2(ORIEN)
"RTN","ORWPCE2",76,0)
 Q
"RTN","ORWPCE2",77,0)
LOADGAF(ORY,ORINPUT) ; Retrieve GAF scores
"RTN","ORWPCE2",78,0)
 D GAFHX^YSGAFAPI(.ORY,.ORINPUT)
"RTN","ORWPCE2",79,0)
 Q
"RTN","ORWPCE2",80,0)
SAVEGAF(ORY,ORINPUT) ; Save new GAF score
"RTN","ORWPCE2",81,0)
 N ORDATA
"RTN","ORWPCE2",82,0)
 D ENT^YSGAFAP1(.ORDATA,.ORINPUT)
"RTN","ORWPCE2",83,0)
 S ORY=($G(ORDATA(1))="[DATA]")
"RTN","ORWPCE2",84,0)
 Q
"RTN","ORWPCE2",85,0)
FORCE(ORY,USER,LOC) ; Retrieve FORCE GUI PCE Entry for a given User/Location
"RTN","ORWPCE2",86,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",87,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",88,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",89,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE FORCE PCE ENTRY","Q",.ORERR)
"RTN","ORWPCE2",90,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",91,0)
 Q
"RTN","ORWPCE2",92,0)
HASCPT(ORY,ORLIST)        ; Returns true if there are any mapped CPT Codes
"RTN","ORWPCE2",93,0)
 N IEN,IDX,FOUND
"RTN","ORWPCE2",94,0)
 S IDX=0
"RTN","ORWPCE2",95,0)
 F  S IDX=$O(ORLIST(IDX)) Q:'+IDX  D
"RTN","ORWPCE2",96,0)
 . S FOUND=0
"RTN","ORWPCE2",97,0)
 . S IEN=$$FIND1^DIC(811.1,"","QX",ORLIST(IDX))
"RTN","ORWPCE2",98,0)
 . I +IEN S FOUND=+$$GET1^DIQ(811.1,IEN,.05,"I")
"RTN","ORWPCE2",99,0)
 . S ORY(IDX)=ORLIST(IDX)_"="_FOUND
"RTN","ORWPCE2",100,0)
 Q
"RTN","ORWPCE2",101,0)
ASKPCE(ORY,USER,LOC) ; Returns ORWPCE ASK ENCOUNTER UPDATE parameter value
"RTN","ORWPCE2",102,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",103,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",104,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",105,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE ASK ENCOUNTER UPDATE","Q",.ORERR)
"RTN","ORWPCE2",106,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",107,0)
 Q
"RTN","ORWPCE2",108,0)
GAFURL(URL) ;Returns the MH GAF Web Page URL
"RTN","ORWPCE2",109,0)
 S URL=""
"RTN","ORWPCE2",110,0)
 I $T(GAFURL^YTAPI5)'="" D
"RTN","ORWPCE2",111,0)
 .N ORY
"RTN","ORWPCE2",112,0)
 .D GAFURL^YTAPI5(.ORY)
"RTN","ORWPCE2",113,0)
 .I $G(ORY(1))="[DATA]" S URL=$G(ORY(2))
"RTN","ORWPCE2",114,0)
 Q
"RTN","ORWPCE2",115,0)
MHTESTOK(ORY) ; Returns True if all supporting MH Test APIs exist
"RTN","ORWPCE2",116,0)
 D GAFOK(.ORY)
"RTN","ORWPCE2",117,0)
 I +ORY,+$G(DUZ),$T(SAVEIT^YTAPI1)'="",$T(PREVIEW^YTAPI4)'="",$T(SHOWALL^YTAPI3)'="",$T(LISTONE^YTAPI)'="",$T(MHS^PXRMRPCC)'="",$T(MHR^PXRMRPCC)'="",$T(MH^PXRMRPCC)'="" D
"RTN","ORWPCE2",118,0)
 . N SRV
"RTN","ORWPCE2",119,0)
 . S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",120,0)
 . S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM MENTAL HEALTH ACTIVE",1,"Q")
"RTN","ORWPCE2",121,0)
 . I +ORY S ORY=1
"RTN","ORWPCE2",122,0)
 Q
"RTN","ORWPCE2",123,0)
MHATHRZD(ORY,TEST,USER) ;Indicates that user can score test
"RTN","ORWPCE2",124,0)
 N ORYS,ORANS
"RTN","ORWPCE2",125,0)
 I $T(PRIVL^YTAPI5)="" S ORY=1 Q
"RTN","ORWPCE2",126,0)
 S ORY=0
"RTN","ORWPCE2",127,0)
 S ORYS("CODE")=TEST
"RTN","ORWPCE2",128,0)
 S ORYS("STAFF")=USER
"RTN","ORWPCE2",129,0)
 D PRIVL^YTAPI5(.ORANS,.ORYS)
"RTN","ORWPCE2",130,0)
 I $G(ORANS(1))="[DATA]" S ORY=+$P($G(ORANS(2)),U,1)
"RTN","ORWPCE2",131,0)
 Q
"RTN","ORWPCE2",132,0)
ANYTIME(ORY) ;Returns status of the ORWPCE ANYTIME ENCOUNTERS parameter
"RTN","ORWPCE2",133,0)
 N SRV
"RTN","ORWPCE2",134,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",135,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE ANYTIME ENCOUNTERS",1,"Q")
"RTN","ORWPCE2",136,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",137,0)
 Q
"RTN","ORWPCE2",138,0)
AUTOVSIT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",139,0)
 N SRV
"RTN","ORWPCE2",140,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",141,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO VISIT TYPE",1,"Q")
"RTN","ORWPCE2",142,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",143,0)
 S ORY='ORY
"RTN","ORWPCE2",144,0)
 Q
"RTN","ORWPCE2",145,0)
DOCHKOUT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",146,0)
 N SRV
"RTN","ORWPCE2",147,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",148,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO CHECKOUT",1,"Q")
"RTN","ORWPCE2",149,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",150,0)
 S ORY='ORY
"RTN","ORWPCE2",151,0)
 Q
"RTN","ORWPCE2",152,0)
CHKOUT(LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",153,0)
 N ORY
"RTN","ORWPCE2",154,0)
 D DOCHKOUT(.ORY,LOC)
"RTN","ORWPCE2",155,0)
 Q ORY
"RTN","ORWPCE2",156,0)
EXCLUDED(ORY,LOC,TYPE) ; Returns list of excluded PCE data elements
"RTN","ORWPCE2",157,0)
 N SRV,PARAM
"RTN","ORWPCE2",158,0)
 S PARAM=$S(TYPE=1:"IMMUNIZATIONS",TYPE=2:"SKIN TESTS",TYPE=3:"PATIENT ED",TYPE=4:"HEALTH FACTORS",TYPE=5:"EXAMS",1:"")
"RTN","ORWPCE2",159,0)
 Q:PARAM=""
"RTN","ORWPCE2",160,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",161,0)
 S PARAM="ORWPCE EXCLUDE "_PARAM
"RTN","ORWPCE2",162,0)
 D GETLST^XPAR(.ORY,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG",PARAM,"Q",.ORERR)
"RTN","ORWPCE2",163,0)
 Q
"RTN","ORWPCE2",164,0)
ISCLINIC(ORY,ORLOC) ; Returns TRUE if location is a clinic
"RTN","ORWPCE2",165,0)
 N ORTYP
"RTN","ORWPCE2",166,0)
 S ORY=0
"RTN","ORWPCE2",167,0)
 S ORTYP=$$GET1^DIQ(44,+ORLOC,2,"I")
"RTN","ORWPCE2",168,0)
 I (ORTYP="C")!(ORTYP="M") S ORY=1
"RTN","ORWPCE2",169,0)
 Q
"RTN","ORWPCE2",170,0)
HNCOK(ORY) ; Returns true if Head and/or Neck Cancer is enabled
"RTN","ORWPCE2",171,0)
 S ORY=0
"RTN","ORWPCE2",172,0)
 I $$PATCH^XPDUTL("DG*5.3*397"),$$PATCH^XPDUTL("SD*5.3*244"),$$PATCH^XPDUTL("PX*1.0*111"),$$PATCH^XPDUTL("IVM*2.0*46") S ORY=1
"RTN","ORWPCE2",173,0)
 Q
"RTN","ORWPCE2",174,0)
 ;
"RTN","ORWPCE2",175,0)
CODACTIV(ORY,ORCODE,ORAPP,ORDATE)       ; Is code active on the given date?
"RTN","ORWPCE2",176,0)
 ; Remote procedure:  ORWPCE ACTIVE CODE
"RTN","ORWPCE2",177,0)
 ; ORCODE = ICD or CPT code to be checked
"RTN","ORWPCE2",178,0)
 ; ORAPP  = "ICD", "GMPX" or "CHP"
"RTN","ORWPCE2",179,0)
 ; ORDATE = Date to be checked (defaults to current date)
"RTN","ORWPCE2",180,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE2",181,0)
 S ORY=1
"RTN","ORWPCE2",182,0)
 I ORAPP="ICD" D  I 1
"RTN","ORWPCE2",183,0)
 . N ORI F ORI=1:1:$L(ORCODE,"/") S ORY=+$$STATCHK^ICDAPIU($P(ORCODE,"/",ORI),ORDATE) Q:'ORY
"RTN","ORWPCE2",184,0)
 I ORAPP="GMPX" D  I 1
"RTN","ORWPCE2",185,0)
 . N LEX
"RTN","ORWPCE2",186,0)
 . S ORY=+$$STATCHK^LEXSRC2(ORCODE,ORDATE,.LEX)
"RTN","ORWPCE2",187,0)
 E  I ORAPP="CHP" D
"RTN","ORWPCE2",188,0)
 . S ORY=+$$STATCHK^ICPTAPIU(ORCODE,ORDATE)
"RTN","ORWPCE2",189,0)
 Q
"RTN","ORWPCE2",190,0)
ICDACTIV(ORCODE,ORDATE) ; Check for active ICD code
"RTN","ORWPCE2",191,0)
 D CODACTIV(.ORY,ORCODE,"ICD",$G(ORDATE))
"RTN","ORWPCE2",192,0)
 Q +ORY
"RTN","ORWPCE2",193,0)
CPTACTIV(ORCODE,ORDATE) ; Check for active CPT code
"RTN","ORWPCE2",194,0)
 D CODACTIV(.ORY,ORCODE,"CHP",$G(ORDATE))
"RTN","ORWPCE2",195,0)
 Q +ORY
"RTN","ORWPCE2",196,0)
CXNOSHOW(ORY,ORDOCIEN) ; Should workload requirement be skipped for this note's visit?
"RTN","ORWPCE2",197,0)
 ; RETURN VALUE:  0=SKIP ALL GUI WORKLOAD REQUIREMENTS
"RTN","ORWPCE2",198,0)
 ;                1=CONTINUE WITH OTHER GUI WORKLOAD LOGIC
"RTN","ORWPCE2",199,0)
 N ORTIU
"RTN","ORWPCE2",200,0)
 D DOCPARM^TIUSRVP1(.ORTIU,ORDOCIEN)          ; DBIA #4331
"RTN","ORWPCE2",201,0)
 S ORY=+$$CHKWKL^TIUPXAP2(ORDOCIEN,ORTIU(0))  ; DBIA #4332
"RTN","ORWPCE2",202,0)
 Q
"RTN","ORWPCE3")
0^11^B55452326
"RTN","ORWPCE3",1,0)
ORWPCE3 ; SLC/KCM/REV/JM/TC - Get a PCE encounter for a TIU document ;12/30/11  12:55
"RTN","ORWPCE3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,190,280,306**;Dec 17, 1997;Build 43
"RTN","ORWPCE3",3,0)
 Q
"RTN","ORWPCE3",4,0)
PCE4NOTE(LST,IEN,DFN,VSITSTR) ; Return encounter for an associated note
"RTN","ORWPCE3",5,0)
 ; LST(1)=HDR^AllowEdit^CPTRequired^VStr^Author^hasCPT
"RTN","ORWPCE3",6,0)
 ; LST(n)=TYP+^CODE^CAT^NARR^QUAL1^QUAL2 (QUAL1=Primary!Qty, QUAL2=Prv)
"RTN","ORWPCE3",7,0)
 N VISIT,VSTR,ILST,LOC,CODE,PRIM,QTY,CAT,NARR,PRV,X0,X12,X802,X811,VTYP
"RTN","ORWPCE3",8,0)
 N IPOV,ICPT,IPRV,IIMM,ISK,IPED,IHF,IXAM,ITRT,ICOM,MIDX,MIEN,MCNT,MODS
"RTN","ORWPCE3",9,0)
 I +$G(IEN)<1 D  I 1 ; Get PCE Data on a new note not yet saved
"RTN","ORWPCE3",10,0)
 . S (X0,X12)=""
"RTN","ORWPCE3",11,0)
 . S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE3",12,0)
 . S VSTR=VSITSTR
"RTN","ORWPCE3",13,0)
 E  D
"RTN","ORWPCE3",14,0)
 . S X0=^TIU(8925,IEN,0),X12=$G(^(12))
"RTN","ORWPCE3",15,0)
 . S VISIT=$P(X12,U,7)
"RTN","ORWPCE3",16,0)
 . I 'VISIT S VISIT=$P(X0,U,3)
"RTN","ORWPCE3",17,0)
 . D NOTEVSTR^ORWPCE(.VSTR,IEN)
"RTN","ORWPCE3",18,0)
 S VTYP=$P(VSTR,";",3)
"RTN","ORWPCE3",19,0)
 S ILST=1
"RTN","ORWPCE3",20,0)
 S ICOM=0
"RTN","ORWPCE3",21,0)
 S LST(1)="HDR"_U_("HID"[VTYP)_U_$P(X0,U,11)_U_VSTR_U_$P(X12,U,2)
"RTN","ORWPCE3",22,0)
 ;add hasCPT node
"RTN","ORWPCE3",23,0)
 S LST(1)=LST(1)_U_0
"RTN","ORWPCE3",24,0)
 I VISIT'>0 D  Q
"RTN","ORWPCE3",25,0)
 . I $G(VSTR)'="" M LST=^TMP("ORWPCE",$J,VSTR)  ; get cached visit data
"RTN","ORWPCE3",26,0)
 I $P(LST(1),U,2),VTYP="H" Q                    ; quit if admission
"RTN","ORWPCE3",27,0)
 K ^TMP("PXKENC",$J)
"RTN","ORWPCE3",28,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ORWPCE3",29,0)
 I '$D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0)) Q
"RTN","ORWPCE3",30,0)
 S $P(LST(1),U,6)=$D(^TMP("PXKENC",$J,VISIT,"CPT"))\10
"RTN","ORWPCE3",31,0)
 S X0=^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),LOC=+$P(X0,U,22)
"RTN","ORWPCE3",32,0)
 S ILST=ILST+1,LST(ILST)="VST^DT^"_$P(X0,U)
"RTN","ORWPCE3",33,0)
 S ILST=ILST+1,LST(ILST)="VST^PT^"_$P(X0,U,5)
"RTN","ORWPCE3",34,0)
 S ILST=ILST+1,LST(ILST)="VST^HL^"_LOC_"^^"_$P($G(^SC(LOC,0)),U)
"RTN","ORWPCE3",35,0)
 S ILST=ILST+1,LST(ILST)="VST^PS^0"  ;outpt
"RTN","ORWPCE3",36,0)
 ;S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800))
"RTN","ORWPCE3",37,0)
 N VAL
"RTN","ORWPCE3",38,0)
 D SCSEL^ORWPCE(.VAL,$P(X0,U,5),$P(X0,U),LOC,VISIT)
"RTN","ORWPCE3",39,0)
 S ILST=ILST+1,LST(ILST)="VST^SC^"_$P($P(VAL,";",1),U,2)
"RTN","ORWPCE3",40,0)
 S ILST=ILST+1,LST(ILST)="VST^AO^"_$P($P(VAL,";",2),U,2)
"RTN","ORWPCE3",41,0)
 S ILST=ILST+1,LST(ILST)="VST^IR^"_$P($P(VAL,";",3),U,2)
"RTN","ORWPCE3",42,0)
 S ILST=ILST+1,LST(ILST)="VST^EC^"_$P($P(VAL,";",4),U,2)
"RTN","ORWPCE3",43,0)
 S ILST=ILST+1,LST(ILST)="VST^MST^"_$P($P(VAL,";",5),U,2)
"RTN","ORWPCE3",44,0)
 I $P(VAL,";",6)'="" D
"RTN","ORWPCE3",45,0)
 .S ILST=ILST+1,LST(ILST)="VST^HNC^"_$P($P(VAL,";",6),U,2)
"RTN","ORWPCE3",46,0)
 I $P(VAL,";",7)'="" D
"RTN","ORWPCE3",47,0)
 .S ILST=ILST+1,LST(ILST)="VST^CV^"_$P($P(VAL,";",7),U,2)
"RTN","ORWPCE3",48,0)
 ;for provider
"RTN","ORWPCE3",49,0)
 ; LST(n)="PRV"^ien^^^name^primary/secondary flag
"RTN","ORWPCE3",50,0)
 S IPRV=0 F  S IPRV=$O(^TMP("PXKENC",$J,VISIT,"PRV",IPRV)) Q:'IPRV  D
"RTN","ORWPCE3",51,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PRV",IPRV,0)
"RTN","ORWPCE3",52,0)
 . ;Q:$P(X0,U,4)'="P"
"RTN","ORWPCE3",53,0)
 . S CODE=$P(X0,U),NARR=$P($G(^VA(200,CODE,0)),U)
"RTN","ORWPCE3",54,0)
 . S PRIM=($P(X0,U,4)="P")
"RTN","ORWPCE3",55,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",56,0)
 . S LST(ILST)="PRV"_U_CODE_"^^^"_NARR_"^"_PRIM
"RTN","ORWPCE3",57,0)
 S IPOV=0 F  S IPOV=$O(^TMP("PXKENC",$J,VISIT,"POV",IPOV)) Q:'IPOV  D
"RTN","ORWPCE3",58,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"POV",IPOV,0),X802=$G(^(802)),X811=$G(^(811))
"RTN","ORWPCE3",59,0)
 . S CODE=$P(X0,U),NARR=$P(X0,U,4)
"RTN","ORWPCE3",60,0)
 . I CODE D
"RTN","ORWPCE3",61,0)
 . . S CODE=$P($$ICDDX^ICDCODE(CODE),U,2)
"RTN","ORWPCE3",62,0)
 . . S NARR=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",63,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",64,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",65,0)
 . S PRIM=($P(X0,U,12)="P")
"RTN","ORWPCE3",66,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",67,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",68,0)
 . S LST(ILST)="POV"_U_CODE_U_CAT_U_NARR_U_PRIM_U_PRV
"RTN","ORWPCE3",69,0)
 . I X811]"" D
"RTN","ORWPCE3",70,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",71,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",72,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",73,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",74,0)
 S ICPT=0 F  S ICPT=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT)) Q:'ICPT  D
"RTN","ORWPCE3",75,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"CPT",ICPT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",76,0)
 . S CODE=$$CODEC^ICPTCOD($P(X0,U)) ;ICR #1995
"RTN","ORWPCE3",77,0)
 . S:CODE=-1 CODE=""
"RTN","ORWPCE3",78,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",79,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",80,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",81,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",82,0)
 . S QTY=$P(X0,U,16)
"RTN","ORWPCE3",83,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",84,0)
 . S MCNT=0,MIDX=0,MODS=""
"RTN","ORWPCE3",85,0)
 . F  S MIDX=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX)) Q:'MIDX  D
"RTN","ORWPCE3",86,0)
 . . S MIEN=$G(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX,0))
"RTN","ORWPCE3",87,0)
 . . I +MIEN S MCNT=MCNT+1,MODS=MODS_";/"_MIEN
"RTN","ORWPCE3",88,0)
 . I +MCNT S MODS=MCNT_MODS
"RTN","ORWPCE3",89,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",90,0)
 . S LST(ILST)="CPT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_U_U_MODS
"RTN","ORWPCE3",91,0)
 . I X811]"" D
"RTN","ORWPCE3",92,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",93,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",94,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",95,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",96,0)
 ;for immunization:
"RTN","ORWPCE3",97,0)
 ; LST(n)="IMM"^Code^^^Series^prv^Reaction^Contraindicated^Refused
"RTN","ORWPCE3",98,0)
 S IIMM=0 F  S IIMM=$O(^TMP("PXKENC",$J,VISIT,"IMM",IIMM)) Q:'IIMM  D
"RTN","ORWPCE3",99,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"IMM",IIMM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",100,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",101,0)
 . S:CODE NARR=$P(^AUTTIMM(CODE,0),U)
"RTN","ORWPCE3",102,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",103,0)
 . S CAT=""
"RTN","ORWPCE3",104,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",105,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",106,0)
 . S LST(ILST)="IMM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",107,0)
 . I X811]"" D
"RTN","ORWPCE3",108,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",109,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",110,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",111,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",112,0)
 ;for skin test:
"RTN","ORWPCE3",113,0)
 ; LST(n)="SK"^Code^^^result^prv^reading^d/t read^d/t given
"RTN","ORWPCE3",114,0)
 S ISK=0 F  S ISK=$O(^TMP("PXKENC",$J,VISIT,"SK",ISK)) Q:'ISK  D
"RTN","ORWPCE3",115,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"SK",ISK,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",116,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",117,0)
 . S:CODE NARR=$P(^AUTTSK(CODE,0),U)
"RTN","ORWPCE3",118,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",119,0)
 . S CAT=""
"RTN","ORWPCE3",120,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",121,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",122,0)
 . S LST(ILST)="SK"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,5,6)_U_$P(X12,U)
"RTN","ORWPCE3",123,0)
 . I X811]"" D
"RTN","ORWPCE3",124,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",125,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",126,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",127,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",128,0)
 ;for patient education:
"RTN","ORWPCE3",129,0)
 ; LST(n)="PED"^Code^^^level of understanding^prv
"RTN","ORWPCE3",130,0)
 S IPED=0 F  S IPED=$O(^TMP("PXKENC",$J,VISIT,"PED",IPED)) Q:'IPED  D
"RTN","ORWPCE3",131,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PED",IPED,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",132,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",133,0)
 . S:CODE NARR=$P(^AUTTEDT(CODE,0),U)
"RTN","ORWPCE3",134,0)
 . S QTY=$P(X0,U,6)
"RTN","ORWPCE3",135,0)
 . S CAT=""
"RTN","ORWPCE3",136,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",137,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",138,0)
 . S LST(ILST)="PED"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",139,0)
 . I X811]"" D
"RTN","ORWPCE3",140,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",141,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",142,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",143,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",144,0)
 ;for health factors:
"RTN","ORWPCE3",145,0)
 ; LST(n)="HF"^Code^^^level/severity^prv
"RTN","ORWPCE3",146,0)
 S IHF=0 F  S IHF=$O(^TMP("PXKENC",$J,VISIT,"HF",IHF)) Q:'IHF  D
"RTN","ORWPCE3",147,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"HF",IHF,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",148,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",149,0)
 . S:CODE NARR=$P(^AUTTHF(CODE,0),U)
"RTN","ORWPCE3",150,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",151,0)
 . S CAT=""
"RTN","ORWPCE3",152,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",153,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",154,0)
 . S LST(ILST)="HF"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",155,0)
 . I X811]"" D
"RTN","ORWPCE3",156,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",157,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",158,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",159,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",160,0)
 ;for exam:
"RTN","ORWPCE3",161,0)
 ; LST(n)="XAM"^Code^^^result^prv
"RTN","ORWPCE3",162,0)
 S IXAM=0 F  S IXAM=$O(^TMP("PXKENC",$J,VISIT,"XAM",IXAM)) Q:'IXAM  D
"RTN","ORWPCE3",163,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"XAM",IXAM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",164,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",165,0)
 . S:CODE NARR=$P(^AUTTEXAM(CODE,0),U)
"RTN","ORWPCE3",166,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",167,0)
 . S CAT=""
"RTN","ORWPCE3",168,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",169,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",170,0)
 . S LST(ILST)="XAM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",171,0)
 . I X811]"" D
"RTN","ORWPCE3",172,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",173,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",174,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",175,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",176,0)
 ;for treatment:
"RTN","ORWPCE3",177,0)
 ; LST(n)="TRT"^Code^CAT^NARR^QTY^prv
"RTN","ORWPCE3",178,0)
 S ITRT=0 F  S ITRT=$O(^TMP("PXKENC",$J,VISIT,"TRT",ITRT)) Q:'ITRT  D
"RTN","ORWPCE3",179,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"TRT",ITRT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",180,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",181,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",182,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",183,0)
 . S NARR=$P(X0,U,6)
"RTN","ORWPCE3",184,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",185,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",186,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",187,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",188,0)
 . S LST(ILST)="TRT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",189,0)
 . I X811]"" D
"RTN","ORWPCE3",190,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",191,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",192,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",193,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",194,0)
 Q
"RTN","ORWPCE3",195,0)
GETDXTXT(ORY,NARR,CODE) ; RPC to resolve Dx Text for PCE view
"RTN","ORWPCE3",196,0)
 S ORY=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",197,0)
 Q
"RTN","ORWPCE3",198,0)
SETNARR(NARR,CODE) ; Set narrative string
"RTN","ORWPCE3",199,0)
 N I
"RTN","ORWPCE3",200,0)
 S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",201,0)
 ;S:(ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD)) NARR=$P(NARR," (")_" - "_ICDD_" - "_$S(NARR[" (":" (",1:"")_$P(NARR," (",2)
"RTN","ORWPCE3",202,0)
 ;S:NARR'[CODE NARR=$S(NARR["(SCT":$P(NARR,")")_", ",1:NARR_" (")_"ICD-9-CM "_CODE_")"
"RTN","ORWPCE3",203,0)
 I NARR["(SNOMED CT" S NARR=$P(NARR,"(")_"(SCT"_$P($P(NARR,")"),"(SNOMED CT",2)_")"
"RTN","ORWPCE3",204,0)
 E  I NARR["SNOMED CT" S NARR=$P(NARR,"SNOMED CT")_"(SCT"_$P($P(NARR,":"),"SNOMED CT",2)_")"
"RTN","ORWPCE3",205,0)
 I CODE["/" F I=1:1:$L(CODE,"/") D
"RTN","ORWPCE3",206,0)
 . N ICDC,ICDD S ICDC=$P(CODE,"/",I),ICDD=$$ICDDESC(ICDC)
"RTN","ORWPCE3",207,0)
 . S:(NARR'[ICDC)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" (ICD-9-CM "_ICDC_")"
"RTN","ORWPCE3",208,0)
 E  D
"RTN","ORWPCE3",209,0)
 . N ICDD S ICDD=$$ICDDESC(CODE)
"RTN","ORWPCE3",210,0)
 . S:(NARR'[CODE)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" (ICD-9-CM "_CODE_")"
"RTN","ORWPCE3",211,0)
 Q NARR
"RTN","ORWPCE3",212,0)
ICDDESC(ORCODE,ORDT) ; Get description for ICD9 Code
"RTN","ORWPCE3",213,0)
 N ICDD,ORY,ICDY S ORY="",ORDT=$G(ORDT,DT)
"RTN","ORWPCE3",214,0)
 S ICDY=$$ICDD^ICDCODE(ORCODE,"ICDD",ORDT)
"RTN","ORWPCE3",215,0)
 I 'ICDY G ICDDESQ
"RTN","ORWPCE3",216,0)
 S ORY=$$SENTENCE^XLFSTR($G(ICDD(1)))
"RTN","ORWPCE3",217,0)
ICDDESQ Q ORY
"RTN","ORWPCE4")
0^51^B12891193
"RTN","ORWPCE4",1,0)
ORWPCE4 ; SLC/JM/REV - wrap calls to PCE and AICS ;02/05/13  17:00
"RTN","ORWPCE4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190,195,215,243,295,280,306**;Dec 17, 1997;Build 43
"RTN","ORWPCE4",3,0)
 ;
"RTN","ORWPCE4",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORWPCE4",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORWPCE4",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE4",7,0)
 ; DBIA 3991   $$STATCHK^ICDAPIU
"RTN","ORWPCE4",8,0)
 ;
"RTN","ORWPCE4",9,0)
 Q
"RTN","ORWPCE4",10,0)
LEX(LST,X,APP,ORDATE,ORXTND) ; return list after lexicon lookup
"RTN","ORWPCE4",11,0)
 N LEX,ILST,I,IEN
"RTN","ORWPCE4",12,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE4",13,0)
 I APP="ICD",'+$G(ORXTND) S APP=$S($E(X,1,3)?.1A2.3N:"ICD",1:"GMPX")
"RTN","ORWPCE4",14,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE4",15,0)
 ; call CONFIG^LEXSET to set-up the constraints of the Lexicon search
"RTN","ORWPCE4",16,0)
 D CONFIG^LEXSET(APP,$S(APP="GMPX":"PLS",1:APP),ORDATE)  ;DBIA 1609
"RTN","ORWPCE4",17,0)
 I APP="CHP" D
"RTN","ORWPCE4",18,0)
 . ; Set the filter for CPT only using CS APIs - format is the same as for DIC("S")
"RTN","ORWPCE4",19,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)="I $L($$CPTONE^LEXU(+Y,$G(ORDATE)))!($L($$CPCONE^LEXU(+Y,$G(ORDATE))))"  ;DBIA 1609
"RTN","ORWPCE4",20,0)
 . ; Set Applications Default Flag (Lexicon can not overwrite filter)
"RTN","ORWPCE4",21,0)
 . S ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","ORWPCE4",22,0)
 ; call LOOK^LEXA to execute the search as defined by the call to CONFIG^LEXSET
"RTN","ORWPCE4",23,0)
 D LOOK^LEXA(X,,1,,ORDATE)
"RTN","ORWPCE4",24,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORWPCE4",25,0)
 . S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE4",26,0)
 S ILST=0
"RTN","ORWPCE4",27,0)
 S LEX("LIST",1)=$$LEXXFRM(LEX("LIST",1),ORDATE,APP)
"RTN","ORWPCE4",28,0)
 I $S(APP="GMPX":1,APP="ICD":1,1:0) D  I 1
"RTN","ORWPCE4",29,0)
 . I APP="ICD",($E($P(LEX("LIST",1),U,3),1,3)'="ICD") Q
"RTN","ORWPCE4",30,0)
 . I APP="GMPX",$S($P(LEX("LIST",1),U,6)="799.9":1,$P(LEX("LIST",1),U,6)="":1,1:0) Q
"RTN","ORWPCE4",31,0)
 . S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE4",32,0)
 E  S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE4",33,0)
 S (I,IEN)=""
"RTN","ORWPCE4",34,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORWPCE4",35,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORWPCE4",36,0)
 ..N TXT,ELEMENT S TXT=^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE4",37,0)
 ..S ELEMENT=IEN_U_TXT
"RTN","ORWPCE4",38,0)
 ..S ELEMENT=$$LEXXFRM(ELEMENT,ORDATE,APP)
"RTN","ORWPCE4",39,0)
 ..I APP="ICD",($E($P(ELEMENT,U,3),1,3)'="ICD") Q
"RTN","ORWPCE4",40,0)
 ..I APP="GMPX",$S($P(ELEMENT,U,6)="799.9":1,$P(ELEMENT,U,6)="":1,1:0) Q
"RTN","ORWPCE4",41,0)
 ..S ILST=ILST+1,LST(ILST)=ELEMENT
"RTN","ORWPCE4",42,0)
 I '$D(LST(1)) S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE4",43,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORWPCE4",44,0)
 Q
"RTN","ORWPCE4",45,0)
LEXXFRM(ORX,ORDATE,ORAPP) ; Transform text for SCT look-up
"RTN","ORWPCE4",46,0)
 N ORLEX,ORY,ORICD,ORSCT,ORTXT,ORCODSYS,ORCODE,ORIMPDT
"RTN","ORWPCE4",47,0)
 S ORIMPDT=$S($L($T(IMPDATE^LEXU)):$$IMPDATE^LEXU("10D"),1:0)
"RTN","ORWPCE4",48,0)
 S ORLEX=$P(ORX,U),ORTXT=$P(ORX,U,2),(ORCODE,ORCODSYS)=""
"RTN","ORWPCE4",49,0)
 I (ORTXT["("),(ORTXT[")") D
"RTN","ORWPCE4",50,0)
 . S ORCODSYS=$RE($P($P($RE(ORTXT),"("),")",2))
"RTN","ORWPCE4",51,0)
 . S ORCODE=$RE($P($RE(ORCODSYS)," ")),ORCODSYS=$RE($P($RE(ORCODSYS)," ",2,99))
"RTN","ORWPCE4",52,0)
 . S ORTXT=$$TRIM^XLFSTR($RE($P($RE(ORTXT),"(",2,99)))
"RTN","ORWPCE4",53,0)
 I $S(ORCODSYS="SNOMED CT":0,ORCODSYS="VHAT":0,ORCODSYS["ICD":0,ORCODSYS["CPT":0,ORCODSYS["HCPCS":0,1:1) D
"RTN","ORWPCE4",54,0)
 . N LEXVAL
"RTN","ORWPCE4",55,0)
 . D LEXCODE(.LEXVAL,ORLEX,ORAPP,ORDATE)
"RTN","ORWPCE4",56,0)
 . I $L(LEXVAL,U)=2 S ORCODE=$P(LEXVAL,U),ORCODSYS=$P(LEXVAL,U,2)
"RTN","ORWPCE4",57,0)
 S ORY=ORLEX_U_ORTXT_U_ORCODSYS_U_ORCODE
"RTN","ORWPCE4",58,0)
 I (ORCODSYS["SNOMED")!(ORCODSYS["VHAT") D
"RTN","ORWPCE4",59,0)
 .S ORY=ORY_U_$S(ORIMPDT=0:"ICD-9-CM",ORDATE<ORIMPDT:"ICD-9-CM",1:"ICD-10-CM")_U_$$GETDX^ORQQPL1(ORCODE,ORCODSYS,ORDATE)
"RTN","ORWPCE4",60,0)
SCTXX Q ORY
"RTN","ORWPCE4",61,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE4",62,0)
 N ORIMPDT
"RTN","ORWPCE4",63,0)
 S ORIMPDT=$S($L($T(IMPDATE^LEXU)):$$IMPDATE^LEXU("10D"),1:0)
"RTN","ORWPCE4",64,0)
 S VAL=""
"RTN","ORWPCE4",65,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE4",66,0)
 I APP="ICD" S VAL=$$ICDONE^LEXU(IEN,ORDATE)_U_$S(ORIMPDT=0:"ICD-9-CM",ORDATE<ORIMPDT:"ICD-9-CM",1:"ICD-10-CM")
"RTN","ORWPCE4",67,0)
 I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE)_U_"CPT-4"
"RTN","ORWPCE4",68,0)
 I $P(VAL,U)="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE)_U_"HCPCS"
"RTN","ORWPCE4",69,0)
 Q
"RTN","ORWPT")
0^20^B63799384
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;04/14/10  10:37
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,149,206,187,190,215,243,280,306**;Dec 17, 1997;Build 43
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
 ; Ref. to ^UTILITY via IA 10061
"RTN","ORWPT",5,0)
 ;
"RTN","ORWPT",6,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",7,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",8,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",9,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",10,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",11,0)
 Q
"RTN","ORWPT",12,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",13,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",14,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",15,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",16,0)
 Q
"RTN","ORWPT",17,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",18,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",19,0)
 D ELIG^VADPT
"RTN","ORWPT",20,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",21,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",22,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",23,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",24,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",25,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",26,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",27,0)
 Q
"RTN","ORWPT",28,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",29,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",30,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",31,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",32,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",33,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",34,0)
 Q
"RTN","ORWPT",35,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",36,0)
 ; SENSITIVE
"RTN","ORWPT",37,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",38,0)
 Q
"RTN","ORWPT",39,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",40,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",41,0)
 Q
"RTN","ORWPT",42,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",43,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",44,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",45,0)
 ; 13  14  15  16  17
"RTN","ORWPT",46,0)
 ; SC%^ICN^AGE^TS^TSSVC
"RTN","ORWPT",47,0)
 ;
"RTN","ORWPT",48,0)
 ; for CCOW (RV - 2/27/03)  name="-1", location=error message
"RTN","ORWPT",49,0)
 I '$D(^DPT(+DFN,0)) S REC="-1^^^^^Patient is unknown to CPRS." Q
"RTN","ORWPT",50,0)
 ;
"RTN","ORWPT",51,0)
 N X
"RTN","ORWPT",52,0)
 K ^TMP($J,"OC-OPOS") ; delete once per order session order checks
"RTN","ORWPT",53,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",54,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",55,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",56,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",57,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",58,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",59,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",60,0)
 S $P(REC,U,11)=0
"RTN","ORWPT",61,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",62,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",63,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",64,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",65,0)
 I +$P(REC,U,16)>0 D
"RTN","ORWPT",66,0)
 . N X,Y,Z
"RTN","ORWPT",67,0)
 . S (X,Y)=""
"RTN","ORWPT",68,0)
 . S X=$$TSDATA^DGACT(45.7,+$P(REC,U,16),.Y,"")
"RTN","ORWPT",69,0)
 . I +X,+$P($G(Y(2)),U,1)>0 S (X,Z)="" S X=$$TSDATA^DGACT(42.4,+$P($G(Y(2)),U,1),.Z,"")
"RTN","ORWPT",70,0)
 . I +X S $P(REC,U,17)=$P($G(Z(3)),U,1) ; treating  specialty service
"RTN","ORWPT",71,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",72,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",73,0)
 Q
"RTN","ORWPT",74,0)
SHARE(VAL,IP,HWND,DFN) ; Set global to share DFN with other applications
"RTN","ORWPT",75,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",76,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",77,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",78,0)
 Q
"RTN","ORWPT",79,0)
BYWARD(LST,WARD) ; Return a list of patients in a ward
"RTN","ORWPT",80,0)
 N ILST,DFN
"RTN","ORWPT",81,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",82,0)
 S (ILST,DFN)=0
"RTN","ORWPT",83,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",84,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",85,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",86,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",87,0)
 Q
"RTN","ORWPT",88,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",89,0)
 N I,IEN,XREF
"RTN","ORWPT",90,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",91,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",92,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",93,0)
 Q
"RTN","ORWPT",94,0)
 ;
"RTN","ORWPT",95,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",96,0)
 N ORRPL,ORCNT,ORPT,ORPIEN
"RTN","ORWPT",97,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",98,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",99,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",100,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",101,0)
 ;
"RTN","ORWPT",102,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",103,0)
 F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",104,0)
 .S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0))
"RTN","ORWPT",105,0)
 .I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",106,0)
 .S ORCNT=ORCNT+1
"RTN","ORWPT",107,0)
 .S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",108,0)
 ;
"RTN","ORWPT",109,0)
 Q
"RTN","ORWPT",110,0)
 ;
"RTN","ORWPT",111,0)
FULLSSN(LST,ID) ; Return a list of patients matching full SSN entered
"RTN","ORWPT",112,0)
 N I,IEN
"RTN","ORWPT",113,0)
 S (I,IEN)=0
"RTN","ORWPT",114,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",115,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",116,0)
 Q
"RTN","ORWPT",117,0)
 ;
"RTN","ORWPT",118,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",119,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",120,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",121,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",122,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",123,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",124,0)
 ;
"RTN","ORWPT",125,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",126,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",127,0)
 .S ORLPT=0
"RTN","ORWPT",128,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",129,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",130,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",131,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",132,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",133,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",134,0)
 ;
"RTN","ORWPT",135,0)
 Q
"RTN","ORWPT",136,0)
 ;
"RTN","ORWPT",137,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",138,0)
 N IEN
"RTN","ORWPT",139,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",140,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",141,0)
 Q
"RTN","ORWPT",142,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",143,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",144,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",145,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",146,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",147,0)
 Q
"RTN","ORWPT",148,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names.  From is either Name or IEN^Name.
"RTN","ORWPT",149,0)
 N I,IEN,CNT,FROMIEN,ORIDNAME S CNT=44,I=0,FROMIEN=0
"RTN","ORWPT",150,0)
 I $P(FROM,U,2)'="" S FROMIEN=$P(FROM,U,1),FROM=$O(^DPT("B",$P(FROM,U,2)),-DIR)
"RTN","ORWPT",151,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",152,0)
 . S IEN=FROMIEN,FROMIEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",153,0)
 . . S ORIDNAME=""
"RTN","ORWPT",154,0)
 . . S ORIDNAME=$G(^DPT(IEN,0)) ; Get zero node name.
"RTN","ORWPT",155,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",156,0)
 . . S I=I+1 S Y(I)=IEN_U_FROM_U_U_U_U_$P(ORIDNAME,U) ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",157,0)
 Q
"RTN","ORWPT",158,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",159,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",160,0)
 N ERR,ERRMSG,VASD,VAERR K ^UTILITY("VASD",$J)  ;IA 10061
"RTN","ORWPT",161,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",162,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",163,0)
 S VASD("W")="123456789"
"RTN","ORWPT",164,0)
 D SDA^ORQRY01(.ERR,.ERRMSG)
"RTN","ORWPT",165,0)
 I ERR K ^UTILITY("VASD",$J) K LST S LST(1)=ERRMSG Q
"RTN","ORWPT",166,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",167,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",168,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",169,0)
 Q
"RTN","ORWPT",170,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",171,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",172,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",173,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",174,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",175,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",176,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",177,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",178,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",179,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",180,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",181,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",182,0)
 Q
"RTN","ORWPT",183,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",184,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",185,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",186,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",187,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",188,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",189,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",190,0)
 Q
"RTN","ORWPT",191,0)
 ;
"RTN","ORWPT",192,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",193,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",194,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",195,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",196,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",197,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",198,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",199,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",200,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",201,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",202,0)
 Q
"RTN","ORWPT",203,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",204,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",205,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",206,0)
 Q
"RTN","ORWPT",207,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",208,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",209,0)
 ;
"RTN","ORWPT",210,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",211,0)
 N VAIP
"RTN","ORWPT",212,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",213,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",214,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",215,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",216,0)
 Q
"RTN","ORWPT",217,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",218,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",219,0)
 Q
"RTN","ORWPT",220,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",221,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",222,0)
 S ORLST(0)=0
"RTN","ORWPT",223,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",224,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",225,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",226,0)
 Q
"RTN","ORWPT",227,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",228,0)
 N X
"RTN","ORWPT",229,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",230,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",231,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",232,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",233,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",234,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",235,0)
 Q
"RTN","ORWPT",236,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",237,0)
 N END,X
"RTN","ORWPT",238,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",239,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",240,0)
 Q X
"RTN","ORWPT",241,0)
ROK(X) ; Routine OK (in UCI) (NDBI)
"RTN","ORWPT",242,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","ORWPT",243,0)
 ;
"RTN","ORWPT",244,0)
 ;NDBI(X) ; National Database Integration site 1 = yes  0 = no
"RTN","ORWPT",245,0)
 ; N R,G S X="A7RDUP" X ^%ZOSF("TEST") S R=$T,G=$S($D(^A7RCP):1,1:0),X=R+G,X=$S(X=2:1,1:0) Q X
"RTN","ORWPT1")
0^21^B25961923
"RTN","ORWPT1",1,0)
ORWPT1 ; SLC/KCM - Patient Lookup Functions (cont) ;05/09/12  07:23
"RTN","ORWPT1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,109,280,340,306**;Dec 17, 1997;Build 43
"RTN","ORWPT1",3,0)
 ;
"RTN","ORWPT1",4,0)
SAVDFLT ; continued from ORWPT, save new default patient list
"RTN","ORWPT1",5,0)
 N DAY,HOLDX S OK=1
"RTN","ORWPT1",6,0)
 I $P(X,U)="P" D
"RTN","ORWPT1",7,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"P")
"RTN","ORWPT1",8,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT PROVIDER",1,"`"_$P(X,U,2))
"RTN","ORWPT1",9,0)
 I $P(X,U)="T" D
"RTN","ORWPT1",10,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"T")
"RTN","ORWPT1",11,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT TEAM",1,"`"_$P(X,U,2))
"RTN","ORWPT1",12,0)
 I $P(X,U)="S" D
"RTN","ORWPT1",13,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"S")
"RTN","ORWPT1",14,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT SPECIALTY",1,"`"_$P(X,U,2))
"RTN","ORWPT1",15,0)
 I $P(X,U)="C" D
"RTN","ORWPT1",16,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"C")
"RTN","ORWPT1",17,0)
 . F DAY="MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY" D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC "_DAY,1,"`"_$P(X,U,2))
"RTN","ORWPT1",18,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC START DATE",1,$P($P(X,U,3),";"))
"RTN","ORWPT1",19,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC STOP DATE",1,$P($P(X,U,3),";",2))
"RTN","ORWPT1",20,0)
 ; SLC/PKS - 6/25/2001
"RTN","ORWPT1",21,0)
 ; Added section to save clinic defaults for current day only:
"RTN","ORWPT1",22,0)
 I $P(X,U)="CT" D
"RTN","ORWPT1",23,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"C")
"RTN","ORWPT1",24,0)
 . S HOLDX=X
"RTN","ORWPT1",25,0)
 . D NOW^%DTC D DW^%DTC S DAY=X S X=HOLDX
"RTN","ORWPT1",26,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC "_DAY,1,"`"_$P(X,U,2))
"RTN","ORWPT1",27,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC START DATE",1,$P($P(X,U,3),";"))
"RTN","ORWPT1",28,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC STOP DATE",1,$P($P(X,U,3),";",2))
"RTN","ORWPT1",29,0)
 I $P(X,U)="W" D
"RTN","ORWPT1",30,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"W")
"RTN","ORWPT1",31,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT WARD",1,"`"_$P(X,U,2))
"RTN","ORWPT1",32,0)
 I $P(X,U)="A" D DEL^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1)
"RTN","ORWPT1",33,0)
 Q
"RTN","ORWPT1",34,0)
PRCARE(VAL,PATIENT)        ; return Primary Care info
"RTN","ORWPT1",35,0)
 ; VAL=Primary Care Team^Primary Care Provider^Attending^MH Treatment Coordinator^Inpatient Provider
"RTN","ORWPT1",36,0)
 N PCT,PCP,ATT,ASS,MHTC,INPROV
"RTN","ORWPT1",37,0)
 S MHTC=""
"RTN","ORWPT1",38,0)
 S PCT=$P($$OUTPTTM^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",39,0)
 S PCP=$P($$OUTPTPR^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",40,0)
 S ATT=$G(^DPT(PATIENT,.1041)) I ATT S ATT=$P($G(^VA(200,ATT,0)),U)
"RTN","ORWPT1",41,0)
 S ASS=$P($$OUTPTAP^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",42,0)
 S MHTC=$P($$START^SCMCMHTC(PATIENT),U,2)
"RTN","ORWPT1",43,0)
 S INPROV=$G(^DPT(PATIENT,.104)) I INPROV S INPROV=$P($G(^VA(200,INPROV,0)),U)
"RTN","ORWPT1",44,0)
 S VAL=PCT_U_PCP_U_ATT_U_ASS_U_MHTC_U_INPROV
"RTN","ORWPT1",45,0)
 Q
"RTN","ORWPT1",46,0)
PCDETAIL(LST,PATIENT)   ; return Primary Care Detail information
"RTN","ORWPT1",47,0)
 N ILST,X S ILST=0
"RTN","ORWPT1",48,0)
 S X=$$OUTPTTM^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",49,0)
 I +X>0 D
"RTN","ORWPT1",50,0)
 . S ILST=ILST+1,LST(ILST)="        Primary Care Team:  "_$P(X,U,2)
"RTN","ORWPT1",51,0)
 . S ILST=ILST+1,LST(ILST)="                    Phone:  "_$P($G(^SCTM(404.51,+X,0)),U,2)
"RTN","ORWPT1",52,0)
 E  S ILST=ILST+1,LST(ILST)="No Primary Care Team Assigned."
"RTN","ORWPT1",53,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",54,0)
 S X=$$OUTPTPR^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",55,0)
 I +X>0 D
"RTN","ORWPT1",56,0)
 . S ILST=ILST+1,LST(ILST)="    Primary Care Provider:  "_$P(X,U,2)
"RTN","ORWPT1",57,0)
 . S ILST=ILST+1,LST(ILST)="             Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",58,0)
 . S ILST=ILST+1,LST(ILST)="            Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",59,0)
 . S ILST=ILST+1,LST(ILST)="             Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",60,0)
 E  S ILST=ILST+1,LST(ILST)="No Primary Care Provider Assigned."
"RTN","ORWPT1",61,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",62,0)
 S X=$$OUTPTAP^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",63,0)
 I +X>0 D
"RTN","ORWPT1",64,0)
 . S ILST=ILST+1,LST(ILST)="       Associate Provider:  "_$P(X,U,2)
"RTN","ORWPT1",65,0)
 . S ILST=ILST+1,LST(ILST)="             Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",66,0)
 . S ILST=ILST+1,LST(ILST)="            Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",67,0)
 . S ILST=ILST+1,LST(ILST)="             Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",68,0)
 E  S ILST=ILST+1,LST(ILST)="No Associate Provider Assigned."
"RTN","ORWPT1",69,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",70,0)
 I $$INPT(PATIENT) D
"RTN","ORWPT1",71,0)
 . S X=$G(^DPT(PATIENT,.1041))
"RTN","ORWPT1",72,0)
 . I +X D
"RTN","ORWPT1",73,0)
 . . S ILST=ILST+1,LST(ILST)="      Attending Physician:  "_$P($G(^VA(200,+X,0)),U)
"RTN","ORWPT1",74,0)
 . . S ILST=ILST+1,LST(ILST)="             Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",75,0)
 . . S ILST=ILST+1,LST(ILST)="            Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",76,0)
 . . S ILST=ILST+1,LST(ILST)="             Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",77,0)
 . E  S ILST=ILST+1,LST(ILST)="No Attending Physician Assigned."
"RTN","ORWPT1",78,0)
 . S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",79,0)
 . S X=$G(^DPT(PATIENT,.104))
"RTN","ORWPT1",80,0)
 . I +X D
"RTN","ORWPT1",81,0)
 . . S ILST=ILST+1,LST(ILST)="       Inpatient Provider:  "_$P($G(^VA(200,+X,0)),U)
"RTN","ORWPT1",82,0)
 . . S ILST=ILST+1,LST(ILST)="             Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",83,0)
 . . S ILST=ILST+1,LST(ILST)="            Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",84,0)
 . . S ILST=ILST+1,LST(ILST)="             Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",85,0)
 . E  S ILST=ILST+1,LST(ILST)="No Inpatient Provider Assigned."
"RTN","ORWPT1",86,0)
 . S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",87,0)
 S X=0
"RTN","ORWPT1",88,0)
 S X=$$START^SCMCMHTC(PATIENT) ;Retrieve Mental Health Provider
"RTN","ORWPT1",89,0)
 I +X>0 D
"RTN","ORWPT1",90,0)
 . S ILST=ILST+1,LST(ILST)="        MH Treatment Team:  "_$P(X,U,5)
"RTN","ORWPT1",91,0)
 . S ILST=ILST+1,LST(ILST)=" MH Treatment Coordinator:  "_$P(X,U,2)
"RTN","ORWPT1",92,0)
 . S ILST=ILST+1,LST(ILST)="             Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",93,0)
 . S ILST=ILST+1,LST(ILST)="            Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",94,0)
 . S ILST=ILST+1,LST(ILST)="             Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",95,0)
 ;E  S ILST=ILST+1,LST(ILST)="No MH Treatment Coordinator Assigned."
"RTN","ORWPT1",96,0)
 Q
"RTN","ORWPT1",97,0)
INPT(ORDFN) ;check if the patient is an inpatient
"RTN","ORWPT1",98,0)
 N RET S RET=0
"RTN","ORWPT1",99,0)
 I $D(^DPT(ORDFN,.1)) S RET=1
"RTN","ORWPT1",100,0)
 Q RET
"RTN","ORY306")
0^12^B144132481
"RTN","ORY306",1,0)
ORY306 ;ISL/TC,JER - Pre- and Post-install for patch OR*3*306 ;02/15/13  09:34
"RTN","ORY306",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17, 1997;Build 43
"RTN","ORY306",3,0)
 ;
"RTN","ORY306",4,0)
PRE ; Initiate pre-init processes
"RTN","ORY306",5,0)
 D UPDTRPT
"RTN","ORY306",6,0)
 S DIK="^DD(101.52,",DA(1)=101.52,DA=23
"RTN","ORY306",7,0)
 D ^DIK
"RTN","ORY306",8,0)
 Q
"RTN","ORY306",9,0)
 ;
"RTN","ORY306",10,0)
POST ; Initiate post-init processes
"RTN","ORY306",11,0)
 D SETMGS
"RTN","ORY306",12,0)
 D REGRPCS
"RTN","ORY306",13,0)
 ; *** NOTE: Remove DEA Subroutine and Call prior to deployment of I1 ***
"RTN","ORY306",14,0)
 D DEA
"RTN","ORY306",15,0)
 D DLGBULL
"RTN","ORY306",16,0)
 D CONSQO
"RTN","ORY306",17,0)
 D SENDMAIL
"RTN","ORY306",18,0)
 D DELPARAM
"RTN","ORY306",19,0)
 D DELRPC
"RTN","ORY306",20,0)
 D PARAM
"RTN","ORY306",21,0)
 D NOTPARAM
"RTN","ORY306",22,0)
 D QPR^ORY306PR
"RTN","ORY306",23,0)
 D ^ORY306ES
"RTN","ORY306",24,0)
 Q
"RTN","ORY306",25,0)
 ;
"RTN","ORY306",26,0)
UPDTRPT ; Modify PL Clinical Reports in OE/RR REPORTS file (101.24) to support PL Data Standardization
"RTN","ORY306",27,0)
 N I
"RTN","ORY306",28,0)
 F I=1:1:4  D
"RTN","ORY306",29,0)
 .N DIC,DA,X,J,ORIFN
"RTN","ORY306",30,0)
 .S DIC="^ORD(101.24,",DIC(0)="BIXZ"
"RTN","ORY306",31,0)
 .S X=$S(I=1:"ORRPW PROBLEM ACTIVE",I=2:"ORRPW PROBLEM ALL",I=3:"ORRPW DOD PROBLEM LIST ALL",1:"ORRPW PROBLEM INACTIVE")
"RTN","ORY306",32,0)
 .D ^DIC I Y=-1 K DIC Q  ; perform top file level search for record X, if unsuccessful quit
"RTN","ORY306",33,0)
 .S DA(1)=+Y,DIC=DIC_DA(1)_",3,",DIC(0)="LIXZ",ORIFN=DA(1)
"RTN","ORY306",34,0)
 .I ORIFN>1000 D  ; if report is a national standard, then proceed to modify the below X fields in the subfile #101.243
"RTN","ORY306",35,0)
 ..F J=1:1:9  D
"RTN","ORY306",36,0)
 ...N X
"RTN","ORY306",37,0)
 ...S X=$S(J=1:"Date of Onset",J=2:"Date Modified",J=3:"Provider Name    ",J=4:"Note Narrative",J=5:"[+]",J=6:"Exposures",J=7:"SNOMED CT Description",J=8:"Primary ICD-9-CM Code & Description",J=9:"Secondary ICD-9-CM Code & Description")
"RTN","ORY306",38,0)
 ...I J>6 S DIC("DR")=".02///;.03///;.05///;.06///;.07///;.09///"
"RTN","ORY306",39,0)
 ...D ^DIC I Y=-1 K DIC Q  ;perform subfile entry level search for record X, if unsuccessful quit
"RTN","ORY306",40,0)
 ...N DIE,DA,DR,DR1 S DIE=DIC S DA=+Y,DA(1)=ORIFN
"RTN","ORY306",41,0)
 ...I J>6 S DR1=";.02///NO;.05///YES;.06///"_$S(J=7:"18",J=8:"10",J=9:"20")_";.07///NO;.09///FREE TEXT"_$S(J=9:";.04///WORD PROCESSING",1:"")
"RTN","ORY306",42,0)
 ...S DR=".03///"_$S(J=1:"8",J=2:"9",J=3:"10",J=4:"11",J=5:"13",J=6:"12",J=7:"5",J=8:"6",J=9:"7")_$S(J>6:DR1,1:"")
"RTN","ORY306",43,0)
 ...D ^DIE K DIE,DR,DA,Y Q  ;edit the SEQUENCE and above DR1 fields of the X COLUMN HEADER multiple accordingly
"RTN","ORY306",44,0)
 ..K DIC Q
"RTN","ORY306",45,0)
 .Q
"RTN","ORY306",46,0)
 Q
"RTN","ORY306",47,0)
 ;
"RTN","ORY306",48,0)
UNDO ;
"RTN","ORY306",49,0)
 N I
"RTN","ORY306",50,0)
 F I=1:1:3  D
"RTN","ORY306",51,0)
 . N DIC,DA,X,J,ORIFN
"RTN","ORY306",52,0)
 . S DIC="^ORD(101.24,",DIC(0)="BIXZ"
"RTN","ORY306",53,0)
 . S X=$S(I=1:"ORRPW PROBLEM ACTIVE",I=2:"ORRPW PROBLEM ALL",1:"ORRPW PROBLEM INACTIVE")
"RTN","ORY306",54,0)
 . D ^DIC I Y=-1 K DIC Q  ; perform top file level search for record X, if unsuccessful quit
"RTN","ORY306",55,0)
 . S DA(1)=+Y,DIC=DIC_DA(1)_",3,",DIC(0)="IXZ",ORIFN=DA(1)
"RTN","ORY306",56,0)
 . I ORIFN>1000 D  ; if report is a national standard, then proceed to modify the below X fields in the subfile #101.243
"RTN","ORY306",57,0)
 . . F J=1:1:9  D
"RTN","ORY306",58,0)
 . . . N X S X=$S(J=1:"Date of Onset",J=2:"Date Modified",J=3:"Provider Name    ",J=4:"Note Narrative",J=5:"[+]",J=6:"Exposures")
"RTN","ORY306",59,0)
 . . . ;I J>6 S DIC("DR")=".02///;.03///;.05///;.06///;.07///;.09///"
"RTN","ORY306",60,0)
 . . . D ^DIC I Y=-1 K DIC Q  ;perform subfile entry level search for record X, if unsuccessful quit
"RTN","ORY306",61,0)
 . . . N DIE,DA,DR,DR1 S DIE=DIC S DA=+Y,DA(1)=ORIFN
"RTN","ORY306",62,0)
 . . . ;I J>6 S DR1=".01///@;.02///@;.05///@;.06///@;.07///@;.09///@"_$S(J=9:";.04///@",1:"")
"RTN","ORY306",63,0)
 . . . S DR=".03///"_$S(J=1:"5",J=2:"6",J=3:"7",J=4:"8",J=5:"10",J=6:"9")
"RTN","ORY306",64,0)
 . . . D ^DIE K DIE,DR,DA,Y Q  ;edit the SEQUENCE and above DR1 fields of the X COLUMN HEADER multiple accordingly
"RTN","ORY306",65,0)
 . . K DIC Q
"RTN","ORY306",66,0)
 . Q
"RTN","ORY306",67,0)
 Q
"RTN","ORY306",68,0)
 ;
"RTN","ORY306",69,0)
SETMGS ; set mail group for OR PROBLEM NTRT BULLETIN
"RTN","ORY306",70,0)
 N ORBIEN,ORBNM,ORERRF,ORFDA,ORGIEN,ORGNM,ORLNE
"RTN","ORY306",71,0)
 N ORMSG,ORTXT
"RTN","ORY306",72,0)
 K ORMSG
"RTN","ORY306",73,0)
 D BMES^XPDUTL("Attaching Mail Groups to OR PROBLEM NTRT BULLETIN")
"RTN","ORY306",74,0)
 S ORBNM="OR PROBLEM NTRT BULLETIN"
"RTN","ORY306",75,0)
 S ORBIEN=$$FIND1^DIC(3.6,"","X",ORBNM,"","","")
"RTN","ORY306",76,0)
 ;If Bulletin not found, error
"RTN","ORY306",77,0)
 I ORBIEN'>0 D  I 1
"RTN","ORY306",78,0)
 . S ORMSG(1)="**"
"RTN","ORY306",79,0)
 . S ORMSG(2)="** Bulletin "_ORBNM_" not found"
"RTN","ORY306",80,0)
 . D MES^XPDUTL(.ORMSG) K ORMSG
"RTN","ORY306",81,0)
 . S ORERRF=1
"RTN","ORY306",82,0)
 ELSE  D
"RTN","ORY306",83,0)
 . S ORGNM="OR CACS"
"RTN","ORY306",84,0)
 . S ORGIEN=$$FIND1^DIC(3.8,"","X",ORGNM,"","","")
"RTN","ORY306",85,0)
 . ;If Mail Group not found, error
"RTN","ORY306",86,0)
 . I ORGIEN'>0 D  Q
"RTN","ORY306",87,0)
 . . S ORMSG(1)="**"
"RTN","ORY306",88,0)
 . . S ORMSG(2)="** Mail Group "_ORGNM_" not found"
"RTN","ORY306",89,0)
 . . D MES^XPDUTL(.ORMSG) K ORMSG
"RTN","ORY306",90,0)
 . . S ORERRF=1
"RTN","ORY306",91,0)
 . ;Attach Mail Group to Bulletin
"RTN","ORY306",92,0)
 . N ORFDA,ORIEN,ORMSG
"RTN","ORY306",93,0)
 . S ORFDA(3.62,"?+2,"_ORBIEN_",",.01)=ORGIEN
"RTN","ORY306",94,0)
 . D UPDATE^DIE("","ORFDA","ORIEN","ORMSG")
"RTN","ORY306",95,0)
 . ;Check for error
"RTN","ORY306",96,0)
 . I $D(ORMSG("DIERR")) D  Q
"RTN","ORY306",97,0)
 . . S ORMSG(1)="**"
"RTN","ORY306",98,0)
 . . S ORMSG(2)="** Unable to attach "_ORGNM_" to "_ORBNM
"RTN","ORY306",99,0)
 . . D MES^XPDUTL(.ORMSG) K ORMSG
"RTN","ORY306",100,0)
 . . S ORERRF=1
"RTN","ORY306",101,0)
 . S ORMSG(1)=" "
"RTN","ORY306",102,0)
 . S ORMSG(2)="... G."_ORGNM_$S($G(ORIEN(2,0))="?":" already",1:"")_" attached to "_ORBNM_" Bulletin"
"RTN","ORY306",103,0)
 . D MES^XPDUTL(.ORMSG) K ORMSG
"RTN","ORY306",104,0)
 ;Check for error
"RTN","ORY306",105,0)
 I $G(ORERRF) D
"RTN","ORY306",106,0)
 . S ORMSG(1)="** Post-installation interrupted"
"RTN","ORY306",107,0)
 . S ORMSG(2)="** Please contact Enterprise VistA Support"
"RTN","ORY306",108,0)
 . D MES^XPDUTL(.ORMSG) K ORMSG
"RTN","ORY306",109,0)
 Q
"RTN","ORY306",110,0)
 ;
"RTN","ORY306",111,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY306",112,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY306",113,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY306",114,0)
 ; Output -- None
"RTN","ORY306",115,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY306",116,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY306",117,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY306",118,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY306",119,0)
 Q
"RTN","ORY306",120,0)
 ;
"RTN","ORY306",121,0)
REGRPCS ; Register new RPCs
"RTN","ORY306",122,0)
 D INSERT("OR CPRS GUI CHART","ORQQPL PROBLEM NTRT BULLETIN")
"RTN","ORY306",123,0)
 D INSERT("OR CPRS GUI CHART","ORWPCE GET DX TEXT")
"RTN","ORY306",124,0)
 Q
"RTN","ORY306",125,0)
 ;
"RTN","ORY306",126,0)
SENDDLG(ANAME) ; Return true if the current order dialog should be sent
"RTN","ORY306",127,0)
 I ANAME="GMRCOR CONSULT" Q 1
"RTN","ORY306",128,0)
 I ANAME="GMRCOR REQUEST" Q 1
"RTN","ORY306",129,0)
 Q 0
"RTN","ORY306",130,0)
 ;
"RTN","ORY306",131,0)
DLGBULL ; send bulletin about modified dialogs <on first install>
"RTN","ORY306",132,0)
 N I,ORD
"RTN","ORY306",133,0)
 F I="GMRCOR CONSULT","GMRCOR REQUEST" S ORD(I)=""
"RTN","ORY306",134,0)
 D EN^ORYDLG(306,.ORD)
"RTN","ORY306",135,0)
 Q
"RTN","ORY306",136,0)
PARAM ;set param value/WAT
"RTN","ORY306",137,0)
 N ORERR
"RTN","ORY306",138,0)
 D BMES^XPDUTL("Setting paramteter ORCDGMRC EARLIEST DATE DEFAULT to TODAY")
"RTN","ORY306",139,0)
 D EN^XPAR("PKG","ORCDGMRC EARLIEST DATE DEFAULT",1,"TODAY",.ORERR)
"RTN","ORY306",140,0)
 I $D(ORERR) D BMES^XPDUTL("Error setting parameter: "_$P(ORERR,"^",2))
"RTN","ORY306",141,0)
 Q
"RTN","ORY306",142,0)
 ;
"RTN","ORY306",143,0)
CONSQO ;get GMRC QOs with date default/WAT
"RTN","ORY306",144,0)
 D BMES^XPDUTL("Finding all consult/procedure quick orders with a default value in the EARLIEST")
"RTN","ORY306",145,0)
 D MES^XPDUTL("APPROPRIATE DATE field")
"RTN","ORY306",146,0)
 D BMES^XPDUTL("A MailMan containing the list of quick orders will be sent to the installer")
"RTN","ORY306",147,0)
 D WAIT^DICD
"RTN","ORY306",148,0)
 D GMRCQO
"RTN","ORY306",149,0)
 Q
"RTN","ORY306",150,0)
GMRCQO ;find GMRC QO's to show the EAD default value/WAT
"RTN","ORY306",151,0)
 K ^TMP("OREAD",$J)
"RTN","ORY306",152,0)
 N GMRCPKG,DA,DA1,QONAME,RESPONSE,OREAD,COUNT
"RTN","ORY306",153,0)
 S GMRCPKG=$O(^DIC(9.4,"B","CONSULT/REQUEST TRACKING",""))
"RTN","ORY306",154,0)
 I +$G(GMRCPKG)'>0 D MES^XPDUTL(" CONSULT/REQUEST TRACKING NOT FOUND IN PACKAGE FILE  ") Q
"RTN","ORY306",155,0)
 S OREAD=$O(^ORD(101.41,"B","OR GTX EARLIEST DATE",""))
"RTN","ORY306",156,0)
 I +$G(OREAD)'>0 D MES^XPDUTL(" OR GTX EARLIEST DATE NOT FOUND IN ORDERABLE ITEMS FILE  ") Q
"RTN","ORY306",157,0)
 S (QONAME,DA,DA1)="",COUNT=1
"RTN","ORY306",158,0)
 S ^TMP("OREAD",$J,COUNT)="Contains Consult and Procedure quick orders with a default value stored",COUNT=COUNT+1
"RTN","ORY306",159,0)
 S ^TMP("OREAD",$J,COUNT)="in the Earliest Appropriate Date field.",COUNT=COUNT+1
"RTN","ORY306",160,0)
 S ^TMP("OREAD",$J,COUNT)="These quick orders should be reviewed in light of the new parameter",COUNT=COUNT+1
"RTN","ORY306",161,0)
 S ^TMP("OREAD",$J,COUNT)="released in OR*3*306, ORCDGMRC EARLIEST DATE DEFAULT.",COUNT=COUNT+1
"RTN","ORY306",162,0)
 S ^TMP("OREAD",$J,COUNT)="This parameter sets the default value for the Earliest Appropriate Date.",COUNT=COUNT+1
"RTN","ORY306",163,0)
 S ^TMP("OREAD",$J,COUNT)="",COUNT=COUNT+1
"RTN","ORY306",164,0)
 S ^TMP("OREAD",$J,COUNT)="Data format of the entries in this message are as follows:",COUNT=COUNT+1
"RTN","ORY306",165,0)
 S ^TMP("OREAD",$J,COUNT)="IEN from file 101.41^Quick Order Name^Earliest Appropriate Date value",COUNT=COUNT+1
"RTN","ORY306",166,0)
 S ^TMP("OREAD",$J,COUNT)="",COUNT=COUNT+1
"RTN","ORY306",167,0)
 F  S QONAME=$O(^ORD(101.41,"B",QONAME)) Q:QONAME=""  D
"RTN","ORY306",168,0)
 .F  S DA=$O(^ORD(101.41,"B",QONAME,DA)) Q:DA=""  D
"RTN","ORY306",169,0)
 ..Q:$P(^ORD(101.41,DA,0),U,4)'="Q"
"RTN","ORY306",170,0)
 ..Q:$P(^ORD(101.41,DA,0),U,7)'=+GMRCPKG
"RTN","ORY306",171,0)
 ..;now find the EAD in the items for this QO and show that value
"RTN","ORY306",172,0)
 ..F  S DA1=$O(^ORD(101.41,DA,6,DA1)) Q:DA1=""  D
"RTN","ORY306",173,0)
 ...Q:DA1<1
"RTN","ORY306",174,0)
 ...S RESPONSE=$P(^ORD(101.41,DA,6,DA1,0),U,2)
"RTN","ORY306",175,0)
 ...Q:RESPONSE'=+OREAD
"RTN","ORY306",176,0)
 ...S ^TMP("OREAD",$J,COUNT)=DA_"^"_QONAME_"^"_^ORD(101.41,DA,6,DA1,1),COUNT=COUNT+1
"RTN","ORY306",177,0)
 I COUNT'>9 S ^TMP("OREAD",$J,COUNT)="No Consult or Procedure quick orders found with a default value stored."
"RTN","ORY306",178,0)
 Q
"RTN","ORY306",179,0)
 ;
"RTN","ORY306",180,0)
SENDMAIL ;SEND MESSAGE W/QOs AND DEFAULT VALUES/WAT
"RTN","ORY306",181,0)
 N XMSUB,XMTEXT,XMY,XMZ,XMDUZ,XMMG,DIFROM
"RTN","ORY306",182,0)
 S XMSUB="CONSULT/PROCEDURE QOs EARLIEST APPROPRIATE DATE DEFAULT VALUE"
"RTN","ORY306",183,0)
 S:$G(DUZ) XMY(DUZ)=""
"RTN","ORY306",184,0)
 S XMDUZ="OR*3.0*306 POST INSTALL"
"RTN","ORY306",185,0)
 S XMTEXT="^TMP(""OREAD"",$J,"
"RTN","ORY306",186,0)
 D ^XMD
"RTN","ORY306",187,0)
 D BMES^XPDUTL("Message #"_$G(XMZ)_" has been sent")
"RTN","ORY306",188,0)
 K ^TMP("OREAD",$J)
"RTN","ORY306",189,0)
 Q
"RTN","ORY306",190,0)
 ;
"RTN","ORY306",191,0)
DELPARAM ;remove parameter values, then parameter/WAT
"RTN","ORY306",192,0)
 ;;icr 2263 ^XPAR, 10141 XPDUTL
"RTN","ORY306",193,0)
 N ORLIST,ENT,PAR,OERR
"RTN","ORY306",194,0)
 ;get instances of parameter
"RTN","ORY306",195,0)
 S ENT="",PAR="OR USE MH DLL"
"RTN","ORY306",196,0)
 D ENVAL^XPAR(.ORLIST,PAR,1,.OERR)
"RTN","ORY306",197,0)
 ;delete instances
"RTN","ORY306",198,0)
 D BMES^XPDUTL("Attempting to remove values for parameter OR USE MH DLL...")
"RTN","ORY306",199,0)
 F  S ENT=$O(ORLIST(ENT)) Q:ENT=""  D DEL^XPAR(ENT,PAR,1,.OERR) I $G(OERR)>0 W !,OERR
"RTN","ORY306",200,0)
 D:+$G(OERR)=0 MES^XPDUTL("Delete successful")
"RTN","ORY306",201,0)
 ;delete parameter
"RTN","ORY306",202,0)
 N DA,DIK
"RTN","ORY306",203,0)
 S DIK="^XTV(8989.51,"
"RTN","ORY306",204,0)
 S DA=$O(^XTV(8989.51,"B",PAR,"")) Q:+$G(DA)'>0  D BMES^XPDUTL("Attempting to remove parameter OR USE MH DLL from PARAMETER DEFINITION file")
"RTN","ORY306",205,0)
 D ^DIK D:+$G(DA)>0 MES^XPDUTL("Delete successful")
"RTN","ORY306",206,0)
 Q
"RTN","ORY306",207,0)
 ;
"RTN","ORY306",208,0)
DELRPC ;remove ORQQPXRM MHDLLDMS/WAT
"RTN","ORY306",209,0)
 ;;icr 10013 ^DIK, 10141 xpdutl
"RTN","ORY306",210,0)
 N DIK,DA
"RTN","ORY306",211,0)
 S DIK="^XWB(8994,"
"RTN","ORY306",212,0)
 S DA=$O(^XWB(8994,"B","ORQQPXRM MHDLLDMS","")) I +$G(DA)'>0 D BMES^XPDUTL("RPC OQQPXRM MHDLLDMS not found.  Nothing deleted.") Q
"RTN","ORY306",213,0)
 D BMES^XPDUTL("Attempting to remove ORQQPXRM MHDLLDMS from REMOTE PROCEDURE file")
"RTN","ORY306",214,0)
 D ^DIK
"RTN","ORY306",215,0)
 D:+$G(DA)>0 MES^XPDUTL("Delete successful")
"RTN","ORY306",216,0)
 Q
"RTN","ORY306",217,0)
 ;
"RTN","ORY306",218,0)
 ; *** NOTE: Remove DEA Subroutine and Call prior to deployment of I1 ***
"RTN","ORY306",219,0)
 ;
"RTN","ORY306",220,0)
DEA ;
"RTN","ORY306",221,0)
 N ORMSG,ORERR
"RTN","ORY306",222,0)
 S ORMSG(1)="By completing the two-factor authentication protocol at this time, you are legally signing the prescription(s) and authorizing the transmission of the above information to the pharmacy for dispersing.  "
"RTN","ORY306",223,0)
 S ORMSG(2)="The two-factor authentication protocol may only be completed by the practitioner whose name and DEA registration number appear above."
"RTN","ORY306",224,0)
 D EN^XPAR("SYS","OR DEA TEXT",,.ORMSG,.ORERR)
"RTN","ORY306",225,0)
 Q
"RTN","ORY306",226,0)
NOTPARAM ; parameter transport routine
"RTN","ORY306",227,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORY306",228,0)
 N ENT,IDX,ROOT,REF,VAL,I
"RTN","ORY306",229,0)
 S ROOT=$NAME(^TMP($J,"XPARRSTR")),ROOT=$E(ROOT,1,$L(ROOT)-1)_","  ;ICR #2336
"RTN","ORY306",230,0)
 D LOAD
"RTN","ORY306",231,0)
XX2 S IDX=0,ENT="PKG."_"ORDER ENTRY/RESULTS REPORTING"
"RTN","ORY306",232,0)
 F  S IDX=$O(^TMP($J,"XPARRSTR",IDX)) Q:'IDX  D
"RTN","ORY306",233,0)
 . N PAR,INST,ORVAL,ORERR K ORVAL
"RTN","ORY306",234,0)
 . S PAR=$P(^TMP($J,"XPARRSTR",IDX,"KEY"),U),INST=$P(^("KEY"),U,2)
"RTN","ORY306",235,0)
 . M ORVAL=^TMP($J,"XPARRSTR",IDX,"VAL")
"RTN","ORY306",236,0)
 . D EN^XPAR(ENT,PAR,INST,.ORVAL,.ORERR)  ;ICR #2336
"RTN","ORY306",237,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORY306",238,0)
 Q
"RTN","ORY306",239,0)
LOAD ; load data into ^TMP (expects ROOT to be defined)
"RTN","ORY306",240,0)
 S I=1 F  S REF=$T(DATA+I) Q:REF=""  S VAL=$T(DATA+I+1) D
"RTN","ORY306",241,0)
 . S I=I+2,REF=$P(REF,";",3,999),VAL=$P(VAL,";",3,999)
"RTN","ORY306",242,0)
 . S @(ROOT_REF)=VAL
"RTN","ORY306",243,0)
 Q
"RTN","ORY306",244,0)
DATA ; parameter data
"RTN","ORY306",245,0)
 ;;7000,"KEY")
"RTN","ORY306",246,0)
 ;;ORB ARCHIVE PERIOD^DEA AUTO DC CS MED ORDER
"RTN","ORY306",247,0)
 ;;7000,"VAL")
"RTN","ORY306",248,0)
 ;;30
"RTN","ORY306",249,0)
 ;;7001,"KEY")
"RTN","ORY306",250,0)
 ;;ORB DELETE MECHANISM^DEA AUTO DC CS MED ORDER
"RTN","ORY306",251,0)
 ;;7001,"VAL")
"RTN","ORY306",252,0)
 ;;Individual Recipient
"RTN","ORY306",253,0)
 ;;7002,"KEY")
"RTN","ORY306",254,0)
 ;;ORB FORWARD BACKUP REVIEWER^DEA AUTO DC CS MED ORDER
"RTN","ORY306",255,0)
 ;;7002,"VAL")
"RTN","ORY306",256,0)
 ;;0
"RTN","ORY306",257,0)
 ;;7003,"KEY")
"RTN","ORY306",258,0)
 ;;ORB FORWARD SUPERVISOR^DEA AUTO DC CS MED ORDER
"RTN","ORY306",259,0)
 ;;7003,"VAL")
"RTN","ORY306",260,0)
 ;;0
"RTN","ORY306",261,0)
 ;;7004,"KEY")
"RTN","ORY306",262,0)
 ;;ORB FORWARD SURROGATES^DEA AUTO DC CS MED ORDER
"RTN","ORY306",263,0)
 ;;7004,"VAL")
"RTN","ORY306",264,0)
 ;;0
"RTN","ORY306",265,0)
 ;;7005,"KEY")
"RTN","ORY306",266,0)
 ;;ORB PROCESSING FLAG^DEA AUTO DC CS MED ORDER
"RTN","ORY306",267,0)
 ;;7005,"VAL")
"RTN","ORY306",268,0)
 ;;Disabled
"RTN","ORY306",269,0)
 ;;7006,"KEY")
"RTN","ORY306",270,0)
 ;;ORB PROVIDER RECIPIENTS^DEA AUTO DC CS MED ORDER
"RTN","ORY306",271,0)
 ;;7006,"VAL")
"RTN","ORY306",272,0)
 ;;OT
"RTN","ORY306",273,0)
 ;;7007,"KEY")
"RTN","ORY306",274,0)
 ;;ORB URGENCY^DEA AUTO DC CS MED ORDER
"RTN","ORY306",275,0)
 ;;7007,"VAL")
"RTN","ORY306",276,0)
 ;;High
"RTN","ORY306",277,0)
 ;;7008,"KEY")
"RTN","ORY306",278,0)
 ;;ORB ARCHIVE PERIOD^DEA CERTIFICATE REVOKED
"RTN","ORY306",279,0)
 ;;7008,"VAL")
"RTN","ORY306",280,0)
 ;;30
"RTN","ORY306",281,0)
 ;;7009,"KEY")
"RTN","ORY306",282,0)
 ;;ORB DELETE MECHANISM^DEA CERTIFICATE REVOKED
"RTN","ORY306",283,0)
 ;;7009,"VAL")
"RTN","ORY306",284,0)
 ;;Individual Recipient
"RTN","ORY306",285,0)
 ;;7010,"KEY")
"RTN","ORY306",286,0)
 ;;ORB FORWARD BACKUP REVIEWER^DEA CERTIFICATE REVOKED
"RTN","ORY306",287,0)
 ;;7010,"VAL")
"RTN","ORY306",288,0)
 ;;0
"RTN","ORY306",289,0)
 ;;7011,"KEY")
"RTN","ORY306",290,0)
 ;;ORB FORWARD SUPERVISOR^DEA CERTIFICATE REVOKED
"RTN","ORY306",291,0)
 ;;7011,"VAL")
"RTN","ORY306",292,0)
 ;;0
"RTN","ORY306",293,0)
 ;;7012,"KEY")
"RTN","ORY306",294,0)
 ;;ORB FORWARD SURROGATES^DEA CERTIFICATE REVOKED
"RTN","ORY306",295,0)
 ;;7012,"VAL")
"RTN","ORY306",296,0)
 ;;0
"RTN","ORY306",297,0)
 ;;7013,"KEY")
"RTN","ORY306",298,0)
 ;;ORB PROCESSING FLAG^DEA CERTIFICATE REVOKED
"RTN","ORY306",299,0)
 ;;7013,"VAL")
"RTN","ORY306",300,0)
 ;;Disabled
"RTN","ORY306",301,0)
 ;;7014,"KEY")
"RTN","ORY306",302,0)
 ;;ORB PROVIDER RECIPIENTS^DEA CERTIFICATE REVOKED
"RTN","ORY306",303,0)
 ;;7014,"VAL")
"RTN","ORY306",304,0)
 ;;OT
"RTN","ORY306",305,0)
 ;;7015,"KEY")
"RTN","ORY306",306,0)
 ;;ORB URGENCY^DEA CERTIFICATE REVOKED
"RTN","ORY306",307,0)
 ;;7015,"VAL")
"RTN","ORY306",308,0)
 ;;High
"RTN","ORY306",309,0)
 ;;7016,"KEY")
"RTN","ORY306",310,0)
 ;;ORB ARCHIVE PERIOD^DEA CERTIFICATE EXPIRED
"RTN","ORY306",311,0)
 ;;7016,"VAL")
"RTN","ORY306",312,0)
 ;;30
"RTN","ORY306",313,0)
 ;;7017,"KEY")
"RTN","ORY306",314,0)
 ;;ORB DELETE MECHANISM^DEA CERTIFICATE EXPIRED
"RTN","ORY306",315,0)
 ;;7017,"VAL")
"RTN","ORY306",316,0)
 ;;Individual Recipient
"RTN","ORY306",317,0)
 ;;7018,"KEY")
"RTN","ORY306",318,0)
 ;;ORB FORWARD BACKUP REVIEWER^DEA CERTIFICATE EXPIRED
"RTN","ORY306",319,0)
 ;;7018,"VAL")
"RTN","ORY306",320,0)
 ;;0
"RTN","ORY306",321,0)
 ;;7019,"KEY")
"RTN","ORY306",322,0)
 ;;ORB FORWARD SUPERVISOR^DEA CERTIFICATE EXPIRED
"RTN","ORY306",323,0)
 ;;7019,"VAL")
"RTN","ORY306",324,0)
 ;;0
"RTN","ORY306",325,0)
 ;;7020,"KEY")
"RTN","ORY306",326,0)
 ;;ORB FORWARD SURROGATES^DEA CERTIFICATE EXPIRED
"RTN","ORY306",327,0)
 ;;7020,"VAL")
"RTN","ORY306",328,0)
 ;;0
"RTN","ORY306",329,0)
 ;;7021,"KEY")
"RTN","ORY306",330,0)
 ;;ORB PROCESSING FLAG^DEA CERTIFICATE EXPIRED
"RTN","ORY306",331,0)
 ;;7021,"VAL")
"RTN","ORY306",332,0)
 ;;Disabled
"RTN","ORY306",333,0)
 ;;7022,"KEY")
"RTN","ORY306",334,0)
 ;;ORB PROVIDER RECIPIENTS^DEA CERTIFICATE EXPIRED
"RTN","ORY306",335,0)
 ;;7022,"VAL")
"RTN","ORY306",336,0)
 ;;O
"RTN","ORY306",337,0)
 ;;7023,"KEY")
"RTN","ORY306",338,0)
 ;;ORB URGENCY^DEA CERTIFICATE EXPIRED
"RTN","ORY306",339,0)
 ;;7023,"VAL")
"RTN","ORY306",340,0)
 ;;High
"RTN","ORY3060")
0^35^B15644886
"RTN","ORY3060",1,0)
ORY3060 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY3060",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY3060",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY3060",4,0)
 ;
"RTN","ORY3060",5,0)
S ;
"RTN","ORY3060",6,0)
 ;
"RTN","ORY3060",7,0)
 Q
"RTN","ORY3060",8,0)
 ;
"RTN","ORY3060",9,0)
WARN(RTN,MSG,LINES) ;
"RTN","ORY3060",10,0)
 ;
"RTN","ORY3060",11,0)
 Q:$G(OCXAUTO)
"RTN","ORY3060",12,0)
 ;
"RTN","ORY3060",13,0)
 N DASH,LINE,NLINE,PLINE
"RTN","ORY3060",14,0)
 ;
"RTN","ORY3060",15,0)
 S DASH="",$P(DASH,"-",(55-$L(MSG)-2))="-"
"RTN","ORY3060",16,0)
 W !!,"--------------",MSG,DASH
"RTN","ORY3060",17,0)
 ;
"RTN","ORY3060",18,0)
 W !,RTN,?10,"[CPRS29.FO-SLCDOMAIN.EXT] -> [",$$NETNAME^OCXSEND,"] Line"
"RTN","ORY3060",19,0)
 ;
"RTN","ORY3060",20,0)
 I $O(LINES($O(LINES(0)))) W "s: "
"RTN","ORY3060",21,0)
 E  W ": "
"RTN","ORY3060",22,0)
 ;
"RTN","ORY3060",23,0)
 S LINE=0 F  S LINE=$O(LINES(LINE)) Q:'LINE  D
"RTN","ORY3060",24,0)
 .W:($X>60) !,?40
"RTN","ORY3060",25,0)
 .S NLINE=LINE F  S PLINE=NLINE,NLINE=$O(LINES(NLINE)) Q:(NLINE-PLINE-1)
"RTN","ORY3060",26,0)
 .I (PLINE=LINE) W " ",LINE
"RTN","ORY3060",27,0)
 .E  W " ",LINE,"-",PLINE S LINE=PLINE
"RTN","ORY3060",28,0)
 ;
"RTN","ORY3060",29,0)
 W ! Q
"RTN","ORY3060",30,0)
 ;
"RTN","ORY3060",31,0)
TEXT(RTN,LINE) ;
"RTN","ORY3060",32,0)
 ;
"RTN","ORY3060",33,0)
 N TEXT X "S TEXT=$T(+"_(+LINE)_"^"_RTN_")" Q TEXT
"RTN","ORY3060",34,0)
 ;
"RTN","ORY3060",35,0)
HEADER ;
"RTN","ORY3060",36,0)
 ;
"RTN","ORY3060",37,0)
 W !," Created: MAR 13,2012 at 13:09  at  CPRS29.FO-SLCDOMAIN.EXT"
"RTN","ORY3060",38,0)
 W !," Current Date: ",$$NOW,"  at  ",$$NETNAME^OCXSEND,!!
"RTN","ORY3060",39,0)
 S LASTFILE=0 K ^TMP("OCXRULE",$J)
"RTN","ORY3060",40,0)
 S ^TMP("OCXRULE",$J)=($P($H,",",2)+($H*86400)+(1*60*60))_" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"
"RTN","ORY3060",41,0)
 Q
"RTN","ORY3060",42,0)
 ;
"RTN","ORY3060",43,0)
GETFILE(FILE,RECNAME,ARRAY) ;
"RTN","ORY3060",44,0)
 ;
"RTN","ORY3060",45,0)
 N CHECK,GLNEXT,GLREF,LINES,REC,DD,FLD
"RTN","ORY3060",46,0)
 S REC=$$LOOKUP(FILE,RECNAME)
"RTN","ORY3060",47,0)
 I 'REC W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME Q 0
"RTN","ORY3060",48,0)
 I (REC=-1) W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME,"  duplicate local entries.",! Q 0
"RTN","ORY3060",49,0)
 I (REC=-2) W !!,$$FILENAME^OCXSENDD(FILE)," (",FILE,") local file not found." W ! Q:$$PAUSE -10 Q REC
"RTN","ORY3060",50,0)
 I (REC<0) W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME,"  unknown lookup error." W ! Q:$$PAUSE -10 Q REC
"RTN","ORY3060",51,0)
 I (REC>0) D
"RTN","ORY3060",52,0)
 .S CHECK=0,LINES=0
"RTN","ORY3060",53,0)
 .D GETREC($$FILE^OCXSENDD(FILE,"GLOBAL NAME"),"ARRAY(",REC,.ARRAY)
"RTN","ORY3060",54,0)
 .S GLREF="ARRAY" F  S GLREF=$Q(@GLREF) Q:'$L(GLREF)  Q:'($E(GLREF,1,6)="ARRAY(")  K:'$L(@GLREF) @GLREF
"RTN","ORY3060",55,0)
 ;
"RTN","ORY3060",56,0)
 Q REC
"RTN","ORY3060",57,0)
 ;
"RTN","ORY3060",58,0)
LKUPARRY(DD,KEY,ARRAY) ;
"RTN","ORY3060",59,0)
 ;
"RTN","ORY3060",60,0)
 N D0 S D0=0 F  S D0=$O(ARRAY(DD,D0)) Q:'D0  Q:($G(ARRAY(DD,D0,.01,"E"))=KEY)
"RTN","ORY3060",61,0)
 Q D0
"RTN","ORY3060",62,0)
 ;
"RTN","ORY3060",63,0)
LOOKUP(FILE,KEY) ;
"RTN","ORY3060",64,0)
 I $O(^TMP("OCXRULE",$J,"B",FILE,KEY,0)) Q 0
"RTN","ORY3060",65,0)
 N RECNAM,REC,D0,CNT,SHORT S (REC,CNT)=0
"RTN","ORY3060",66,0)
 S GL=$$FILE^OCXSENDD(FILE,"GLOBAL NAME") Q:'$L(GL) -2 S GL=$E(GL,1,$L(GL)-1)_")"
"RTN","ORY3060",67,0)
 S SHORT=$E(KEY,1,30),RECNAM=SHORT D  F  S RECNAM=$O(@GL@("B",RECNAM)) Q:'$L(RECNAM)  Q:'($E(RECNAM,1,$L(SHORT))=SHORT)  D
"RTN","ORY3060",68,0)
 .S D0=0 F  S D0=$O(@GL@("B",RECNAM,D0)) Q:'D0  I ($P($G(@GL@(D0,0)),U,1)=KEY) S CNT=CNT+1,REC=D0_U_RECNAME
"RTN","ORY3060",69,0)
 Q:(CNT>1) -1
"RTN","ORY3060",70,0)
 S:$L($P(REC,U,2)) ^TMP("OCXRULE",$J,"A",FILE,$P(REC,U,2))=""
"RTN","ORY3060",71,0)
 Q +REC
"RTN","ORY3060",72,0)
 ;
"RTN","ORY3060",73,0)
GETREC(GL,PATH,D0,REM) ;
"RTN","ORY3060",74,0)
 ;
"RTN","ORY3060",75,0)
 Q:'($P($G(@(GL_"0)")),U,2))
"RTN","ORY3060",76,0)
 N S1,DATA,DD
"RTN","ORY3060",77,0)
 S DATA="" D DIQ(GL,D0,.DATA)
"RTN","ORY3060",78,0)
 S DD=$O(DATA(0)) Q:'DD
"RTN","ORY3060",79,0)
 ;
"RTN","ORY3060",80,0)
 I $L($$FILE^OCXSENDD(DD,"NAME")) S PATH=PATH_""""_DD_":"_D0_""""
"RTN","ORY3060",81,0)
 I '$L($$FILE^OCXSENDD(DD,"NAME")) S PATH=PATH_","""_DD_":"_D0_""""
"RTN","ORY3060",82,0)
 M @(PATH_")")=DATA(DD,D0)
"RTN","ORY3060",83,0)
 ;
"RTN","ORY3060",84,0)
 S S1="" F  S S1=$O(@(GL_D0_","_$$SUB(S1)_")")) Q:'$L(S1)  I ($D(@(GL_D0_","_$$SUB(S1)_")"))>3) D
"RTN","ORY3060",85,0)
 .N D1,GLREF S GLREF=GL_D0_","_$$SUB(S1)_","
"RTN","ORY3060",86,0)
 .S D1=0 F  S D1=$O(@(GLREF_D1_")")) Q:'D1  D GETREC(GLREF,PATH,D1,.REM)
"RTN","ORY3060",87,0)
 ;
"RTN","ORY3060",88,0)
 Q
"RTN","ORY3060",89,0)
 ;
"RTN","ORY3060",90,0)
SUB(X) Q:'(X=+X) """"_X_"""" Q X
"RTN","ORY3060",91,0)
 ;
"RTN","ORY3060",92,0)
DIQ(DIC,DA,OCXARY) ;
"RTN","ORY3060",93,0)
 N DR,DIQ S DR=".01:99999",DIQ="OCXARY(",DIQ(0)="EN" D EN^DIQ1
"RTN","ORY3060",94,0)
 Q
"RTN","ORY3060",95,0)
 ;
"RTN","ORY3060",96,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY3060",97,0)
 ;
"RTN","ORY3060",98,0)
NOW() N X,Y,%DT S X="N",%DT="T" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORY3060",99,0)
 ;
"RTN","ORY30601")
0^23^B71971190
"RTN","ORY30601",1,0)
ORY30601 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30601",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30601",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30601",4,0)
 ;
"RTN","ORY30601",5,0)
S ;
"RTN","ORY30601",6,0)
 ;
"RTN","ORY30601",7,0)
 D DOT^ORY306ES
"RTN","ORY30601",8,0)
 ;
"RTN","ORY30601",9,0)
 ;
"RTN","ORY30601",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30601",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30601",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30601",13,0)
 ;
"RTN","ORY30601",14,0)
 G ^ORY30602
"RTN","ORY30601",15,0)
 ;
"RTN","ORY30601",16,0)
 Q
"RTN","ORY30601",17,0)
 ;
"RTN","ORY30601",18,0)
DATA ;
"RTN","ORY30601",19,0)
 ;
"RTN","ORY30601",20,0)
 ;;ROOT^OCXS(860.2,0)^ORDER CHECK RULE^860.2I
"RTN","ORY30601",21,0)
 ;;ROOT^OCXS(860.3,0)^ORDER CHECK ELEMENT^860.3
"RTN","ORY30601",22,0)
 ;;ROOT^OCXS(860.4,0)^ORDER CHECK DATA FIELD^860.4I
"RTN","ORY30601",23,0)
 ;;ROOT^OCXS(860.5,0)^ORDER CHECK DATA SOURCE^860.5
"RTN","ORY30601",24,0)
 ;;ROOT^OCXS(860.6,0)^ORDER CHECK DATA CONTEXT^860.6
"RTN","ORY30601",25,0)
 ;;ROOT^OCXS(860.8,0)^ORDER CHECK COMPILER FUNCTIONS^860.8
"RTN","ORY30601",26,0)
 ;;ROOT^OCXS(860.9,0)^ORDER CHECK NATIONAL TERM^860.9
"RTN","ORY30601",27,0)
 ;;ROOT^OCXS(863,0)^OCX MDD CLASS^863
"RTN","ORY30601",28,0)
 ;;ROOT^OCXS(863.1,0)^OCX MDD APPLICATION^863.1
"RTN","ORY30601",29,0)
 ;;ROOT^OCXS(863.2,0)^OCX MDD SUBJECT^863.2
"RTN","ORY30601",30,0)
 ;;ROOT^OCXS(863.3,0)^OCX MDD LINK^863.3I
"RTN","ORY30601",31,0)
 ;;ROOT^OCXS(863.4,0)^OCX MDD ATTRIBUTE^863.4
"RTN","ORY30601",32,0)
 ;;ROOT^OCXS(863.5,0)^OCX MDD VALUES^863.5
"RTN","ORY30601",33,0)
 ;;ROOT^OCXS(863.6,0)^OCX MDD METHOD^863.6
"RTN","ORY30601",34,0)
 ;;ROOT^OCXS(863.7,0)^OCX MDD PUBLIC FUNCTION^863.7
"RTN","ORY30601",35,0)
 ;;ROOT^OCXS(863.8,0)^OCX MDD PARAMETER^863.8
"RTN","ORY30601",36,0)
 ;;ROOT^OCXS(863.9,0)^OCX MDD CONDITION/FUNCTION^863.9I
"RTN","ORY30601",37,0)
 ;;ROOT^OCXS(864,0)^OCX MDD SITE PREFERENCES^864P
"RTN","ORY30601",38,0)
 ;;ROOT^OCXS(864.1,0)^OCX MDD DATATYPE^864.1
"RTN","ORY30601",39,0)
 ;;ROOT^OCXD(860.1,0)^ORDER CHECK PATIENT ACTIVE DATA^860.1P
"RTN","ORY30601",40,0)
 ;;ROOT^OCXD(860.7,0)^ORDER CHECK PATIENT RULE EVENT^860.7P
"RTN","ORY30601",41,0)
 ;;ROOT^OCXD(861,0)^ORDER CHECK RAW DATA LOG^861
"RTN","ORY30601",42,0)
 ;;SOF^863.8  OCX MDD PARAMETER
"RTN","ORY30601",43,0)
 ;;KEY^863.8:^COMPARISON VALUE
"RTN","ORY30601",44,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",45,0)
 ;;D^COMPARISON VALUE
"RTN","ORY30601",46,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",47,0)
 ;;D^CVAL
"RTN","ORY30601",48,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",49,0)
 ;;D^ 
"RTN","ORY30601",50,0)
 ;;R^"863.8:",1,2
"RTN","ORY30601",51,0)
 ;;D^   This is a value to be compared with PRIMARY DATA FIELD
"RTN","ORY30601",52,0)
 ;;R^"863.8:",1,3
"RTN","ORY30601",53,0)
 ;;D^ in a truth conditional.
"RTN","ORY30601",54,0)
 ;;R^"863.8:",1,4
"RTN","ORY30601",55,0)
 ;;D^ 
"RTN","ORY30601",56,0)
 ;;EOR^
"RTN","ORY30601",57,0)
 ;;KEY^863.8:^DATA TYPE
"RTN","ORY30601",58,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",59,0)
 ;;D^DATA TYPE
"RTN","ORY30601",60,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",61,0)
 ;;D^DATA TYPE
"RTN","ORY30601",62,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",63,0)
 ;;D^An MDD data type; i.e., an entry in the OCX MDD DATA TYPE file.
"RTN","ORY30601",64,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY30601",65,0)
 ;;D^QUERY
"RTN","ORY30601",66,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY30601",67,0)
 ;;D^Enter the datatype
"RTN","ORY30601",68,0)
 ;;R^"863.8:","863.84:7",.01,"E"
"RTN","ORY30601",69,0)
 ;;D^DIC
"RTN","ORY30601",70,0)
 ;;R^"863.8:","863.84:7",1,"E"
"RTN","ORY30601",71,0)
 ;;D^864.1
"RTN","ORY30601",72,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY30601",73,0)
 ;;D^DATA TYPE
"RTN","ORY30601",74,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY30601",75,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY30601",76,0)
 ;;R^"863.8:","863.84:9",.01,"E"
"RTN","ORY30601",77,0)
 ;;D^DIC LOOKUP INDEX STRING
"RTN","ORY30601",78,0)
 ;;R^"863.8:","863.84:9",1,"E"
"RTN","ORY30601",79,0)
 ;;D^B^C
"RTN","ORY30601",80,0)
 ;;EOR^
"RTN","ORY30601",81,0)
 ;;KEY^863.8:^DIC
"RTN","ORY30601",82,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",83,0)
 ;;D^DIC
"RTN","ORY30601",84,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",85,0)
 ;;D^DIC
"RTN","ORY30601",86,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",87,0)
 ;;D^An open reference used to specify the file in a DIC lookup
"RTN","ORY30601",88,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY30601",89,0)
 ;;D^DATA TYPE
"RTN","ORY30601",90,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY30601",91,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY30601",92,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY30601",93,0)
 ;;D^DIC
"RTN","ORY30601",94,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY30601",95,0)
 ;;D^1
"RTN","ORY30601",96,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30601",97,0)
 ;;D^QUERY
"RTN","ORY30601",98,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30601",99,0)
 ;;D^Enter the name of the file you are pointing to
"RTN","ORY30601",100,0)
 ;;EOR^
"RTN","ORY30601",101,0)
 ;;KEY^863.8:^DIC LOOKUP INDEX STRING
"RTN","ORY30601",102,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",103,0)
 ;;D^DIC LOOKUP INDEX STRING
"RTN","ORY30601",104,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",105,0)
 ;;D^DICIX
"RTN","ORY30601",106,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",107,0)
 ;;D^Contains the names of indices to be used in a DIC lookup in a comma
"RTN","ORY30601",108,0)
 ;;R^"863.8:",1,2
"RTN","ORY30601",109,0)
 ;;D^delimited string.
"RTN","ORY30601",110,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY30601",111,0)
 ;;D^DATA TYPE
"RTN","ORY30601",112,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY30601",113,0)
 ;;D^FREE TEXT
"RTN","ORY30601",114,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY30601",115,0)
 ;;D^QUERY
"RTN","ORY30601",116,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY30601",117,0)
 ;;D^Enter a DIC lookup index string
"RTN","ORY30601",118,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30601",119,0)
 ;;D^HELP MESSAGE
"RTN","ORY30601",120,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30601",121,0)
 ;;D^This is an '^' delimited string which contains the names of indices which are to be used in a DIC lookup; e.g., B^C^DOB.
"RTN","ORY30601",122,0)
 ;;EOR^
"RTN","ORY30601",123,0)
 ;;KEY^863.8:^FILE
"RTN","ORY30601",124,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",125,0)
 ;;D^FILE
"RTN","ORY30601",126,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",127,0)
 ;;D^FILE
"RTN","ORY30601",128,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",129,0)
 ;;D^The internal entry number of a file.
"RTN","ORY30601",130,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY30601",131,0)
 ;;D^QUERY
"RTN","ORY30601",132,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY30601",133,0)
 ;;D^File
"RTN","ORY30601",134,0)
 ;;R^"863.8:","863.84:7",.01,"E"
"RTN","ORY30601",135,0)
 ;;D^DATA TYPE
"RTN","ORY30601",136,0)
 ;;R^"863.8:","863.84:7",1,"E"
"RTN","ORY30601",137,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY30601",138,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY30601",139,0)
 ;;D^DIC
"RTN","ORY30601",140,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY30601",141,0)
 ;;D^1
"RTN","ORY30601",142,0)
 ;;EOR^
"RTN","ORY30601",143,0)
 ;;KEY^863.8:^FM MASK
"RTN","ORY30601",144,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",145,0)
 ;;D^FM MASK
"RTN","ORY30601",146,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",147,0)
 ;;D^FM MASK
"RTN","ORY30601",148,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",149,0)
 ;;D^Tag^routine where code is located to parse the FM DD and override the parameter value
"RTN","ORY30601",150,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY30601",151,0)
 ;;D^QUERY
"RTN","ORY30601",152,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY30601",153,0)
 ;;D^Enter tag^routine where the FM MASK parser is located
"RTN","ORY30601",154,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY30601",155,0)
 ;;D^DATA TYPE
"RTN","ORY30601",156,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY30601",157,0)
 ;;D^LINE TAG
"RTN","ORY30601",158,0)
 ;;EOR^
"RTN","ORY30601",159,0)
 ;;KEY^863.8:^FREE TEXT MAXIMUM LENGTH
"RTN","ORY30601",160,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",161,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY30601",162,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",163,0)
 ;;D^FMAX
"RTN","ORY30601",164,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",165,0)
 ;;D^Maximum string length allowed
"RTN","ORY30601",166,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY30601",167,0)
 ;;D^245
"RTN","ORY30601",168,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30601",169,0)
 ;;D^QUERY
"RTN","ORY30601",170,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30601",171,0)
 ;;D^Maximum text string length allowed
"RTN","ORY30601",172,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY30601",173,0)
 ;;D^FM MASK
"RTN","ORY30601",174,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY30601",175,0)
 ;;D^FMAX^OCXF6
"RTN","ORY30601",176,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY30601",177,0)
 ;;D^DATA TYPE
"RTN","ORY30601",178,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY30601",179,0)
 ;;D^POSITIVE INTEGER
"RTN","ORY30601",180,0)
 ;;EOR^
"RTN","ORY30601",181,0)
 ;;KEY^863.8:^HELP MESSAGE
"RTN","ORY30601",182,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",183,0)
 ;;D^HELP MESSAGE
"RTN","ORY30601",184,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",185,0)
 ;;D^HELP
"RTN","ORY30601",186,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",187,0)
 ;;D^A text string 1-250 characters long which overrides the Fileman help
"RTN","ORY30601",188,0)
 ;;R^"863.8:",1,2
"RTN","ORY30601",189,0)
 ;;D^message.
"RTN","ORY30601",190,0)
 ;;R^"863.8:","863.84:10",.01,"E"
"RTN","ORY30601",191,0)
 ;;D^QUERY
"RTN","ORY30601",192,0)
 ;;R^"863.8:","863.84:10",1,"E"
"RTN","ORY30601",193,0)
 ;;D^Enter a brief help message
"RTN","ORY30601",194,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY30601",195,0)
 ;;D^DATA TYPE
"RTN","ORY30601",196,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY30601",197,0)
 ;;D^FREE TEXT
"RTN","ORY30601",198,0)
 ;;R^"863.8:","863.84:9",.01,"E"
"RTN","ORY30601",199,0)
 ;;D^FM MASK
"RTN","ORY30601",200,0)
 ;;R^"863.8:","863.84:9",1,"E"
"RTN","ORY30601",201,0)
 ;;D^HELP^OCXF6
"RTN","ORY30601",202,0)
 ;;EOR^
"RTN","ORY30601",203,0)
 ;;KEY^863.8:^LOOP QUERY
"RTN","ORY30601",204,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",205,0)
 ;;D^LOOP QUERY
"RTN","ORY30601",206,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",207,0)
 ;;D^LOOP QUERY
"RTN","ORY30601",208,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",209,0)
 ;;D^Alternate query used when repeated answers are required
"RTN","ORY30601",210,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY30601",211,0)
 ;;D^DATA TYPE
"RTN","ORY30601",212,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY30601",213,0)
 ;;D^FREE TEXT
"RTN","ORY30601",214,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY30601",215,0)
 ;;D^QUERY
"RTN","ORY30601",216,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY30601",217,0)
 ;;D^Enter loop query text
"RTN","ORY30601",218,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30601",219,0)
 ;;D^HELP MESSAGE
"RTN","ORY30601",220,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30601",221,0)
 ;;D^This is the query text for all entries after the first one
"RTN","ORY30601",222,0)
 ;;EOR^
"RTN","ORY30601",223,0)
 ;;KEY^863.8:^MANDATORY MESSAGE
"RTN","ORY30601",224,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",225,0)
 ;;D^MANDATORY MESSAGE
"RTN","ORY30601",226,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",227,0)
 ;;D^MAND MSG
"RTN","ORY30601",228,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",229,0)
 ;;D^Message sent to user telling him that his entry is mandatory
"RTN","ORY30601",230,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY30601",231,0)
 ;;D^Mandatory answer.  You must enter a value or '^' to exit.
"RTN","ORY30601",232,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY30601",233,0)
 ;;D^QUERY
"RTN","ORY30601",234,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY30601",235,0)
 ;;D^Enter message
"RTN","ORY30601",236,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY30601",237,0)
 ;;D^DATA TYPE
"RTN","ORY30601",238,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY30601",239,0)
 ;;D^FREE TEXT
"RTN","ORY30601",240,0)
 ;;EOR^
"RTN","ORY30601",241,0)
 ;;KEY^863.8:^OCXO DATA DRIVE SOURCE
"RTN","ORY30601",242,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",243,0)
 ;;D^OCXO DATA DRIVE SOURCE
"RTN","ORY30601",244,0)
 ;;EOR^
"RTN","ORY30601",245,0)
 ;;KEY^863.8:^OCXO FILE POINTER
"RTN","ORY30601",246,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",247,0)
 ;;D^OCXO FILE POINTER
"RTN","ORY30601",248,0)
 ;;EOR^
"RTN","ORY30601",249,0)
 ;;KEY^863.8:^OCXO GENERATE CODE FUNCTION
"RTN","ORY30601",250,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",251,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY30601",252,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",253,0)
 ;;D^GEN
"RTN","ORY30601",254,0)
 ;;EOR^
"RTN","ORY30601",255,0)
 ;;KEY^863.8:^OCXO HL7 SEGMENT ID
"RTN","ORY30601",256,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",257,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY30601",258,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",259,0)
 ;;D^HL7SEGID
"RTN","ORY30601",260,0)
 ;;EOR^
"RTN","ORY30601",261,0)
 ;;KEY^863.8:^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30601",262,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",263,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30601",264,0)
 ;;EOR^
"RTN","ORY30601",265,0)
 ;;KEY^863.8:^OCXO VARIABLE NAME
"RTN","ORY30601",266,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",267,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30601",268,0)
 ;;EOR^
"RTN","ORY30601",269,0)
 ;;KEY^863.8:^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30601",270,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",271,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30601",272,0)
 ;;EOR^
"RTN","ORY30601",273,0)
 ;;KEY^863.8:^PRIMARY DATA FIELD
"RTN","ORY30601",274,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30601",275,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY30601",276,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30601",277,0)
 ;;D^PDFLD
"RTN","ORY30601",278,0)
 ;;R^"863.8:",1,1
"RTN","ORY30601",279,0)
 ;;D^ 
"RTN","ORY30601",280,0)
 ;;R^"863.8:",1,2
"RTN","ORY30601",281,0)
 ;;D^  Primary data field in a comparison expression that
"RTN","ORY30601",282,0)
 ;;R^"863.8:",1,3
"RTN","ORY30601",283,0)
 ;;D^ is to be tested.
"RTN","ORY30601",284,0)
 ;1;
"RTN","ORY30601",285,0)
 ;
"RTN","ORY30602")
0^24^B78115782
"RTN","ORY30602",1,0)
ORY30602 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30602",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30602",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30602",4,0)
 ;
"RTN","ORY30602",5,0)
S ;
"RTN","ORY30602",6,0)
 ;
"RTN","ORY30602",7,0)
 D DOT^ORY306ES
"RTN","ORY30602",8,0)
 ;
"RTN","ORY30602",9,0)
 ;
"RTN","ORY30602",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30602",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30602",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30602",13,0)
 ;
"RTN","ORY30602",14,0)
 G ^ORY30603
"RTN","ORY30602",15,0)
 ;
"RTN","ORY30602",16,0)
 Q
"RTN","ORY30602",17,0)
 ;
"RTN","ORY30602",18,0)
DATA ;
"RTN","ORY30602",19,0)
 ;
"RTN","ORY30602",20,0)
 ;;R^"863.8:",1,4
"RTN","ORY30602",21,0)
 ;;D^ 
"RTN","ORY30602",22,0)
 ;;EOR^
"RTN","ORY30602",23,0)
 ;;KEY^863.8:^QUERY
"RTN","ORY30602",24,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30602",25,0)
 ;;D^QUERY
"RTN","ORY30602",26,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30602",27,0)
 ;;D^QUERY
"RTN","ORY30602",28,0)
 ;;R^"863.8:",1,1
"RTN","ORY30602",29,0)
 ;;D^Used with methods that manage interactive dialogues.  Equivalent to DIC("A")
"RTN","ORY30602",30,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY30602",31,0)
 ;;D^DATA TYPE
"RTN","ORY30602",32,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY30602",33,0)
 ;;D^FREE TEXT
"RTN","ORY30602",34,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY30602",35,0)
 ;;D^QUERY
"RTN","ORY30602",36,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY30602",37,0)
 ;;D^Enter the query (free text string)
"RTN","ORY30602",38,0)
 ;;EOR^
"RTN","ORY30602",39,0)
 ;;KEY^863.8:^REPEAT THE QUERY
"RTN","ORY30602",40,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30602",41,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY30602",42,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30602",43,0)
 ;;D^LOOP
"RTN","ORY30602",44,0)
 ;;R^"863.8:",1,1
"RTN","ORY30602",45,0)
 ;;D^Set this = 1 to repetitively ask the user to enter a value
"RTN","ORY30602",46,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY30602",47,0)
 ;;D^DATA TYPE
"RTN","ORY30602",48,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY30602",49,0)
 ;;D^YES NO
"RTN","ORY30602",50,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY30602",51,0)
 ;;D^HELP MESSAGE
"RTN","ORY30602",52,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY30602",53,0)
 ;;D^Answer 'YES' if you want the user to repetitively enter a value.
"RTN","ORY30602",54,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30602",55,0)
 ;;D^QUERY
"RTN","ORY30602",56,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30602",57,0)
 ;;D^Is the query repetitive
"RTN","ORY30602",58,0)
 ;;EOR^
"RTN","ORY30602",59,0)
 ;;KEY^863.8:^TERMINATOR
"RTN","ORY30602",60,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30602",61,0)
 ;;D^TERMINATOR
"RTN","ORY30602",62,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30602",63,0)
 ;;D^TERMINATOR
"RTN","ORY30602",64,0)
 ;;R^"863.8:",1,1
"RTN","ORY30602",65,0)
 ;;D^A text string terminator; e.g., '?', ': ', '=>'
"RTN","ORY30602",66,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY30602",67,0)
 ;;D^:
"RTN","ORY30602",68,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY30602",69,0)
 ;;D^QUERY
"RTN","ORY30602",70,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY30602",71,0)
 ;;D^Enter text string terminator
"RTN","ORY30602",72,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY30602",73,0)
 ;;D^DATA TYPE
"RTN","ORY30602",74,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY30602",75,0)
 ;;D^FREE TEXT
"RTN","ORY30602",76,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY30602",77,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY30602",78,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY30602",79,0)
 ;;D^9
"RTN","ORY30602",80,0)
 ;;EOR^
"RTN","ORY30602",81,0)
 ;;KEY^863.8:^VALUE CALL
"RTN","ORY30602",82,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY30602",83,0)
 ;;D^VALUE CALL
"RTN","ORY30602",84,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY30602",85,0)
 ;;D^VAL CALL
"RTN","ORY30602",86,0)
 ;;R^"863.8:",.03,"E"
"RTN","ORY30602",87,0)
 ;;D^NO
"RTN","ORY30602",88,0)
 ;;R^"863.8:",1,1
"RTN","ORY30602",89,0)
 ;;D^tag^routine which manages the dialogue for collecting and validating a value
"RTN","ORY30602",90,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY30602",91,0)
 ;;D^QUERY
"RTN","ORY30602",92,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY30602",93,0)
 ;;D^Enter tag^routine
"RTN","ORY30602",94,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY30602",95,0)
 ;;D^DATA TYPE
"RTN","ORY30602",96,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY30602",97,0)
 ;;D^LINE TAG
"RTN","ORY30602",98,0)
 ;;EOR^
"RTN","ORY30602",99,0)
 ;;EOF^OCXS(863.8)^1
"RTN","ORY30602",100,0)
 ;;SOF^864.1  OCX MDD DATATYPE
"RTN","ORY30602",101,0)
 ;;KEY^864.1:^FREE TEXT
"RTN","ORY30602",102,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY30602",103,0)
 ;;D^FREE TEXT
"RTN","ORY30602",104,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY30602",105,0)
 ;;D^FT
"RTN","ORY30602",106,0)
 ;;R^"864.1:",2,"E"
"RTN","ORY30602",107,0)
 ;;D^GENERIC
"RTN","ORY30602",108,0)
 ;;R^"864.1:","864.11:1",.01,"E"
"RTN","ORY30602",109,0)
 ;;D^VALUE CALL
"RTN","ORY30602",110,0)
 ;;R^"864.1:","864.11:1",1,"E"
"RTN","ORY30602",111,0)
 ;;D^FT^OCXFDFT
"RTN","ORY30602",112,0)
 ;;R^"864.1:","864.11:2",.01,"E"
"RTN","ORY30602",113,0)
 ;;D^QUERY
"RTN","ORY30602",114,0)
 ;;R^"864.1:","864.11:2",1,"E"
"RTN","ORY30602",115,0)
 ;;D^Enter a free text string
"RTN","ORY30602",116,0)
 ;;R^"864.1:","864.11:3",.01,"E"
"RTN","ORY30602",117,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY30602",118,0)
 ;;R^"864.1:","864.11:3",1,"E"
"RTN","ORY30602",119,0)
 ;;D^240
"RTN","ORY30602",120,0)
 ;;R^"864.1:","864.11:4",.01,"E"
"RTN","ORY30602",121,0)
 ;;D^HELP MESSAGE
"RTN","ORY30602",122,0)
 ;;R^"864.1:","864.11:4",1,"E"
"RTN","ORY30602",123,0)
 ;;D^Enter a free text string.  Do not use control characters.  |FTMM HELP|
"RTN","ORY30602",124,0)
 ;;R^"864.1:","864.11:5",.01,"E"
"RTN","ORY30602",125,0)
 ;;D^LOOP QUERY
"RTN","ORY30602",126,0)
 ;;R^"864.1:","864.11:5",1,"E"
"RTN","ORY30602",127,0)
 ;;D^Enter another free text string
"RTN","ORY30602",128,0)
 ;;R^"864.1:","864.11:6",.01,"E"
"RTN","ORY30602",129,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY30602",130,0)
 ;;R^"864.1:","864.11:6",1,"E"
"RTN","ORY30602",131,0)
 ;;D^0
"RTN","ORY30602",132,0)
 ;;EOR^
"RTN","ORY30602",133,0)
 ;;KEY^864.1:^GENERIC
"RTN","ORY30602",134,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY30602",135,0)
 ;;D^GENERIC
"RTN","ORY30602",136,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY30602",137,0)
 ;;D^GENERIC
"RTN","ORY30602",138,0)
 ;;R^"864.1:","864.11:11",.01,"E"
"RTN","ORY30602",139,0)
 ;;D^MANDATORY MESSAGE
"RTN","ORY30602",140,0)
 ;;R^"864.1:","864.11:11",1,"E"
"RTN","ORY30602",141,0)
 ;;D^This answer is mandatory.  Enter a response or press '^' to exit.
"RTN","ORY30602",142,0)
 ;;R^"864.1:","864.11:12",.01,"E"
"RTN","ORY30602",143,0)
 ;;D^TERMINATOR
"RTN","ORY30602",144,0)
 ;;R^"864.1:","864.11:12",1,"E"
"RTN","ORY30602",145,0)
 ;;D^:
"RTN","ORY30602",146,0)
 ;;R^"864.1:","864.11:13",.01,"E"
"RTN","ORY30602",147,0)
 ;;D^LOOP QUERY
"RTN","ORY30602",148,0)
 ;;R^"864.1:","864.11:13",1,"E"
"RTN","ORY30602",149,0)
 ;;D^Enter another value
"RTN","ORY30602",150,0)
 ;;R^"864.1:","864.11:7",.01,"E"
"RTN","ORY30602",151,0)
 ;;D^VALUE CALL
"RTN","ORY30602",152,0)
 ;;R^"864.1:","864.11:7",1,"E"
"RTN","ORY30602",153,0)
 ;;D^GEN^OCXFDMOM
"RTN","ORY30602",154,0)
 ;;R^"864.1:","864.11:8",.01,"E"
"RTN","ORY30602",155,0)
 ;;D^QUERY
"RTN","ORY30602",156,0)
 ;;R^"864.1:","864.11:8",1,"E"
"RTN","ORY30602",157,0)
 ;;D^Enter a value
"RTN","ORY30602",158,0)
 ;;R^"864.1:","864.11:9",.01,"E"
"RTN","ORY30602",159,0)
 ;;D^HELP MESSAGE
"RTN","ORY30602",160,0)
 ;;R^"864.1:","864.11:9",1,"E"
"RTN","ORY30602",161,0)
 ;;D^ 
"RTN","ORY30602",162,0)
 ;;EOR^
"RTN","ORY30602",163,0)
 ;;KEY^864.1:^NUMERIC
"RTN","ORY30602",164,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY30602",165,0)
 ;;D^NUMERIC
"RTN","ORY30602",166,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY30602",167,0)
 ;;D^NUMERIC
"RTN","ORY30602",168,0)
 ;;R^"864.1:",2,"E"
"RTN","ORY30602",169,0)
 ;;D^GENERIC
"RTN","ORY30602",170,0)
 ;;R^"864.1:","864.11:1",.01,"E"
"RTN","ORY30602",171,0)
 ;;D^VALUE CALL
"RTN","ORY30602",172,0)
 ;;R^"864.1:","864.11:1",1,"E"
"RTN","ORY30602",173,0)
 ;;D^NU^OCXFDNU
"RTN","ORY30602",174,0)
 ;;R^"864.1:","864.11:2",.01,"E"
"RTN","ORY30602",175,0)
 ;;D^QUERY
"RTN","ORY30602",176,0)
 ;;R^"864.1:","864.11:2",1,"E"
"RTN","ORY30602",177,0)
 ;;D^Enter a number
"RTN","ORY30602",178,0)
 ;;R^"864.1:","864.11:3",.01,"E"
"RTN","ORY30602",179,0)
 ;;D^LOOP QUERY
"RTN","ORY30602",180,0)
 ;;R^"864.1:","864.11:3",1,"E"
"RTN","ORY30602",181,0)
 ;;D^Enter another number
"RTN","ORY30602",182,0)
 ;;R^"864.1:","864.11:4",.01,"E"
"RTN","ORY30602",183,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY30602",184,0)
 ;;R^"864.1:","864.11:4",1,"E"
"RTN","ORY30602",185,0)
 ;;D^0
"RTN","ORY30602",186,0)
 ;;EOR^
"RTN","ORY30602",187,0)
 ;;EOF^OCXS(864.1)^1
"RTN","ORY30602",188,0)
 ;;SOF^863.7  OCX MDD PUBLIC FUNCTION
"RTN","ORY30602",189,0)
 ;;KEY^863.7:^GCC FREE TEXT CONTAINS
"RTN","ORY30602",190,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY30602",191,0)
 ;;D^GCC FREE TEXT CONTAINS
"RTN","ORY30602",192,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY30602",193,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY30602",194,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY30602",195,0)
 ;;D^CONT^OCXF22
"RTN","ORY30602",196,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY30602",197,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY30602",198,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY30602",199,0)
 ;;D^1
"RTN","ORY30602",200,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY30602",201,0)
 ;;D^COMPARISON VALUE
"RTN","ORY30602",202,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY30602",203,0)
 ;;D^2
"RTN","ORY30602",204,0)
 ;;EOR^
"RTN","ORY30602",205,0)
 ;;KEY^863.7:^GCC FREE TEXT EQUALS
"RTN","ORY30602",206,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY30602",207,0)
 ;;D^GCC FREE TEXT EQUALS
"RTN","ORY30602",208,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY30602",209,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY30602",210,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY30602",211,0)
 ;;D^AEQ^OCXF22
"RTN","ORY30602",212,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY30602",213,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY30602",214,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY30602",215,0)
 ;;D^1
"RTN","ORY30602",216,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY30602",217,0)
 ;;D^COMPARISON VALUE
"RTN","ORY30602",218,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY30602",219,0)
 ;;D^2
"RTN","ORY30602",220,0)
 ;;EOR^
"RTN","ORY30602",221,0)
 ;;KEY^863.7:^GCC FREE TEXT EQUALS ELEMENT IN SET
"RTN","ORY30602",222,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY30602",223,0)
 ;;D^GCC FREE TEXT EQUALS ELEMENT IN SET
"RTN","ORY30602",224,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY30602",225,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY30602",226,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY30602",227,0)
 ;;D^EQSET^OCXF22
"RTN","ORY30602",228,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY30602",229,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY30602",230,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY30602",231,0)
 ;;D^1
"RTN","ORY30602",232,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY30602",233,0)
 ;;D^COMPARISON VALUE
"RTN","ORY30602",234,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY30602",235,0)
 ;;D^2
"RTN","ORY30602",236,0)
 ;;EOR^
"RTN","ORY30602",237,0)
 ;;EOF^OCXS(863.7)^1
"RTN","ORY30602",238,0)
 ;;SOF^863.9  OCX MDD CONDITION/FUNCTION
"RTN","ORY30602",239,0)
 ;;KEY^863.9:^CONTAINS
"RTN","ORY30602",240,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY30602",241,0)
 ;;D^CONTAINS
"RTN","ORY30602",242,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY30602",243,0)
 ;;D^FREE TEXT
"RTN","ORY30602",244,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY30602",245,0)
 ;;D^CONTAINS
"RTN","ORY30602",246,0)
 ;;R^"863.9:","863.91:2",.01,"E"
"RTN","ORY30602",247,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY30602",248,0)
 ;;R^"863.9:","863.91:2",1,"E"
"RTN","ORY30602",249,0)
 ;;D^GCC FREE TEXT CONTAINS
"RTN","ORY30602",250,0)
 ;;EOR^
"RTN","ORY30602",251,0)
 ;;KEY^863.9:^EQ FREE TEXT
"RTN","ORY30602",252,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY30602",253,0)
 ;;D^EQ FREE TEXT
"RTN","ORY30602",254,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY30602",255,0)
 ;;D^FREE TEXT
"RTN","ORY30602",256,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY30602",257,0)
 ;;D^IS EQUAL TO
"RTN","ORY30602",258,0)
 ;;R^"863.9:","863.91:3",.01,"E"
"RTN","ORY30602",259,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY30602",260,0)
 ;;R^"863.9:","863.91:3",1,"E"
"RTN","ORY30602",261,0)
 ;;D^GCC FREE TEXT EQUALS
"RTN","ORY30602",262,0)
 ;;R^"863.9:","863.92:1",.01,"E"
"RTN","ORY30602",263,0)
 ;;D^EQUALS
"RTN","ORY30602",264,0)
 ;;EOR^
"RTN","ORY30602",265,0)
 ;;KEY^863.9:^EQUALS ELEMENT IN SET
"RTN","ORY30602",266,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY30602",267,0)
 ;;D^EQUALS ELEMENT IN SET
"RTN","ORY30602",268,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY30602",269,0)
 ;;D^FREE TEXT
"RTN","ORY30602",270,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY30602",271,0)
 ;;D^EQUALS AN ELEMENT IN THE SET
"RTN","ORY30602",272,0)
 ;;R^"863.9:","863.91:1",.01,"E"
"RTN","ORY30602",273,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY30602",274,0)
 ;;R^"863.9:","863.91:1",1,"E"
"RTN","ORY30602",275,0)
 ;;D^GCC FREE TEXT EQUALS ELEMENT IN SET
"RTN","ORY30602",276,0)
 ;;EOR^
"RTN","ORY30602",277,0)
 ;;EOF^OCXS(863.9)^1
"RTN","ORY30602",278,0)
 ;;SOF^863.4  OCX MDD ATTRIBUTE
"RTN","ORY30602",279,0)
 ;;KEY^863.4:^FILLER
"RTN","ORY30602",280,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",281,0)
 ;;D^FILLER
"RTN","ORY30602",282,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",283,0)
 ;;D^DATA TYPE
"RTN","ORY30602",284,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30602",285,0)
 ;;D^FREE TEXT
"RTN","ORY30602",286,0)
 ;;EOR^
"RTN","ORY30602",287,0)
 ;;KEY^863.4:^HL7 CONTROL CODE
"RTN","ORY30602",288,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",289,0)
 ;;D^HL7 CONTROL CODE
"RTN","ORY30602",290,0)
 ;;R^"863.4:",.02,"E"
"RTN","ORY30602",291,0)
 ;;D^HL7CCODE
"RTN","ORY30602",292,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",293,0)
 ;;D^DATA TYPE
"RTN","ORY30602",294,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30602",295,0)
 ;;D^FREE TEXT
"RTN","ORY30602",296,0)
 ;;EOR^
"RTN","ORY30602",297,0)
 ;;KEY^863.4:^HL7 CONTROL REASON
"RTN","ORY30602",298,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",299,0)
 ;;D^HL7 CONTROL REASON
"RTN","ORY30602",300,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",301,0)
 ;;D^DATA TYPE
"RTN","ORY30602",302,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30602",303,0)
 ;;D^FREE TEXT
"RTN","ORY30602",304,0)
 ;;EOR^
"RTN","ORY30602",305,0)
 ;;KEY^863.4:^HL7 FILLER
"RTN","ORY30602",306,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",307,0)
 ;;D^HL7 FILLER
"RTN","ORY30602",308,0)
 ;;R^"863.4:",.02,"E"
"RTN","ORY30602",309,0)
 ;;D^HL7FILLR
"RTN","ORY30602",310,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",311,0)
 ;;D^DATA TYPE
"RTN","ORY30602",312,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30602",313,0)
 ;;D^FREE TEXT
"RTN","ORY30602",314,0)
 ;;EOR^
"RTN","ORY30602",315,0)
 ;;KEY^863.4:^IEN
"RTN","ORY30602",316,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",317,0)
 ;;D^IEN
"RTN","ORY30602",318,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",319,0)
 ;;D^DATA TYPE
"RTN","ORY30602",320,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30602",321,0)
 ;;D^NUMERIC
"RTN","ORY30602",322,0)
 ;;EOR^
"RTN","ORY30602",323,0)
 ;;KEY^863.4:^ORDER PATIENT
"RTN","ORY30602",324,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY30602",325,0)
 ;;D^ORDER PATIENT
"RTN","ORY30602",326,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY30602",327,0)
 ;1;
"RTN","ORY30602",328,0)
 ;
"RTN","ORY30603")
0^25^B84895361
"RTN","ORY30603",1,0)
ORY30603 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30603",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30603",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30603",4,0)
 ;
"RTN","ORY30603",5,0)
S ;
"RTN","ORY30603",6,0)
 ;
"RTN","ORY30603",7,0)
 D DOT^ORY306ES
"RTN","ORY30603",8,0)
 ;
"RTN","ORY30603",9,0)
 ;
"RTN","ORY30603",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30603",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30603",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30603",13,0)
 ;
"RTN","ORY30603",14,0)
 G ^ORY30604
"RTN","ORY30603",15,0)
 ;
"RTN","ORY30603",16,0)
 Q
"RTN","ORY30603",17,0)
 ;
"RTN","ORY30603",18,0)
DATA ;
"RTN","ORY30603",19,0)
 ;
"RTN","ORY30603",20,0)
 ;;D^DATA TYPE
"RTN","ORY30603",21,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY30603",22,0)
 ;;D^NUMERIC
"RTN","ORY30603",23,0)
 ;;EOR^
"RTN","ORY30603",24,0)
 ;;EOF^OCXS(863.4)^1
"RTN","ORY30603",25,0)
 ;;SOF^863.2  OCX MDD SUBJECT
"RTN","ORY30603",26,0)
 ;;KEY^863.2:^PATIENT
"RTN","ORY30603",27,0)
 ;;R^"863.2:",.01,"E"
"RTN","ORY30603",28,0)
 ;;D^PATIENT
"RTN","ORY30603",29,0)
 ;;R^"863.2:","863.21:1",.01,"E"
"RTN","ORY30603",30,0)
 ;;D^FILE
"RTN","ORY30603",31,0)
 ;;R^"863.2:","863.21:1",1,"E"
"RTN","ORY30603",32,0)
 ;;D^2
"RTN","ORY30603",33,0)
 ;;EOR^
"RTN","ORY30603",34,0)
 ;;EOF^OCXS(863.2)^1
"RTN","ORY30603",35,0)
 ;;SOF^863.3  OCX MDD LINK
"RTN","ORY30603",36,0)
 ;;KEY^863.3:^PATIENT.HL7_CONTROL_CODE
"RTN","ORY30603",37,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",38,0)
 ;;D^PATIENT.HL7_CONTROL_CODE
"RTN","ORY30603",39,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",40,0)
 ;;D^PATIENT
"RTN","ORY30603",41,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY30603",42,0)
 ;;D^HL7
"RTN","ORY30603",43,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",44,0)
 ;;D^HL7 CONTROL CODE
"RTN","ORY30603",45,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",46,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",47,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY30603",48,0)
 ;;D^OCXODATA("ORC",1)
"RTN","ORY30603",49,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",50,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30603",51,0)
 ;;R^"863.3:","863.32:3",.01,"E"
"RTN","ORY30603",52,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30603",53,0)
 ;;R^"863.3:","863.32:3",1,"E"
"RTN","ORY30603",54,0)
 ;;D^1
"RTN","ORY30603",55,0)
 ;;R^"863.3:","863.32:4",.01,"E"
"RTN","ORY30603",56,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY30603",57,0)
 ;;R^"863.3:","863.32:5",.01,"E"
"RTN","ORY30603",58,0)
 ;;D^OCXO DATA DRIVE SOURCE
"RTN","ORY30603",59,0)
 ;;R^"863.3:","863.32:5",1,"E"
"RTN","ORY30603",60,0)
 ;;D^HL7
"RTN","ORY30603",61,0)
 ;;EOR^
"RTN","ORY30603",62,0)
 ;;KEY^863.3:^PATIENT.HL7_CONTROL_REASON
"RTN","ORY30603",63,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",64,0)
 ;;D^PATIENT.HL7_CONTROL_REASON
"RTN","ORY30603",65,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",66,0)
 ;;D^PATIENT
"RTN","ORY30603",67,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY30603",68,0)
 ;;D^HL7
"RTN","ORY30603",69,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",70,0)
 ;;D^HL7 CONTROL REASON
"RTN","ORY30603",71,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",72,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",73,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY30603",74,0)
 ;;D^OCXODATA("ORC",16)
"RTN","ORY30603",75,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",76,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30603",77,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY30603",78,0)
 ;;D^5
"RTN","ORY30603",79,0)
 ;;EOR^
"RTN","ORY30603",80,0)
 ;;KEY^863.3:^PATIENT.HL7_FILLER
"RTN","ORY30603",81,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",82,0)
 ;;D^PATIENT.HL7_FILLER
"RTN","ORY30603",83,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",84,0)
 ;;D^PATIENT
"RTN","ORY30603",85,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY30603",86,0)
 ;;D^HL7
"RTN","ORY30603",87,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",88,0)
 ;;D^HL7 FILLER
"RTN","ORY30603",89,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",90,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30603",91,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",92,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30603",93,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY30603",94,0)
 ;;D^2
"RTN","ORY30603",95,0)
 ;;R^"863.3:","863.32:3",.01,"E"
"RTN","ORY30603",96,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",97,0)
 ;;R^"863.3:","863.32:3",1,"E"
"RTN","ORY30603",98,0)
 ;;D^OCXODATA("ORC",3)
"RTN","ORY30603",99,0)
 ;;R^"863.3:","863.32:4",.01,"E"
"RTN","ORY30603",100,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY30603",101,0)
 ;;R^"863.3:","863.32:5",.01,"E"
"RTN","ORY30603",102,0)
 ;;D^OCXO DATA DRIVE SOURCE
"RTN","ORY30603",103,0)
 ;;R^"863.3:","863.32:5",1,"E"
"RTN","ORY30603",104,0)
 ;;D^HL7
"RTN","ORY30603",105,0)
 ;;R^"863.3:","863.32:6",.01,"E"
"RTN","ORY30603",106,0)
 ;;D^OCXO FILE POINTER
"RTN","ORY30603",107,0)
 ;;EOR^
"RTN","ORY30603",108,0)
 ;;KEY^863.3:^PATIENT.HL7_PATIENT_ID
"RTN","ORY30603",109,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",110,0)
 ;;D^PATIENT.HL7_PATIENT_ID
"RTN","ORY30603",111,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",112,0)
 ;;D^PATIENT
"RTN","ORY30603",113,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY30603",114,0)
 ;;D^HL7
"RTN","ORY30603",115,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",116,0)
 ;;D^IEN
"RTN","ORY30603",117,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY30603",118,0)
 ;;D^99
"RTN","ORY30603",119,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",120,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY30603",121,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",122,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30603",123,0)
 ;;R^"863.3:","863.32:3",.01,"E"
"RTN","ORY30603",124,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",125,0)
 ;;R^"863.3:","863.32:3",1,"E"
"RTN","ORY30603",126,0)
 ;;D^OCXODATA("PID",3)
"RTN","ORY30603",127,0)
 ;;EOR^
"RTN","ORY30603",128,0)
 ;;KEY^863.3:^PATIENT.IEN
"RTN","ORY30603",129,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",130,0)
 ;;D^PATIENT.IEN
"RTN","ORY30603",131,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",132,0)
 ;;D^PATIENT
"RTN","ORY30603",133,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",134,0)
 ;;D^IEN
"RTN","ORY30603",135,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY30603",136,0)
 ;;D^99
"RTN","ORY30603",137,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",138,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",139,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY30603",140,0)
 ;;D^DFN
"RTN","ORY30603",141,0)
 ;;EOR^
"RTN","ORY30603",142,0)
 ;;KEY^863.3:^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY30603",143,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",144,0)
 ;;D^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY30603",145,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",146,0)
 ;;D^PATIENT
"RTN","ORY30603",147,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",148,0)
 ;;D^ORDER PATIENT
"RTN","ORY30603",149,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY30603",150,0)
 ;;D^5567
"RTN","ORY30603",151,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",152,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",153,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY30603",154,0)
 ;;D^OCXORD
"RTN","ORY30603",155,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",156,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY30603",157,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY30603",158,0)
 ;;D^1
"RTN","ORY30603",159,0)
 ;;EOR^
"RTN","ORY30603",160,0)
 ;;KEY^863.3:^PATIENT.OPS_FILLER
"RTN","ORY30603",161,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY30603",162,0)
 ;;D^PATIENT.OPS_FILLER
"RTN","ORY30603",163,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY30603",164,0)
 ;;D^PATIENT
"RTN","ORY30603",165,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY30603",166,0)
 ;;D^OPS
"RTN","ORY30603",167,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY30603",168,0)
 ;;D^FILLER
"RTN","ORY30603",169,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY30603",170,0)
 ;;D^99
"RTN","ORY30603",171,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY30603",172,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY30603",173,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY30603",174,0)
 ;;D^OCXPSD
"RTN","ORY30603",175,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY30603",176,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY30603",177,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY30603",178,0)
 ;;D^1
"RTN","ORY30603",179,0)
 ;;EOR^
"RTN","ORY30603",180,0)
 ;;EOF^OCXS(863.3)^1
"RTN","ORY30603",181,0)
 ;;SOF^860.9  ORDER CHECK NATIONAL TERM
"RTN","ORY30603",182,0)
 ;;KEY^860.9:^ANGIOGRAM (PERIPHERAL)
"RTN","ORY30603",183,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",184,0)
 ;;D^ANGIOGRAM (PERIPHERAL)
"RTN","ORY30603",185,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",186,0)
 ;;D^101.43
"RTN","ORY30603",187,0)
 ;;EOR^
"RTN","ORY30603",188,0)
 ;;KEY^860.9:^BLOOD SPECIMEN
"RTN","ORY30603",189,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",190,0)
 ;;D^BLOOD SPECIMEN
"RTN","ORY30603",191,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",192,0)
 ;;D^61
"RTN","ORY30603",193,0)
 ;;EOR^
"RTN","ORY30603",194,0)
 ;;KEY^860.9:^DANGEROUS MEDS FOR PTS > 64
"RTN","ORY30603",195,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",196,0)
 ;;D^DANGEROUS MEDS FOR PTS > 64
"RTN","ORY30603",197,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",198,0)
 ;;D^101.43
"RTN","ORY30603",199,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY30603",200,0)
 ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)="PHARMACY"
"RTN","ORY30603",201,0)
 ;;EOR^
"RTN","ORY30603",202,0)
 ;;KEY^860.9:^DNR
"RTN","ORY30603",203,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",204,0)
 ;;D^DNR
"RTN","ORY30603",205,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",206,0)
 ;;D^101.43
"RTN","ORY30603",207,0)
 ;;EOR^
"RTN","ORY30603",208,0)
 ;;KEY^860.9:^EGFR
"RTN","ORY30603",209,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",210,0)
 ;;D^EGFR
"RTN","ORY30603",211,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",212,0)
 ;;D^60
"RTN","ORY30603",213,0)
 ;;EOR^
"RTN","ORY30603",214,0)
 ;;KEY^860.9:^FOOD-DRUG INTERACTION MED
"RTN","ORY30603",215,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",216,0)
 ;;D^FOOD-DRUG INTERACTION MED
"RTN","ORY30603",217,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",218,0)
 ;;D^101.43
"RTN","ORY30603",219,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY30603",220,0)
 ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)="PHARMACY"
"RTN","ORY30603",221,0)
 ;;EOR^
"RTN","ORY30603",222,0)
 ;;KEY^860.9:^NPO
"RTN","ORY30603",223,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",224,0)
 ;;D^NPO
"RTN","ORY30603",225,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",226,0)
 ;;D^101.43
"RTN","ORY30603",227,0)
 ;;EOR^
"RTN","ORY30603",228,0)
 ;;KEY^860.9:^ONE TIME MED
"RTN","ORY30603",229,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",230,0)
 ;;D^ONE TIME MED
"RTN","ORY30603",231,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",232,0)
 ;;D^51.1
"RTN","ORY30603",233,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY30603",234,0)
 ;;D^I $E($P(^(0),U,4),1,2)="PS"
"RTN","ORY30603",235,0)
 ;;EOR^
"RTN","ORY30603",236,0)
 ;;KEY^860.9:^PARTIAL THROMBOPLASTIN TIME
"RTN","ORY30603",237,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",238,0)
 ;;D^PARTIAL THROMBOPLASTIN TIME
"RTN","ORY30603",239,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",240,0)
 ;;D^101.43
"RTN","ORY30603",241,0)
 ;;EOR^
"RTN","ORY30603",242,0)
 ;;KEY^860.9:^PROTHROMBIN TIME
"RTN","ORY30603",243,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",244,0)
 ;;D^PROTHROMBIN TIME
"RTN","ORY30603",245,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",246,0)
 ;;D^101.43
"RTN","ORY30603",247,0)
 ;;EOR^
"RTN","ORY30603",248,0)
 ;;KEY^860.9:^SERUM CREATININE
"RTN","ORY30603",249,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",250,0)
 ;;D^SERUM CREATININE
"RTN","ORY30603",251,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",252,0)
 ;;D^60
"RTN","ORY30603",253,0)
 ;;EOR^
"RTN","ORY30603",254,0)
 ;;KEY^860.9:^SERUM SPECIMEN
"RTN","ORY30603",255,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",256,0)
 ;;D^SERUM SPECIMEN
"RTN","ORY30603",257,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",258,0)
 ;;D^61
"RTN","ORY30603",259,0)
 ;;EOR^
"RTN","ORY30603",260,0)
 ;;KEY^860.9:^SERUM UREA NITROGEN
"RTN","ORY30603",261,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",262,0)
 ;;D^SERUM UREA NITROGEN
"RTN","ORY30603",263,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",264,0)
 ;;D^60
"RTN","ORY30603",265,0)
 ;;EOR^
"RTN","ORY30603",266,0)
 ;;KEY^860.9:^THROMBOPLASTIN TIME PARTIAL
"RTN","ORY30603",267,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",268,0)
 ;;D^THROMBOPLASTIN TIME PARTIAL
"RTN","ORY30603",269,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",270,0)
 ;;D^60
"RTN","ORY30603",271,0)
 ;;EOR^
"RTN","ORY30603",272,0)
 ;;KEY^860.9:^WBC
"RTN","ORY30603",273,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY30603",274,0)
 ;;D^WBC
"RTN","ORY30603",275,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY30603",276,0)
 ;;D^60
"RTN","ORY30603",277,0)
 ;;EOR^
"RTN","ORY30603",278,0)
 ;;EOF^OCXS(860.9)^1
"RTN","ORY30603",279,0)
 ;;SOF^860.8  ORDER CHECK COMPILER FUNCTIONS
"RTN","ORY30603",280,0)
 ;;KEY^860.8:^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT
"RTN","ORY30603",281,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30603",282,0)
 ;;D^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT
"RTN","ORY30603",283,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30603",284,0)
 ;;D^DT2INT
"RTN","ORY30603",285,0)
 ;;R^"860.8:",1,1
"RTN","ORY30603",286,0)
 ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer
"RTN","ORY30603",287,0)
 ;;R^"860.8:",1,2
"RTN","ORY30603",288,0)
 ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting
"RTN","ORY30603",289,0)
 ;;R^"860.8:",1,3
"RTN","ORY30603",290,0)
 ;;D^  ; ; Them into Seconds and then adding them all together into one big integer
"RTN","ORY30603",291,0)
 ;;R^"860.8:",100,1
"RTN","ORY30603",292,0)
 ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer
"RTN","ORY30603",293,0)
 ;;R^"860.8:",100,2
"RTN","ORY30603",294,0)
 ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting
"RTN","ORY30603",295,0)
 ;;R^"860.8:",100,3
"RTN","ORY30603",296,0)
 ;;D^  ; ; Them into Seconds and then adding them all together into one big integer
"RTN","ORY30603",297,0)
 ;;R^"860.8:",100,4
"RTN","ORY30603",298,0)
 ;;D^  ; ;
"RTN","ORY30603",299,0)
 ;;R^"860.8:",100,5
"RTN","ORY30603",300,0)
 ;;D^  ; Q:'$L($G(OCXDT)) ""
"RTN","ORY30603",301,0)
 ;;R^"860.8:",100,6
"RTN","ORY30603",302,0)
 ;;D^  ; N OCXDIFF,OCXVAL S (OCXDIFF,OCXVAL)=0
"RTN","ORY30603",303,0)
 ;;R^"860.8:",100,7
"RTN","ORY30603",304,0)
 ;;D^  ; ;
"RTN","ORY30603",305,0)
 ;;R^"860.8:",100,8
"RTN","ORY30603",306,0)
 ;;D^  ; I $L(OCXDT),'OCXDT,(OCXDT[" at ") D  ; EXTERNAL EXPERT SYSTEM FORMAT 1 TO EXTERNAL FORMAT
"RTN","ORY30603",307,0)
 ;;R^"860.8:",100,9
"RTN","ORY30603",308,0)
 ;;D^  ; .N OCXHR,OCXMIN,OCXTIME
"RTN","ORY30603",309,0)
 ;;R^"860.8:",100,10
"RTN","ORY30603",310,0)
 ;;D^  ; .S OCXTIME=$P($P(OCXDT," at ",2),".",1),OCXHR=$P(OCXTIME,":",1),OCXMIN=$P(OCXTIME,":",2)
"RTN","ORY30603",311,0)
 ;;R^"860.8:",100,11
"RTN","ORY30603",312,0)
 ;;D^  ; .S:(OCXDT["Midnight") OCXHR=00
"RTN","ORY30603",313,0)
 ;;R^"860.8:",100,12
"RTN","ORY30603",314,0)
 ;;D^  ; .S:(OCXDT["PM") OCXHR=OCXHR+12
"RTN","ORY30603",315,0)
 ;;R^"860.8:",100,13
"RTN","ORY30603",316,0)
 ;;D^  ; .S OCXDT=$P(OCXDT," at ")_"@"_$E(OCXHR+100,2,3)_$E(OCXMIN+100,2,3)
"RTN","ORY30603",317,0)
 ;;R^"860.8:",100,14
"RTN","ORY30603",318,0)
 ;;D^  ; ;
"RTN","ORY30603",319,0)
 ;1;
"RTN","ORY30603",320,0)
 ;
"RTN","ORY30604")
0^26^B59036369
"RTN","ORY30604",1,0)
ORY30604 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30604",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30604",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30604",4,0)
 ;
"RTN","ORY30604",5,0)
S ;
"RTN","ORY30604",6,0)
 ;
"RTN","ORY30604",7,0)
 D DOT^ORY306ES
"RTN","ORY30604",8,0)
 ;
"RTN","ORY30604",9,0)
 ;
"RTN","ORY30604",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30604",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30604",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30604",13,0)
 ;
"RTN","ORY30604",14,0)
 G ^ORY30605
"RTN","ORY30604",15,0)
 ;
"RTN","ORY30604",16,0)
 Q
"RTN","ORY30604",17,0)
 ;
"RTN","ORY30604",18,0)
DATA ;
"RTN","ORY30604",19,0)
 ;
"RTN","ORY30604",20,0)
 ;;R^"860.8:",100,15
"RTN","ORY30604",21,0)
 ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1"/"1.2N.1" ".2N.1":".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 2 TO EXTERNAL FORMAT
"RTN","ORY30604",22,0)
 ;;R^"860.8:",100,16
"RTN","ORY30604",23,0)
 ;;D^  ; .N OCXMON
"RTN","ORY30604",24,0)
 ;;R^"860.8:",100,17
"RTN","ORY30604",25,0)
 ;;D^  ; .S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,$P(OCXDT,"/",1))
"RTN","ORY30604",26,0)
 ;;R^"860.8:",100,18
"RTN","ORY30604",27,0)
 ;;D^  ; .I $L($P(OCXDT," ",2)) S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_"@"_$TR($P(OCXDT," ",2),":","")
"RTN","ORY30604",28,0)
 ;;R^"860.8:",100,19
"RTN","ORY30604",29,0)
 ;;D^  ; .E  S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)
"RTN","ORY30604",30,0)
 ;;R^"860.8:",100,20
"RTN","ORY30604",31,0)
 ;;D^  ; ;
"RTN","ORY30604",32,0)
 ;;R^"860.8:",100,21
"RTN","ORY30604",33,0)
 ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1"/"1.2N1"/"1.2N.1" ".2N.1":".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 3 TO EXTERNAL FORMAT
"RTN","ORY30604",34,0)
 ;;R^"860.8:",100,22
"RTN","ORY30604",35,0)
 ;;D^  ; .N OCXMON
"RTN","ORY30604",36,0)
 ;;R^"860.8:",100,23
"RTN","ORY30604",37,0)
 ;;D^  ; .S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,$P(OCXDT,"/",1))
"RTN","ORY30604",38,0)
 ;;R^"860.8:",100,24
"RTN","ORY30604",39,0)
 ;;D^  ; .I $L($P(OCXDT," ",2)) S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_","_$P($P(OCXDT," ",1),"/",3)_"@"_$TR($P(OCXDT," ",2),":","")
"RTN","ORY30604",40,0)
 ;;R^"860.8:",100,25
"RTN","ORY30604",41,0)
 ;;D^  ; .E  S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_", "_$P($P(OCXDT," ",1),"/",3)
"RTN","ORY30604",42,0)
 ;;R^"860.8:",100,26
"RTN","ORY30604",43,0)
 ;;D^  ; ;
"RTN","ORY30604",44,0)
 ;;R^"860.8:",100,27
"RTN","ORY30604",45,0)
 ;;D^  ; I $L(OCXDT),'OCXDT D  ; EXTERNAL FORMAT TO INTERNAL FILEMAN FORMAT
"RTN","ORY30604",46,0)
 ;;R^"860.8:",100,28
"RTN","ORY30604",47,0)
 ;;D^  ; .I (OCXDT["@0000") S OCXDT=$P(OCXDT,"@",1),OCXDIFF=1
"RTN","ORY30604",48,0)
 ;;R^"860.8:",100,29
"RTN","ORY30604",49,0)
 ;;D^  ; .N %DT,X,Y S X=OCXDT,%DT="" S:(OCXDT["@")!(OCXDT="N") %DT="T" D ^%DT S OCXDT=+Y
"RTN","ORY30604",50,0)
 ;;R^"860.8:",100,30
"RTN","ORY30604",51,0)
 ;;D^  ; ;
"RTN","ORY30604",52,0)
 ;;R^"860.8:",100,31
"RTN","ORY30604",53,0)
 ;;D^  ; I ($L(OCXDT\1)>7) S OCXDT=$$HL7TFM^XLFDT(OCXDT)  ; HL7 FORMAT TO INTERNAL FILEMAN FORMAT
"RTN","ORY30604",54,0)
 ;;R^"860.8:",100,32
"RTN","ORY30604",55,0)
 ;;D^  ; ;
"RTN","ORY30604",56,0)
 ;;R^"860.8:",100,33
"RTN","ORY30604",57,0)
 ;;D^  ; I ($L(OCXDT\1)=7) S OCXDT=$$FMTH^XLFDT(+OCXDT)   ; INTERNAL FILEMAN FORMAT TO $H FORMAT
"RTN","ORY30604",58,0)
 ;;R^"860.8:",100,34
"RTN","ORY30604",59,0)
 ;;D^  ; ;
"RTN","ORY30604",60,0)
 ;;R^"860.8:",100,35
"RTN","ORY30604",61,0)
 ;;D^  ; I (OCXDT?5N1","1.5N) S OCXVAL=(OCXDT*86400)+$P(OCXDT,",",2)     ;  $H FORMAT TO EXPERT SYSTEM INTERNAL FORMAT
"RTN","ORY30604",62,0)
 ;;R^"860.8:",100,36
"RTN","ORY30604",63,0)
 ;;D^  ; ;
"RTN","ORY30604",64,0)
 ;;R^"860.8:",100,37
"RTN","ORY30604",65,0)
 ;;D^  ; Q OCXVAL
"RTN","ORY30604",66,0)
 ;;R^"860.8:",100,38
"RTN","ORY30604",67,0)
 ;;D^  ; ;
"RTN","ORY30604",68,0)
 ;;EOR^
"RTN","ORY30604",69,0)
 ;;KEY^860.8:^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT
"RTN","ORY30604",70,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30604",71,0)
 ;;D^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT
"RTN","ORY30604",72,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30604",73,0)
 ;;D^INT2DT
"RTN","ORY30604",74,0)
 ;;R^"860.8:",1,1
"RTN","ORY30604",75,0)
 ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format
"RTN","ORY30604",76,0)
 ;;R^"860.8:",1,2
"RTN","ORY30604",77,0)
 ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT
"RTN","ORY30604",78,0)
 ;;R^"860.8:",1,3
"RTN","ORY30604",79,0)
 ;;D^  ; ;
"RTN","ORY30604",80,0)
 ;;R^"860.8:",100,1
"RTN","ORY30604",81,0)
 ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format
"RTN","ORY30604",82,0)
 ;;R^"860.8:",100,2
"RTN","ORY30604",83,0)
 ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT
"RTN","ORY30604",84,0)
 ;;R^"860.8:",100,3
"RTN","ORY30604",85,0)
 ;;D^  ; ;
"RTN","ORY30604",86,0)
 ;;R^"860.8:",100,4
"RTN","ORY30604",87,0)
 ;;D^  ; Q:'$L($G(OCXDT)) "" S OCXF=+$G(OCXF)
"RTN","ORY30604",88,0)
 ;;R^"860.8:",100,5
"RTN","ORY30604",89,0)
 ;;D^  ; N OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXCYR
"RTN","ORY30604",90,0)
 ;;R^"860.8:",100,6
"RTN","ORY30604",91,0)
 ;;D^  ; S (OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXAP)=""
"RTN","ORY30604",92,0)
 ;;R^"860.8:",100,7
"RTN","ORY30604",93,0)
 ;;D^  ; S OCXSEC=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60
"RTN","ORY30604",94,0)
 ;;R^"860.8:",100,8
"RTN","ORY30604",95,0)
 ;;D^  ; S OCXMIN=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60
"RTN","ORY30604",96,0)
 ;;R^"860.8:",100,9
"RTN","ORY30604",97,0)
 ;;D^  ; S OCXHR=$E(OCXDT#24+100,2,3),OCXDT=OCXDT\24
"RTN","ORY30604",98,0)
 ;;R^"860.8:",100,10
"RTN","ORY30604",99,0)
 ;;D^  ; S OCXCYR=($H\1461)*4+1841+(($H#1461)\365)
"RTN","ORY30604",100,0)
 ;;R^"860.8:",100,11
"RTN","ORY30604",101,0)
 ;;D^  ; S OCXYR=(OCXDT\1461)*4+1841,OCXDT=OCXDT#1461
"RTN","ORY30604",102,0)
 ;;R^"860.8:",100,12
"RTN","ORY30604",103,0)
 ;;D^  ; S OCXLPYR=(OCXDT\365),OCXDT=OCXDT-(OCXLPYR*365),OCXYR=OCXYR+OCXLPYR
"RTN","ORY30604",104,0)
 ;;R^"860.8:",100,13
"RTN","ORY30604",105,0)
 ;;D^  ; S OCXCNT="031^059^090^120^151^181^212^243^273^304^334^365"
"RTN","ORY30604",106,0)
 ;;R^"860.8:",100,14
"RTN","ORY30604",107,0)
 ;;D^  ; S:(OCXLPYR=3) OCXCNT="031^060^091^121^152^182^213^244^274^305^335^366"
"RTN","ORY30604",108,0)
 ;;R^"860.8:",100,15
"RTN","ORY30604",109,0)
 ;;D^  ; F OCXMON=1:1:12 Q:(OCXDT<$P(OCXCNT,U,OCXMON))
"RTN","ORY30604",110,0)
 ;;R^"860.8:",100,16
"RTN","ORY30604",111,0)
 ;;D^  ; S OCXDAY=OCXDT-$P(OCXCNT,U,OCXMON-1)+1
"RTN","ORY30604",112,0)
 ;;R^"860.8:",100,17
"RTN","ORY30604",113,0)
 ;;D^  ; I OCXF S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,OCXMON)
"RTN","ORY30604",114,0)
 ;;R^"860.8:",100,18
"RTN","ORY30604",115,0)
 ;;D^  ; E  S OCXMON=$E(OCXMON+100,2,3)
"RTN","ORY30604",116,0)
 ;;R^"860.8:",100,19
"RTN","ORY30604",117,0)
 ;;D^  ; S OCXAP=$S('OCXHR:"Midnight",(OCXHR=12):"Noon",(OCXHR<12):"AM",1:"PM")
"RTN","ORY30604",118,0)
 ;;R^"860.8:",100,20
"RTN","ORY30604",119,0)
 ;;D^  ; I OCXF S OCXHR=OCXHR#12 S:'OCXHR OCXHR=12
"RTN","ORY30604",120,0)
 ;;R^"860.8:",100,21
"RTN","ORY30604",121,0)
 ;;D^  ; Q:'OCXF $E(OCXMON+100,2,3)_"/"_$E(OCXDAY+100,2,3)_$S((OCXCYR=OCXYR):" "_OCXHR_":"_OCXMIN,1:"/"_$E(OCXYR,3,4))
"RTN","ORY30604",122,0)
 ;;R^"860.8:",100,22
"RTN","ORY30604",123,0)
 ;;D^  ; Q:(OCXHR+OCXMIN+OCXSEC) OCXMON_" "_OCXDAY_","_OCXYR_" at "_OCXHR_":"_OCXMIN_"."_OCXSEC_" "_OCXAP
"RTN","ORY30604",124,0)
 ;;R^"860.8:",100,23
"RTN","ORY30604",125,0)
 ;;D^  ; Q OCXMON_" "_OCXDAY_","_OCXYR
"RTN","ORY30604",126,0)
 ;;R^"860.8:",100,24
"RTN","ORY30604",127,0)
 ;;D^  ; ;
"RTN","ORY30604",128,0)
 ;;EOR^
"RTN","ORY30604",129,0)
 ;;KEY^860.8:^ELAPSED ORDER CHECK TIME LOGGER
"RTN","ORY30604",130,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30604",131,0)
 ;;D^ELAPSED ORDER CHECK TIME LOGGER
"RTN","ORY30604",132,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30604",133,0)
 ;;D^TIMELOG
"RTN","ORY30604",134,0)
 ;;R^"860.8:",100,1
"RTN","ORY30604",135,0)
 ;;D^  ;TIMELOG(OCXMODE,OCXCALL) ; Log an entry in the Elapsed time log.
"RTN","ORY30604",136,0)
 ;;R^"860.8:",100,2
"RTN","ORY30604",137,0)
 ;;D^  ; ;
"RTN","ORY30604",138,0)
 ;;R^"860.8:",100,3
"RTN","ORY30604",139,0)
 ;;D^  ; ;
"RTN","ORY30604",140,0)
 ;;R^"860.8:",100,4
"RTN","ORY30604",141,0)
 ;;D^  ; Q 0
"RTN","ORY30604",142,0)
 ;;R^"860.8:",100,5
"RTN","ORY30604",143,0)
 ;;D^  ; ;
"RTN","ORY30604",144,0)
 ;;EOR^
"RTN","ORY30604",145,0)
 ;;KEY^860.8:^EQUALS TERM OPERATOR
"RTN","ORY30604",146,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30604",147,0)
 ;;D^EQUALS TERM OPERATOR
"RTN","ORY30604",148,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30604",149,0)
 ;;D^EQTERM
"RTN","ORY30604",150,0)
 ;;R^"860.8:",100,1
"RTN","ORY30604",151,0)
 ;;D^  ;EQTERM(DATA,TERM) ;
"RTN","ORY30604",152,0)
 ;;R^"860.8:",100,2
"RTN","ORY30604",153,0)
 ;;D^  ; ;
"RTN","ORY30604",154,0)
 ;;R^"860.8:",100,3
"RTN","ORY30604",155,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," Execution trace  DATA: ",$G(DATA),"   TERM: ",$G(TERM)
"RTN","ORY30604",156,0)
 ;;R^"860.8:",100,4
"RTN","ORY30604",157,0)
 ;;D^  ; N OCXF,OCXL
"RTN","ORY30604",158,0)
 ;;R^"860.8:",100,5
"RTN","ORY30604",159,0)
 ;;D^  ; ;
"RTN","ORY30604",160,0)
 ;;R^"860.8:",100,6
"RTN","ORY30604",161,0)
 ;;D^  ; S OCXL="",OCXF=$$TERMLKUP(TERM,.OCXL)
"RTN","ORY30604",162,0)
 ;;R^"860.8:",100,7
"RTN","ORY30604",163,0)
 ;;D^T-; Q:'OCXF 0
"RTN","ORY30604",164,0)
 ;;R^"860.8:",100,8
"RTN","ORY30604",165,0)
 ;;D^T+; I 'OCXF W:$G(OCXTRACE) !,"%%%%",?20," Term '",TERM,"' not in Order Check National Term File" Q 0
"RTN","ORY30604",166,0)
 ;;R^"860.8:",100,9
"RTN","ORY30604",167,0)
 ;;D^T+; I '$O(OCXL(0)) W:$G(OCXTRACE) !,"%%%%",?20," There are no local terms listed for the National Term '",TERM,"'." Q 0
"RTN","ORY30604",168,0)
 ;;R^"860.8:",100,10
"RTN","ORY30604",169,0)
 ;;D^T+; I ($D(OCXL(DATA))!$D(OCXL("B",DATA))) W:$G(OCXTRACE) !,"%%%%",?20," Data equals Term" Q 1
"RTN","ORY30604",170,0)
 ;;R^"860.8:",100,11
"RTN","ORY30604",171,0)
 ;;D^T-; I ($D(OCXL(DATA))!$D(OCXL("B",DATA))) Q 1
"RTN","ORY30604",172,0)
 ;;R^"860.8:",100,12
"RTN","ORY30604",173,0)
 ;;D^T-; Q 0
"RTN","ORY30604",174,0)
 ;;R^"860.8:",100,13
"RTN","ORY30604",175,0)
 ;;D^T+; W:$G(OCXTRACE) !,"%%%%",?20," Data does not equal Term" Q 0
"RTN","ORY30604",176,0)
 ;;R^"860.8:",100,14
"RTN","ORY30604",177,0)
 ;;D^  ; ;
"RTN","ORY30604",178,0)
 ;;EOR^
"RTN","ORY30604",179,0)
 ;;KEY^860.8:^FILE DATA IN PATIENT ACTIVE DATA FILE
"RTN","ORY30604",180,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30604",181,0)
 ;;D^FILE DATA IN PATIENT ACTIVE DATA FILE
"RTN","ORY30604",182,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30604",183,0)
 ;;D^FILE
"RTN","ORY30604",184,0)
 ;;R^"860.8:",1,1
"RTN","ORY30604",185,0)
 ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function files data
"RTN","ORY30604",186,0)
 ;;R^"860.8:",1,2
"RTN","ORY30604",187,0)
 ;;D^  ; ;     in the Order Check Patient Data File
"RTN","ORY30604",188,0)
 ;;R^"860.8:",1,3
"RTN","ORY30604",189,0)
 ;;D^  ; ;
"RTN","ORY30604",190,0)
 ;;R^"860.8:",100,1
"RTN","ORY30604",191,0)
 ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function logs a validated event/element.
"RTN","ORY30604",192,0)
 ;;R^"860.8:",100,2
"RTN","ORY30604",193,0)
 ;;D^  ; ;
"RTN","ORY30604",194,0)
 ;;R^"860.8:",100,3
"RTN","ORY30604",195,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," Execution trace  DFN: ",DFN,"   OCXELE: ",+$G(OCXELE),"   OCXDFL: ",$G(OCXDFL)
"RTN","ORY30604",196,0)
 ;;R^"860.8:",100,4
"RTN","ORY30604",197,0)
 ;;D^  ; N OCXTIMN,OCXTIML,OCXTIMT1,OCXTIMT2,OCXDATA,OCXPC,OCXPC,OCXVAL,OCXSUB,OCXDFI
"RTN","ORY30604",198,0)
 ;1;
"RTN","ORY30604",199,0)
 ;
"RTN","ORY30605")
0^27^B67798372
"RTN","ORY30605",1,0)
ORY30605 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30605",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30605",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30605",4,0)
 ;
"RTN","ORY30605",5,0)
S ;
"RTN","ORY30605",6,0)
 ;
"RTN","ORY30605",7,0)
 D DOT^ORY306ES
"RTN","ORY30605",8,0)
 ;
"RTN","ORY30605",9,0)
 ;
"RTN","ORY30605",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30605",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30605",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30605",13,0)
 ;
"RTN","ORY30605",14,0)
 G ^ORY30606
"RTN","ORY30605",15,0)
 ;
"RTN","ORY30605",16,0)
 Q
"RTN","ORY30605",17,0)
 ;
"RTN","ORY30605",18,0)
DATA ;
"RTN","ORY30605",19,0)
 ;
"RTN","ORY30605",20,0)
 ;;R^"860.8:",100,5
"RTN","ORY30605",21,0)
 ;;D^  ; S DFN=+$G(DFN),OCXELE=+$G(OCXELE)
"RTN","ORY30605",22,0)
 ;;R^"860.8:",100,6
"RTN","ORY30605",23,0)
 ;;D^  ; ;
"RTN","ORY30605",24,0)
 ;;R^"860.8:",100,7
"RTN","ORY30605",25,0)
 ;;D^  ; Q:'DFN 1 Q:'OCXELE 1 K OCXDATA
"RTN","ORY30605",26,0)
 ;;R^"860.8:",100,8
"RTN","ORY30605",27,0)
 ;;D^  ; ;
"RTN","ORY30605",28,0)
 ;;R^"860.8:",100,9
"RTN","ORY30605",29,0)
 ;;D^  ; S OCXDATA(DFN,OCXELE)=1
"RTN","ORY30605",30,0)
 ;;R^"860.8:",100,10
"RTN","ORY30605",31,0)
 ;;D^  ; F OCXPC=1:1:$L(OCXDFL,",") S OCXDFI=$P(OCXDFL,",",OCXPC) I OCXDFI D
"RTN","ORY30605",32,0)
 ;;R^"860.8:",100,11
"RTN","ORY30605",33,0)
 ;;D^  ; .S OCXVAL=$G(OCXDF(+OCXDFI)),OCXDATA(DFN,OCXELE,+OCXDFI)=OCXVAL
"RTN","ORY30605",34,0)
 ;;R^"860.8:",100,12
"RTN","ORY30605",35,0)
 ;;D^T+; .I $G(OCXTRACE) W !,"%%%%",?20,"   ",$P($G(^OCXS(860.4,+OCXDFI,0)),U,1)," = """,OCXVAL,""""
"RTN","ORY30605",36,0)
 ;;R^"860.8:",100,13
"RTN","ORY30605",37,0)
 ;;D^  ; ;
"RTN","ORY30605",38,0)
 ;;R^"860.8:",100,14
"RTN","ORY30605",39,0)
 ;;D^  ; M ^TMP("OCXCHK",$J,DFN)=OCXDATA(DFN)
"RTN","ORY30605",40,0)
 ;;R^"860.8:",100,15
"RTN","ORY30605",41,0)
 ;;D^  ; ;
"RTN","ORY30605",42,0)
 ;;R^"860.8:",100,16
"RTN","ORY30605",43,0)
 ;;D^  ; Q 0
"RTN","ORY30605",44,0)
 ;;R^"860.8:",100,17
"RTN","ORY30605",45,0)
 ;;D^  ; ;
"RTN","ORY30605",46,0)
 ;;EOR^
"RTN","ORY30605",47,0)
 ;;KEY^860.8:^GENERATE STRING CHECKSUM
"RTN","ORY30605",48,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30605",49,0)
 ;;D^GENERATE STRING CHECKSUM
"RTN","ORY30605",50,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30605",51,0)
 ;;D^CKSUM
"RTN","ORY30605",52,0)
 ;;R^"860.8:",100,1
"RTN","ORY30605",53,0)
 ;;D^  ;CKSUM(STR) ;
"RTN","ORY30605",54,0)
 ;;R^"860.8:",100,2
"RTN","ORY30605",55,0)
 ;;D^  ; ;
"RTN","ORY30605",56,0)
 ;;R^"860.8:",100,3
"RTN","ORY30605",57,0)
 ;;D^  ; N CKSUM,PTR,ASC S CKSUM=0
"RTN","ORY30605",58,0)
 ;;R^"860.8:",100,4
"RTN","ORY30605",59,0)
 ;;D^  ; S STR=$TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORY30605",60,0)
 ;;R^"860.8:",100,5
"RTN","ORY30605",61,0)
 ;;D^  ; F PTR=$L(STR):-1:1 S ASC=$A(STR,PTR)-42 I (ASC>0),(ASC<51) S CKSUM=CKSUM*2+ASC
"RTN","ORY30605",62,0)
 ;;R^"860.8:",100,6
"RTN","ORY30605",63,0)
 ;;D^  ; Q +CKSUM
"RTN","ORY30605",64,0)
 ;;R^"860.8:",100,7
"RTN","ORY30605",65,0)
 ;;D^  ; ;
"RTN","ORY30605",66,0)
 ;;EOR^
"RTN","ORY30605",67,0)
 ;;KEY^860.8:^GET DATA FROM THE ACTIVE DATA FILE
"RTN","ORY30605",68,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30605",69,0)
 ;;D^GET DATA FROM THE ACTIVE DATA FILE
"RTN","ORY30605",70,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30605",71,0)
 ;;D^GETDATA
"RTN","ORY30605",72,0)
 ;;R^"860.8:",100,1
"RTN","ORY30605",73,0)
 ;;D^  ;GETDATA(DFN,OCXL,OCXDFI) ;     This Local Extrinsic Function returns runtime data
"RTN","ORY30605",74,0)
 ;;R^"860.8:",100,2
"RTN","ORY30605",75,0)
 ;;D^  ; ;
"RTN","ORY30605",76,0)
 ;;R^"860.8:",100,3
"RTN","ORY30605",77,0)
 ;;D^  ; N OCXE,VAL,PC S VAL=""
"RTN","ORY30605",78,0)
 ;;R^"860.8:",100,4
"RTN","ORY30605",79,0)
 ;;D^  ; F PC=1:1:$L(OCXL,U) S OCXE=$P(OCXL,U,PC) I OCXE S VAL=$G(^TMP("OCXCHK",$J,DFN,OCXE,OCXDFI)) Q:$L(VAL)
"RTN","ORY30605",80,0)
 ;;R^"860.8:",100,5
"RTN","ORY30605",81,0)
 ;;D^  ; Q VAL
"RTN","ORY30605",82,0)
 ;;R^"860.8:",100,6
"RTN","ORY30605",83,0)
 ;;D^  ; ;
"RTN","ORY30605",84,0)
 ;;EOR^
"RTN","ORY30605",85,0)
 ;;KEY^860.8:^IN LIST OPERATOR
"RTN","ORY30605",86,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30605",87,0)
 ;;D^IN LIST OPERATOR
"RTN","ORY30605",88,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30605",89,0)
 ;;D^LIST
"RTN","ORY30605",90,0)
 ;;R^"860.8:",100,1
"RTN","ORY30605",91,0)
 ;;D^  ;LIST(DATA,LIST) ;   IS THE DATA FIELD IN THE LIST
"RTN","ORY30605",92,0)
 ;;R^"860.8:",100,2
"RTN","ORY30605",93,0)
 ;;D^  ; ;
"RTN","ORY30605",94,0)
 ;;R^"860.8:",100,3
"RTN","ORY30605",95,0)
 ;;D^T+; W:$G(OCXTRACE) !,"%%%%",?20,"     $$LIST(""",DATA,""",""",LIST,""")"
"RTN","ORY30605",96,0)
 ;;R^"860.8:",100,4
"RTN","ORY30605",97,0)
 ;;D^  ; S:'($E(LIST,1)=",") LIST=","_LIST S:'($E(LIST,$L(LIST))=",") LIST=LIST_"," S DATA=","_DATA_","
"RTN","ORY30605",98,0)
 ;;R^"860.8:",100,5
"RTN","ORY30605",99,0)
 ;;D^  ; Q (LIST[DATA)
"RTN","ORY30605",100,0)
 ;;R^"860.8:",100,6
"RTN","ORY30605",101,0)
 ;;D^  ; ;
"RTN","ORY30605",102,0)
 ;;EOR^
"RTN","ORY30605",103,0)
 ;;KEY^860.8:^LOCAL TERM LOOKUP
"RTN","ORY30605",104,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30605",105,0)
 ;;D^LOCAL TERM LOOKUP
"RTN","ORY30605",106,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30605",107,0)
 ;;D^TERMLKUP
"RTN","ORY30605",108,0)
 ;;R^"860.8:",1,1
"RTN","ORY30605",109,0)
 ;;D^ 
"RTN","ORY30605",110,0)
 ;;R^"860.8:",1,2
"RTN","ORY30605",111,0)
 ;;D^  This function allows a local site to define to Order Checking
"RTN","ORY30605",112,0)
 ;;R^"860.8:",1,3
"RTN","ORY30605",113,0)
 ;;D^ a term specific to that site. (ie. Lab Test Name, Radiology
"RTN","ORY30605",114,0)
 ;;R^"860.8:",1,4
"RTN","ORY30605",115,0)
 ;;D^ procedure name, etc.)
"RTN","ORY30605",116,0)
 ;;R^"860.8:",1,5
"RTN","ORY30605",117,0)
 ;;D^ 
"RTN","ORY30605",118,0)
 ;;R^"860.8:",100,1
"RTN","ORY30605",119,0)
 ;;D^  ;TERMLKUP(OCXTERM,OCXFILE) ;
"RTN","ORY30605",120,0)
 ;;R^"860.8:",100,2
"RTN","ORY30605",121,0)
 ;;D^  ; ;
"RTN","ORY30605",122,0)
 ;;R^"860.8:",100,3
"RTN","ORY30605",123,0)
 ;;D^  ; Q
"RTN","ORY30605",124,0)
 ;;R^"860.8:",100,4
"RTN","ORY30605",125,0)
 ;;D^  ; ;
"RTN","ORY30605",126,0)
 ;;EOR^
"RTN","ORY30605",127,0)
 ;;KEY^860.8:^NEW RULE MESSAGE
"RTN","ORY30605",128,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30605",129,0)
 ;;D^NEW RULE MESSAGE
"RTN","ORY30605",130,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30605",131,0)
 ;;D^NEWRULE
"RTN","ORY30605",132,0)
 ;;R^"860.8:",100,1
"RTN","ORY30605",133,0)
 ;;D^  ;NEWRULE(OCXDFN,OCXORD,OCXRUL,OCXREL,OCXNOTF,OCXMESS) ; Has this rule already been triggered for this order number
"RTN","ORY30605",134,0)
 ;;R^"860.8:",100,2
"RTN","ORY30605",135,0)
 ;;D^  ; ;
"RTN","ORY30605",136,0)
 ;;R^"860.8:",100,3
"RTN","ORY30605",137,0)
 ;;D^L+; S OCXERR=$$TIMELOG("M","NEWRULE("_(+$G(OCXDFN))_","_(+$G(OCXORD))_","_(+$G(OCXRUL))_","_(+$G(OCXREL))_","_(+$G(OCXNOTF))_","_$G(OCXMESS)_")")
"RTN","ORY30605",138,0)
 ;;R^"860.8:",100,4
"RTN","ORY30605",139,0)
 ;;D^  ; ;
"RTN","ORY30605",140,0)
 ;;R^"860.8:",100,5
"RTN","ORY30605",141,0)
 ;;D^  ; Q:'$G(OCXDFN) 0 Q:'$G(OCXRUL) 0
"RTN","ORY30605",142,0)
 ;;R^"860.8:",100,6
"RTN","ORY30605",143,0)
 ;;D^  ; Q:'$G(OCXREL) 0  Q:'$G(OCXNOTF) 0  Q:'$L($G(OCXMESS)) 0
"RTN","ORY30605",144,0)
 ;;R^"860.8:",100,7
"RTN","ORY30605",145,0)
 ;;D^  ; S OCXORD=+$G(OCXORD),OCXDFN=+OCXDFN
"RTN","ORY30605",146,0)
 ;;R^"860.8:",100,8
"RTN","ORY30605",147,0)
 ;;D^  ; ;
"RTN","ORY30605",148,0)
 ;;R^"860.8:",100,9
"RTN","ORY30605",149,0)
 ;;D^  ; N OCXNDX,OCXDATA,OCXDFI,OCXELE,OCXGR,OCXTIME,OCXCKSUM,OCXTSP,OCXTSPL
"RTN","ORY30605",150,0)
 ;;R^"860.8:",100,10
"RTN","ORY30605",151,0)
 ;;D^  ; ;
"RTN","ORY30605",152,0)
 ;;R^"860.8:",100,11
"RTN","ORY30605",153,0)
 ;;D^  ; S OCXTIME=(+$H)
"RTN","ORY30605",154,0)
 ;;R^"860.8:",100,12
"RTN","ORY30605",155,0)
 ;;D^  ; S OCXCKSUM=$$CKSUM(OCXMESS)
"RTN","ORY30605",156,0)
 ;;R^"860.8:",100,13
"RTN","ORY30605",157,0)
 ;;D^  ; ;
"RTN","ORY30605",158,0)
 ;;R^"860.8:",100,14
"RTN","ORY30605",159,0)
 ;;D^  ; S OCXTSP=($H*86400)+$P($H,",",2)
"RTN","ORY30605",160,0)
 ;;R^"860.8:",100,15
"RTN","ORY30605",161,0)
 ;;D^  ; S OCXTSPL=($G(^OCXD(860.7,"AT",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM))+$G(OCXTSPI,300))
"RTN","ORY30605",162,0)
 ;;R^"860.8:",100,16
"RTN","ORY30605",163,0)
 ;;D^  ; ;
"RTN","ORY30605",164,0)
 ;;R^"860.8:",100,17
"RTN","ORY30605",165,0)
 ;;D^  ; Q:(OCXTSPL>OCXTSP) 0
"RTN","ORY30605",166,0)
 ;;R^"860.8:",100,18
"RTN","ORY30605",167,0)
 ;;D^  ; ;
"RTN","ORY30605",168,0)
 ;;R^"860.8:",100,19
"RTN","ORY30605",169,0)
 ;;D^  ; K OCXDATA
"RTN","ORY30605",170,0)
 ;;R^"860.8:",100,20
"RTN","ORY30605",171,0)
 ;;D^  ; S OCXDATA(OCXDFN,0)=OCXDFN
"RTN","ORY30605",172,0)
 ;;R^"860.8:",100,21
"RTN","ORY30605",173,0)
 ;;D^  ; S OCXDATA("B",OCXDFN,OCXDFN)=""
"RTN","ORY30605",174,0)
 ;;R^"860.8:",100,22
"RTN","ORY30605",175,0)
 ;;D^  ; S OCXDATA("AT",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM)=OCXTSP
"RTN","ORY30605",176,0)
 ;;R^"860.8:",100,23
"RTN","ORY30605",177,0)
 ;;D^  ; ;
"RTN","ORY30605",178,0)
 ;;R^"860.8:",100,24
"RTN","ORY30605",179,0)
 ;;D^  ; S OCXGR="^OCXD(860.7"
"RTN","ORY30605",180,0)
 ;;R^"860.8:",100,25
"RTN","ORY30605",181,0)
 ;;D^T+; D SETAP(OCXGR_")",0,"Patient",$P($G(^DPT(OCXDFN,0)),U,1),.OCXDATA,OCXDFN)
"RTN","ORY30605",182,0)
 ;;R^"860.8:",100,26
"RTN","ORY30605",183,0)
 ;;D^T-; D SETAP(OCXGR_")",0,.OCXDATA,OCXDFN)
"RTN","ORY30605",184,0)
 ;;R^"860.8:",100,27
"RTN","ORY30605",185,0)
 ;;D^  ; ;
"RTN","ORY30605",186,0)
 ;;R^"860.8:",100,28
"RTN","ORY30605",187,0)
 ;;D^  ; K OCXDATA
"RTN","ORY30605",188,0)
 ;;R^"860.8:",100,29
"RTN","ORY30605",189,0)
 ;;D^  ; S OCXDATA(OCXRUL,0)=OCXRUL_U_(OCXTIME)_U_(+OCXORD)
"RTN","ORY30605",190,0)
 ;;R^"860.8:",100,30
"RTN","ORY30605",191,0)
 ;;D^  ; S OCXDATA(OCXRUL,"M")=OCXMESS
"RTN","ORY30605",192,0)
 ;;R^"860.8:",100,31
"RTN","ORY30605",193,0)
 ;;D^  ; S OCXDATA("B",OCXRUL,OCXRUL)=""
"RTN","ORY30605",194,0)
 ;;R^"860.8:",100,32
"RTN","ORY30605",195,0)
 ;;D^  ; S OCXGR=OCXGR_","_OCXDFN_",1"
"RTN","ORY30605",196,0)
 ;;R^"860.8:",100,33
"RTN","ORY30605",197,0)
 ;;D^T+; D SETAP(OCXGR_")","860.71P","Rule",$P($G(^OCXS(860.2,OCXRUL,0)),U,1),.OCXDATA,OCXRUL)
"RTN","ORY30605",198,0)
 ;;R^"860.8:",100,34
"RTN","ORY30605",199,0)
 ;;D^T-; D SETAP(OCXGR_")","860.71P",.OCXDATA,OCXRUL)
"RTN","ORY30605",200,0)
 ;;R^"860.8:",100,35
"RTN","ORY30605",201,0)
 ;;D^  ; ;
"RTN","ORY30605",202,0)
 ;;R^"860.8:",100,36
"RTN","ORY30605",203,0)
 ;;D^  ; K OCXDATA
"RTN","ORY30605",204,0)
 ;;R^"860.8:",100,37
"RTN","ORY30605",205,0)
 ;;D^  ; S OCXDATA(OCXREL,0)=OCXREL
"RTN","ORY30605",206,0)
 ;;R^"860.8:",100,38
"RTN","ORY30605",207,0)
 ;;D^  ; S OCXDATA("B",OCXREL,OCXREL)=""
"RTN","ORY30605",208,0)
 ;;R^"860.8:",100,39
"RTN","ORY30605",209,0)
 ;;D^  ; S OCXGR=OCXGR_","_OCXRUL_",1"
"RTN","ORY30605",210,0)
 ;;R^"860.8:",100,40
"RTN","ORY30605",211,0)
 ;;D^T+; D SETAP(OCXGR_")","860.712","Relation",OCXREL,.OCXDATA,OCXREL)
"RTN","ORY30605",212,0)
 ;;R^"860.8:",100,41
"RTN","ORY30605",213,0)
 ;;D^T-; D SETAP(OCXGR_")","860.712",.OCXDATA,OCXREL)
"RTN","ORY30605",214,0)
 ;;R^"860.8:",100,42
"RTN","ORY30605",215,0)
 ;;D^  ; ;
"RTN","ORY30605",216,0)
 ;;R^"860.8:",100,43
"RTN","ORY30605",217,0)
 ;;D^  ; S OCXELE=0 F  S OCXELE=$O(^OCXS(860.2,OCXRUL,"C","C",OCXELE)) Q:'OCXELE  D
"RTN","ORY30605",218,0)
 ;;R^"860.8:",100,44
"RTN","ORY30605",219,0)
 ;;D^  ; .;
"RTN","ORY30605",220,0)
 ;;R^"860.8:",100,45
"RTN","ORY30605",221,0)
 ;;D^  ; .N OCXGR1
"RTN","ORY30605",222,0)
 ;;R^"860.8:",100,46
"RTN","ORY30605",223,0)
 ;;D^  ; .S OCXGR1=OCXGR_","_OCXREL_",1"
"RTN","ORY30605",224,0)
 ;;R^"860.8:",100,47
"RTN","ORY30605",225,0)
 ;;D^  ; .K OCXDATA
"RTN","ORY30605",226,0)
 ;;R^"860.8:",100,48
"RTN","ORY30605",227,0)
 ;;D^  ; .S OCXDATA(OCXELE,0)=OCXELE
"RTN","ORY30605",228,0)
 ;;R^"860.8:",100,49
"RTN","ORY30605",229,0)
 ;;D^  ; .S OCXDATA(OCXELE,"TIME")=OCXTIME
"RTN","ORY30605",230,0)
 ;;R^"860.8:",100,50
"RTN","ORY30605",231,0)
 ;;D^  ; .S OCXDATA(OCXELE,"LOG")=$G(OCXOLOG)
"RTN","ORY30605",232,0)
 ;;R^"860.8:",100,51
"RTN","ORY30605",233,0)
 ;;D^  ; .S OCXDATA("B",OCXELE,OCXELE)=""
"RTN","ORY30605",234,0)
 ;;R^"860.8:",100,52
"RTN","ORY30605",235,0)
 ;;D^  ; .K ^OCXD(860.7,OCXDFN,1,OCXRUL,1,OCXREL,1,OCXELE)
"RTN","ORY30605",236,0)
 ;;R^"860.8:",100,53
"RTN","ORY30605",237,0)
 ;;D^T+; .D SETAP(OCXGR1_")","860.7122P","Element",$P($G(^OCXS(860.3,OCXELE,0)),U,1),.OCXDATA,OCXELE)
"RTN","ORY30605",238,0)
 ;;R^"860.8:",100,54
"RTN","ORY30605",239,0)
 ;;D^T-; .D SETAP(OCXGR1_")","860.7122P",.OCXDATA,OCXELE)
"RTN","ORY30605",240,0)
 ;;R^"860.8:",100,55
"RTN","ORY30605",241,0)
 ;;D^  ; .;
"RTN","ORY30605",242,0)
 ;;R^"860.8:",100,56
"RTN","ORY30605",243,0)
 ;;D^  ; .S OCXDFI=0 F  S OCXDFI=$O(^TMP("OCXCHK",$J,OCXDFN,OCXELE,OCXDFI)) Q:'OCXDFI  D
"RTN","ORY30605",244,0)
 ;;R^"860.8:",100,57
"RTN","ORY30605",245,0)
 ;;D^  ; ..N OCXGR2
"RTN","ORY30605",246,0)
 ;;R^"860.8:",100,58
"RTN","ORY30605",247,0)
 ;;D^  ; ..S OCXGR2=OCXGR1_","_OCXELE_",1"
"RTN","ORY30605",248,0)
 ;;R^"860.8:",100,59
"RTN","ORY30605",249,0)
 ;;D^  ; ..K OCXDATA
"RTN","ORY30605",250,0)
 ;;R^"860.8:",100,60
"RTN","ORY30605",251,0)
 ;;D^  ; ..S OCXDATA(OCXDFI,0)=OCXDFI
"RTN","ORY30605",252,0)
 ;;R^"860.8:",100,61
"RTN","ORY30605",253,0)
 ;;D^  ; ..S OCXDATA(OCXDFI,"VAL")=^TMP("OCXCHK",$J,OCXDFN,OCXELE,OCXDFI)
"RTN","ORY30605",254,0)
 ;;R^"860.8:",100,62
"RTN","ORY30605",255,0)
 ;1;
"RTN","ORY30605",256,0)
 ;
"RTN","ORY30606")
0^28^B65314465
"RTN","ORY30606",1,0)
ORY30606 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30606",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30606",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30606",4,0)
 ;
"RTN","ORY30606",5,0)
S ;
"RTN","ORY30606",6,0)
 ;
"RTN","ORY30606",7,0)
 D DOT^ORY306ES
"RTN","ORY30606",8,0)
 ;
"RTN","ORY30606",9,0)
 ;
"RTN","ORY30606",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30606",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30606",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30606",13,0)
 ;
"RTN","ORY30606",14,0)
 G ^ORY30607
"RTN","ORY30606",15,0)
 ;
"RTN","ORY30606",16,0)
 Q
"RTN","ORY30606",17,0)
 ;
"RTN","ORY30606",18,0)
DATA ;
"RTN","ORY30606",19,0)
 ;
"RTN","ORY30606",20,0)
 ;;D^  ; ..S OCXDATA("B",OCXDFI,OCXDFI)=""
"RTN","ORY30606",21,0)
 ;;R^"860.8:",100,63
"RTN","ORY30606",22,0)
 ;;D^T+; ..D SETAP(OCXGR2_")","860.71223P","Data Field",$P($G(^OCXS(860.4,OCXDFI,0)),U,1),.OCXDATA,OCXDFI)
"RTN","ORY30606",23,0)
 ;;R^"860.8:",100,64
"RTN","ORY30606",24,0)
 ;;D^T-; ..D SETAP(OCXGR2_")","860.71223P",.OCXDATA,OCXDFI)
"RTN","ORY30606",25,0)
 ;;R^"860.8:",100,65
"RTN","ORY30606",26,0)
 ;;D^  ; ;
"RTN","ORY30606",27,0)
 ;;R^"860.8:",100,66
"RTN","ORY30606",28,0)
 ;;D^  ; Q 1
"RTN","ORY30606",29,0)
 ;;R^"860.8:",100,67
"RTN","ORY30606",30,0)
 ;;D^  ; ;
"RTN","ORY30606",31,0)
 ;;R^"860.8:",100,68
"RTN","ORY30606",32,0)
 ;;D^T+;SETAP(ROOT,DD,ITEM,ITEMNAME,DATA,DA) ;  Set Rule Event data
"RTN","ORY30606",33,0)
 ;;R^"860.8:",100,69
"RTN","ORY30606",34,0)
 ;;D^T-;SETAP(ROOT,DD,DATA,DA) ;  Set Rule Event data
"RTN","ORY30606",35,0)
 ;;R^"860.8:",100,70
"RTN","ORY30606",36,0)
 ;;D^  ; M @ROOT=DATA
"RTN","ORY30606",37,0)
 ;;R^"860.8:",100,71
"RTN","ORY30606",38,0)
 ;;D^  ; I +$G(DD) S @ROOT@(0)="^"_($G(DD))_"^"_($P($G(@ROOT@(0)),U,3)+1)_"^"_$G(DA)
"RTN","ORY30606",39,0)
 ;;R^"860.8:",100,72
"RTN","ORY30606",40,0)
 ;;D^  ; I '$G(DD) S $P(@ROOT@(0),U,3,4)=($P($G(@ROOT@(0)),U,3)+1)_"^"_$G(DA)
"RTN","ORY30606",41,0)
 ;;R^"860.8:",100,73
"RTN","ORY30606",42,0)
 ;;D^T+; W:$G(OCXTRACE) !,"File Active Data ",$G(ITEM),": ",$G(ITEMNAME)
"RTN","ORY30606",43,0)
 ;;R^"860.8:",100,74
"RTN","ORY30606",44,0)
 ;;D^  ; ;
"RTN","ORY30606",45,0)
 ;;R^"860.8:",100,75
"RTN","ORY30606",46,0)
 ;;D^  ; Q
"RTN","ORY30606",47,0)
 ;;R^"860.8:",100,76
"RTN","ORY30606",48,0)
 ;;D^  ; ;
"RTN","ORY30606",49,0)
 ;;R^"860.8:",100,77
"RTN","ORY30606",50,0)
 ;;D^  ; ;
"RTN","ORY30606",51,0)
 ;;EOR^
"RTN","ORY30606",52,0)
 ;;KEY^860.8:^RETURN POINTED TO VALUE
"RTN","ORY30606",53,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30606",54,0)
 ;;D^RETURN POINTED TO VALUE
"RTN","ORY30606",55,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30606",56,0)
 ;;D^POINTER
"RTN","ORY30606",57,0)
 ;;R^"860.8:",1,1
"RTN","ORY30606",58,0)
 ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field
"RTN","ORY30606",59,0)
 ;;R^"860.8:",1,2
"RTN","ORY30606",60,0)
 ;;D^  ; ;  of record D0 in file OCXFILE
"RTN","ORY30606",61,0)
 ;;R^"860.8:",100,1
"RTN","ORY30606",62,0)
 ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field
"RTN","ORY30606",63,0)
 ;;R^"860.8:",100,2
"RTN","ORY30606",64,0)
 ;;D^  ; ;  of record D0 in file OCXFILE
"RTN","ORY30606",65,0)
 ;;R^"860.8:",100,3
"RTN","ORY30606",66,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20,"   FILE: ",$G(OCXFILE),"  D0: ",$G(D0)
"RTN","ORY30606",67,0)
 ;;R^"860.8:",100,4
"RTN","ORY30606",68,0)
 ;;D^  ; Q:'$G(D0) "" Q:'$L($G(OCXFILE)) ""
"RTN","ORY30606",69,0)
 ;;R^"860.8:",100,5
"RTN","ORY30606",70,0)
 ;;D^  ; N GLREF
"RTN","ORY30606",71,0)
 ;;R^"860.8:",100,6
"RTN","ORY30606",72,0)
 ;;D^  ; I '(OCXFILE=(+OCXFILE)) S GLREF=U_OCXFILE
"RTN","ORY30606",73,0)
 ;;R^"860.8:",100,7
"RTN","ORY30606",74,0)
 ;;D^  ; E  S GLREF=$$FILE^OCXBDTD(+OCXFILE,"GLOBAL NAME") Q:'$L(GLREF) ""
"RTN","ORY30606",75,0)
 ;;R^"860.8:",100,8
"RTN","ORY30606",76,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," GLREF: ",GLREF,"  RESOLVES TO: ",$P($G(@(GLREF_(+D0)_",0)")),U,1)
"RTN","ORY30606",77,0)
 ;;R^"860.8:",100,9
"RTN","ORY30606",78,0)
 ;;D^  ; Q $P($G(@(GLREF_(+D0)_",0)")),U,1)
"RTN","ORY30606",79,0)
 ;;R^"860.8:",100,10
"RTN","ORY30606",80,0)
 ;;D^  ; ;
"RTN","ORY30606",81,0)
 ;;EOR^
"RTN","ORY30606",82,0)
 ;;KEY^860.8:^STRING CONTAINS ONE OF A LIST OF VALUES
"RTN","ORY30606",83,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY30606",84,0)
 ;;D^STRING CONTAINS ONE OF A LIST OF VALUES
"RTN","ORY30606",85,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY30606",86,0)
 ;;D^CLIST
"RTN","ORY30606",87,0)
 ;;R^"860.8:",100,1
"RTN","ORY30606",88,0)
 ;;D^  ;CLIST(DATA,LIST) ;   DOES THE DATA FIELD CONTAIN AN ELEMENT IN THE LIST
"RTN","ORY30606",89,0)
 ;;R^"860.8:",100,2
"RTN","ORY30606",90,0)
 ;;D^  ; ;
"RTN","ORY30606",91,0)
 ;;R^"860.8:",100,3
"RTN","ORY30606",92,0)
 ;;D^T+; W:$G(OCXTRACE) !!,"$$CLIST(",DATA,",""",LIST,""")"
"RTN","ORY30606",93,0)
 ;;R^"860.8:",100,4
"RTN","ORY30606",94,0)
 ;;D^  ; N PC F PC=1:1:$L(LIST,","),0 I PC,$L($P(LIST,",",PC)),(DATA[$P(LIST,",",PC)) Q
"RTN","ORY30606",95,0)
 ;;R^"860.8:",100,5
"RTN","ORY30606",96,0)
 ;;D^  ; Q ''PC
"RTN","ORY30606",97,0)
 ;;EOR^
"RTN","ORY30606",98,0)
 ;;EOF^OCXS(860.8)^1
"RTN","ORY30606",99,0)
 ;;SOF^860.6  ORDER CHECK DATA CONTEXT
"RTN","ORY30606",100,0)
 ;;KEY^860.6:^CPRS ORDER PRESCAN
"RTN","ORY30606",101,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY30606",102,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY30606",103,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY30606",104,0)
 ;;D^OEPS
"RTN","ORY30606",105,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY30606",106,0)
 ;;D^DATA DRIVEN
"RTN","ORY30606",107,0)
 ;;EOR^
"RTN","ORY30606",108,0)
 ;;KEY^860.6:^CPRS ORDER PROTOCOL
"RTN","ORY30606",109,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY30606",110,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY30606",111,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY30606",112,0)
 ;;D^OERR
"RTN","ORY30606",113,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY30606",114,0)
 ;;D^DATA DRIVEN
"RTN","ORY30606",115,0)
 ;;EOR^
"RTN","ORY30606",116,0)
 ;;KEY^860.6:^DATABASE LOOKUP
"RTN","ORY30606",117,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY30606",118,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY30606",119,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY30606",120,0)
 ;;D^DL
"RTN","ORY30606",121,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY30606",122,0)
 ;;D^PACKAGE LOOKUP
"RTN","ORY30606",123,0)
 ;;EOR^
"RTN","ORY30606",124,0)
 ;;KEY^860.6:^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",125,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY30606",126,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",127,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY30606",128,0)
 ;;D^HL7
"RTN","ORY30606",129,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY30606",130,0)
 ;;D^DATA DRIVEN
"RTN","ORY30606",131,0)
 ;;EOR^
"RTN","ORY30606",132,0)
 ;;EOF^OCXS(860.6)^1
"RTN","ORY30606",133,0)
 ;;SOF^860.5  ORDER CHECK DATA SOURCE
"RTN","ORY30606",134,0)
 ;;KEY^860.5:^DATABASE LOOKUP
"RTN","ORY30606",135,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY30606",136,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY30606",137,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY30606",138,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY30606",139,0)
 ;;EOR^
"RTN","ORY30606",140,0)
 ;;KEY^860.5:^HL7 COMMON ORDER SEGMENT
"RTN","ORY30606",141,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY30606",142,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY30606",143,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY30606",144,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",145,0)
 ;;EOR^
"RTN","ORY30606",146,0)
 ;;KEY^860.5:^HL7 PATIENT ID SEGMENT
"RTN","ORY30606",147,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY30606",148,0)
 ;;D^HL7 PATIENT ID SEGMENT
"RTN","ORY30606",149,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY30606",150,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",151,0)
 ;;EOR^
"RTN","ORY30606",152,0)
 ;;KEY^860.5:^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY30606",153,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY30606",154,0)
 ;;D^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY30606",155,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY30606",156,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY30606",157,0)
 ;;EOR^
"RTN","ORY30606",158,0)
 ;;KEY^860.5:^ORDER ENTRY ORDER PRESCAN
"RTN","ORY30606",159,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY30606",160,0)
 ;;D^ORDER ENTRY ORDER PRESCAN
"RTN","ORY30606",161,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY30606",162,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY30606",163,0)
 ;;EOR^
"RTN","ORY30606",164,0)
 ;;EOF^OCXS(860.5)^1
"RTN","ORY30606",165,0)
 ;;SOF^860.4  ORDER CHECK DATA FIELD
"RTN","ORY30606",166,0)
 ;;KEY^860.4:^CONTROL CODE
"RTN","ORY30606",167,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY30606",168,0)
 ;;D^CONTROL CODE
"RTN","ORY30606",169,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY30606",170,0)
 ;;D^FREE TEXT
"RTN","ORY30606",171,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY30606",172,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",173,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY30606",174,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY30606",175,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY30606",176,0)
 ;;D^PATIENT.HL7_CONTROL_CODE
"RTN","ORY30606",177,0)
 ;;EOR^
"RTN","ORY30606",178,0)
 ;;KEY^860.4:^CONTROL REASON
"RTN","ORY30606",179,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY30606",180,0)
 ;;D^CONTROL REASON
"RTN","ORY30606",181,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY30606",182,0)
 ;;D^FREE TEXT
"RTN","ORY30606",183,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY30606",184,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",185,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY30606",186,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY30606",187,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY30606",188,0)
 ;;D^PATIENT.HL7_CONTROL_REASON
"RTN","ORY30606",189,0)
 ;;EOR^
"RTN","ORY30606",190,0)
 ;;KEY^860.4:^FILLER
"RTN","ORY30606",191,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY30606",192,0)
 ;;D^FILLER
"RTN","ORY30606",193,0)
 ;;R^"860.4:",1,"E"
"RTN","ORY30606",194,0)
 ;;D^FILL
"RTN","ORY30606",195,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY30606",196,0)
 ;;D^FREE TEXT
"RTN","ORY30606",197,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.01,"E"
"RTN","ORY30606",198,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY30606",199,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.02,"E"
"RTN","ORY30606",200,0)
 ;;D^ORDER ENTRY ORDER PRESCAN
"RTN","ORY30606",201,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",1,"E"
"RTN","ORY30606",202,0)
 ;;D^PATIENT.OPS_FILLER
"RTN","ORY30606",203,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY30606",204,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",205,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY30606",206,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY30606",207,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY30606",208,0)
 ;;D^PATIENT.HL7_FILLER
"RTN","ORY30606",209,0)
 ;;EOR^
"RTN","ORY30606",210,0)
 ;;KEY^860.4:^PATIENT IEN
"RTN","ORY30606",211,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY30606",212,0)
 ;;D^PATIENT IEN
"RTN","ORY30606",213,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY30606",214,0)
 ;;D^NUMERIC
"RTN","ORY30606",215,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",.01,"E"
"RTN","ORY30606",216,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY30606",217,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",.02,"E"
"RTN","ORY30606",218,0)
 ;;D^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY30606",219,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",1,"E"
"RTN","ORY30606",220,0)
 ;;D^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY30606",221,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.01,"E"
"RTN","ORY30606",222,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY30606",223,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.02,"E"
"RTN","ORY30606",224,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY30606",225,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",1,"E"
"RTN","ORY30606",226,0)
 ;;D^PATIENT.IEN
"RTN","ORY30606",227,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY30606",228,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",229,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY30606",230,0)
 ;;D^HL7 PATIENT ID SEGMENT
"RTN","ORY30606",231,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY30606",232,0)
 ;;D^PATIENT.HL7_PATIENT_ID
"RTN","ORY30606",233,0)
 ;;EOR^
"RTN","ORY30606",234,0)
 ;;EOF^OCXS(860.4)^1
"RTN","ORY30606",235,0)
 ;;SOF^860.3  ORDER CHECK ELEMENT
"RTN","ORY30606",236,0)
 ;;KEY^860.3:^HL7 DEA CERT REVOKED
"RTN","ORY30606",237,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY30606",238,0)
 ;;D^HL7 DEA CERT REVOKED
"RTN","ORY30606",239,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY30606",240,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30606",241,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY30606",242,0)
 ;;D^1
"RTN","ORY30606",243,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY30606",244,0)
 ;;D^FILLER
"RTN","ORY30606",245,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY30606",246,0)
 ;;D^EQ FREE TEXT
"RTN","ORY30606",247,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY30606",248,0)
 ;;D^PS
"RTN","ORY30606",249,0)
 ;;R^"860.3:","860.31:2",.01,"E"
"RTN","ORY30606",250,0)
 ;;D^2
"RTN","ORY30606",251,0)
 ;;R^"860.3:","860.31:2",1,"E"
"RTN","ORY30606",252,0)
 ;;D^CONTROL REASON
"RTN","ORY30606",253,0)
 ;;R^"860.3:","860.31:2",2,"E"
"RTN","ORY30606",254,0)
 ;;D^CONTAINS
"RTN","ORY30606",255,0)
 ;;R^"860.3:","860.31:2",3,"E"
"RTN","ORY30606",256,0)
 ;;D^17
"RTN","ORY30606",257,0)
 ;1;
"RTN","ORY30606",258,0)
 ;
"RTN","ORY30607")
0^29^B10957549
"RTN","ORY30607",1,0)
ORY30607 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY30607",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY30607",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY30607",4,0)
 ;
"RTN","ORY30607",5,0)
S ;
"RTN","ORY30607",6,0)
 ;
"RTN","ORY30607",7,0)
 D DOT^ORY306ES
"RTN","ORY30607",8,0)
 ;
"RTN","ORY30607",9,0)
 ;
"RTN","ORY30607",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY30607",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY30607",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY30607",13,0)
 ;
"RTN","ORY30607",14,0)
 ;
"RTN","ORY30607",15,0)
 ;
"RTN","ORY30607",16,0)
 Q
"RTN","ORY30607",17,0)
 ;
"RTN","ORY30607",18,0)
DATA ;
"RTN","ORY30607",19,0)
 ;
"RTN","ORY30607",20,0)
 ;;EOR^
"RTN","ORY30607",21,0)
 ;;KEY^860.3:^HL7 PHARMACY DCED ORDER
"RTN","ORY30607",22,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY30607",23,0)
 ;;D^HL7 PHARMACY DCED ORDER
"RTN","ORY30607",24,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY30607",25,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30607",26,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY30607",27,0)
 ;;D^1
"RTN","ORY30607",28,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY30607",29,0)
 ;;D^FILLER
"RTN","ORY30607",30,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY30607",31,0)
 ;;D^EQ FREE TEXT
"RTN","ORY30607",32,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY30607",33,0)
 ;;D^PS
"RTN","ORY30607",34,0)
 ;;R^"860.3:","860.31:2",.01,"E"
"RTN","ORY30607",35,0)
 ;;D^2
"RTN","ORY30607",36,0)
 ;;R^"860.3:","860.31:2",1,"E"
"RTN","ORY30607",37,0)
 ;;D^CONTROL CODE
"RTN","ORY30607",38,0)
 ;;R^"860.3:","860.31:2",2,"E"
"RTN","ORY30607",39,0)
 ;;D^EQUALS ELEMENT IN SET
"RTN","ORY30607",40,0)
 ;;R^"860.3:","860.31:2",3,"E"
"RTN","ORY30607",41,0)
 ;;D^OC,OD
"RTN","ORY30607",42,0)
 ;;EOR^
"RTN","ORY30607",43,0)
 ;;KEY^860.3:^HL7 PHARMACY HASH MISMATCH
"RTN","ORY30607",44,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY30607",45,0)
 ;;D^HL7 PHARMACY HASH MISMATCH
"RTN","ORY30607",46,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY30607",47,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY30607",48,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY30607",49,0)
 ;;D^1
"RTN","ORY30607",50,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY30607",51,0)
 ;;D^FILLER
"RTN","ORY30607",52,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY30607",53,0)
 ;;D^EQ FREE TEXT
"RTN","ORY30607",54,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY30607",55,0)
 ;;D^PS
"RTN","ORY30607",56,0)
 ;;R^"860.3:","860.31:2",.01,"E"
"RTN","ORY30607",57,0)
 ;;D^2
"RTN","ORY30607",58,0)
 ;;R^"860.3:","860.31:2",1,"E"
"RTN","ORY30607",59,0)
 ;;D^CONTROL REASON
"RTN","ORY30607",60,0)
 ;;R^"860.3:","860.31:2",2,"E"
"RTN","ORY30607",61,0)
 ;;D^CONTAINS
"RTN","ORY30607",62,0)
 ;;R^"860.3:","860.31:2",3,"E"
"RTN","ORY30607",63,0)
 ;;D^16
"RTN","ORY30607",64,0)
 ;;EOR^
"RTN","ORY30607",65,0)
 ;;EOF^OCXS(860.3)^1
"RTN","ORY30607",66,0)
 ;;SOF^860.2  ORDER CHECK RULE
"RTN","ORY30607",67,0)
 ;;KEY^860.2:^AUTO DCED CONTROLLED SUBSTANCE ORDERS
"RTN","ORY30607",68,0)
 ;;R^"860.2:",.01,"E"
"RTN","ORY30607",69,0)
 ;;D^AUTO DCED CONTROLLED SUBSTANCE ORDERS
"RTN","ORY30607",70,0)
 ;;R^"860.2:","860.21:1",.01,"E"
"RTN","ORY30607",71,0)
 ;;D^PHARM DCED
"RTN","ORY30607",72,0)
 ;;R^"860.2:","860.21:1",.02,"E"
"RTN","ORY30607",73,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY30607",74,0)
 ;;R^"860.2:","860.21:1",1,"E"
"RTN","ORY30607",75,0)
 ;;D^HL7 PHARMACY DCED ORDER
"RTN","ORY30607",76,0)
 ;;R^"860.2:","860.21:2",.01,"E"
"RTN","ORY30607",77,0)
 ;;D^PHARM HASH MISMATCH
"RTN","ORY30607",78,0)
 ;;R^"860.2:","860.21:2",.02,"E"
"RTN","ORY30607",79,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY30607",80,0)
 ;;R^"860.2:","860.21:2",1,"E"
"RTN","ORY30607",81,0)
 ;;D^HL7 PHARMACY HASH MISMATCH
"RTN","ORY30607",82,0)
 ;;R^"860.2:","860.21:3",.01,"E"
"RTN","ORY30607",83,0)
 ;;D^DEA CERT REVOKED
"RTN","ORY30607",84,0)
 ;;R^"860.2:","860.21:3",.02,"E"
"RTN","ORY30607",85,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY30607",86,0)
 ;;R^"860.2:","860.21:3",1,"E"
"RTN","ORY30607",87,0)
 ;;D^HL7 DEA CERT REVOKED
"RTN","ORY30607",88,0)
 ;;R^"860.2:","860.22:1",.01,"E"
"RTN","ORY30607",89,0)
 ;;D^1
"RTN","ORY30607",90,0)
 ;;R^"860.2:","860.22:1",1,"E"
"RTN","ORY30607",91,0)
 ;;D^PHARM DCED AND PHARM HASH MISMATCH
"RTN","ORY30607",92,0)
 ;;R^"860.2:","860.22:1",3,"E"
"RTN","ORY30607",93,0)
 ;;D^DEA AUTO DC CS MED ORDER
"RTN","ORY30607",94,0)
 ;;R^"860.2:","860.22:1",5,"E"
"RTN","ORY30607",95,0)
 ;;D^Med order(s) DCed. Resubmit or contact Pharmacy.
"RTN","ORY30607",96,0)
 ;;R^"860.2:","860.22:2",.01,"E"
"RTN","ORY30607",97,0)
 ;;D^2
"RTN","ORY30607",98,0)
 ;;R^"860.2:","860.22:2",1,"E"
"RTN","ORY30607",99,0)
 ;;D^PHARM DCED AND DEA CERT REVOKED
"RTN","ORY30607",100,0)
 ;;R^"860.2:","860.22:2",3,"E"
"RTN","ORY30607",101,0)
 ;;D^DEA CERTIFICATE REVOKED
"RTN","ORY30607",102,0)
 ;;R^"860.2:","860.22:2",5,"E"
"RTN","ORY30607",103,0)
 ;;D^Med orders(s) DCed. Cert revoked. Contact Pharm.
"RTN","ORY30607",104,0)
 ;;EOR^
"RTN","ORY30607",105,0)
 ;;EOF^OCXS(860.2)^1
"RTN","ORY30607",106,0)
 ;1;
"RTN","ORY30607",107,0)
 ;
"RTN","ORY3061")
0^31^B40546328
"RTN","ORY3061",1,0)
ORY3061 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY3061",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY3061",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY3061",4,0)
 ;
"RTN","ORY3061",5,0)
S ;
"RTN","ORY3061",6,0)
 ;
"RTN","ORY3061",7,0)
 Q
"RTN","ORY3061",8,0)
 ;
"RTN","ORY3061",9,0)
 ;
"RTN","ORY3061",10,0)
COMPARE(L,R) ;
"RTN","ORY3061",11,0)
 ;
"RTN","ORY3061",12,0)
 Q:$$RES("R") 1
"RTN","ORY3061",13,0)
 ;
"RTN","ORY3061",14,0)
 Q:'$L($O(L(""))) $$ADDREC^ORY3062("R")
"RTN","ORY3061",15,0)
 ;
"RTN","ORY3061",16,0)
 N C,OCXDD M C=L,C=R S OCXDD=$O(C("")) Q $$MULT("C",OCXDD)
"RTN","ORY3061",17,0)
 ;
"RTN","ORY3061",18,0)
 Q 0
"RTN","ORY3061",19,0)
 ;
"RTN","ORY3061",20,0)
RES(REF) ;
"RTN","ORY3061",21,0)
 ;
"RTN","ORY3061",22,0)
 N QUIT,SUB
"RTN","ORY3061",23,0)
 S QUIT=0
"RTN","ORY3061",24,0)
 S SUB="" F  S SUB=$O(@REF@(SUB)) Q:'$L(SUB)  I (SUB[":") D  Q:QUIT
"RTN","ORY3061",25,0)
 .N DD,DA
"RTN","ORY3061",26,0)
 .S DD=$P(SUB,":",1),DA=$P(SUB,":",2)
"RTN","ORY3061",27,0)
 .I $L(DA),'(DA=+DA) D  Q:QUIT
"RTN","ORY3061",28,0)
 ..N DANEW,SUBNEW
"RTN","ORY3061",29,0)
 ..S DANEW=$O(^OCXS($P(DA,U,2),"B",$P(DA,U,1),0))
"RTN","ORY3061",30,0)
 ..I 'DANEW W !!,$P($G(^OCXS(+$P(DA,U,2),0)),U,1),": ",$P(DA,U,1),"  could not resolve name.",!!,"    End Transport." S QUIT=1 Q
"RTN","ORY3061",31,0)
 ..S SUBNEW=DD_":"_DANEW
"RTN","ORY3061",32,0)
 ..I $D(@REF@(SUBNEW)) W !!," multiple #",DANEW," already existed." S QUIT=1 Q
"RTN","ORY3061",33,0)
 ..M @REF@(SUBNEW)=@REF@(SUB)
"RTN","ORY3061",34,0)
 ..K @REF@(SUB)
"RTN","ORY3061",35,0)
 ..S SUB=""
"RTN","ORY3061",36,0)
 .I $L(SUB),($D(@REF@(SUB))>9) S QUIT=$$RES($NA(@REF@(SUB)))
"RTN","ORY3061",37,0)
 ;
"RTN","ORY3061",38,0)
 Q QUIT
"RTN","ORY3061",39,0)
 ;
"RTN","ORY3061",40,0)
MULT(CREF,OCXDD) ;
"RTN","ORY3061",41,0)
 ;
"RTN","ORY3061",42,0)
 N OCXSUB,LREF,RREF,QUIT,OCXFLD
"RTN","ORY3061",43,0)
 S LREF="L"_$E(CREF,2,$L(CREF)),RREF="R"_$E(CREF,2,$L(CREF))
"RTN","ORY3061",44,0)
 ;
"RTN","ORY3061",45,0)
 S QUIT=0,OCXFLD="" F  S OCXFLD=$O(@CREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  D  Q:QUIT
"RTN","ORY3061",46,0)
 .I (OCXFLD[":") D  Q:QUIT
"RTN","ORY3061",47,0)
 ..Q:$$EXFLD(+OCXFLD,0)
"RTN","ORY3061",48,0)
 ..I '$D(@LREF@(OCXDD,OCXFLD,.01,"E")) D  M @LREF@(OCXDD,OCXFLD)=@RREF@(OCXDD,OCXFLD)
"RTN","ORY3061",49,0)
 ...D WARN("Missing multiple:",CREF,OCXDD,OCXFLD)
"RTN","ORY3061",50,0)
 ...S QUIT=$$ADDMULT^ORY3063(CREF,OCXDD,OCXFLD)
"RTN","ORY3061",51,0)
 ..I '$D(@RREF@(OCXDD,OCXFLD,.01,"E")) D  M @RREF@(OCXDD,OCXFLD)=@LREF@(OCXDD,OCXFLD)
"RTN","ORY3061",52,0)
 ...D WARN("Extra multiple:",CREF,OCXDD,OCXFLD)
"RTN","ORY3061",53,0)
 ...S QUIT=$$DELMULT^ORY3063($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY3061",54,0)
 .;
"RTN","ORY3061",55,0)
 .I (OCXFLD=+OCXFLD),'$$EXFLD(+OCXDD,OCXFLD) D
"RTN","ORY3061",56,0)
 ..I ($O(@CREF@(OCXDD,OCXFLD,""))="E") D  Q
"RTN","ORY3061",57,0)
 ...I $L($G(@RREF@(OCXDD,OCXFLD,"E"))),'$L($G(@LREF@(OCXDD,OCXFLD,"E"))) D  Q
"RTN","ORY3061",58,0)
 ....D WARN("Data Value Missing in "_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",59,0)
 ....S QUIT=$$EDITFLD^ORY3064(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",60,0)
 ...I $L($G(@LREF@(OCXDD,OCXFLD,"E"))),'$L($G(@RREF@(OCXDD,OCXFLD,"E"))) D  Q
"RTN","ORY3061",61,0)
 ....D WARN("Extra Data Value in "_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",62,0)
 ....S QUIT=$$DELFLD^ORY3064(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",63,0)
 ...I '(@LREF@(OCXDD,OCXFLD,"E")=@RREF@(OCXDD,OCXFLD,"E")) D
"RTN","ORY3061",64,0)
 ....D WARN("Inconsistent Data",CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",65,0)
 ....S QUIT=$$EDITFLD^ORY3064(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY3061",66,0)
 ..S OCXSUB=0 F  Q:QUIT  S OCXSUB=$O(@CREF@(OCXDD,OCXFLD,OCXSUB)) Q:'OCXSUB  I '($G(@RREF@(OCXDD,OCXFLD,OCXSUB))=$G(@LREF@(OCXDD,OCXFLD,OCXSUB))) D  Q
"RTN","ORY3061",67,0)
 ...D WARN("Inconsistent word Data",CREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY3061",68,0)
 ...S QUIT=$$LOADWORD^ORY3062(RREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY3061",69,0)
 .;
"RTN","ORY3061",70,0)
 .I 'QUIT,(OCXFLD[":") S QUIT=$$MULT($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY3061",71,0)
 Q QUIT
"RTN","ORY3061",72,0)
 ;
"RTN","ORY3061",73,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY3061",74,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY3061",75,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY3061",76,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY3061",77,0)
 ;
"RTN","ORY3061",78,0)
EXFLD(FILE,OCXFLD) ;
"RTN","ORY3061",79,0)
 N OCXFNAM
"RTN","ORY3061",80,0)
 S OCXFNAM=$$FIELD^OCXSENDD(FILE,OCXFLD,"LABEL")
"RTN","ORY3061",81,0)
 I (OCXFNAM["UNIQUE OBJECT IDENTIFIER") Q 1
"RTN","ORY3061",82,0)
 I (FILE=860.2),(OCXFLD=.02) Q 1
"RTN","ORY3061",83,0)
 I (FILE=860.22),(OCXFLD=4) Q 1
"RTN","ORY3061",84,0)
 I (FILE=860.3),(OCXFLD=3) Q 1
"RTN","ORY3061",85,0)
 I (FILE=860.9),(OCXFLD=1) Q 1
"RTN","ORY3061",86,0)
 I (FILE=860.91) Q 1
"RTN","ORY3061",87,0)
 I (FILE=860.801) Q 1
"RTN","ORY3061",88,0)
 I (FILE=860.81) Q 1
"RTN","ORY3061",89,0)
 I (FILE=861.01) Q 1
"RTN","ORY3061",90,0)
 I (FILE=863.02) Q 1
"RTN","ORY3061",91,0)
 I (FILE=863.54) Q 1
"RTN","ORY3061",92,0)
 I (FILE=863.61) Q 1
"RTN","ORY3061",93,0)
 I (FILE=863.72) Q 1
"RTN","ORY3061",94,0)
 I (FILE=863.81) Q 1
"RTN","ORY3061",95,0)
 I ($E(OCXFNAM,1)="*") Q 1
"RTN","ORY3061",96,0)
 Q 0
"RTN","ORY3061",97,0)
 ;
"RTN","ORY3061",98,0)
WARN(MSG,CREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY3061",99,0)
 ;
"RTN","ORY3061",100,0)
 Q:$G(OCXAUTO)
"RTN","ORY3061",101,0)
 ;
"RTN","ORY3061",102,0)
 N D0,DASH,OCXDDPTH,OCXDPTR,FILE,FILEID,LREF,OCXPTR,RREF
"RTN","ORY3061",103,0)
 ;
"RTN","ORY3061",104,0)
 S DASH="",$P(DASH,"-",(55-$L(MSG)))="-"
"RTN","ORY3061",105,0)
 W !!,"------------",MSG,DASH
"RTN","ORY3061",106,0)
 D DSPHDR(CREF,OCXDD,OCXFLD)
"RTN","ORY3061",107,0)
 I $D(OCXSUB) D DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY3061",108,0)
 I '$D(OCXSUB) D DSPREC(CREF,OCXDD,OCXFLD)
"RTN","ORY3061",109,0)
 ;
"RTN","ORY3061",110,0)
 W ! Q
"RTN","ORY3061",111,0)
 ;
"RTN","ORY3061",112,0)
DSPREC(CREF,OCXDD,OCXFLD) ;
"RTN","ORY3061",113,0)
 ;
"RTN","ORY3061",114,0)
 N OCXDPTR,OCXDDPTH,LEVL,OCXCREF,OCXSUB
"RTN","ORY3061",115,0)
 S OCXCREF=$$APPEND($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY3061",116,0)
 S OCXDDPTH=$P($P(OCXCREF,"(",2),")",1),LEVL=$L(OCXDDPTH,",")
"RTN","ORY3061",117,0)
 S OCXSUB="" F  S OCXSUB=$O(@OCXCREF@(OCXSUB)) Q:'$L(OCXSUB)  D
"RTN","ORY3061",118,0)
 .;
"RTN","ORY3061",119,0)
 .I '(OCXSUB[":"),'((OCXSUB=.01)&$O(@OCXCREF@(OCXSUB))) D
"RTN","ORY3061",120,0)
 ..N LINE
"RTN","ORY3061",121,0)
 ..Q:$$EXFLD(+OCXFLD,OCXSUB)
"RTN","ORY3061",122,0)
 ..I OCXFLD W !,?(5+((LEVL)*4)),$$FIELD^OCXSENDD(+OCXFLD,OCXSUB,"LABEL"),": ",$G(@OCXCREF@(OCXSUB,"E"))
"RTN","ORY3061",123,0)
 ..S LINE=0 F  S LINE=$O(@OCXCREF@(OCXSUB,LINE)) Q:'LINE  D
"RTN","ORY3061",124,0)
 ...W !,?(5+(LEVL*4)),$J(LINE,3),">",@OCXCREF@(OCXSUB,LINE)
"RTN","ORY3061",125,0)
 .;
"RTN","ORY3061",126,0)
 .I (OCXSUB[":") D
"RTN","ORY3061",127,0)
 ..N D0,OCXDD,FILENAME
"RTN","ORY3061",128,0)
 ..S D0=+$P(OCXSUB,":",2),OCXDD=+OCXSUB
"RTN","ORY3061",129,0)
 ..S FILENAME=$$FILENAME^OCXSENDD(OCXDD)
"RTN","ORY3061",130,0)
 ..I $L(FILENAME) W !,?(5+($L(LEVL)*4)),FILENAME
"RTN","ORY3061",131,0)
 ..E  W !!,?(5+(LEVL*4)),FILENAME
"RTN","ORY3061",132,0)
 ..W " ",D0,": ",$G(@OCXCREF@(OCXSUB,.01,"E"))
"RTN","ORY3061",133,0)
 ..D DSPREC($$APPEND(CREF,OCXDD),OCXFLD,OCXSUB)
"RTN","ORY3061",134,0)
 ;
"RTN","ORY3061",135,0)
 Q
"RTN","ORY3061",136,0)
 ;
"RTN","ORY3061",137,0)
DSPHDR(CREF,OCXDD,OCXFLD) ;
"RTN","ORY3061",138,0)
 ;
"RTN","ORY3061",139,0)
 N D0,FILE,FILEID,OCXPTR,OCXDDPTH
"RTN","ORY3061",140,0)
 S OCXDDPTH=$P($P($$APPEND($$APPEND(CREF,OCXDD),OCXFLD),"(",2),")",1)
"RTN","ORY3061",141,0)
 S FILE="" F OCXPTR=1:1:$L(OCXDDPTH,",") D
"RTN","ORY3061",142,0)
 .N OCXDD,D0,FILEID
"RTN","ORY3061",143,0)
 .S FILEID=$P(OCXDDPTH,",",OCXPTR)
"RTN","ORY3061",144,0)
 .I (FILEID[":") D
"RTN","ORY3061",145,0)
 ..S D0=+$P(FILEID,":",2),OCXDD=+$E(FILEID,2,$L(FILEID))
"RTN","ORY3061",146,0)
 ..W !,?(5+(OCXPTR*4)),$$FILENAME^OCXSENDD(OCXDD)
"RTN","ORY3061",147,0)
 ..S:$L(FILE) FILE=FILE_"," S FILE=FILE_FILEID
"RTN","ORY3061",148,0)
 ..I $D(@("L("_FILE_",.01,""E"")")) W ": ",@("L("_FILE_",.01,""E"")") W:D0 " [",D0,"]"
"RTN","ORY3061",149,0)
 ..E  I $D(@("R("_FILE_",.01,""E"")")) W ": ",@("R("_FILE_",.01,""E"")") W:D0 " [",D0,"]"
"RTN","ORY3061",150,0)
 ;
"RTN","ORY3061",151,0)
 Q
"RTN","ORY3061",152,0)
 ;
"RTN","ORY3061",153,0)
DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY3061",154,0)
 ;
"RTN","ORY3061",155,0)
 N OCXDPTR,LREF,RREF,OCXDDPTH
"RTN","ORY3061",156,0)
 ;
"RTN","ORY3061",157,0)
 S OCXDDPTH=$P($P($$APPEND(CREF,OCXDD),"(",2),")",1)
"RTN","ORY3061",158,0)
 S LREF="L("_OCXDDPTH_")",RREF="R("_OCXDDPTH_")"
"RTN","ORY3061",159,0)
 W !,?(5+(($L(OCXDDPTH,",")+1)*4)),$$FIELD^OCXSENDD(OCXDD,OCXFLD,"LABEL")," field [",OCXFLD,"]"
"RTN","ORY3061",160,0)
 I OCXSUB W " Line #",OCXSUB
"RTN","ORY3061",161,0)
 ;
"RTN","ORY3061",162,0)
 W:($D(@RREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,",")+2)*4)),"(R) CPRS29.FO-SLCDOMAIN.EXT: ",@RREF@(OCXFLD,OCXSUB)
"RTN","ORY3061",163,0)
 W:($D(@LREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,",")+2)*4)),"(L) ",$$NETNAME^OCXSEND,": ",@LREF@(OCXFLD,OCXSUB)
"RTN","ORY3061",164,0)
 ;
"RTN","ORY3061",165,0)
 Q
"RTN","ORY3061",166,0)
 ;
"RTN","ORY3061",167,0)
 W !,?10 Q 0 Q $$PAUSE
"RTN","ORY3061",168,0)
 ;
"RTN","ORY3061",169,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY3061",170,0)
 ;
"RTN","ORY3061",171,0)
NOW() N X,Y,%DT S X="N",%DT="T" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORY3061",172,0)
 ;
"RTN","ORY3062")
0^32^B26766778
"RTN","ORY3062",1,0)
ORY3062 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY3062",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY3062",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY3062",4,0)
 ;
"RTN","ORY3062",5,0)
S ;
"RTN","ORY3062",6,0)
 ;  Record Utilities
"RTN","ORY3062",7,0)
 Q
"RTN","ORY3062",8,0)
 ;
"RTN","ORY3062",9,0)
ADDREC(OCXCREF) ;
"RTN","ORY3062",10,0)
 ;
"RTN","ORY3062",11,0)
 N QUIT,OCXDD,OCXDA,OCXGREF,OCXNAME
"RTN","ORY3062",12,0)
 S OCXDD=$O(@OCXCREF@("")) Q:'OCXDD 0
"RTN","ORY3062",13,0)
 S OCXNAME=$G(@OCXCREF@(OCXDD,.01,"E"))
"RTN","ORY3062",14,0)
 ;
"RTN","ORY3062",15,0)
 W "   record missing..."
"RTN","ORY3062",16,0)
 I (OCXFLAG["D") Q 0
"RTN","ORY3062",17,0)
 ;
"RTN","ORY3062",18,0)
 S OCXDA=0 D CREATE(OCXCREF,OCXDD,.OCXDA,0)
"RTN","ORY3062",19,0)
 S:$L(OCXNAME) ^TMP("OCXRULE",$J,"A",+OCXDD,OCXNAME)=""
"RTN","ORY3062",20,0)
 ;
"RTN","ORY3062",21,0)
 Q 0
"RTN","ORY3062",22,0)
 ;
"RTN","ORY3062",23,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY3062",24,0)
 ;
"RTN","ORY3062",25,0)
 N OCXFLD,OCXGREF,OCXKEY
"RTN","ORY3062",26,0)
 ;
"RTN","ORY3062",27,0)
 I $L(OCXDA),'(OCXDA=+OCXDA) W !!,"Unresolved subscript." Q
"RTN","ORY3062",28,0)
 ;
"RTN","ORY3062",29,0)
 S OCXKEY=@OCXCREF@(OCXDD,.01,"E")
"RTN","ORY3062",30,0)
 S OCXGREF=$$GETREF(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)
"RTN","ORY3062",31,0)
 I 'OCXDA D
"RTN","ORY3062",32,0)
 .S OCXDA=$O(^TMP("OCXRULE",$J,"B",+OCXDD,OCXKEY,0)) Q:OCXDA
"RTN","ORY3062",33,0)
 .S OCXDA=$O(@(OCXGREF_""" "")"),-1)+1
"RTN","ORY3062",34,0)
 .F OCXDA=OCXDA:1 Q:'$D(@(OCXGREF_OCXDA_",0)"))
"RTN","ORY3062",35,0)
 .I $D(@(OCXGREF_OCXDA_",0)")) S OCXDA=0
"RTN","ORY3062",36,0)
 ;
"RTN","ORY3062",37,0)
 I 'OCXDA W !!,"Error adding record..." Q
"RTN","ORY3062",38,0)
 ;
"RTN","ORY3062",39,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY3062",40,0)
 ;
"RTN","ORY3062",41,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY3061(+OCXDD,OCXFLD) D
"RTN","ORY3062",42,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY3062",43,0)
 .I $O(@OCXCREF@(OCXDD,OCXFLD,0)) D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,OCXCREF)
"RTN","ORY3062",44,0)
 ;
"RTN","ORY3062",45,0)
 D PUSH(.OCXDA)
"RTN","ORY3062",46,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY3062",47,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY3062",48,0)
 D POP(.OCXDA)
"RTN","ORY3062",49,0)
 Q
"RTN","ORY3062",50,0)
 ;
"RTN","ORY3062",51,0)
LOADWORD(RREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY3062",52,0)
 ;
"RTN","ORY3062",53,0)
 N QUIT,DDPATH,INDEX,OCXDA,OCXGREF
"RTN","ORY3062",54,0)
 S DDPATH=$P($P($$APPEND(RREF,OCXDD),"(",2),")",1)
"RTN","ORY3062",55,0)
 F INDEX=1:1:$L(DDPATH,",") S OCXDA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY3062",56,0)
 S OCXDA=$G(OCXDA(0)) K OCXDA(0)
"RTN","ORY3062",57,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY3062",58,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to reload the local '"_$$FIELD^OCXSENDD(+OCXDD,+OCXFLD,"LABEL")_"' field ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY3062",59,0)
 S OCXGREF=$$GETREF(+OCXDD,.OCXDA,$L(DDPATH,",")-1) Q:'$L(OCXGREF)
"RTN","ORY3062",60,0)
 D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,RREF)
"RTN","ORY3062",61,0)
 Q 0
"RTN","ORY3062",62,0)
 ;
"RTN","ORY3062",63,0)
GETREF(OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY3062",64,0)
 ;
"RTN","ORY3062",65,0)
 Q:'OCXDD ""
"RTN","ORY3062",66,0)
 ;
"RTN","ORY3062",67,0)
 N OCXIENS,OCXERR,OCXX
"RTN","ORY3062",68,0)
 S OCXIENS=$$IENS^DILF(.OCXDA),OCXERR=""
"RTN","ORY3062",69,0)
 S OCXX=$$ROOT^DILFD(OCXDD,OCXIENS,0,OCXERR)
"RTN","ORY3062",70,0)
 Q OCXX
"RTN","ORY3062",71,0)
 ;
"RTN","ORY3062",72,0)
WORD(DD,GREF,FLD,DA,RREF) ;
"RTN","ORY3062",73,0)
 ;
"RTN","ORY3062",74,0)
 N SUB,GLROOT,LINE
"RTN","ORY3062",75,0)
 S SUB=$P($$FIELD^OCXSENDD(+DD,FLD,"GLOBAL SUBSCRIPT LOCATION"),";",1) S:'(SUB=+SUB) SUB=""""_SUB_""""
"RTN","ORY3062",76,0)
 S GLROOT=GREF_DA_","_SUB_")" K @GLROOT
"RTN","ORY3062",77,0)
 S LINE=0 F  S LINE=$O(@RREF@(DD,FLD,LINE)) Q:'LINE  D
"RTN","ORY3062",78,0)
 .S @GLROOT@($O(@GLROOT@(""),-1)+1,0)=@RREF@(DD,FLD,LINE)
"RTN","ORY3062",79,0)
 S LINE=$O(@GLROOT@(""),-1),@GLROOT@(0)=U_U_LINE_U_LINE_U_$$DATE("T")_U
"RTN","ORY3062",80,0)
 ;
"RTN","ORY3062",81,0)
 Q
"RTN","ORY3062",82,0)
 ;
"RTN","ORY3062",83,0)
DATE(X) N %DT,Y S %DT="" D ^%DT Q +Y
"RTN","ORY3062",84,0)
 ;
"RTN","ORY3062",85,0)
DIE(OCXDD,OCXDIC,OCXFLD,OCXVAL,OCXDA,OCXLVL) ;
"RTN","ORY3062",86,0)
 ;
"RTN","ORY3062",87,0)
 N DIC,DIE,X,Y,DR,DA,OCXDVAL,OCXPTR,OCXGREF,D0,OCXSCR
"RTN","ORY3062",88,0)
 S (D0,DA)=OCXDA,(DIC,DIE)=OCXDIC,DR=""
"RTN","ORY3062",89,0)
 S:OCXLVL D0=OCXDA(1),DR="S DA(1)="_(+D0)_",D0="_(+D0)_";"
"RTN","ORY3062",90,0)
 S:OCXVAL="?" OCXVAL="? " S DR=DR_OCXFLD_"///^S X=OCXVAL"
"RTN","ORY3062",91,0)
 I '(OCXVAL="@") W !,?(OCXLVL*5),$$FIELD^OCXSENDD(+OCXDD,OCXFLD,"LABEL"),": ",OCXVAL
"RTN","ORY3062",92,0)
 ;
"RTN","ORY3062",93,0)
 I '(OCXVAL="@") D
"RTN","ORY3062",94,0)
 .N OCXIEN,SHORT
"RTN","ORY3062",95,0)
 .S OCXPTR=+$P($$FIELD^OCXSENDD(+OCXDD,OCXFLD,"SPECIFIER"),"P",2)
"RTN","ORY3062",96,0)
 .Q:'OCXPTR
"RTN","ORY3062",97,0)
 .S OCXGREF="^"_$$FIELD^OCXSENDD(+OCXDD,OCXFLD,"POINTER")
"RTN","ORY3062",98,0)
 .I '($E(OCXGREF,1,4)="^OCX"),'(OCXGREF="^ORD(100.9,"),'(OCXGREF="^ORD(100.8,") Q
"RTN","ORY3062",99,0)
 .Q:$$DIC(OCXGREF,OCXVAL,0)
"RTN","ORY3062",100,0)
 .S OCXIEN=$$DIC(OCXGREF,OCXVAL,1)
"RTN","ORY3062",101,0)
 .S ^TMP("OCXRULE",$J,"B",OCXPTR,OCXVAL,OCXIEN)=""
"RTN","ORY3062",102,0)
 ;
"RTN","ORY3062",103,0)
 S OCXSCR=1
"RTN","ORY3062",104,0)
 D ^DIE
"RTN","ORY3062",105,0)
 ;
"RTN","ORY3062",106,0)
 ; I $D(Y) -> DIE FILER ERROR
"RTN","ORY3062",107,0)
 I $D(Y) W "   ^DIE filer data error..." S OCXDIER=$G(OCXDIER)+1
"RTN","ORY3062",108,0)
 I '$D(Y) W "    ...Correct data Filed"
"RTN","ORY3062",109,0)
 ;
"RTN","ORY3062",110,0)
 Q
"RTN","ORY3062",111,0)
 ;
"RTN","ORY3062",112,0)
DIC(DIC,X,OCXADD) N OCXSCR S DIC(0)="",OCXSCR=1 S:OCXADD DIC(0)="L" D ^DIC Q:(+Y>0) +Y Q 0
"RTN","ORY3062",113,0)
 ;
"RTN","ORY3062",114,0)
PUSH(OCXDA) ;
"RTN","ORY3062",115,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY3062",116,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY3062",117,0)
 Q
"RTN","ORY3062",118,0)
 ;
"RTN","ORY3062",119,0)
POP(OCXDA) ;
"RTN","ORY3062",120,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY3062",121,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY3062",122,0)
 Q
"RTN","ORY3062",123,0)
 ;
"RTN","ORY3062",124,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY3062",125,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY3062",126,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY3062",127,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY3062",128,0)
 ;
"RTN","ORY3062",129,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY3062",130,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY3062",131,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY3062",132,0)
 S DIR(0)=OCXZ0
"RTN","ORY3062",133,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY3062",134,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY3062",135,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY3062",136,0)
 D ^DIR
"RTN","ORY3062",137,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY3062",138,0)
 Q Y
"RTN","ORY3062",139,0)
 ;
"RTN","ORY3062",140,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY3062",141,0)
 ;
"RTN","ORY3063")
0^33^B12996430
"RTN","ORY3063",1,0)
ORY3063 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY3063",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY3063",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY3063",4,0)
 ;
"RTN","ORY3063",5,0)
S ;
"RTN","ORY3063",6,0)
 ;  Multiple Utilities
"RTN","ORY3063",7,0)
 Q
"RTN","ORY3063",8,0)
 ;
"RTN","ORY3063",9,0)
ADDMULT(OCXCREF,OCXDD,OCXFLD) ;
"RTN","ORY3063",10,0)
 ;
"RTN","ORY3063",11,0)
 ;
"RTN","ORY3063",12,0)
 N QUIT,OCXDA,OCXGREF,OCXNAME,DDPATH,INDEX
"RTN","ORY3063",13,0)
 ;
"RTN","ORY3063",14,0)
 S DDPATH=$P($P($$APPEND($$APPEND(OCXCREF,OCXDD),OCXFLD),"(",2),")",1)
"RTN","ORY3063",15,0)
 F INDEX=1:1:$L(DDPATH,",") S OCXDA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY3063",16,0)
 S OCXDA=$G(OCXDA(0)) K OCXDA(0)
"RTN","ORY3063",17,0)
 ;
"RTN","ORY3063",18,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY3063",19,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to add a local '"_$$FILENAME^OCXSENDD(+OCXFLD)_"' multiple ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY3063",20,0)
 ;
"RTN","ORY3063",21,0)
 S OCXGREF=$$GETREF^ORY3062(+OCXFLD,.OCXDA,1)
"RTN","ORY3063",22,0)
 D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,1)
"RTN","ORY3063",23,0)
 ;
"RTN","ORY3063",24,0)
 Q 0
"RTN","ORY3063",25,0)
 ;
"RTN","ORY3063",26,0)
DELMULT(OCXCREF,OCXDD) ;
"RTN","ORY3063",27,0)
 ;
"RTN","ORY3063",28,0)
 N QUIT,OCXGREF,DA,INDEX,DDPATH
"RTN","ORY3063",29,0)
 ;
"RTN","ORY3063",30,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY3063",31,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to delete the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' multiple ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY3063",32,0)
 ;
"RTN","ORY3063",33,0)
 S DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY3063",34,0)
 F INDEX=1:1:$L(DDPATH,",") S DA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY3063",35,0)
 S DA=$G(DA(0)) K DA(0)
"RTN","ORY3063",36,0)
 S OCXGREF=$$GETREF^ORY3062(+OCXDD,.DA,1)
"RTN","ORY3063",37,0)
 ;
"RTN","ORY3063",38,0)
 D DIE^ORY3062(+OCXDD,OCXGREF,.01,"@",.DA,$L(DDPATH,",")-1)
"RTN","ORY3063",39,0)
 K @OCXCREF@(OCXDD) W !!,"  deleted..."
"RTN","ORY3063",40,0)
 ;
"RTN","ORY3063",41,0)
 Q 0
"RTN","ORY3063",42,0)
 ;
"RTN","ORY3063",43,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY3063",44,0)
 ;
"RTN","ORY3063",45,0)
 N OCXFLD,OCXGREF
"RTN","ORY3063",46,0)
 ;
"RTN","ORY3063",47,0)
 S OCXGREF=$$GETREF^ORY3062(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_"""@"")"),-1)+1
"RTN","ORY3063",48,0)
 ;
"RTN","ORY3063",49,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY3063",50,0)
 ;
"RTN","ORY3063",51,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY3061(+OCXDD,OCXFLD) D
"RTN","ORY3063",52,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE^ORY3062(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY3063",53,0)
 ;
"RTN","ORY3063",54,0)
 D PUSH(.OCXDA)
"RTN","ORY3063",55,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY3063",56,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY3063",57,0)
 D POP(.OCXDA)
"RTN","ORY3063",58,0)
 Q
"RTN","ORY3063",59,0)
 ;
"RTN","ORY3063",60,0)
PUSH(OCXDA) ;
"RTN","ORY3063",61,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY3063",62,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY3063",63,0)
 Q
"RTN","ORY3063",64,0)
 ;
"RTN","ORY3063",65,0)
POP(OCXDA) ;
"RTN","ORY3063",66,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY3063",67,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY3063",68,0)
 Q
"RTN","ORY3063",69,0)
 ;
"RTN","ORY3063",70,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY3063",71,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY3063",72,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY3063",73,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY3063",74,0)
 ;
"RTN","ORY3063",75,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY3063",76,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY3063",77,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY3063",78,0)
 S DIR(0)=OCXZ0
"RTN","ORY3063",79,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY3063",80,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY3063",81,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY3063",82,0)
 D ^DIR
"RTN","ORY3063",83,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY3063",84,0)
 Q Y
"RTN","ORY3063",85,0)
 ;
"RTN","ORY3063",86,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY3063",87,0)
 ;
"RTN","ORY3064")
0^34^B13526334
"RTN","ORY3064",1,0)
ORY3064 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY3064",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY3064",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY3064",4,0)
 ;
"RTN","ORY3064",5,0)
S ;
"RTN","ORY3064",6,0)
 ;  Field Utilities
"RTN","ORY3064",7,0)
 Q
"RTN","ORY3064",8,0)
 ;
"RTN","ORY3064",9,0)
EDITFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY3064",10,0)
 ;
"RTN","ORY3064",11,0)
 N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT
"RTN","ORY3064",12,0)
 ;
"RTN","ORY3064",13,0)
 S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY3064",14,0)
 S OCXLVL=$L(DDPATH,",")
"RTN","ORY3064",15,0)
 F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,",",OCXPC),":",2)
"RTN","ORY3064",16,0)
 S OCXDA=OCXDA(0) K OCXDA(0)
"RTN","ORY3064",17,0)
 I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D
"RTN","ORY3064",18,0)
 .N RESP
"RTN","ORY3064",19,0)
 .Q:(OCXFLAG["D")
"RTN","ORY3064",20,0)
 .I (OCXFLAG["A") S RESP=$$READ("Y"," Do you want to change the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' field ?","YES") I 'RESP S QUIT=(RESP[U) Q
"RTN","ORY3064",21,0)
 .S OCXGREF=$$GETREF^ORY3062(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)
"RTN","ORY3064",22,0)
 .D DIE^ORY3062(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL-1)
"RTN","ORY3064",23,0)
 ;
"RTN","ORY3064",24,0)
 Q QUIT
"RTN","ORY3064",25,0)
 ;
"RTN","ORY3064",26,0)
DELFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY3064",27,0)
 ;
"RTN","ORY3064",28,0)
 N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT,RESP
"RTN","ORY3064",29,0)
 ;
"RTN","ORY3064",30,0)
 S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY3064",31,0)
 S OCXLVL=$L(DDPATH,",")
"RTN","ORY3064",32,0)
 F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,",",OCXPC),":",2)
"RTN","ORY3064",33,0)
 S OCXDA=OCXDA(0) K OCXDA(0)
"RTN","ORY3064",34,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY3064",35,0)
 I (OCXFLAG["A") S RESP=$$READ("Y"," Do you want to Delete the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' value ?","YES") I 'RESP S QUIT=(RESP[U) Q QUIT
"RTN","ORY3064",36,0)
 S OCXGREF=$$GETREF^ORY3062(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)
"RTN","ORY3064",37,0)
 D DIE^ORY3062(OCXDD,OCXGREF,OCXFLD,"@",.OCXDA,OCXLVL-1)
"RTN","ORY3064",38,0)
 ;
"RTN","ORY3064",39,0)
 Q QUIT
"RTN","ORY3064",40,0)
 ;
"RTN","ORY3064",41,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY3064",42,0)
 ;
"RTN","ORY3064",43,0)
 N OCXFLD,OCXGREF
"RTN","ORY3064",44,0)
 ;
"RTN","ORY3064",45,0)
 S OCXGREF=$$GETREF^ORY3062(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_"""@"")"),-1)+1
"RTN","ORY3064",46,0)
 ;
"RTN","ORY3064",47,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY3064",48,0)
 ;
"RTN","ORY3064",49,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY3061(+OCXDD,OCXFLD) D
"RTN","ORY3064",50,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE^ORY3062(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY3064",51,0)
 ;
"RTN","ORY3064",52,0)
 D PUSH(.OCXDA)
"RTN","ORY3064",53,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY3064",54,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY3064",55,0)
 D POP(.OCXDA)
"RTN","ORY3064",56,0)
 Q
"RTN","ORY3064",57,0)
 ;
"RTN","ORY3064",58,0)
PUSH(OCXDA) ;
"RTN","ORY3064",59,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY3064",60,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY3064",61,0)
 Q
"RTN","ORY3064",62,0)
 ;
"RTN","ORY3064",63,0)
POP(OCXDA) ;
"RTN","ORY3064",64,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY3064",65,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY3064",66,0)
 Q
"RTN","ORY3064",67,0)
 ;
"RTN","ORY3064",68,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY3064",69,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY3064",70,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY3064",71,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY3064",72,0)
 ;
"RTN","ORY3064",73,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY3064",74,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY3064",75,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY3064",76,0)
 S DIR(0)=OCXZ0
"RTN","ORY3064",77,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY3064",78,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY3064",79,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY3064",80,0)
 D ^DIR
"RTN","ORY3064",81,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY3064",82,0)
 Q Y
"RTN","ORY3064",83,0)
 ;
"RTN","ORY3064",84,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY3064",85,0)
 ;
"RTN","ORY306ES")
0^30^B12633358
"RTN","ORY306ES",1,0)
ORY306ES ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*306) ;MAR 13,2012 at 13:09
"RTN","ORY306ES",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17,1997;Build 43
"RTN","ORY306ES",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY306ES",4,0)
 ;
"RTN","ORY306ES",5,0)
S ;
"RTN","ORY306ES",6,0)
 ;
"RTN","ORY306ES",7,0)
 N OCXDIER,QUIT,LINE,TEXT,REMOTE,LOCAL,D0,OPCODE,REF,OCXFLAG S QUIT=0
"RTN","ORY306ES",8,0)
 N OCXAUTO,OCZSCR
"RTN","ORY306ES",9,0)
 ;
"RTN","ORY306ES",10,0)
 D DOT
"RTN","ORY306ES",11,0)
 I $L($T(VERSION^OCXOCMP)),($$VERSION^OCXOCMP="ORDER CHECK EXPERT version 1.01 released OCT 29,1998"),1
"RTN","ORY306ES",12,0)
 E  D  Q
"RTN","ORY306ES",13,0)
 .W !
"RTN","ORY306ES",14,0)
 .W !,"Rule Transport aborted, version mismatch."
"RTN","ORY306ES",15,0)
 .W !,"Current Local version: ",$$VERSION^OCXOCMP
"RTN","ORY306ES",16,0)
 .W !,"   Rule Transport Version: ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
"RTN","ORY306ES",17,0)
 I '$D(DTIME) W !!,"DTIME not defined !!",!! Q
"RTN","ORY306ES",18,0)
 W !!,"Order Check Expert System Rule Transporter"
"RTN","ORY306ES",19,0)
 W !," Created: MAR 13,2012 at 13:09  at  CPRS29.FO-SLCDOMAIN.EXT"
"RTN","ORY306ES",20,0)
 W !," Current Date: ",$$NOW^ORY3060,"  at  ",$$NETNAME^OCXSEND,!!
"RTN","ORY306ES",21,0)
 S LASTFILE=0 K ^TMP("OCXRULE",$J)
"RTN","ORY306ES",22,0)
 S ^TMP("OCXRULE",$J)=($P($H,",",2)+($H*86400)+(1*60*60))_" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"
"RTN","ORY306ES",23,0)
 S OCXFLAG="O"
"RTN","ORY306ES",24,0)
 ;
"RTN","ORY306ES",25,0)
RUN ;
"RTN","ORY306ES",26,0)
 ;
"RTN","ORY306ES",27,0)
 W !,"Loading Data " D ^ORY30601
"RTN","ORY306ES",28,0)
 ;
"RTN","ORY306ES",29,0)
 S LINE=0 F  S LINE=$O(^TMP("OCXRULE",$J,LINE)) Q:'LINE   D  Q:QUIT
"RTN","ORY306ES",30,0)
 .D:'(LINE#50) STATUS^OCXOPOST(LINE,$O(^TMP("OCXRULE",$J," "),-1))
"RTN","ORY306ES",31,0)
 .S TEXT=$G(^TMP("OCXRULE",$J,LINE)) I $L(TEXT) D  Q:QUIT
"RTN","ORY306ES",32,0)
 ..S TEXT=$P(TEXT,";",2,999),OPCODE=$P(TEXT,U,1),TEXT=$P(TEXT,U,2,999)
"RTN","ORY306ES",33,0)
 ..;
"RTN","ORY306ES",34,0)
 ..I OPCODE="KEY" D DOT S LOCAL="",D0=$$GETFILE^ORY3060(+$P(TEXT,U,1),$P(TEXT,U,2),.LOCAL) S QUIT=(D0=(-10)) Q
"RTN","ORY306ES",35,0)
 ..I OPCODE="R" S REF="REMOTE("_$P(TEXT,":",1)_":"_D0_$P(TEXT,":",2,99)_")" Q
"RTN","ORY306ES",36,0)
 ..I OPCODE="D",$D(REF) S @REF=$P(TEXT,U,1,999) K REF Q
"RTN","ORY306ES",37,0)
 ..;
"RTN","ORY306ES",38,0)
 ..I OPCODE="EOR" S QUIT=$$COMPARE^ORY3061(.LOCAL,.REMOTE) K LOCAL,REMOTE Q
"RTN","ORY306ES",39,0)
 ..I OPCODE="EOF" K LOCAL,REMOTE Q
"RTN","ORY306ES",40,0)
 ..I OPCODE="SOF" W !,"  Installing '",TEXT,"' records... " Q
"RTN","ORY306ES",41,0)
 ..I OPCODE="ROOT" D  Q
"RTN","ORY306ES",42,0)
 ...N FILE,DATA
"RTN","ORY306ES",43,0)
 ...S FILE=U_$P(TEXT,U,1),DATA=$P(TEXT,U,2,3)
"RTN","ORY306ES",44,0)
 ...I ($P($G(@FILE),U,1,2)=DATA) Q
"RTN","ORY306ES",45,0)
 ...S $P(@FILE,U,1,2)=DATA
"RTN","ORY306ES",46,0)
 ...W !,"  Restoring file #",(+$P(DATA,U,2))," zero node"
"RTN","ORY306ES",47,0)
 ..;
"RTN","ORY306ES",48,0)
 ..W !,"Unknown OpCode: ",OPCODE,"  in: ",TEXT S QUIT=$$PAUSE^ORY3060 W !
"RTN","ORY306ES",49,0)
 ;
"RTN","ORY306ES",50,0)
 K ^TMP("OCXRULE",$J)
"RTN","ORY306ES",51,0)
 ;
"RTN","ORY306ES",52,0)
 I $D(^OCXS) D
"RTN","ORY306ES",53,0)
 .N FILE,DO,PD0,CNT
"RTN","ORY306ES",54,0)
 .S FILE=0 F  S FILE=$O(^OCXS(FILE)) Q:'FILE  D
"RTN","ORY306ES",55,0)
 ..S D0=0 F CNT=0:1 S PD0=D0,D0=$O(^OCXS(FILE,D0)) Q:'D0
"RTN","ORY306ES",56,0)
 ..S $P(^OCXS(FILE,0),U,3,4)=CNT_U_PD0
"RTN","ORY306ES",57,0)
 ;
"RTN","ORY306ES",58,0)
 I $G(OCXDIER) D
"RTN","ORY306ES",59,0)
 .W !!!!!!!
"RTN","ORY306ES",60,0)
 .W !,?5,"******************** Warning ******************** "
"RTN","ORY306ES",61,0)
 .W !,?7,+$G(OCXDIER)," data filing error",$S(($G(OCXDIER)=1):"",1:"s"),"."
"RTN","ORY306ES",62,0)
 .W !,?7,"Some expert system rules may be incomplete."
"RTN","ORY306ES",63,0)
 .W !,?5,"******************** Warning ******************** "
"RTN","ORY306ES",64,0)
 I '$G(OCXDIER) W !!,?5," No data filing errors."
"RTN","ORY306ES",65,0)
 W !!,"Transport Finished..."
"RTN","ORY306ES",66,0)
 ;
"RTN","ORY306ES",67,0)
 D
"RTN","ORY306ES",68,0)
 .N OCXOETIM
"RTN","ORY306ES",69,0)
 .D BMES^XPDUTL("---Creating Order Check Routines-----------------------------------")
"RTN","ORY306ES",70,0)
 .D AUTO^OCXOCMP
"RTN","ORY306ES",71,0)
 ;
"RTN","ORY306ES",72,0)
 Q
"RTN","ORY306ES",73,0)
 ;
"RTN","ORY306ES",74,0)
DOT Q:$G(OCXAUTO)  W:($X>70) ! W " ." Q
"RTN","ORY306ES",75,0)
 ;
"RTN","ORY306ES",76,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY306ES",77,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY306ES",78,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY306ES",79,0)
 S DIR(0)=OCXZ0
"RTN","ORY306ES",80,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY306ES",81,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY306ES",82,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY306ES",83,0)
 D ^DIR
"RTN","ORY306ES",84,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY306ES",85,0)
 Q Y
"RTN","ORY306ES",86,0)
 ;
"RTN","ORY306PR")
0^52^B2637944
"RTN","ORY306PR",1,0)
ORY306PR ;ISL/JLC - Post-install for patch OR*3*306 ;12/07/12  06:14
"RTN","ORY306PR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306**;Dec 17, 1997;Build 43
"RTN","ORY306PR",3,0)
 ;
"RTN","ORY306PR",4,0)
 ;
"RTN","ORY306PR",5,0)
QPR ; queue provider report to occur monthly
"RTN","ORY306PR",6,0)
 N WHEN,%,X1,X2,X,Y,YR,DT,MN
"RTN","ORY306PR",7,0)
 D LMES("Queue Monthly CS Report by Provider...",10,"B")
"RTN","ORY306PR",8,0)
 D OPTSTAT^XUTMOPT("OR EPCS CS RX BY PROVIDER",.INFO) ;first, check for an existing schedule
"RTN","ORY306PR",9,0)
 S Y=$P($G(INFO(1)),"^",2)
"RTN","ORY306PR",10,0)
 D DD^%DT
"RTN","ORY306PR",11,0)
 S WHEN=Y
"RTN","ORY306PR",12,0)
 I $P($G(INFO(1)),"^",2)]"" D  ;;already scheduled
"RTN","ORY306PR",13,0)
 . D LMES("'OR EPCS CS RX BY PROVIDER' scheduled for "_WHEN,15)
"RTN","ORY306PR",14,0)
 E  D  ;
"RTN","ORY306PR",15,0)
 . S DT=$$NOW^XLFDT,YR=$E(DT,1,3)+1700,MN=$E(100+$E(DT,4,5),2,99) S MN=MN+1 I MN>12 S MN=1,YR=YR+1
"RTN","ORY306PR",16,0)
 . S YR=YR-1700,WHEN=$P(YR_$E(MN+100,2,3)_"01",".")_".21"
"RTN","ORY306PR",17,0)
 . D RESCH^XUTMOPT("OR EPCS CS RX BY PROVIDER",WHEN,"","1M","L")
"RTN","ORY306PR",18,0)
 . S Y=WHEN
"RTN","ORY306PR",19,0)
 . D DD^%DT
"RTN","ORY306PR",20,0)
 . S WHEN=Y
"RTN","ORY306PR",21,0)
 . D LMES("'OR EPCS CS RX BY PROVIDER' scheduled for "_WHEN,15)
"RTN","ORY306PR",22,0)
 ;
"RTN","ORY306PR",23,0)
 D LMES("Continuing...",20)
"RTN","ORY306PR",24,0)
 D LMES("",1,"B")
"RTN","ORY306PR",25,0)
 Q
"RTN","ORY306PR",26,0)
LMES(STR,SPCNUM,BVAR) ; List text in output display
"RTN","ORY306PR",27,0)
 ;
"RTN","ORY306PR",28,0)
 ; INPUT:
"RTN","ORY306PR",29,0)
 ;   STR    - String to output
"RTN","ORY306PR",30,0)
 ;   SPCNUM - # Leading spaces
"RTN","ORY306PR",31,0)
 ;   BVAR   - Null: Do not print a blank prior to text (Default) [MES]
"RTN","ORY306PR",32,0)
 ;            "B" : Print a blank prior to text [BMES]
"RTN","ORY306PR",33,0)
 N ORMSG
"RTN","ORY306PR",34,0)
 S ORMSG=""
"RTN","ORY306PR",35,0)
 S:+$G(SPCNUM)=0 SPCNUM=1
"RTN","ORY306PR",36,0)
 S $P(ORMSG," ",+$G(SPCNUM))=STR
"RTN","ORY306PR",37,0)
 D:$G(BVAR)'="B" MES^XPDUTL(ORMSG)
"RTN","ORY306PR",38,0)
 D:$G(BVAR)="B" BMES^XPDUTL(ORMSG)
"RTN","ORY306PR",39,0)
 Q
"RTN","ORYCHKE")
0^18^B2490043
"RTN","ORYCHKE",1,0)
ORYCHKE ;SLC/DAN Environmental check for installations ;08/30/11  14:28
"RTN","ORYCHKE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280,306**;Dec 17, 1997;Build 43
"RTN","ORYCHKE",3,0)
 ;This routine will check to see if the user is in a production account
"RTN","ORYCHKE",4,0)
 ;if they are then the user will not be allowed to install this
"RTN","ORYCHKE",5,0)
 ;patch/build/bundle
"RTN","ORYCHKE",6,0)
 ;
"RTN","ORYCHKE",7,0)
 I $$PROD^XUPROD D
"RTN","ORYCHKE",8,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","ORYCHKE",9,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","ORYCHKE",10,0)
 .S XPDABORT=1
"RTN","ORYCHKE",11,0)
 Q
"SEC","^DIC",101.52,101.52,0,"AUDIT")
@
"SEC","^DIC",101.52,101.52,0,"DD")
@
"SEC","^DIC",101.52,101.52,0,"DEL")
@
"SEC","^DIC",101.52,101.52,0,"LAYGO")
@
"SEC","^DIC",101.52,101.52,0,"RD")

"SEC","^DIC",101.52,101.52,0,"WR")
@
"VER")
8.0^22.0
"^DD",100.9,100.9,0)
FIELD^^5^12
"^DD",100.9,100.9,0,"DDA")
N
"^DD",100.9,100.9,0,"DT")
2990412
"^DD",100.9,100.9,0,"IX","B",100.9,.01)

"^DD",100.9,100.9,0,"IX","C",100.9,.02)

"^DD",100.9,100.9,0,"IX","D",100.9,.03)

"^DD",100.9,100.9,0,"NM","OE/RR NOTIFICATIONS")

"^DD",100.9,100.9,0,"PT",100.21019,.01)

"^DD",100.9,100.9,0,"PT",860.22,3)

"^DD",100.9,100.9,0,"VRPK")
OR
"^DD",100.9,100.9,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100.9,100.9,.001,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",100.9,100.9,.001,21,0)
5^.001^2^2^3121015^^^
"^DD",100.9,100.9,.001,21,1,0)
This is the internal entry number assigned to a notification.  Entries
"^DD",100.9,100.9,.001,21,2,0)
1 through 999 are reserved for the releasing package, OE/RR Notifications.
"^DD",100.9,100.9,.001,21,3,0)
To add site specific notifications, prefix the Notification Number with
"^DD",100.9,100.9,.001,21,4,0)
your site number (e.g., Site specific Nuclear Medicine Results Notification
"^DD",100.9,100.9,.001,21,5,0)
at Salt Lake might be assigned "66001").
"^DD",100.9,100.9,.001,23,0)
^.001^3^3^3121015^^^^
"^DD",100.9,100.9,.001,23,1,0)
This field is used by DHCP packages triggering notifications (Lab, MAS, etc)
"^DD",100.9,100.9,.001,23,2,0)
to send the correct message and parameters to OE/RR.  These numbers must not
"^DD",100.9,100.9,.001,23,3,0)
be altered in any fashion.
"^DD",100.9,100.9,.001,"DT")
2910520
"^DD",100.9,100.9,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",100.9,100.9,.01,1,0)
^.1
"^DD",100.9,100.9,.01,1,1,0)
100.9^B
"^DD",100.9,100.9,.01,1,1,1)
S ^ORD(100.9,"B",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.01,1,1,2)
K ^ORD(100.9,"B",$E(X,1,30),DA)
"^DD",100.9,100.9,.01,1,2,0)
^^TRIGGER^100.9^.02
"^DD",100.9,100.9,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^ORD(100.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="OR" X ^DD(100.9,.01,1,2,1.4)
"^DD",100.9,100.9,.01,1,2,1.4)
S DIH=$S($D(^ORD(100.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=100.9,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",100.9,100.9,.01,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^ORD(100.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=X X ^DD(100.9,.01,1,2,2.4)
"^DD",100.9,100.9,.01,1,2,2.4)
S DIH=$S($D(^ORD(100.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=100.9,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",100.9,100.9,.01,1,2,"%D",0)
^^2^2^2920505^
"^DD",100.9,100.9,.01,1,2,"%D",1,0)
Automatically trigger the setting of the PACKAGE ID field with "OR"
"^DD",100.9,100.9,.01,1,2,"%D",2,0)
to indicate ORder entry when a notification is created.
"^DD",100.9,100.9,.01,1,2,"CREATE VALUE")
"OR"
"^DD",100.9,100.9,.01,1,2,"DELETE VALUE")
OLD NAME
"^DD",100.9,100.9,.01,1,2,"DT")
2920505
"^DD",100.9,100.9,.01,1,2,"FIELD")
PACKAGE ID
"^DD",100.9,100.9,.01,3)
Answer must be 3-30 characters in length. Enter the name of the notification.  The name should match the entry in the MESSAGE TEXT field as closely as possible.
"^DD",100.9,100.9,.01,21,0)
^^4^4^2990416^^^^
"^DD",100.9,100.9,.01,21,1,0)
This is the name of the notification.  It should match the text in the
"^DD",100.9,100.9,.01,21,2,0)
MESSAGE TEXT field as closely as possible (it may be an abbreviated version
"^DD",100.9,100.9,.01,21,3,0)
of the entry in MESSAGE TEXT.)  This field is displayed to users when
"^DD",100.9,100.9,.01,21,4,0)
selecting or reviewing entries in this file (100.9).
"^DD",100.9,100.9,.01,"DT")
2920505
"^DD",100.9,100.9,.02,0)
PACKAGE ID^RFX^^0;2^S X="OR" ;K:X[""""!($A(X)=^ X I $D(X) K:$L(X)>20!($L(X)<2) X
"^DD",100.9,100.9,.02,1,0)
^.1
"^DD",100.9,100.9,.02,1,1,0)
100.9^C
"^DD",100.9,100.9,.02,1,1,1)
S ^ORD(100.9,"C",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.02,1,1,2)
K ^ORD(100.9,"C",$E(X,1,30),DA)
"^DD",100.9,100.9,.02,1,1,"%D",0)
^^2^2^2920427^^
"^DD",100.9,100.9,.02,1,1,"%D",1,0)
This cross-reference provides a way to group notifications by package or 
"^DD",100.9,100.9,.02,1,1,"%D",2,0)
other category.
"^DD",100.9,100.9,.02,1,1,"DT")
2910429
"^DD",100.9,100.9,.02,3)
Always enter "OR" in this field.  This field is used to create the XQAID field passed to the XQALERT entry points.  It will typically be the Package ID. 
"^DD",100.9,100.9,.02,5,1,0)
100.9^.01^2
"^DD",100.9,100.9,.02,9)
^
"^DD",100.9,100.9,.02,21,0)
^^10^10^2990416^^^^
"^DD",100.9,100.9,.02,21,1,0)
This entry should always be "OR" to indicate the alert (notification) is 
"^DD",100.9,100.9,.02,21,2,0)
processed by OE/RR.  "OR" is stuffed via a trigger x-ref in field .01.
"^DD",100.9,100.9,.02,21,3,0)
This Package ID will have ";DFN;NIEN" concatenated to the end of it, to
"^DD",100.9,100.9,.02,21,4,0)
make the XQAID variable which is used by the XQALERT routine to provide a
"^DD",100.9,100.9,.02,21,5,0)
unique cross-reference.  The order entry notification system will check
"^DD",100.9,100.9,.02,21,6,0)
the New person file to determine if this message is already pending for
"^DD",100.9,100.9,.02,21,7,0)
the user.  If it already exists, the user will not receive a second message.
"^DD",100.9,100.9,.02,21,8,0)
 
"^DD",100.9,100.9,.02,21,9,0)
DFN is the Patient File internal entry number.
"^DD",100.9,100.9,.02,21,10,0)
NIEN is the Notification File internal entry number.
"^DD",100.9,100.9,.02,"DT")
2911008
"^DD",100.9,100.9,.03,0)
MESSAGE TEXT^RF^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>51!($L(X)<3) X
"^DD",100.9,100.9,.03,1,0)
^.1
"^DD",100.9,100.9,.03,1,1,0)
100.9^D
"^DD",100.9,100.9,.03,1,1,1)
S ^ORD(100.9,"D",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.03,1,1,2)
K ^ORD(100.9,"D",$E(X,1,30),DA)
"^DD",100.9,100.9,.03,1,1,"%D",0)
^^1^1^2910429^
"^DD",100.9,100.9,.03,1,1,"%D",1,0)
This cross reference provides a look-up based on the Message Text.
"^DD",100.9,100.9,.03,1,1,"DT")
2910429
"^DD",100.9,100.9,.03,3)
Answer must be 3-51 characters in length.  This entry is used as the actual text of the notification (MESSAGE TYPE = 'NOT') or the default text (MESSAGE TEXT = 'PKG').
"^DD",100.9,100.9,.03,21,0)
^^6^6^2920224^^^^
"^DD",100.9,100.9,.03,21,1,0)
This text will be appended to the Patient last name and last 4 characters of
"^DD",100.9,100.9,.03,21,2,0)
the social security number to create the order notification text.
"^DD",100.9,100.9,.03,21,3,0)
(e.g., SMITH (4356): Unsigned orders. - Where "Unsigned orders." is the 
"^DD",100.9,100.9,.03,21,4,0)
content of MESSAGE TEXT.)  Text entered into this field is the default text
"^DD",100.9,100.9,.03,21,5,0)
for notifications where the text message usually comes from the package
"^DD",100.9,100.9,.03,21,6,0)
(MESSAGE TYPE = PKG).
"^DD",100.9,100.9,.03,"DT")
2911008
"^DD",100.9,100.9,.04,0)
MESSAGE TYPE^RS^PKG:PACKAGE PROVIDES A VARIABLE MESSAGE;NOT:NOTIFICATION FILE PROVIDES MESSAGE;^0;4^Q
"^DD",100.9,100.9,.04,3)
Messages can be provided by the NOTIFICATION file where they are defined with the notification 'NOT' or they can be variable messages supplied by the package 'PKG' when the notification is triggered.
"^DD",100.9,100.9,.04,21,0)
^^1^1^2960503^^^^
"^DD",100.9,100.9,.04,21,1,0)
MESSAGE TYPE field is used as a flag to determine where the message text originates.  If from the NOTIFICATION file, MESSAGE TYPE is 'NOT.'  If the message comes from the package, MESSAGE TYPE is 'PKG.'
"^DD",100.9,100.9,.04,"DT")
2910627
"^DD",100.9,100.9,.05,0)
ACTION FLAG^RS^I:INFORMATION ONLY;R:RUN ROUTINE;^0;5^Q
"^DD",100.9,100.9,.05,3)
Enter 'I' if the user is to take no follow-up action for this notification.  Enter 'R' if the user is to take a follow-up action after viewing this notification (e.g. Sign an unsigned order.)
"^DD",100.9,100.9,.05,21,0)
^^7^7^2920417^^^^
"^DD",100.9,100.9,.05,21,1,0)
This a mandatory flag used to regulate processing in XQALERT processing.
"^DD",100.9,100.9,.05,21,2,0)
The flag is set to I to indicate the notification is for INFORMATION ONLY - 
"^DD",100.9,100.9,.05,21,3,0)
no follow-up action is to be taken.  'I' notifications are deleted as each
"^DD",100.9,100.9,.05,21,4,0)
user reviews them.  'R' notifications have a follow-up action associated
"^DD",100.9,100.9,.05,21,5,0)
with them.  The user will be taken to another routine or option when they
"^DD",100.9,100.9,.05,21,6,0)
select a notification with ACTION FLAG = R and a follow-up routine/option
"^DD",100.9,100.9,.05,21,7,0)
is defined.
"^DD",100.9,100.9,.05,"DT")
2910627
"^DD",100.9,100.9,.06,0)
ENTRY POINT^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",100.9,100.9,.06,3)
Answer must be 1-8 characters in length.  This should be the tag to be concatenated with the ROUTINE NAME (.07) field.  It is the entry point for follow-up action in that routine.
"^DD",100.9,100.9,.06,21,0)
^^2^2^2920224^^^
"^DD",100.9,100.9,.06,21,1,0)
This is an optional field used to create the XQAROU variable to be used by
"^DD",100.9,100.9,.06,21,2,0)
the XQALERT routine.  This field represents the TAG in tag^routine. 
"^DD",100.9,100.9,.06,"DT")
2910429
"^DD",100.9,100.9,.07,0)
ROUTINE NAME^F^^0;7^K:$L(X)>8!($L(X)<2) X
"^DD",100.9,100.9,.07,3)
Answer must be 2-8 characters in length.  This is concatenated with the ENTRY POINT (.06) to create XQAROU.  It is the routine where the follow-up action (if any) for this notification is initiated.
"^DD",100.9,100.9,.07,21,0)
^^2^2^2920224^^^
"^DD",100.9,100.9,.07,21,1,0)
This is an optional variable identifying a routine or tag(field .06)^routine
"^DD",100.9,100.9,.07,21,2,0)
used to create XQAROU for processing by XQALERT.
"^DD",100.9,100.9,.07,"DT")
2910429
"^DD",100.9,100.9,1,0)
NON-MENU TYPE OPTION ACTION^P19'^DIC(19,^1;1^Q
"^DD",100.9,100.9,1,3)
This field is for future enhancements.  It is currently (5/92) unused.
"^DD",100.9,100.9,1,21,0)
^^5^5^2920506^^^^
"^DD",100.9,100.9,1,21,1,0)
This is an optional field used to create the variable XQAOPT for use
"^DD",100.9,100.9,1,21,2,0)
by XQALERT.  It should indicate a non-menu type option on the user's
"^DD",100.9,100.9,1,21,3,0)
primary or secondary menu, not on the Common menu.  The phantom jump 
"^DD",100.9,100.9,1,21,4,0)
is used to navigate to the destination option and will check pathway
"^DD",100.9,100.9,1,21,5,0)
restrictions in doing so.
"^DD",100.9,100.9,1,"DT")
2910429
"^DD",100.9,100.9,1.5,0)
RELATED PACKAGE^F^^1;2^K:$L(X)>30!($L(X)<2) X
"^DD",100.9,100.9,1.5,3)
Answer must be 2-30 characters in length.  Enter the appropriate name of the package where the notification originates (e.g., LAB, MAS, Pharmacy.)
"^DD",100.9,100.9,1.5,21,0)
^^1^1^2920224^^^
"^DD",100.9,100.9,1.5,21,1,0)
This field contains the name of the package where the notification originates or is triggered (e.g., LAB, MAS, Pharmacy.)
"^DD",100.9,100.9,1.5,"DT")
2910627
"^DD",100.9,100.9,4,0)
DESCRIPTION^RF^^4;1^K:$L(X)>250!($L(X)<3) X
"^DD",100.9,100.9,4,3)
Answer must be 3-250 characters in length.  Enter a description of the notification with emphasis on what triggers the notification and what actions delete it.
"^DD",100.9,100.9,4,21,0)
^^2^2^2950711^^^
"^DD",100.9,100.9,4,21,1,0)
This field contains free text describing the notification, how it is trig-
"^DD",100.9,100.9,4,21,2,0)
gered and what action(s) delete it.
"^DD",100.9,100.9,4,"DT")
2950424
"^DD",100.9,100.9,5,0)
FOLLOW-UP TYPE^S^0:REPORT;1:COSIGN_PN;2:EXPIRING_ORDER;3:FLAGGED_ORDER;4:ORDER;5:UNLINKED;6:NEW_CONSULT;7:NEW_ORDER;8:COSIGN_ORDER;9:ES_ORDER;10:UNSIGN_PN;11:UNVERIFIED_MED;^3;2^Q
"^DD",100.9,100.9,5,3)
Enter the follow-up code correspond to the notification's follow-up action.  If unsure, leave blank.
"^DD",100.9,100.9,5,21,0)
^^5^5^2990412^^^^
"^DD",100.9,100.9,5,21,1,0)
This field contains the type of follow-up action to be taken.  It is used 
"^DD",100.9,100.9,5,21,2,0)
by the application managing the follow-up action  (e.g. GUI interface) to
"^DD",100.9,100.9,5,21,3,0)
initiate the proper follow-up action separate from the underlying data 
"^DD",100.9,100.9,5,21,4,0)
base and application layers.  Example follow-up types include: report,
"^DD",100.9,100.9,5,21,5,0)
e/s, flag.
"^DD",100.9,100.9,5,23,0)
^^6^6^2990412^^^^
"^DD",100.9,100.9,5,23,1,0)
This field is basically a flag for the environment (e.g. GUI - Delphi)
"^DD",100.9,100.9,5,23,2,0)
handling notification follow-up to initiate the appropriate action.  For
"^DD",100.9,100.9,5,23,3,0)
example if the type was report, the data returned in the API call would be
"^DD",100.9,100.9,5,23,4,0)
stuffed into a generic text box for display; whereas if the type was
"^DD",100.9,100.9,5,23,5,0)
flag, the follow-up action would be to find and display all flagged orders
"^DD",100.9,100.9,5,23,6,0)
for the patient and allow unflagging.
"^DD",100.9,100.9,5,"DT")
2990412
"^DD",101.41,101.41,0)
FIELD^^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
2980501
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=). 
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
2970318
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DD",101.52,101.52,0)
FIELD^^41^31
"^DD",101.52,101.52,0,"DDA")
N
"^DD",101.52,101.52,0,"DT")
3130219
"^DD",101.52,101.52,0,"IX","AC",101.52,.01)

"^DD",101.52,101.52,0,"IX","B",101.52,.01)

"^DD",101.52,101.52,0,"NM","ORDER DEA ARCHIVE INFO")

"^DD",101.52,101.52,.01,0)
CPRS ORDER NUMBER^RP100'^OR(100,^0;1^Q
"^DD",101.52,101.52,.01,1,0)
^.1
"^DD",101.52,101.52,.01,1,1,0)
101.52^B
"^DD",101.52,101.52,.01,1,1,1)
S ^ORPA(101.52,"B",$E(X,1,30),DA)=""
"^DD",101.52,101.52,.01,1,1,2)
K ^ORPA(101.52,"B",$E(X,1,30),DA)
"^DD",101.52,101.52,.01,1,2,0)
101.52^AC^MUMPS
"^DD",101.52,101.52,.01,1,2,1)
D AUDIT^ORDEAAUD
"^DD",101.52,101.52,.01,1,2,2)
Q
"^DD",101.52,101.52,.01,1,2,"%D",0)
^^1^1^3130219^
"^DD",101.52,101.52,.01,1,2,"%D",1,0)
Populates the STACK field (#41).
"^DD",101.52,101.52,.01,1,2,"DT")
3130219
"^DD",101.52,101.52,.01,3)
Enter the CPRS order number associated with this archive entry.
"^DD",101.52,101.52,.01,21,0)
^^1^1^3121204^
"^DD",101.52,101.52,.01,21,1,0)
The CPRS order number that is associated with this archive entry.
"^DD",101.52,101.52,.01,"DT")
3130219
"^DD",101.52,101.52,1,0)
PRESCRIPTION NUMBER^P52'^PSRX(^0;2^Q
"^DD",101.52,101.52,1,3)
Enter the prescription number associated with this archive entry.
"^DD",101.52,101.52,1,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,1,21,1,0)
The prescription number associated with this archive entry. This field is
"^DD",101.52,101.52,1,21,2,0)
populated once Outpatient Pharmacy has determined that the contents of the
"^DD",101.52,101.52,1,21,3,0)
prescription received match what was entered by the provider.
"^DD",101.52,101.52,1,"DT")
3121205
"^DD",101.52,101.52,2,0)
DIG SIG HASH^F^^0;3^K:$L(X)>100!($L(X)<1) X
"^DD",101.52,101.52,2,3)
Enter the digital signature hash associated with this order (1-100 characters).
"^DD",101.52,101.52,2,21,0)
^^6^6^3121205^^
"^DD",101.52,101.52,2,21,1,0)
This is the digital signature hash associated with this order. This 
"^DD",101.52,101.52,2,21,2,0)
'hash' is calculated by a Microsoft API that is called by the Kernel code 
"^DD",101.52,101.52,2,21,3,0)
during the signature process in CPRS.
"^DD",101.52,101.52,2,21,4,0)
 
"^DD",101.52,101.52,2,21,5,0)
It is stored here so that, at any time, a hash can be calculated and 
"^DD",101.52,101.52,2,21,6,0)
compared to this value to ensure the contents have not changed.
"^DD",101.52,101.52,2,"DT")
3121205
"^DD",101.52,101.52,4,0)
ISSUANCE DATE^D^^1;1^S %DT="EX" D ^%DT S X=Y K:3110701>X X
"^DD",101.52,101.52,4,3)
Enter the date of issuance for this order.
"^DD",101.52,101.52,4,21,0)
^^2^2^3121204^
"^DD",101.52,101.52,4,21,1,0)
This is the date this order was issued. In other words, what date was it 
"^DD",101.52,101.52,4,21,2,0)
entered into CPRS.
"^DD",101.52,101.52,4,"DT")
3121207
"^DD",101.52,101.52,6,0)
DRUG NAME^F^^1;2^K:$L(X)>40!($L(X)<1) X
"^DD",101.52,101.52,6,3)
Enter the drug name associated with this order (1-40 characters).
"^DD",101.52,101.52,6,21,0)
^^4^4^3121206^
"^DD",101.52,101.52,6,21,1,0)
This is the drug name associated with the CPRS orderable item for this 
"^DD",101.52,101.52,6,21,2,0)
order. It will only be present if the dispense drug is known at the time 
"^DD",101.52,101.52,6,21,3,0)
the archive entry is created. This information comes from the GENERIC 
"^DD",101.52,101.52,6,21,4,0)
NAME field (#.01) from the DRUG file (#50).
"^DD",101.52,101.52,6,"DT")
3121206
"^DD",101.52,101.52,8,0)
QTY PRESCRIBED^NJ11,2^^1;5^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."3.N) X
"^DD",101.52,101.52,8,3)
Enter the quantity ordered by the provider (1 and 99999999 maximum 2 decimal digits).
"^DD",101.52,101.52,8,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,8,21,1,0)
This is the quantity of pills/tablets/liquid specified by the provider 
"^DD",101.52,101.52,8,21,2,0)
for this order. This field correlates to the QTY field (#7) in the 
"^DD",101.52,101.52,8,21,3,0)
PRESCRIPTION file (#52).
"^DD",101.52,101.52,8,"DT")
3121206
"^DD",101.52,101.52,9,0)
DIRECTIONS FOR USE (SIG)^101.529A^^2;0
"^DD",101.52,101.52,9,21,0)
^^4^4^3121205^^
"^DD",101.52,101.52,9,21,1,0)
This is a multiple field for storing the directions for use. In this 
"^DD",101.52,101.52,9,21,2,0)
particular storage location, directions are stored in the format that 
"^DD",101.52,101.52,9,21,3,0)
they are transmitted via the HL7 array and protocols to Pharmacy, rather 
"^DD",101.52,101.52,9,21,4,0)
than in human readable format.
"^DD",101.52,101.52,10,0)
DEA #^F^^3;1^K:$L(X)>20!($L(X)<1) X
"^DD",101.52,101.52,10,3)
Enter the DEA # or the Facility DEA - VA # used by the provider to sign this order (1-20 characters).
"^DD",101.52,101.52,10,21,0)
^^10^10^3121206^
"^DD",101.52,101.52,10,21,1,0)
This is the DEA license number of the provider that signed the order. The 
"^DD",101.52,101.52,10,21,2,0)
DEA number is pulled from one of two places. If present and valid, it 
"^DD",101.52,101.52,10,21,3,0)
will be the DEA# field (#53.2) in the NEW PERSON file (#200) at the time
"^DD",101.52,101.52,10,21,4,0)
the order is signed.
"^DD",101.52,101.52,10,21,5,0)
 
"^DD",101.52,101.52,10,21,6,0)
If the provider doesn't have personal DEA credentials, this field will 
"^DD",101.52,101.52,10,21,7,0)
contain the facility DEA number, followed by a '-', followed by the
"^DD",101.52,101.52,10,21,8,0)
provider's VA suffix. This number pulls from the FACILITY DEA NUMBER field
"^DD",101.52,101.52,10,21,9,0)
(#52) in the INSTITUTION file (#4) and the VA# field (#53.3) in the NEW
"^DD",101.52,101.52,10,21,10,0)
PERSON file (#200).
"^DD",101.52,101.52,10,"DT")
3121206
"^DD",101.52,101.52,11,0)
DETOX #^F^^3;2^K:$L(X)>9!($L(X)<3) X
"^DD",101.52,101.52,11,3)
Enter the Detox/Maintenance number for this order (3-9 characters).
"^DD",101.52,101.52,11,21,0)
^^7^7^3121205^
"^DD",101.52,101.52,11,21,1,0)
This is the Detox/Maintenance license number associated with the provider 
"^DD",101.52,101.52,11,21,2,0)
that signed this order. This comes from the DETOX/MAINTENANCE ID 
"^DD",101.52,101.52,11,21,3,0)
NUMBER field (#53.11) from the NEW PERSON file (#200) at the time the
"^DD",101.52,101.52,11,21,4,0)
order is signed.
"^DD",101.52,101.52,11,21,5,0)
 
"^DD",101.52,101.52,11,21,6,0)
Not every medication requires a Detox/Maintenance license, so this field 
"^DD",101.52,101.52,11,21,7,0)
will frequently be blank.
"^DD",101.52,101.52,11,"DT")
3121205
"^DD",101.52,101.52,12,0)
PROVIDER NAME^F^^3;3^K:$L(X)>35!($L(X)<3) X
"^DD",101.52,101.52,12,3)
Enter the name of the provider associated with this order (3-35 characters).
"^DD",101.52,101.52,12,21,0)
^^2^2^3121205^
"^DD",101.52,101.52,12,21,1,0)
The name of the provider, from the NAME field (#.01) of the NEW PERSON
"^DD",101.52,101.52,12,21,2,0)
file (#200), at the time the order is signed.
"^DD",101.52,101.52,12,"DT")
3121205
"^DD",101.52,101.52,13,0)
PROVIDER ADDRESS #1^F^^4;1^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,13,3)
Enter the name of the VA facility where this order was signed (3-30 character).
"^DD",101.52,101.52,13,21,0)
^^2^2^3121206^
"^DD",101.52,101.52,13,21,1,0)
This is the VA facility name where this order was signed. This comes from
"^DD",101.52,101.52,13,21,2,0)
the NAME field (.01) of the INSTITUTION file (#4).
"^DD",101.52,101.52,13,"DT")
3121206
"^DD",101.52,101.52,14,0)
PROVIDER ADDRESS #2^F^^4;2^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,14,3)
Enter Street Address 1 for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,14,21,0)
^^3^3^3121206^^
"^DD",101.52,101.52,14,21,1,0)
This is the first line of the street address for the VA facility 
"^DD",101.52,101.52,14,21,2,0)
where this order was signed. This comes from the STREET ADDR. 1 field
"^DD",101.52,101.52,14,21,3,0)
(1.01) of the INSTITUTION file (#4).
"^DD",101.52,101.52,14,"DT")
3121206
"^DD",101.52,101.52,15,0)
PROVIDER ADDRESS #3^F^^4;3^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,15,3)
Enter Street Address 2 for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,15,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,15,21,1,0)
This is the second line of the street address of the VA facility 
"^DD",101.52,101.52,15,21,2,0)
where this order was signed. This comes from the STREET ADDR. 2 field
"^DD",101.52,101.52,15,21,3,0)
(#1.02) in the INSTITUTION file (#4).
"^DD",101.52,101.52,15,"DT")
3121206
"^DD",101.52,101.52,16,0)
PROVIDER CITY^F^^4;4^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,16,3)
Enter the City for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,16,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,16,21,1,0)
This is the city associated with the VA facility where this order was 
"^DD",101.52,101.52,16,21,2,0)
signed. This comes from the CITY field (#1.03) in the INSTITUTION file
"^DD",101.52,101.52,16,21,3,0)
(#4).
"^DD",101.52,101.52,16,"DT")
3121206
"^DD",101.52,101.52,17,0)
PROVIDER STATE^F^^4;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,17,3)
Enter the state for the VA facility where this order was signed (1-30 characters).
"^DD",101.52,101.52,17,21,0)
^^2^2^3121205^
"^DD",101.52,101.52,17,21,1,0)
This is the state associated with the VA facility where this order was 
"^DD",101.52,101.52,17,21,2,0)
signed. This is from the NAME field (.01) of the STATE file (#5).
"^DD",101.52,101.52,17,"DT")
3121205
"^DD",101.52,101.52,17.5,0)
PROVIDER ZIP+4^F^^4;6^K:$L(X)>10!($L(X)<5) X
"^DD",101.52,101.52,17.5,3)
Enter ZIP or ZIP+4 for the VA facility where this order was signed (5 - 10 characters).
"^DD",101.52,101.52,17.5,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,17.5,21,1,0)
This is the ZIP or ZIP + 4 of the VA facility where this order was 
"^DD",101.52,101.52,17.5,21,2,0)
signed. This field comes from the ZIP field (#1.04) in the INSTITUTION
"^DD",101.52,101.52,17.5,21,3,0)
file (#4).
"^DD",101.52,101.52,17.5,"DT")
3121206
"^DD",101.52,101.52,18,0)
PATIENT NAME^F^^5;1^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,18,3)
Enter the name of the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,18,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,18,21,1,0)
This is the patient name of the patient for whom the prescription was 
"^DD",101.52,101.52,18,21,2,0)
written and signed. This is correlated to the NAME field (#.01) of the 
"^DD",101.52,101.52,18,21,3,0)
PATIENT file (#2).
"^DD",101.52,101.52,18,"DT")
3121205
"^DD",101.52,101.52,19,0)
PATIENT^P2'^DPT(^5;2^Q
"^DD",101.52,101.52,19,3)
Select the patient associated with this order.
"^DD",101.52,101.52,19,21,0)
^^1^1^3121205^
"^DD",101.52,101.52,19,21,1,0)
This is the patient associated with this order.
"^DD",101.52,101.52,19,"DT")
3121205
"^DD",101.52,101.52,20,0)
ICN^F^^5;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,20,3)
Enter the ICN for the patient associated with this order (1-30 characters).
"^DD",101.52,101.52,20,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,20,21,1,0)
This is the Integration Control Registration (ICN) number associated with 
"^DD",101.52,101.52,20,21,2,0)
the patient for which this order was written/signed. This is the value 
"^DD",101.52,101.52,20,21,3,0)
returned from GETICN^MPIF001. It may be a national ICN or a local ICN.
"^DD",101.52,101.52,20,"DT")
3121205
"^DD",101.52,101.52,21,0)
PATIENT ADDRESS #1^F^^6;1^K:$L(X)>35!($L(X)<3) X
"^DD",101.52,101.52,21,3)
Enter address line 1 for the patient associated with this order (3-35 characters).
"^DD",101.52,101.52,21,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,21,21,1,0)
This is the address of the patient at the time the order was placed. It 
"^DD",101.52,101.52,21,21,2,0)
is the VAPA(1) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,21,21,3,0)
temporary or foreign address, it would be the STREET ADDRESS [LINE 1]
"^DD",101.52,101.52,21,21,4,0)
field (#.111) from the PATIENT file (#2).
"^DD",101.52,101.52,21,"DT")
3121205
"^DD",101.52,101.52,22,0)
PATIENT ADDRESS #2^F^^6;2^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,22,3)
Enter address line 2 for the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,22,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,22,21,1,0)
This is address line 2 of the patient associated with this order. It is 
"^DD",101.52,101.52,22,21,2,0)
the VAPA(2) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,22,21,3,0)
temporary or foreign address, it would be the STREET ADDRESS [LINE 2]
"^DD",101.52,101.52,22,21,4,0)
field (#.112) from the PATIENT file (#2).
"^DD",101.52,101.52,22,"DT")
3121205
"^DD",101.52,101.52,24,0)
PATIENT ADDRESS #3^F^^6;3^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,24,3)
Enter address line 3 for the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,24,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,24,21,1,0)
This is address line 3 for the patient associated with this order. It is 
"^DD",101.52,101.52,24,21,2,0)
the VAPA(3) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,24,21,3,0)
temporary or foreign address, it would the STREET ADDRESS [LINE 3] field 
"^DD",101.52,101.52,24,21,4,0)
(#.113) from the PATIENT file (#2).
"^DD",101.52,101.52,24,"DT")
3121205
"^DD",101.52,101.52,25,0)
PATIENT CITY^F^^6;4^K:$L(X)>15!($L(X)<2) X
"^DD",101.52,101.52,25,3)
Enter the city for the address of that patient associated with this order (2-15 characters).
"^DD",101.52,101.52,25,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,25,21,1,0)
This is the city associated with the address for the patient associated 
"^DD",101.52,101.52,25,21,2,0)
with this order. It is the VAPA(4) return value from the call to
"^DD",101.52,101.52,25,21,3,0)
ADD^VADPT. Assuming no temporary or foreign address, it would the CITY 
"^DD",101.52,101.52,25,21,4,0)
field (#.114) from the PATIENT file (#2).
"^DD",101.52,101.52,25,"DT")
3121206
"^DD",101.52,101.52,26,0)
PATIENT STATE^F^^6;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,26,3)
Enter the state for the patient associated with this order (1-30 characters).
"^DD",101.52,101.52,26,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,26,21,1,0)
This is the state for the address of the patient associated with this 
"^DD",101.52,101.52,26,21,2,0)
order. It is the VAPA(5) return value from the call to ADD^VADPT. Assuming
"^DD",101.52,101.52,26,21,3,0)
no temporary or foreign address, it would the STATE field (#.115) from the
"^DD",101.52,101.52,26,21,4,0)
PATIENT file (#2).
"^DD",101.52,101.52,26,"DT")
3121206
"^DD",101.52,101.52,27,0)
PATIENT ZIP+4^F^^6;6^K:$L(X)>10!($L(X)<5) X
"^DD",101.52,101.52,27,3)
Enter ZIP or ZIP + 4 for the address of the patient associated with this order.
"^DD",101.52,101.52,27,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,27,21,1,0)
This is the ZIP or ZIP+4 code for the city of the address for the patient 
"^DD",101.52,101.52,27,21,2,0)
associated with this order. It is the VAPA(6) return value from the call
"^DD",101.52,101.52,27,21,3,0)
to ADD^VADPT. Assuming no temporary or foreign address, it would the ZIP
"^DD",101.52,101.52,27,21,4,0)
CODE field (#.116) from the PATIENT file (#2).
"^DD",101.52,101.52,27,"DT")
3121205
"^DD",101.52,101.52,28,0)
# OF REFILLS^NJ2,0^^1;6^K:+X'=X!(X>13)!(X<0)!(X?.E1"."1.N) X
"^DD",101.52,101.52,28,3)
Enter the number of refills for this order (a whole number from 0 to 13).
"^DD",101.52,101.52,28,21,0)
^^5^5^3121205^
"^DD",101.52,101.52,28,21,1,0)
This is the number of refills specified by the provider at the time the 
"^DD",101.52,101.52,28,21,2,0)
drug is ordered. There are some limitations on refills for controlled 
"^DD",101.52,101.52,28,21,3,0)
substances and there are times when Pharmacy may correct this after 
"^DD",101.52,101.52,28,21,4,0)
validating the hash. This is correlated to the # OF REFILLS (#9) of the 
"^DD",101.52,101.52,28,21,5,0)
PRESCRIPTION file (#52).
"^DD",101.52,101.52,28,"DT")
3121205
"^DD",101.52,101.52,29,0)
DISPENSE DRUG^P50'^PSDRUG(^1;3^Q
"^DD",101.52,101.52,29,3)
Select the Dispense Drug.
"^DD",101.52,101.52,29,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,29,21,1,0)
This is the dispense drug associated with this order. It is possible this
"^DD",101.52,101.52,29,21,2,0)
field will be blank if there is no dispense drug known at the time the
"^DD",101.52,101.52,29,21,3,0)
order was signed in CPRS.
"^DD",101.52,101.52,29,"DT")
3121205
"^DD",101.52,101.52,30,0)
DEA SCHEDULE^F^^1;4^K:$L(X)>6!($L(X)<1) X
"^DD",101.52,101.52,30,3)
Enter the DEA Schedule for the dispense drug associated with this order (1-6 characters).
"^DD",101.52,101.52,30,21,0)
^^4^4^3121206^
"^DD",101.52,101.52,30,21,1,0)
This is the Drug Enforcement Agency (DEA) drug schedule associated with 
"^DD",101.52,101.52,30,21,2,0)
the medication on this order. For example: 2 for a schedule two 
"^DD",101.52,101.52,30,21,3,0)
non-narcotic or 2n for the schedule two narcotic. This comes from the 
"^DD",101.52,101.52,30,21,4,0)
DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",101.52,101.52,30,"DT")
3121206
"^DD",101.52,101.52,31,0)
PROVIDER^P200'^VA(200,^3;4^Q
"^DD",101.52,101.52,31,3)
Select the provider who signed this order.
"^DD",101.52,101.52,31,21,0)
^^1^1^3121205^
"^DD",101.52,101.52,31,21,1,0)
This is the provider who signed this order.
"^DD",101.52,101.52,31,"DT")
3121207
"^DD",101.52,101.52,40,0)
SOURCE^101.53^^7;0
"^DD",101.52,101.52,41,0)
STACK^F^^8;1^K:$L(X)>100!($L(X)<1) X
"^DD",101.52,101.52,41,3)
Enter the stack trace of the process that is creating this entry.
"^DD",101.52,101.52,41,21,0)
^^1^1^3130219^
"^DD",101.52,101.52,41,21,1,0)
Stores the stack trace of the process that created this entry.
"^DD",101.52,101.52,41,"DT")
3130219
"^DD",101.52,101.529,0)
DIRECTIONS FOR USE (SIG) SUB-FIELD^^.01^1
"^DD",101.52,101.529,0,"DT")
3110812
"^DD",101.52,101.529,0,"NM","DIRECTIONS FOR USE (SIG)")

"^DD",101.52,101.529,0,"UP")
101.52
"^DD",101.52,101.529,.01,0)
DIRECTIONS FOR USE (SIG)^F^^0;1^K:$L(X)>250!($L(X)<1) X
"^DD",101.52,101.529,.01,1,0)
^.1^^0
"^DD",101.52,101.529,.01,3)
Enter the directions for use associated with this order (1-250 characters).
"^DD",101.52,101.529,.01,21,0)
^^2^2^3121206^
"^DD",101.52,101.529,.01,21,1,0)
The directions for use associated with this order. The format will be the
"^DD",101.52,101.529,.01,21,2,0)
same as that in the HL7 message sent, via a protocol call, to Pharmacy.
"^DD",101.52,101.529,.01,"DT")
3121206
"^DD",101.52,101.53,0)
SOURCE SUB-FIELD^^2^2
"^DD",101.52,101.53,0,"DT")
3121210
"^DD",101.52,101.53,0,"IX","B",101.53,.01)

"^DD",101.52,101.53,0,"NM","SOURCE")

"^DD",101.52,101.53,0,"UP")
101.52
"^DD",101.52,101.53,.01,0)
SOURCE^F^^0;1^K:$L(X)>8!($L(X)<1) X
"^DD",101.52,101.53,.01,1,0)
^.1
"^DD",101.52,101.53,.01,1,1,0)
101.53^B
"^DD",101.52,101.53,.01,1,1,1)
Q
"^DD",101.52,101.53,.01,1,1,2)
Q
"^DD",101.52,101.53,.01,3)
Enter the routine name that generated the modification/entry (1-8 characters).
"^DD",101.52,101.53,.01,21,0)
^^2^2^3121210^
"^DD",101.52,101.53,.01,21,1,0)
This multiple will contain the routine that generated either the initial 
"^DD",101.52,101.53,.01,21,2,0)
entry or any modifications.
"^DD",101.52,101.53,.01,"DT")
3130219
"^DD",101.52,101.53,2,0)
TIME OF ENTRY^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",101.52,101.53,2,3)
Enter the date/time this entry was made.
"^DD",101.52,101.53,2,21,0)
^^2^2^3121210^
"^DD",101.52,101.53,2,21,1,0)
This is the date and time the entry was made/modified. This is part of 
"^DD",101.52,101.53,2,21,2,0)
the additional auditing of the archive entries.
"^DD",101.52,101.53,2,"DT")
3121210
"^DIC",100.9,100.9,0)
OE/RR NOTIFICATIONS^100.9
"^DIC",100.9,100.9,0,"GL")
^ORD(100.9,
"^DIC",100.9,100.9,"%D",0)
^1.001^5^5^3100929^^^^
"^DIC",100.9,100.9,"%D",1,0)
This file contains data used to generate notifications.  Packages
"^DIC",100.9,100.9,"%D",2,0)
determine if a notification should be sent then send the patient ID and
"^DIC",100.9,100.9,"%D",3,0)
notification ID (IEN in this file) to order entry routines.  Based on the
"^DIC",100.9,100.9,"%D",4,0)
notification IEN, data from this file is used to generate the notification
"^DIC",100.9,100.9,"%D",5,0)
and help determine its recipients.
"^DIC",100.9,"B","OE/RR NOTIFICATIONS",100.9)

"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%",0)
^1.005^^
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

"^DIC",101.52,101.52,0)
ORDER DEA ARCHIVE INFO^101.52
"^DIC",101.52,101.52,0,"GL")
^ORPA(101.52,
"^DIC",101.52,101.52,"%",0)
^1.005^^
"^DIC",101.52,101.52,"%D",0)
^^25^25^3130219^
"^DIC",101.52,101.52,"%D",1,0)
The purpose of this file is to satisfy the Drug Enforcement Agency (DEA) requirement
"^DIC",101.52,101.52,"%D",2,0)
for an electronic prescribing system to maintain an archive of all controlled 
"^DIC",101.52,101.52,"%D",3,0)
substance prescriptions that were electronically entered.
"^DIC",101.52,101.52,"%D",4,0)
 
"^DIC",101.52,101.52,"%D",5,0)
The file will store all the information that is considered a part of the 
"^DIC",101.52,101.52,"%D",6,0)
prescription.
"^DIC",101.52,101.52,"%D",7,0)
 
"^DIC",101.52,101.52,"%D",8,0)
The file should always be audited. In addition, the file should NEVER be
"^DIC",101.52,101.52,"%D",9,0)
edited using FileMan. These are both DEA requirements.
"^DIC",101.52,101.52,"%D",10,0)
 
"^DIC",101.52,101.52,"%D",11,0)
In order to satisfy the requirement that both the prescribing (CPRS) and 
"^DIC",101.52,101.52,"%D",12,0)
filling systems (Outpatient Pharmacy) create an archive, but to reduce the 
"^DIC",101.52,101.52,"%D",13,0)
need for additional storage space, both CPRS and Pharmacy will use the same 
"^DIC",101.52,101.52,"%D",14,0)
file. CPRS will create the entries when an order is signed or when a backdoor 
"^DIC",101.52,101.52,"%D",15,0)
order message is received from Pharmacy. Once Pharmacy verifies the data in 
"^DIC",101.52,101.52,"%D",16,0)
the Pharmacy system is an exact match for what CPRS stored, they will 
"^DIC",101.52,101.52,"%D",17,0)
subscribe to the entry in the archive file and will update the PRESCRIPTION 
"^DIC",101.52,101.52,"%D",18,0)
NUMBER (#1) field.
"^DIC",101.52,101.52,"%D",19,0)
 
"^DIC",101.52,101.52,"%D",20,0)
The file was defined in a different global name in order to handle the 
"^DIC",101.52,101.52,"%D",21,0)
volume set from the rest of the CPRS system (i.e., the ORDER file).
"^DIC",101.52,101.52,"%D",22,0)
It is important to note that to fully meet the DEA requirements, the fields 
"^DIC",101.52,101.52,"%D",23,0)
required by the DEA cannot be pointers. We must store the data completely. 
"^DIC",101.52,101.52,"%D",24,0)
The fields that are pointers are for our internal use, rather than for 
"^DIC",101.52,101.52,"%D",25,0)
the DEA purposes.
"^DIC",101.52,"B","ORDER DEA ARCHIVE INFO",101.52)

**INSTALL NAME**
XU*8.0*609
"BLD",8510,0)
XU*8.0*609^KERNEL^0^3130219^y
"BLD",8510,1,0)
^^2^2^3120830^
"BLD",8510,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",8510,1,2,0)

"BLD",8510,4,0)
^9.64PA^^
"BLD",8510,6)
8^
"BLD",8510,6.3)
15
"BLD",8510,"ABPKG")
n
"BLD",8510,"KRN",0)
^9.67PA^8994^22
"BLD",8510,"KRN",.4,0)
.4
"BLD",8510,"KRN",.401,0)
.401
"BLD",8510,"KRN",.402,0)
.402
"BLD",8510,"KRN",.403,0)
.403
"BLD",8510,"KRN",.5,0)
.5
"BLD",8510,"KRN",.84,0)
.84
"BLD",8510,"KRN",3.6,0)
3.6
"BLD",8510,"KRN",3.8,0)
3.8
"BLD",8510,"KRN",9.2,0)
9.2
"BLD",8510,"KRN",9.8,0)
9.8
"BLD",8510,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8510,"KRN",9.8,"NM",1,0)
XUSER^^0^B48065845
"BLD",8510,"KRN",9.8,"NM","B","XUSER",1)

"BLD",8510,"KRN",19,0)
19
"BLD",8510,"KRN",19.1,0)
19.1
"BLD",8510,"KRN",101,0)
101
"BLD",8510,"KRN",409.61,0)
409.61
"BLD",8510,"KRN",771,0)
771
"BLD",8510,"KRN",779.2,0)
779.2
"BLD",8510,"KRN",870,0)
870
"BLD",8510,"KRN",8989.51,0)
8989.51
"BLD",8510,"KRN",8989.52,0)
8989.52
"BLD",8510,"KRN",8993,0)
8993
"BLD",8510,"KRN",8994,0)
8994
"BLD",8510,"KRN","B",.4,.4)

"BLD",8510,"KRN","B",.401,.401)

"BLD",8510,"KRN","B",.402,.402)

"BLD",8510,"KRN","B",.403,.403)

"BLD",8510,"KRN","B",.5,.5)

"BLD",8510,"KRN","B",.84,.84)

"BLD",8510,"KRN","B",3.6,3.6)

"BLD",8510,"KRN","B",3.8,3.8)

"BLD",8510,"KRN","B",9.2,9.2)

"BLD",8510,"KRN","B",9.8,9.8)

"BLD",8510,"KRN","B",19,19)

"BLD",8510,"KRN","B",19.1,19.1)

"BLD",8510,"KRN","B",101,101)

"BLD",8510,"KRN","B",409.61,409.61)

"BLD",8510,"KRN","B",771,771)

"BLD",8510,"KRN","B",779.2,779.2)

"BLD",8510,"KRN","B",870,870)

"BLD",8510,"KRN","B",8989.51,8989.51)

"BLD",8510,"KRN","B",8989.52,8989.52)

"BLD",8510,"KRN","B",8993,8993)

"BLD",8510,"KRN","B",8994,8994)

"BLD",8510,"QUES",0)
^9.62^^
"BLD",8510,"REQB",0)
^9.611^^0
"MBREQ")
1
"PKG",163,-1)
1^1
"PKG",163,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",163,20,0)
^9.402P^1^1
"PKG",163,20,1,0)
200^^XDRM200N
"PKG",163,20,1,1)

"PKG",163,20,"B",200,1)

"PKG",163,22,0)
^9.49I^1^1
"PKG",163,22,1,0)
8.0^2950703^2951019^1039
"PKG",163,22,1,"PAH",1,0)
609^3130219^49
"PKG",163,22,1,"PAH",1,1,0)
^^2^2^3130219
"PKG",163,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",163,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XUSER")
0^1^B48065845
"RTN","XUSER",1,0)
XUSER ;SFISC/RWF - A common set of user functions ;11/07/2012  11:56
"RTN","XUSER",2,0)
 ;;8.0;KERNEL;**75,97,99,150,226,267,288,330,370,373,580,609**;Jul 10, 1995;Build 15
"RTN","XUSER",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XUSER",4,0)
 ;Covered under DBIA #2343
"RTN","XUSER",5,0)
 Q
"RTN","XUSER",6,0)
LOOKUP(XUF) ;Do a user lookup
"RTN","XUSER",7,0)
 ;Parameter, "Q" to NOT ask OK.
"RTN","XUSER",8,0)
 ;Parameter, "A" Don't select current users who have a termination
"RTN","XUSER",9,0)
 ;               date prior to today's date
"RTN","XUSER",10,0)
 N DIC,XUDA,DIR,Y
"RTN","XUSER",11,0)
LK1 S DIC="^VA(200,",DIC(0)="AEMQZ" D ^DIC S XUDA=Y G:Y'>0 LKX
"RTN","XUSER",12,0)
 S Y=$P(Y(0),"^",11) I Y>0,Y<DT W !?15,"This user was terminated on ",$$FMTE^XLFDT(Y) I $G(XUF)["A" S XUDA=-1 G LK1
"RTN","XUSER",13,0)
 G:$G(XUF)["Q" LKX
"RTN","XUSER",14,0)
 S DIR(0)="Y",DIR("A")=" Is "_$P(XUDA,U,2)_" the one you want",DIR("B")="YES" D ^DIR
"RTN","XUSER",15,0)
 I Y'=1 S XUDA=-1 G:'$D(DIRUT) LK1
"RTN","XUSER",16,0)
LKX Q XUDA
"RTN","XUSER",17,0)
 ;
"RTN","XUSER",18,0)
ACTIVE(XUDA) ;Get if a user is active.
"RTN","XUSER",19,0)
 N %,X1,X2
"RTN","XUSER",20,0)
 S X1=$G(^VA(200,+$G(XUDA),0)),X2=$S(X1="":"",1:0)
"RTN","XUSER",21,0)
 I $L($P(X1,U,3)) S X2="1^"_$S($L($P($G(^VA(200,XUDA,.1)),U,2)):"ACTIVE",1:"NEW")
"RTN","XUSER",22,0)
 S:$P(X1,U,7)=1 X2="0^DISUSER"
"RTN","XUSER",23,0)
 S:X2["ACTIVE" $P(X2,U,3)=$P($G(^VA(200,XUDA,1.1)),U) ;Return last sign-on
"RTN","XUSER",24,0)
 S %=$P(X1,U,11) I %>0,%'>DT S X2="0^TERMINATED^"_%
"RTN","XUSER",25,0)
 Q X2
"RTN","XUSER",26,0)
 ;
"RTN","XUSER",27,0)
BULL ;Called from bulletin in DD of file #200 for 'Sub Alt Name' fld.
"RTN","XUSER",28,0)
 ;This will find users with PSDMGR keys and setup the XMY array for
"RTN","XUSER",29,0)
 ;bulletin recipients. p580 REM
"RTN","XUSER",30,0)
 N PSD,I
"RTN","XUSER",31,0)
 S PSD=$$FIND1^DIC(19.1,"","MX","PSDMGR","","","PSDERR") Q:PSD'>0
"RTN","XUSER",32,0)
 S I=0 F  S I=$O(^VA(200,"AB",PSD,I)) Q:I'>0  S XMY(I)=""
"RTN","XUSER",33,0)
 Q
"RTN","XUSER",34,0)
 ;
"RTN","XUSER",35,0)
PROVIDER(XUDA,XUF) ;See if user qualifies as a CPRS provider
"RTN","XUSER",36,0)
 ;XUDA = IEN of Record in New Person File
"RTN","XUSER",37,0)
 ;XUF = Flag to control processing
"RTN","XUSER",38,0)
 ;      0 or not passed, do not include Visitors
"RTN","XUSER",39,0)
 ;      1 include Visitors
"RTN","XUSER",40,0)
 N %,X1,X2,XUORES
"RTN","XUSER",41,0)
 ;Test to see if XUDA Passed:
"RTN","XUSER",42,0)
 I '$D(XUDA) Q ""
"RTN","XUSER",43,0)
 ;
"RTN","XUSER",44,0)
 ;Test for valid IEN:
"RTN","XUSER",45,0)
 S X1=$G(^VA(200,+$G(XUDA),0)),X2=$S(X1="":"",1:1) Q:X2="" ""
"RTN","XUSER",46,0)
 ;
"RTN","XUSER",47,0)
 ;See if user has XUORES Security Key:
"RTN","XUSER",48,0)
 S XUORES=$D(^XUSEC("XUORES",XUDA))
"RTN","XUSER",49,0)
 ;
"RTN","XUSER",50,0)
 ;Test for Access Code:
"RTN","XUSER",51,0)
 I $P(X1,U,3)]"" Q 1
"RTN","XUSER",52,0)
 ;
"RTN","XUSER",53,0)
 ;Test for a Termination Date not in the Future
"RTN","XUSER",54,0)
 ;AND Not owner of XUORES Security Key:
"RTN","XUSER",55,0)
 S %=$P(X1,U,11) I %>0,%'>DT,'XUORES Q "0^TERMINATED^"_%
"RTN","XUSER",56,0)
 ;
"RTN","XUSER",57,0)
 ;Test if user has XUORES Security key:
"RTN","XUSER",58,0)
 I XUORES Q 1
"RTN","XUSER",59,0)
 ;
"RTN","XUSER",60,0)
 ;Tests for Visitors:
"RTN","XUSER",61,0)
 I +$G(XUF),$D(^VA(200,"BB","VISITOR",XUDA)) Q 1
"RTN","XUSER",62,0)
 I $D(^VA(200,"BB","VISITOR",XUDA)) Q "0^VISITOR"
"RTN","XUSER",63,0)
 ;
"RTN","XUSER",64,0)
 ;Default:
"RTN","XUSER",65,0)
 Q "0^NOT A PROVIDER"
"RTN","XUSER",66,0)
 ;
"RTN","XUSER",67,0)
DEA(FG,IEN) ;sr. ef. Return users DEA # or Facility DEA_"-"_user VA# or null
"RTN","XUSER",68,0)
 ;ICR #2343
"RTN","XUSER",69,0)
 ;If FG is 1: DEA# or VA#
"RTN","XUSER",70,0)
 ;Fee Basis, C&A providers only return DEA# or null - p609/REM
"RTN","XUSER",71,0)
 ;Add XDT=DEA expiration date. If XDT unpopulated, its expired. - p609/REM
"RTN","XUSER",72,0)
 N DEA,VA,IN,N,N1,INN,XDT,FB
"RTN","XUSER",73,0)
 S IEN=$G(IEN,DUZ),INN=+DUZ(2)
"RTN","XUSER",74,0)
 S N=$G(^VA(200,IEN,"PS")),N1=$G(^VA(200,IEN,"QAR"))
"RTN","XUSER",75,0)
 S DEA=$P(N,U,2),VA=$P(N,U,3),XDT=$P(N1,U,9)
"RTN","XUSER",76,0)
 I $P(N,U,6)=4!($P(N,U,6)=3) S FB=1 ;Fee Basis or C&A  provider -p609
"RTN","XUSER",77,0)
 ;I $L(DEA),$S('$L($P(N1,U,9)):1,1:$P(N1,U,9)>DT) Q DEA
"RTN","XUSER",78,0)
 I $L(DEA),$L(XDT),XDT'<DT Q DEA ;p609
"RTN","XUSER",79,0)
 I $G(FB) Q "" ;p609
"RTN","XUSER",80,0)
 I $G(FG) Q VA
"RTN","XUSER",81,0)
 S IN=$P($G(^DIC(4,INN,"DEA")),U) ;Check signed-in Inst.
"RTN","XUSER",82,0)
 I '$L(IN) D
"RTN","XUSER",83,0)
 . N XU1 D PARENT^XUAF4("XU1","`"_INN,"PARENT FACILITY")
"RTN","XUSER",84,0)
 . S INN=$O(XU1("P","")) I INN S IN=$P($G(^DIC(4,INN,"DEA")),U)
"RTN","XUSER",85,0)
 . Q
"RTN","XUSER",86,0)
 I $L(VA),$L(IN) Q IN_"-"_VA
"RTN","XUSER",87,0)
 Q ""
"RTN","XUSER",88,0)
 ;
"RTN","XUSER",89,0)
DETOX(IEN) ;Return the Detox/Maintenance ID in file 200 - p580/REM
"RTN","XUSER",90,0)
 ;ICR #2343
"RTN","XUSER",91,0)
 ;Return Detox# - valid detox# and DEA Xdate is valid
"RTN","XUSER",92,0)
 ;Return null - if no detox or the DEA Xdate is unpopulated
"RTN","XUSER",93,0)
 ;Return DEA Expiration Date - valid detox# but expired DEA Xdate
"RTN","XUSER",94,0)
 ;IEN is used to lookup user in file #200
"RTN","XUSER",95,0)
 N DET,XDT,N,N1
"RTN","XUSER",96,0)
 S N=$G(^VA(200,IEN,"PS")),N1=$G(^VA(200,IEN,"QAR"))
"RTN","XUSER",97,0)
 S DET=$P(N,U,11),XDT=$P(N1,U,9)
"RTN","XUSER",98,0)
 I $L(DET),$L(XDT),XDT'<DT Q DET
"RTN","XUSER",99,0)
 I $L(DET),$L(XDT),XDT<DT Q XDT
"RTN","XUSER",100,0)
 ;I $L(DET),$S('$L($P(N1,U,9)):1,1:$P(N1,U,9)>DT) Q DTX
"RTN","XUSER",101,0)
 Q ""
"RTN","XUSER",102,0)
 ;
"RTN","XUSER",103,0)
SDEA(FG,IEN,PSDEA) ;validation for new DEA regulations p580-JC(CPRS)
"RTN","XUSER",104,0)
 ;ICR #2343
"RTN","XUSER",105,0)
 ;Returns: DEA#, Facility DEA_"-"_user VA#, 1, 2, or 4^expiration date 
"RTN","XUSER",106,0)
 ;If FG is 1: DEA# or VA# - similar to $$DEA
"RTN","XUSER",107,0)
 ;IEN is used to lookup user in file #200
"RTN","XUSER",108,0)
 ;PSDEA is the DEA schedule
"RTN","XUSER",109,0)
 N DEA,N3,I,A,NALL,E,DA,XD,N,N1
"RTN","XUSER",110,0)
 S FG=$G(FG),IEN=$G(IEN),PSDEA=$G(PSDEA)
"RTN","XUSER",111,0)
 S DEA=$$DEA(FG,IEN) I DEA="" D  Q E
"RTN","XUSER",112,0)
 . S E=1
"RTN","XUSER",113,0)
 . S N=$G(^VA(200,IEN,"PS")),N1=$G(^VA(200,IEN,"QAR"))
"RTN","XUSER",114,0)
 . S DA=$P(N,U,2),XD=$P(N1,U,9)
"RTN","XUSER",115,0)
 . I $L(DA),$L(XD),XD<DT S Y=XD X ^DD("DD") S E=4_"^"_Y
"RTN","XUSER",116,0)
 I $G(PSDEA)="" Q 1
"RTN","XUSER",117,0)
 I '$D(^VA(200,IEN,"PS3")) Q DEA
"RTN","XUSER",118,0)
 S N3=^VA(200,IEN,"PS3")
"RTN","XUSER",119,0)
 S NALL=1 F I=1:1:6 S A(I)=$P(N3,"^",I) I A(I) S NALL=0
"RTN","XUSER",120,0)
 I NALL D  Q 2
"RTN","XUSER",121,0)
 . I $G(^VA(200,IEN,"PS"))="" Q
"RTN","XUSER",122,0)
 . S $P(^("PS"),"^",2)="",$P(^("PS"),"^",3)=""
"RTN","XUSER",123,0)
 I PSDEA=2 Q $S('A(1):2,1:DEA)
"RTN","XUSER",124,0)
 I PSDEA="2n" Q $S('A(2):2,1:DEA)
"RTN","XUSER",125,0)
 I PSDEA=3 Q $S('A(3):2,1:DEA)
"RTN","XUSER",126,0)
 I PSDEA="3n" Q $S('A(4):2,1:DEA)
"RTN","XUSER",127,0)
 I PSDEA=4 Q $S('A(5):2,1:DEA)
"RTN","XUSER",128,0)
 I PSDEA=5 Q $S('A(6):2,1:DEA)
"RTN","XUSER",129,0)
 Q DEA
"RTN","XUSER",130,0)
 ;
"RTN","XUSER",131,0)
VDEA(RETURN,IEN)  ;ISP/RFR - Verify a provider is properly configured for ePCS
"RTN","XUSER",132,0)
 ;PARAMETERS: IEN - Internal Entry Number in the NEW PERSON file (#200)
"RTN","XUSER",133,0)
 ;            RETURN - Reference to an array in which text explaining
"RTN","XUSER",134,0)
 ;                     deficiencies and listing prescribable schedules
"RTN","XUSER",135,0)
 ;                     is placed, with each deficiency and the list of
"RTN","XUSER",136,0)
 ;                     schedules on a separate node
"RTN","XUSER",137,0)
 ;RETURN: 1 - Provider is properly configured for ePCS
"RTN","XUSER",138,0)
 ;        0 - Provider is not properly configured for ePCS
"RTN","XUSER",139,0)
 N STATUS,DEA,RETVAL,DATE
"RTN","XUSER",140,0)
 S RETVAL=1,STATUS=$$ACTIVE(IEN)
"RTN","XUSER",141,0)
 I STATUS="" S RETURN("User account does not exist.")="",RETVAL=0
"RTN","XUSER",142,0)
 I STATUS=0 S RETURN("User cannot sign on.")="",RETVAL=0
"RTN","XUSER",143,0)
 I +STATUS=0,($P(STATUS,U,2)'="") S RETURN("User account status: "_$P(STATUS,U,2))="",RETVAL=0
"RTN","XUSER",144,0)
 Q:STATUS="" RETVAL
"RTN","XUSER",145,0)
 I '$D(^XUSEC("ORES",IEN)) D
"RTN","XUSER",146,0)
 .S RETURN("Does not hold the ORES security key.")="",RETVAL=0
"RTN","XUSER",147,0)
 I +$P($G(^VA(200,IEN,"PS")),U,1)'=1 D
"RTN","XUSER",148,0)
 .S RETURN("Is not authorized to write medication orders.")="",RETVAL=0
"RTN","XUSER",149,0)
 I $P($G(^VA(200,IEN,"PS")),U,2)'="" D
"RTN","XUSER",150,0)
 .N DATE
"RTN","XUSER",151,0)
 .S DATE=+$P($G(^VA(200,IEN,"QAR")),U,9)
"RTN","XUSER",152,0)
 .I DATE=0 S RETURN("Has a DEA number with no expiration date.")="",RETVAL=0
"RTN","XUSER",153,0)
 .I DATE>0,(DATE<=DT) S RETURN("Has an expired DEA number.")="",RETVAL=0
"RTN","XUSER",154,0)
 I $P($G(^VA(200,IEN,"PS")),U,2)="",($P($G(^VA(200,IEN,"PS")),U,3)="") D
"RTN","XUSER",155,0)
 .S RETURN("Has neither a DEA number nor a VA number.")="",RETVAL=0
"RTN","XUSER",156,0)
 S DATE=+$P($G(^VA(200,IEN,"PS")),U,4)
"RTN","XUSER",157,0)
 I DATE>0,(DATE<=DT) D
"RTN","XUSER",158,0)
 .S RETURN("Is no longer able to write medication orders (inactive date).")="",RETVAL=0
"RTN","XUSER",159,0)
 I $D(^VA(200,IEN,"PS3")) D
"RTN","XUSER",160,0)
 .N NODE
"RTN","XUSER",161,0)
 .S NODE=$$STRIP^XLFSTR(^VA(200,IEN,"PS3"),U),NODE=$$STRIP^XLFSTR(NODE,0)
"RTN","XUSER",162,0)
 .I $G(NODE)="" S RETURN("Is not permitted to prescribe any schedules.")="",RETVAL=0 Q
"RTN","XUSER",163,0)
 .I $G(NODE)'="" D
"RTN","XUSER",164,0)
 ..N PIECE,SCHED,SPEC,ASCHED
"RTN","XUSER",165,0)
 ..S SPEC("SCHEDULE ")=""
"RTN","XUSER",166,0)
 ..S ASCHED=1
"RTN","XUSER",167,0)
 ..F PIECE=1:1:6 D
"RTN","XUSER",168,0)
 ...I +$P(^VA(200,IEN,"PS3"),U,PIECE)>0 D
"RTN","XUSER",169,0)
 ....N LABEL,ERROR
"RTN","XUSER",170,0)
 ....S LABEL=$$REPLACE^XLFSTR($$GET1^DID(200,"55."_PIECE,,"LABEL",,"ERROR"),.SPEC)
"RTN","XUSER",171,0)
 ....S:$G(LABEL)="" LABEL="Unknown field #55."_PIECE
"RTN","XUSER",172,0)
 ....S SCHED=$S($G(SCHED)'="":SCHED_U,1:"")_LABEL
"RTN","XUSER",173,0)
 ...I +$P(^VA(200,IEN,"PS3"),U,PIECE)=0 S ASCHED=0
"RTN","XUSER",174,0)
 ..I ASCHED=1 S RETURN("Is permitted to prescribe all schedules.")=""
"RTN","XUSER",175,0)
 ..I ASCHED=0 D
"RTN","XUSER",176,0)
 ...N DELIMIT,INDEX,TEXT
"RTN","XUSER",177,0)
 ...S DELIMIT=", "
"RTN","XUSER",178,0)
 ...F INDEX=1:1:$L(SCHED,U) D
"RTN","XUSER",179,0)
 ....S:INDEX=$L(SCHED,U) DELIMIT=" and "
"RTN","XUSER",180,0)
 ....S TEXT=$S($G(TEXT)'="":TEXT_DELIMIT,1:"")_$P(SCHED,U,INDEX)
"RTN","XUSER",181,0)
 ...S RETURN("Is permitted to prescribe schedule"_$S($L(SCHED,U)>1:"s",1:"")_" "_TEXT_".")=""
"RTN","XUSER",182,0)
 I '$D(^VA(200,IEN,"PS3")) S RETURN("Is permitted to prescribe all schedules.")=""
"RTN","XUSER",183,0)
 Q RETVAL
"RTN","XUSER",184,0)
 ;
"RTN","XUSER",185,0)
DIV4(XUROOT,XUDUZ) ;Return the Divisions that this user is assigned to.
"RTN","XUSER",186,0)
 ;Returns 0 - no institution for user, 1 - institution for user
"RTN","XUSER",187,0)
 ;XUROOT is passed by reference.
"RTN","XUSER",188,0)
 N %,%1 S:$G(XUDUZ)="" XUDUZ=DUZ S (%,%1)=0
"RTN","XUSER",189,0)
 F  S %=$O(^VA(200,XUDUZ,2,%)) Q:%'>0  S XUROOT(%)=$P($G(^(%,0)),U,2),%1=1
"RTN","XUSER",190,0)
 Q %1
"RTN","XUSER",191,0)
 ;
"RTN","XUSER",192,0)
NAME(IEN,FL) ;Return the full name from Name Components file
"RTN","XUSER",193,0)
 N NA S NA("FILE")=200,NA("FIELD")=.01,NA("IENS")=IEN
"RTN","XUSER",194,0)
 S FL=$G(FL,"G") ;Valid are Famly or Given
"RTN","XUSER",195,0)
 S:"FG"'[FL FL="G"
"RTN","XUSER",196,0)
 Q $$NAMEFMT^XLFNAME(.NA,FL,"CMDP")
"RTN","XUSER",197,0)
 ;
"RTN","XUSER",198,0)
HL7(IEN) ;Return a HL7 name from the components file
"RTN","XUSER",199,0)
 N NA S NA("FILE")=200,NA("FIELD")=.01,NA("IENS")=IEN
"RTN","XUSER",200,0)
 Q $$HLNAME^XLFNAME(.NA,"","~")
"RTN","XUSER",201,0)
 ;
"RTN","XUSER",202,0)
SCR200() ;Whole File Screen logic for file 200
"RTN","XUSER",203,0)
 ;
"RTN","XUSER",204,0)
 ; Test to see if FileMan can "talk" to the user, IA# 4577
"RTN","XUSER",205,0)
 I $G(DIC(0))'["E" Q 1
"RTN","XUSER",206,0)
 ;
"RTN","XUSER",207,0)
 ; Test to see if index being searched is SSN, IA# 4578
"RTN","XUSER",208,0)
 I $G(DINDEX)'="SSN" Q 1
"RTN","XUSER",209,0)
 ;
"RTN","XUSER",210,0)
 ; Test for Security Key
"RTN","XUSER",211,0)
 I $G(DUZ),$D(^XUSEC("XUSHOWSSN",DUZ)) Q 1
"RTN","XUSER",212,0)
 ;
"RTN","XUSER",213,0)
 ; Default - None of the above is TRUE
"RTN","XUSER",214,0)
 Q 0
"VER")
8.0^22.0
**END**
**END**
