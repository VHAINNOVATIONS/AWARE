KIDS Distribution saved on Apr 30, 2013@05:31:47
OR*371
**KIDS**:OR*3.0*371^

**INSTALL NAME**
OR*3.0*371
"BLD",8686,0)
OR*3.0*371^ORDER ENTRY/RESULTS REPORTING^0^3130430^y
"BLD",8686,4,0)
^9.64PA^101.52^1
"BLD",8686,4,101.52,0)
101.52
"BLD",8686,4,101.52,222)
y^y^f^^^^n
"BLD",8686,4,"B",101.52,101.52)

"BLD",8686,6.3)
9
"BLD",8686,"INIT")
POST^ORY371
"BLD",8686,"KRN",0)
^9.67PA^779.2^20
"BLD",8686,"KRN",.4,0)
.4
"BLD",8686,"KRN",.401,0)
.401
"BLD",8686,"KRN",.402,0)
.402
"BLD",8686,"KRN",.403,0)
.403
"BLD",8686,"KRN",.5,0)
.5
"BLD",8686,"KRN",.84,0)
.84
"BLD",8686,"KRN",3.6,0)
3.6
"BLD",8686,"KRN",3.8,0)
3.8
"BLD",8686,"KRN",9.2,0)
9.2
"BLD",8686,"KRN",9.8,0)
9.8
"BLD",8686,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",8686,"KRN",9.8,"NM",1,0)
ORY371^^0^B3828070
"BLD",8686,"KRN",9.8,"NM",2,0)
ORWOR1^^0^B34983568
"BLD",8686,"KRN",9.8,"NM",3,0)
ORCMED^^0^B65467847
"BLD",8686,"KRN",9.8,"NM",4,0)
ORDEA02^^0^B8327482
"BLD",8686,"KRN",9.8,"NM",5,0)
ORWPCE3^^0^B56135760
"BLD",8686,"KRN",9.8,"NM",6,0)
ORMTIM02^^0^B18747786
"BLD",8686,"KRN",9.8,"NM","B","ORCMED",3)

"BLD",8686,"KRN",9.8,"NM","B","ORDEA02",4)

"BLD",8686,"KRN",9.8,"NM","B","ORMTIM02",6)

"BLD",8686,"KRN",9.8,"NM","B","ORWOR1",2)

"BLD",8686,"KRN",9.8,"NM","B","ORWPCE3",5)

"BLD",8686,"KRN",9.8,"NM","B","ORY371",1)

"BLD",8686,"KRN",19,0)
19
"BLD",8686,"KRN",19.1,0)
19.1
"BLD",8686,"KRN",101,0)
101
"BLD",8686,"KRN",409.61,0)
409.61
"BLD",8686,"KRN",771,0)
771
"BLD",8686,"KRN",779.2,0)
779.2
"BLD",8686,"KRN",870,0)
870
"BLD",8686,"KRN",8989.51,0)
8989.51
"BLD",8686,"KRN",8989.52,0)
8989.52
"BLD",8686,"KRN",8994,0)
8994
"BLD",8686,"KRN","B",.4,.4)

"BLD",8686,"KRN","B",.401,.401)

"BLD",8686,"KRN","B",.402,.402)

"BLD",8686,"KRN","B",.403,.403)

"BLD",8686,"KRN","B",.5,.5)

"BLD",8686,"KRN","B",.84,.84)

"BLD",8686,"KRN","B",3.6,3.6)

"BLD",8686,"KRN","B",3.8,3.8)

"BLD",8686,"KRN","B",9.2,9.2)

"BLD",8686,"KRN","B",9.8,9.8)

"BLD",8686,"KRN","B",19,19)

"BLD",8686,"KRN","B",19.1,19.1)

"BLD",8686,"KRN","B",101,101)

"BLD",8686,"KRN","B",409.61,409.61)

"BLD",8686,"KRN","B",771,771)

"BLD",8686,"KRN","B",779.2,779.2)

"BLD",8686,"KRN","B",870,870)

"BLD",8686,"KRN","B",8989.51,8989.51)

"BLD",8686,"KRN","B",8989.52,8989.52)

"BLD",8686,"KRN","B",8994,8994)

"BLD",8686,"QUES",0)
^9.62^^
"BLD",8686,"REQB",0)
^9.611^1^1
"BLD",8686,"REQB",1,0)
OR*3.0*306^2
"BLD",8686,"REQB","B","OR*3.0*306",1)

"FIA",101.52)
ORDER DEA ARCHIVE INFO
"FIA",101.52,0)
^ORPA(101.52,
"FIA",101.52,0,0)
101.52P
"FIA",101.52,0,1)
y^y^f^^^^n
"FIA",101.52,0,10)

"FIA",101.52,0,11)

"FIA",101.52,0,"RLRO")

"FIA",101.52,0,"VR")
3.0^OR
"FIA",101.52,101.52)
0
"FIA",101.52,101.529)
0
"FIA",101.52,101.53)
0
"INIT")
POST^ORY371
"IX",101.52,101.52,"C",0)
101.52^C^Index on Issuance Date to assist in monthly reporting by provider.^R^^R^IR^I^101.52^^^^^LS
"IX",101.52,101.52,"C",.1,0)
^^4^4^3130219^
"IX",101.52,101.52,"C",.1,1,0)
One of the Drug Enforcement Agency (DEA) requirements for electronic 
"IX",101.52,101.52,"C",.1,2,0)
prescribing of controlled substances is that a monthly report must be 
"IX",101.52,101.52,"C",.1,3,0)
prepared for each provider showing the controlled substance prescriptions 
"IX",101.52,101.52,"C",.1,4,0)
written for the previous month.
"IX",101.52,101.52,"C",1)
S ^ORPA(101.52,"C",X(2),X(1),DA)=""
"IX",101.52,101.52,"C",2)
K ^ORPA(101.52,"C",X(2),X(1),DA)
"IX",101.52,101.52,"C",2.5)
K ^ORPA(101.52,"C")
"IX",101.52,101.52,"C",11.1,0)
^.114IA^2^2
"IX",101.52,101.52,"C",11.1,1,0)
1^F^101.52^4^^2^F
"IX",101.52,101.52,"C",11.1,2,0)
2^F^101.52^31^^1^F
"MBREQ")
0
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,20,0)
^9.402P^^
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
371^3130430
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","ORCMED")
0^3^B65467847
"RTN","ORCMED",1,0)
ORCMED ;SLC/MKB-Medication actions ;03/27/13  04:56
"RTN","ORCMED",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,7,38,48,94,141,178,190,195,243,306,371**;Dec 17, 1997;Build 9
"RTN","ORCMED",3,0)
XFER ; -- transfer to in/outpt meds
"RTN","ORCMED",4,0)
 N ORPTLK,ORTYPE,ORXFER,ORSRC,ORCAT,OREVENT,X,ORINPT,ORIDLG,ORODLG,ORIVDLG,ORNMSP,ORCNT,ORI,NMBR,ORIFN,OLDIFN,ORDIALOG,ORDG,ORCHECK,ORQUIT,ORDUZ,ORLOG,FIRST,ORDITM,ORD,ORERR
"RTN","ORCMED",5,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK D  G XFQ ; lock pt chart
"RTN","ORCMED",6,0)
 . W !!,$C(7),$P(ORPTLK,U,2) H 2
"RTN","ORCMED",7,0)
 . S:'$D(VALMBCK) VALMBCK=""
"RTN","ORCMED",8,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("transfer") G:'ORNMBR XFQ
"RTN","ORCMED",9,0)
 D FULL^VALM1 S VALMBCK="R",ORTYPE="Q",ORXFER=1,ORDUZ=DUZ,ORSRC="X"
"RTN","ORCMED",10,0)
 S X=$P($P($G(^TMP("OR",$J,"CURRENT",0)),U,3),";",3) S:X="" X=$G(ORWARD)
"RTN","ORCMED",11,0)
 S ORCAT=$S(X:"O",1:"I") I ORCAT="I"!$G(ORWARD) D  Q:$G(OREVENT)="^"
"RTN","ORCMED",12,0)
 . W !!,$$CURRENT^OREVNT
"RTN","ORCMED",13,0)
 . S X=$$DELAY^ORCACT I X="^" S OREVENT="^" Q
"RTN","ORCMED",14,0)
 . S:X OREVENT=+$$PTEVENT^OREVNT(+ORVP,1)
"RTN","ORCMED",15,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL="^" XFQ
"RTN","ORCMED",16,0)
 S ORINPT=$$INPT^ORCD,ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" XFQ
"RTN","ORCMED",17,0)
 I 'ORINPT,ORCAT="I" D IMOLOC^ORIMO(.ORINPT,+ORL,+ORVP) S:ORINPT<0 ORINPT=0 ;allow inpt meds at this location?
"RTN","ORCMED",18,0)
 S ORIDLG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORCMED",19,0)
 S ORODLG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORCMED",20,0)
 S ORIVDLG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORCMED",21,0)
 D PROVIDER^ORCDPSIV G:$G(ORQUIT) XFQ ;X:$D(^ORD(101.41,ORDIALOG,3)) ^(3)
"RTN","ORCMED",22,0)
 S ORNMSP="PS" D DISPLAY^ORCHECK
"RTN","ORCMED",23,0)
 S ORCNT=$L(ORNMBR,",") S:$P(ORNMBR,",",ORCNT)'>0 ORCNT=ORCNT-1
"RTN","ORCMED",24,0)
XF1 F ORI=1:1:ORCNT S NMBR=$P(ORNMBR,",",ORI) D:NMBR  I $D(ORQUIT),ORI<ORCNT Q:'$$CONT  ;if not last one, ask
"RTN","ORCMED",25,0)
 . K ORIFN,ORDIALOG,ORDG,ORDOSE,ORCHECK,ORQUIT,ORERR
"RTN","ORCMED",26,0)
 . K ^TMP("PSJMR",$J),^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",27,0)
 . S OLDIFN=+$P($G(^TMP("OR",$J,ORTAB,"IDX",NMBR)),U,4)
"RTN","ORCMED",28,0)
 . S ORDITM=$$ORDITEM^ORCACT(OLDIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",29,0)
 . I '$$VALID^ORCACT0(OLDIFN,"XFR",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",30,0)
 . S ORD=$P($G(^OR(100,OLDIFN,0)),U,5) Q:ORD'["101.41"  ;error msg?
"RTN","ORCMED",31,0)
 . S ORDIALOG=$S(+ORD=ORIVDLG:ORIVDLG,ORCAT="I":ORIDLG,1:ORODLG)
"RTN","ORCMED",32,0)
 . S ORDG=+$P($G(^ORD(101.41,ORDIALOG,0)),U,5)
"RTN","ORCMED",33,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(OLDIFN)
"RTN","ORCMED",34,0)
 . I ORDIALOG'=ORIVDLG D OUT:ORCAT="I",IN:ORCAT="O" ;convert data
"RTN","ORCMED",35,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)
"RTN","ORCMED",36,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX NOW"),1)
"RTN","ORCMED",37,0)
 . S ORLOG=+$E($$NOW^XLFDT,1,12),FIRST=1
"RTN","ORCMED",38,0)
XF2 . D DIALOG^ORCDLG Q:$G(ORQUIT)&FIRST  K ORQUIT
"RTN","ORCMED",39,0)
 . D ACCEPT^ORCHECK(),DISPLAY^ORCDLG S X=$$OK^ORCDLG I X="^" S ORQUIT=1 Q
"RTN","ORCMED",40,0)
 . I X="E" K ORCHECK S FIRST=0 G XF2
"RTN","ORCMED",41,0)
 . I X="C" W !?10,"... order cancelled.",! Q
"RTN","ORCMED",42,0)
 . I X="P" D
"RTN","ORCMED",43,0)
 . . D EN^ORCSAVE W !?10,$S(ORIFN:"... order placed.",1:"ERROR"),!
"RTN","ORCMED",44,0)
 . . S:$G(ORIFN) ^TMP("ORNEW",$J,ORIFN,1)=""
"RTN","ORCMED",45,0)
 . . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^(ORDIALOG)=ORDIALOG M:$D(^TMP("ORWORD",$J)) ^TMP("ORECALL",$J,ORDIALOG)=^TMP("ORWORD",$J) ;save 1st values
"RTN","ORCMED",46,0)
XFQ D EXIT^ORCDPS1 ;X:$D(^ORD(101.41,ORDIALOG,4)) ^(4)
"RTN","ORCMED",47,0)
 K ^TMP("ORWORD",$J),^TMP("ORSIG",$J)
"RTN","ORCMED",48,0)
 D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",49,0)
 Q
"RTN","ORCMED",50,0)
 ;
"RTN","ORCMED",51,0)
IN ; -- Kill extra values, Reset ID's/DD from Inpt dialog
"RTN","ORCMED",52,0)
 N ORD1,ORDLI,ORDFIN,ORDCNT,ORDORIG,ORDORIGF
"RTN","ORCMED",53,0)
 N P F P="START DATE/TIME","NOW" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",54,0)
 S ORD1=$P($G(ORDIALOG($$PTR("DOSE"),1)),"&",5)
"RTN","ORCMED",55,0)
 S ORDORIG=ORDIALOG($$PTR("INSTRUCTIONS"),1)
"RTN","ORCMED",56,0)
 D DOSES("O")
"RTN","ORCMED",57,0)
 Q:'$L(ORD1)
"RTN","ORCMED",58,0)
 S ORDFIN="",ORDCNT=0,ORDORIGF=0
"RTN","ORCMED",59,0)
 ;look in the new instructions list for the original inpatient instructions and the dose
"RTN","ORCMED",60,0)
 S ORDLI=0 F  S ORDLI=$O(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI)) Q:'ORDLI  D
"RTN","ORCMED",61,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)[ORD1 S ORDFIN=$P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U),ORDCNT=ORDCNT+1
"RTN","ORCMED",62,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)=ORDORIG S ORDORIGF=1
"RTN","ORCMED",63,0)
 ;If original instructions was not in the new instructions list then replace the instructions
"RTN","ORCMED",64,0)
 I ORDORIGF=0 D
"RTN","ORCMED",65,0)
 .I ORDCNT=1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=ORDFIN ;only one item in the list found containing the dose string - set the instructions to the item found
"RTN","ORCMED",66,0)
 .I ORDCNT=0 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;no items in the list found containing the dose string - blank the instructions
"RTN","ORCMED",67,0)
 .I ORDCNT>1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;more than one item in the list found containing the dose string - blank the instructions
"RTN","ORCMED",68,0)
 Q
"RTN","ORCMED",69,0)
 ;
"RTN","ORCMED",70,0)
OUT ; -- Kill extra values, Reset ID's/DD from Outpt dialog
"RTN","ORCMED",71,0)
 N ORD1,ORDLI,ORDFIN,ORDCNT,ORDORIG,ORDORIGF
"RTN","ORCMED",72,0)
 S ORD1=$P($G(ORDIALOG($$PTR("DOSE"),1)),"&",5)
"RTN","ORCMED",73,0)
 S ORDORIG=ORDIALOG($$PTR("INSTRUCTIONS"),1)
"RTN","ORCMED",74,0)
 N P I '$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) D  ;old sig in comments
"RTN","ORCMED",75,0)
 . N WP S WP=$$PTR("WORD PROCESSING 1") K ^TMP("ORSIG",$J)
"RTN","ORCMED",76,0)
 . M ^TMP("ORSIG",$J)=^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",77,0)
 . K ORDIALOG(WP,1),^TMP("ORWORD",$J,WP,1)
"RTN","ORCMED",78,0)
 F P="PATIENT INSTRUCTIONS","START DATE/TIME","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORCMED",79,0)
 I $G(ORDIALOG($$PTR("URGENCY"),1))=99 K ORDIALOG($$PTR("URGENCY"),1)
"RTN","ORCMED",80,0)
 D DOSES("I")
"RTN","ORCMED",81,0)
 Q:'$L(ORD1)
"RTN","ORCMED",82,0)
 S ORDFIN="",ORDCNT=0,ORDORIGF=0
"RTN","ORCMED",83,0)
 ;look in the new instructions list for the original inpatient instructions and the dose
"RTN","ORCMED",84,0)
 S ORDLI=0 F  S ORDLI=$O(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI)) Q:'ORDLI  D
"RTN","ORCMED",85,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)[ORD1 S ORDFIN=$P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U),ORDCNT=ORDCNT+1
"RTN","ORCMED",86,0)
 .I $P(ORDIALOG($$PTR("INSTRUCTIONS"),"LIST",ORDLI),U)=ORDORIG S ORDORIGF=1
"RTN","ORCMED",87,0)
 ;If original instructions was not in the new instructions list then replace the instructions
"RTN","ORCMED",88,0)
 I ORDORIGF=0 D
"RTN","ORCMED",89,0)
 .I ORDCNT=1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=ORDFIN ;only one item in the list found containing the dose string - set the instructions to the item found
"RTN","ORCMED",90,0)
 .I ORDCNT=0 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;no items in the list found containing the dose string - blank the instructions
"RTN","ORCMED",91,0)
 .I ORDCNT>1 S ORDIALOG($$PTR("INSTRUCTIONS"),1)="" ;more than one item in the list found containing the dose string - blank the instructions
"RTN","ORCMED",92,0)
 Q
"RTN","ORCMED",93,0)
 ;
"RTN","ORCMED",94,0)
DOSES(TYPE)     ; -- Convert doses to new TYPE, reset ID strings
"RTN","ORCMED",95,0)
 N PSOI,ORMED,PROMPT,DOSE,DRUG,I,X,DD,DRUG0,STR
"RTN","ORCMED",96,0)
 F I="DISPENSE DRUG","STRENGTH","DRUG NAME","SIG" K ORDIALOG($$PTR(I),1)
"RTN","ORCMED",97,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1)),0)),U,2),ORMED=$P($G(^(0)),U)
"RTN","ORCMED",98,0)
 D DOSE^PSSORUTL(.ORDOSE,PSOI,TYPE,+ORVP) I $G(ORDOSE(1))=-1 K ORDOSE
"RTN","ORCMED",99,0)
 S PROMPT=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORCMED",100,0)
 S DRUG=$$PTR("DISPENSE DRUG") D D1^ORCDPS2
"RTN","ORCMED",101,0)
 S I=0 F  S I=$O(ORDIALOG(PROMPT,I)) Q:I'>0  D
"RTN","ORCMED",102,0)
 . K ORDIALOG(DOSE,I) S X=$G(ORDIALOG(PROMPT,I)) Q:'$L(X)
"RTN","ORCMED",103,0)
 . S X=$$UP^XLFSTR(X),DD=+$G(ORDIALOG(PROMPT,"LIST","D",X)) Q:'DD
"RTN","ORCMED",104,0)
 . S ORDIALOG(DOSE,I)=$TR($G(ORDOSE("DD",DD,X)),"^","&")
"RTN","ORCMED",105,0)
 . S ORDIALOG(DRUG,I)=DD,DRUG0=$G(ORDOSE("DD",DD))
"RTN","ORCMED",106,0)
 . S STR=$P(DRUG0,U,5)_$P(DRUG0,U,6)
"RTN","ORCMED",107,0)
 . I STR'>0 S:'$G(ORDOSE(1)) ORDIALOG($$PTR("DRUG NAME"),1)=$P(DRUG0,U) Q
"RTN","ORCMED",108,0)
 . I ORMED'[STR,TYPE="O"!'$G(ORDOSE(1)) S ORDIALOG($$PTR("STRENGTH"),1)=STR
"RTN","ORCMED",109,0)
 Q
"RTN","ORCMED",110,0)
 ;
"RTN","ORCMED",111,0)
CONT() ; -- Want to continue processing orders?
"RTN","ORCMED",112,0)
 N X,Y,DIR
"RTN","ORCMED",113,0)
 S DIR(0)="YA",DIR("A")="Do you want to continue transferring orders? ",DIR("B")="YES"
"RTN","ORCMED",114,0)
 S DIR("?")="Enter YES to continue transferring the remaining orders selected, or NO to quit this option."
"RTN","ORCMED",115,0)
 D ^DIR
"RTN","ORCMED",116,0)
 Q +Y
"RTN","ORCMED",117,0)
 ;
"RTN","ORCMED",118,0)
SHOWSIG ; -- Show old sig for transfer in ^TMP("ORSIG",$J)
"RTN","ORCMED",119,0)
 N ORTX,I,X,ORMAX S ORMAX=72
"RTN","ORCMED",120,0)
 S I=0 F  S I=$O(^TMP("ORSIG",$J,I)) Q:I'>0  S X=$G(^(I,0)) D:$L(X) TXT^ORCHTAB
"RTN","ORCMED",121,0)
 S I=0 F  S I=$O(ORTX(I)) Q:I'>0  W !,$S(I=1:"(Sig: ",1:"      ")_ORTX(I)
"RTN","ORCMED",122,0)
 W ")"
"RTN","ORCMED",123,0)
 Q
"RTN","ORCMED",124,0)
 ;
"RTN","ORCMED",125,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORCMED",126,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORCMED",127,0)
 ;
"RTN","ORCMED",128,0)
REFILLS ; -- Request a refill for med orders
"RTN","ORCMED",129,0)
 ;    ORNMBR = #,#,...,# of selected orders
"RTN","ORCMED",130,0)
 ;
"RTN","ORCMED",131,0)
 N ORLK,ORI,NMBR,IDX,ORIFN,ORDITM,ORERR,ORQUIT,OROUT
"RTN","ORCMED",132,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") G:'ORNMBR RFQ
"RTN","ORCMED",133,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",134,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" RFQ
"RTN","ORCMED",135,0)
 S:'$G(ORL) ORL=$$LOCATION^ORCMENU1 G:ORL="^" RFQ
"RTN","ORCMED",136,0)
 S OROUT=$$ROUTING G:OROUT="^" RFQ
"RTN","ORCMED",137,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCMED",138,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR)),ORIFN=+$P(IDX,U,4)
"RTN","ORCMED",139,0)
 . Q:'ORIFN  I '$D(^OR(100,ORIFN,0)) W !,"Invalid order number!" H 2 Q
"RTN","ORCMED",140,0)
 . S ORDITM=$$ORDITEM^ORCACT(ORIFN) D SUBHDR^ORCACT(ORDITM)
"RTN","ORCMED",141,0)
 . I '$$VALID^ORCACT0(ORIFN,"RF",.ORERR) W !,ORERR H 2 Q
"RTN","ORCMED",142,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK W !,$P(ORLK,U,2) H 2 Q
"RTN","ORCMED",143,0)
 . D REF^ORMBLDPS(ORIFN,OROUT),UNLK1^ORX2(+ORIFN)
"RTN","ORCMED",144,0)
 . W !?10,"... refill requested.",$$RETURN
"RTN","ORCMED",145,0)
RFQ Q
"RTN","ORCMED",146,0)
 ;
"RTN","ORCMED",147,0)
RETURN() ; -- press return to cont
"RTN","ORCMED",148,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCMED",149,0)
 Q ""
"RTN","ORCMED",150,0)
 ;
"RTN","ORCMED",151,0)
ROUTING() ; -- Routing for refill
"RTN","ORCMED",152,0)
 N X,Y,DIR S DIR(0)="SAM^W:WINDOW;M:MAIL;C:ADMINISTERED IN CLINIC;"
"RTN","ORCMED",153,0)
 S DIR("A")="Routing: ",DIR("B")=$S($D(^PSX(550,"C")):"MAIL",1:"WINDOW")
"RTN","ORCMED",154,0)
 S DIR("?")="Select how the patient is to receive this refill, by mail or at the window or in the clinic"
"RTN","ORCMED",155,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCMED",156,0)
 Q Y
"RTN","ORCMED",157,0)
 ;
"RTN","ORCMED",158,0)
NW ; -- Order New Medication from Meds tab
"RTN","ORCMED",159,0)
 ;    Requires ORDIALOG      = name of pkg dialog
"RTN","ORCMED",160,0)
 ;             OREVENT       = event, if delaying orders
"RTN","ORCMED",161,0)
 ;             OREVENT("TS") = treating spec, if admission or transfer
"RTN","ORCMED",162,0)
 N ORPTLK G:'$L($G(ORDIALOG)) NWQ
"RTN","ORCMED",163,0)
 S ORPTLK=$$LOCK^ORX2(+ORVP) I 'ORPTLK W !!,$C(7),$P(ORPTLK,U,2) H 2 Q
"RTN","ORCMED",164,0)
 D FREEZE^ORCMENU S VALMBCK="R"
"RTN","ORCMED",165,0)
 S ORNP=$$PROVIDER^ORCMENU1 G:ORNP="^" NWQ
"RTN","ORCMED",166,0)
 I '$G(ORL) S ORL=$S($G(OREVENT):$$LOC^OREVNTX(OREVENT),1:$$LOCATION^ORCMENU1) G:ORL["^" NWQ
"RTN","ORCMED",167,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",$E(ORDIALOG,1,63),0)) G:'ORDIALOG NWQ
"RTN","ORCMED",168,0)
 D ADD^ORCDLG,REBLD^ORCMENU:$D(^TMP("ORNEW",$J))
"RTN","ORCMED",169,0)
 K ORDIALOG,^TMP("ORWORD",$J),^TMP("ORECALL",$J) S VALMBCK="R"
"RTN","ORCMED",170,0)
NWQ D:'$D(^TMP("ORNEW",$J)) UNLOCK^ORX2(+ORVP) ;unlock if no new orders
"RTN","ORCMED",171,0)
 Q
"RTN","ORDEA02")
0^4^B8327482
"RTN","ORDEA02",1,0)
ORDEA02 ;ISL/JLC - DEA PROVIDER REPORT ;12/07/12  07:49
"RTN","ORDEA02",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**371**;Dec 17, 1997;Build 9
"RTN","ORDEA02",3,0)
 ;
"RTN","ORDEA02",4,0)
 ;
"RTN","ORDEA02",5,0)
 Q
"RTN","ORDEA02",6,0)
EN ;TaskMan entry point
"RTN","ORDEA02",7,0)
 N YR,MN,ORREPH,ORREP,ORPROV,BL,S1,S3,ORRX,DATA0,DATA1,DATA3,DATA5,ORPNM,ORDRUG,ORDEA,ORCNT,ORISS,Y,ORDT,DIC,DA,DR,DIQ,ORS,ORIFN
"RTN","ORDEA02",8,0)
 S ZTSTOP=0 K ^TMP($J,"CS BY PROV")
"RTN","ORDEA02",9,0)
 S DT=$$NOW^XLFDT,YR=$E(DT,1,3)+1700,MN=$E(100+$E(DT,4,5)-1,2,99) I MN<1 S MN=12,YR=YR-1
"RTN","ORDEA02",10,0)
 S Y=YR-1700_MN D DD^%DT S ORREPH=Y,ORREP=YR-1700_$E(MN+100,2,3),ORPROV=0,$P(BL," ",99)=""
"RTN","ORDEA02",11,0)
 F  S ORPROV=$O(^ORPA(101.52,"C",ORPROV)) Q:'ORPROV  D  I ZTSTOP Q
"RTN","ORDEA02",12,0)
 . S S1=ORREP K ^TMP($J,"CS BY PROV") S ORCNT=0
"RTN","ORDEA02",13,0)
 . F  S S1=$O(^ORPA(101.52,"C",ORPROV,S1)) Q:'S1  I $E(S1,1,5)=ORREP D
"RTN","ORDEA02",14,0)
 .. S S3=0
"RTN","ORDEA02",15,0)
 .. F  S S3=$O(^ORPA(101.52,"C",ORPROV,S1,S3)) Q:'S3  D
"RTN","ORDEA02",16,0)
 ... S DATA0=$G(^ORPA(101.52,S3,0)),DATA1=$G(^(1)),DATA3=$G(^(3)),DATA5=$G(^(5))
"RTN","ORDEA02",17,0)
 ... S ORIFN=$P(DATA0,"^"),ORRX=$P(DATA0,"^",2)
"RTN","ORDEA02",18,0)
 ... I ORRX="" S DA=$P(^OR(100,ORIFN,3),"^",3) S DIC=100.01,DR=.01,DIQ="ORS" D EN^DIQ1 S ORRX=ORS(100.01,DA,.01)
"RTN","ORDEA02",19,0)
 ... S ORRX=ORRX_BL,ORPNM=$P(DATA5,"^")_BL,ORDRUG=$E($P(DATA1,"^",2),1,22)_BL,ORDEA=$E($P(DATA1,"^",4))_BL
"RTN","ORDEA02",20,0)
 ... I 'ORCNT D
"RTN","ORDEA02",21,0)
 .... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)=$E(BL,1,16)_"Monthly Controlled Substances Issued by Provider"
"RTN","ORDEA02",22,0)
 .... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)="Report for: "_ORREPH_" for "_$P(DATA3,"^",3)
"RTN","ORDEA02",23,0)
 .... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)=" "
"RTN","ORDEA02",24,0)
 .... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)=$E("PATIENT NAME"_BL,1,25)_$E("DRUG NAME"_BL,1,25)_"SCH  "_$E("ISSUE DATE"_BL,1,13)_$E("RX #"_BL,1,12)
"RTN","ORDEA02",25,0)
 .... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)=" "
"RTN","ORDEA02",26,0)
 ... S Y=$P(DATA1,"^") X ^DD("DD") S ORISS=Y_BL
"RTN","ORDEA02",27,0)
 ... S ORCNT=ORCNT+1,^TMP($J,"CS BY PROV",ORCNT,0)=$E(ORPNM,1,23)_"  "_$E(ORDRUG,1,24)_" "_$E(ORDEA)_"    "_$E(ORISS,1,13)_$E(ORRX,1,11)
"RTN","ORDEA02",28,0)
 . D SEND K ^TMP($J)
"RTN","ORDEA02",29,0)
 . S ZTSTOP=$$REQ2STOP()
"RTN","ORDEA02",30,0)
 S ZTREQ="@" Q
"RTN","ORDEA02",31,0)
SEND ;
"RTN","ORDEA02",32,0)
 Q:'$D(^TMP($J,"CS BY PROV"))  N XMY,XMDUZ,XMSUB,XMTEXT
"RTN","ORDEA02",33,0)
 S XMDUZ="CPRS,REPORT",XMY(ORPROV)="",XMSUB="MONTHLY CONTROLLED SUBSTANCES REPORT",XMTEXT="^TMP("_$J_",""CS BY PROV"","
"RTN","ORDEA02",34,0)
 D ^XMD Q
"RTN","ORDEA02",35,0)
REQ2STOP() ;
"RTN","ORDEA02",36,0)
 ; Check for task stop request
"RTN","ORDEA02",37,0)
 ; Returns 1 if stop request made.
"RTN","ORDEA02",38,0)
 N STATUS,X
"RTN","ORDEA02",39,0)
 S STATUS=0
"RTN","ORDEA02",40,0)
 I '$D(ZTQUEUED) Q 0
"RTN","ORDEA02",41,0)
 S X=$$S^%ZTLOAD()
"RTN","ORDEA02",42,0)
 I X D  ;
"RTN","ORDEA02",43,0)
 . S STATUS=1
"RTN","ORDEA02",44,0)
 . S X=$$S^%ZTLOAD("Received shutdown request")
"RTN","ORDEA02",45,0)
 ;
"RTN","ORDEA02",46,0)
 Q STATUS
"RTN","ORMTIM02")
0^6^B18747786
"RTN","ORMTIM02",1,0)
ORMTIM02 ; JM/SLC-ISC - PERFORM MISC TIME BASED ACTIVITIES ;04/30/13  05:29
"RTN","ORMTIM02",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**253,243,371**;Dec 17, 1997;Build 9
"RTN","ORMTIM02",3,0)
 ;
"RTN","ORMTIM02",4,0)
 Q
"RTN","ORMTIM02",5,0)
MISC ; Perform misc time based activities
"RTN","ORMTIM02",6,0)
 ;
"RTN","ORMTIM02",7,0)
 D UNSIGNED ; Generate alerts for unsigned orders that have slipped through the cracks
"RTN","ORMTIM02",8,0)
 D INIT^ORWGTASK(0) ; check to run rebuild of cache for graphing
"RTN","ORMTIM02",9,0)
 ;
"RTN","ORMTIM02",10,0)
 Q
"RTN","ORMTIM02",11,0)
 ;
"RTN","ORMTIM02",12,0)
UNSIGNED ; Generate alerts for unsigned orders that were not alerted by CPRS
"RTN","ORMTIM02",13,0)
 ; This happens when CPRS crashes - through network connection drops or other causes
"RTN","ORMTIM02",14,0)
 N ORZPAT,ORZDATE,ORZIEN,ORZSUB,ORZSDATE,%DT,X,Y,ORZTIME,ORZNOW,ORZPURGE
"RTN","ORMTIM02",15,0)
 N ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA,ORZREC8,ORZSIGDT,ORZSTS,ORZWHEN,ORMARKID,ORMINTIM
"RTN","ORMTIM02",16,0)
 N MINTIME,XTMPDAYS,XTMPHOUR,MINDAYS
"RTN","ORMTIM02",17,0)
 S ORN=12,ORMARKID="ORMTIME_UNSGNORD"
"RTN","ORMTIM02",18,0)
 ;
"RTN","ORMTIM02",19,0)
 S MINTIME=60 ; Order must be unsigned for 60 Minutes before generating an alert
"RTN","ORMTIM02",20,0)
 S MINDAYS=90 ; Order must have been generated within the last 90 days
"RTN","ORMTIM02",21,0)
 ;
"RTN","ORMTIM02",22,0)
 S XTMPDAYS=10 ; Keep ^XTMP record for 10 days - reset timeframe with each run
"RTN","ORMTIM02",23,0)
 S XTMPHOUR=48 ; Each order that's verified as having generated an alert has a flag set in
"RTN","ORMTIM02",24,0)
 ;               ^XTMP that's kept for 48 hours.  When flag is gone, must recheck alert status
"RTN","ORMTIM02",25,0)
 ;
"RTN","ORMTIM02",26,0)
 S ORMINTIM=MINTIME
"RTN","ORMTIM02",27,0)
 S X="T-"_MINDAYS
"RTN","ORMTIM02",28,0)
 D ^%DT S ORZSDATE=9999999-Y
"RTN","ORMTIM02",29,0)
 S %DT="ST",X="NOW" D ^%DT
"RTN","ORMTIM02",30,0)
 S ORZNOW=Y
"RTN","ORMTIM02",31,0)
 S ORZPURGE=$$FMADD^XLFDT(ORZNOW,XTMPDAYS,0,0,0) ; Purge all marked flags if not run in XTMPDAYS days
"RTN","ORMTIM02",32,0)
 S ^XTMP(ORMARKID,0)=ORZPURGE_U_ORZNOW_U_"Unsigned Orders Reviewed by ORMTIME"
"RTN","ORMTIM02",33,0)
 S ORZPURGE=$$FMADD^XLFDT(ORZNOW,0,XTMPHOUR,0,0) ; Purge each marked flag XTMPHOUR hours after creation
"RTN","ORMTIM02",34,0)
 K MINTIME,MINDAYS,XTMPDAYS,XTMPHOUR,X,Y,%DT ; Kill non-namespaced vars
"RTN","ORMTIM02",35,0)
 S ORZPAT="" F  S ORZPAT=$O(^OR(100,"AS",ORZPAT)) Q:'ORZPAT  D
"RTN","ORMTIM02",36,0)
 . Q:$P(^DPT(+ORZPAT,0),U,21)  ; Quit if test patient
"RTN","ORMTIM02",37,0)
 . S ORZDATE=0 F  S ORZDATE=$O(^OR(100,"AS",ORZPAT,ORZDATE)) Q:'ORZDATE  I ORZDATE<ORZSDATE D
"RTN","ORMTIM02",38,0)
 . . S ORZIEN=0 F  S ORZIEN=$O(^OR(100,"AS",ORZPAT,ORZDATE,ORZIEN)) Q:'ORZIEN  D
"RTN","ORMTIM02",39,0)
 . . . S ORZSUB=0 F  S ORZSUB=$O(^OR(100,"AS",ORZPAT,ORZDATE,ORZIEN,ORZSUB)) Q:'ORZSUB  D
"RTN","ORMTIM02",40,0)
 . . . . I $D(^OR(100,ORZIEN,8,ORZSUB,0)) D
"RTN","ORMTIM02",41,0)
 . . . . . S ORZREC8=^OR(100,ORZIEN,8,ORZSUB,0)
"RTN","ORMTIM02",42,0)
 . . . . . S ORZSIGDT=$P(ORZREC8,U,6) I $L(ORZSIGDT)>0 Q  ; Can't have a sign date/time
"RTN","ORMTIM02",43,0)
 . . . . . S ORZSTS=$P(ORZREC8,U,4) I ORZSTS'=2 Q  ; must be in an unsigned state
"RTN","ORMTIM02",44,0)
 . . . . . N ORMINT,ORCSVAL
"RTN","ORMTIM02",45,0)
 . . . . . D CSVALUE^ORDEA(.ORCSVAL,ORZIEN)
"RTN","ORMTIM02",46,0)
 . . . . . S ORMINT=ORMINTIM
"RTN","ORMTIM02",47,0)
 . . . . . I +ORCSVAL S ORMINT=5 ;ONLY WAIT 5 MINUTES FOR CS ORDERS
"RTN","ORMTIM02",48,0)
 . . . . . S ORZTIME=$$FMADD^XLFDT(ORZNOW,0,0,-ORMINT,0) ; Order must have existed for ORZTIME minutes
"RTN","ORMTIM02",49,0)
 . . . . . S ORZWHEN=$P(ORZREC8,U) I ORZWHEN>ORZTIME Q  ; must have been unsigned for MINTIME
"RTN","ORMTIM02",50,0)
 . . . . . S ORBDFN=+ORZPAT
"RTN","ORMTIM02",51,0)
 . . . . . S ORNUM=ORZIEN_";"_ORZSUB
"RTN","ORMTIM02",52,0)
 . . . . . I $$NEEDALRT($P(ORZREC8,U,3),ORBDFN,ORNUM) D  ; must not have already generated an alert
"RTN","ORMTIM02",53,0)
 . . . . . . S (ORBADUZ,ORBPMSG,ORBPDATA)=""
"RTN","ORMTIM02",54,0)
 . . . . . . D DOALERT^ORB3
"RTN","ORMTIM02",55,0)
 . . . . . . D MARK(ORNUM) ; Alert sent, don't send another one
"RTN","ORMTIM02",56,0)
 D CLEAN
"RTN","ORMTIM02",57,0)
 Q
"RTN","ORMTIM02",58,0)
 ;
"RTN","ORMTIM02",59,0)
NEEDALRT(PROVIDER,DFN,ORNUM) ; Returns true if order needs an alert
"RTN","ORMTIM02",60,0)
 ;
"RTN","ORMTIM02",61,0)
 I $$MARKED(ORNUM) Q 0 ; If already checked, return
"RTN","ORMTIM02",62,0)
 ;
"RTN","ORMTIM02",63,0)
 N RESULT,SUROGATE
"RTN","ORMTIM02",64,0)
 S RESULT=1
"RTN","ORMTIM02",65,0)
 I $$HASALERT(PROVIDER,DFN) S RESULT=0 I 1
"RTN","ORMTIM02",66,0)
 E  D
"RTN","ORMTIM02",67,0)
 . S SUROGATE=$P($$GETSURO^XQALSURO(PROVIDER),U,1)
"RTN","ORMTIM02",68,0)
 . I +SUROGATE,$$HASALERT(SUROGATE,DFN) S RESULT=0
"RTN","ORMTIM02",69,0)
 I 'RESULT D MARK(ORNUM)
"RTN","ORMTIM02",70,0)
 Q RESULT
"RTN","ORMTIM02",71,0)
 ;
"RTN","ORMTIM02",72,0)
HASALERT(USER,PATIENT) ; Returns true if alert exists for user and patient
"RTN","ORMTIM02",73,0)
 N RESULT,ALERTID,DATE
"RTN","ORMTIM02",74,0)
 S RESULT=0,ALERTID="OR,"_PATIENT_",12"
"RTN","ORMTIM02",75,0)
 I $D(^XTV(8992,"AXQAN",ALERTID,USER)) D  ;DBIA# 2689
"RTN","ORMTIM02",76,0)
 . S DATE=$O(^XTV(8992,"AXQAN",ALERTID,USER,0))
"RTN","ORMTIM02",77,0)
 . I $G(DATE)>0 S RESULT=1
"RTN","ORMTIM02",78,0)
 Q RESULT
"RTN","ORMTIM02",79,0)
 ;
"RTN","ORMTIM02",80,0)
MARKED(ORNUM) ; Returns true if the order has been marked as not needing an alert
"RTN","ORMTIM02",81,0)
 I $D(^XTMP(ORMARKID,"A",ORNUM))>0 Q 1
"RTN","ORMTIM02",82,0)
 Q 0
"RTN","ORMTIM02",83,0)
 ;
"RTN","ORMTIM02",84,0)
MARK(ORNUM) ; Marks an order as already having been alerted
"RTN","ORMTIM02",85,0)
 S ^XTMP(ORMARKID,"A",ORNUM)=""
"RTN","ORMTIM02",86,0)
 S ^XTMP(ORMARKID,"B",ORZPURGE,ORNUM)=""
"RTN","ORMTIM02",87,0)
 Q
"RTN","ORMTIM02",88,0)
CLEAN ; Clean up old entries in ^XTMP
"RTN","ORMTIM02",89,0)
 N IDX,ORNUM
"RTN","ORMTIM02",90,0)
 S IDX=0
"RTN","ORMTIM02",91,0)
 F  S IDX=$O(^XTMP(ORMARKID,"B",IDX)) Q:((+IDX=0)!(IDX>ORZNOW))  D
"RTN","ORMTIM02",92,0)
 . S ORNUM=0
"RTN","ORMTIM02",93,0)
 . F  S ORNUM=$O(^XTMP(ORMARKID,"B",IDX,ORNUM)) Q:+ORNUM=0  D
"RTN","ORMTIM02",94,0)
 . . K ^XTMP(ORMARKID,"A",ORNUM)
"RTN","ORMTIM02",95,0)
 . . K ^XTMP(ORMARKID,"B",IDX,ORNUM)
"RTN","ORMTIM02",96,0)
 Q
"RTN","ORWOR1")
0^2^B34983568
"RTN","ORWOR1",1,0)
ORWOR1 ; slc/dcm - PKI RPC functions ;03/27/13  04:57
"RTN","ORWOR1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132,141,163,306,371**;Dec 17, 1997;Build 9
"RTN","ORWOR1",3,0)
 ;
"RTN","ORWOR1",4,0)
 ;
"RTN","ORWOR1",5,0)
 ;
"RTN","ORWOR1",6,0)
 ;
"RTN","ORWOR1",7,0)
SIG(RET,ID,X1,X2,X3,X4,ORX5,X6,X7) ;Store the signature.
"RTN","ORWOR1",8,0)
 ;ID = orifn;action
"RTN","ORWOR1",9,0)
 ;X1 = Hash
"RTN","ORWOR1",10,0)
 ;X2 = Length of the array
"RTN","ORWOR1",11,0)
 ;X3 = Datafile (100)
"RTN","ORWOR1",12,0)
 ;X4 = Provider DUZ
"RTN","ORWOR1",13,0)
 ;ORX5 = Array for the sig
"RTN","ORWOR1",14,0)
 ;X6 = CRLURL
"RTN","ORWOR1",15,0)
 ;X7 = DFN
"RTN","ORWOR1",16,0)
 ;
"RTN","ORWOR1",17,0)
 N ORHINFO,ORDINFO,OROUT,ORADD
"RTN","ORWOR1",18,0)
 ;gets patient/user specific info used in hash on GUI
"RTN","ORWOR1",19,0)
 K ORDFDA
"RTN","ORWOR1",20,0)
 D HASHINFO^ORDEA(.ORHINFO,X7,X4)
"RTN","ORWOR1",21,0)
 ;get order specific info used in hash on GUI
"RTN","ORWOR1",22,0)
 D ORDHINFO^ORDEA(.ORDINFO,+ID,X1,.ORHINFO)
"RTN","ORWOR1",23,0)
 ;look for existing entries in 101.52
"RTN","ORWOR1",24,0)
 S ORADD=1
"RTN","ORWOR1",25,0)
 I $D(^ORPA(101.52,"B",+ID)) D
"RTN","ORWOR1",26,0)
 .N ORI S ORI=0 F  S ORI=$O(^ORPA(101.52,"B",+ID,ORI)) Q:'ORI  D
"RTN","ORWOR1",27,0)
 ..;if existing entry is not one that originated from backdoor and it's hash matches the current hash set flag to not add new record
"RTN","ORWOR1",28,0)
 ..I ($L($P($G(^ORPA(101.52,ORI,0)),U,2))=0),$P($G(^ORPA(101.52,ORI,0)),U,3)=X1 D
"RTN","ORWOR1",29,0)
 ...S ORADD=0
"RTN","ORWOR1",30,0)
 ...;keep record that this was called but matched for 60 days
"RTN","ORWOR1",31,0)
 ...S ^XTMP("OR DUP ARCHIVE","HMATCH",+ID,ORI,$$NOW^XLFDT)=""
"RTN","ORWOR1",32,0)
 ...S ^XTMP("OR DUP ARCHIVE",0)=$$FMADD^XLFDT($$NOW^XLFDT,60)_U_$$NOW^XLFDT
"RTN","ORWOR1",33,0)
 ..;if existing entry is not one that originated from backdoor but it does not match the current hash delete it
"RTN","ORWOR1",34,0)
 ..I ($L($P($G(^ORPA(101.52,ORI,0)),U,2))=0),$P($G(^ORPA(101.52,ORI,0)),U,3)'=X1 D
"RTN","ORWOR1",35,0)
 ...;keep deleted archive entry in xtmp for 60 days
"RTN","ORWOR1",36,0)
 ...M ^XTMP("OR DUP ARCHIVE","HUNMATCH",+ID,ORI,$$NOW^XLFDT)=^ORPA(101.52,ORI)
"RTN","ORWOR1",37,0)
 ...S ^XTMP("OR DUP ARCHIVE",0)=$$FMADD^XLFDT($$NOW^XLFDT,60)_U_$$NOW^XLFDT
"RTN","ORWOR1",38,0)
 ...N DA,DIK
"RTN","ORWOR1",39,0)
 ...S DA=ORI,DIK="^ORPA(101.52," D ^DIK
"RTN","ORWOR1",40,0)
 ..;if it is from backdoor then update that record with the hash and set flag to not add new record
"RTN","ORWOR1",41,0)
 ..I $L($P($G(^ORPA(101.52,ORI,0)),U,2))>0 S $P(^ORPA(101.52,ORI,0),U,3)=X1 S ORADD=0
"RTN","ORWOR1",42,0)
 I ORADD D UPDATE^DIE("","ORDFDA","OROUT","ERROR") K ORDFDA
"RTN","ORWOR1",43,0)
 S Y1=$$STORESIG^XUSSPKI(X1,X2,.ORX5,X4,X3)
"RTN","ORWOR1",44,0)
 I +Y1>0 D
"RTN","ORWOR1",45,0)
 . S ORIFN=+ID,ACT=$P(ID,";",2)
"RTN","ORWOR1",46,0)
 . S $P(^OR(100,ORIFN,8,+ACT,2),"^",3)=X1
"RTN","ORWOR1",47,0)
 S RET=1
"RTN","ORWOR1",48,0)
 Q
"RTN","ORWOR1",49,0)
CRLURL(RET,X1) ;Store the URL's
"RTN","ORWOR1",50,0)
 S RET=$$CRLURL^XUSSPKI(X1)
"RTN","ORWOR1",51,0)
 Q
"RTN","ORWOR1",52,0)
VERIFY(RET,ORDER,DFN)       ;Verify PKI Data
"RTN","ORWOR1",53,0)
 ;DBIA #3750
"RTN","ORWOR1",54,0)
 ;ORDER = ORIFN;ACTION - NOTE: if no ACTION then 1 (new order) is assumed
"RTN","ORWOR1",55,0)
 ;Returned values: "1" if digital signature verifies
"RTN","ORWOR1",56,0)
 ;                 "-1^error message" if DS fails during initial parameter checking
"RTN","ORWOR1",57,0)
 ;                 "898020xx^message" if DS fails during verification
"RTN","ORWOR1",58,0)
 N ORIFN,ORACTION,HASH,DATE
"RTN","ORWOR1",59,0)
 K ^TMP("ORPKIDATA",$J)
"RTN","ORWOR1",60,0)
 I '$G(ORDER) S RET="-1^No order number passed" Q
"RTN","ORWOR1",61,0)
 I '$G(DFN) S RET="-1^No DFN passed" Q
"RTN","ORWOR1",62,0)
 S ORIFN=$P(ORDER,";"),ORACTION=$P(ORDER,";",2)
"RTN","ORWOR1",63,0)
 I 'ORACTION S ORACTION=1
"RTN","ORWOR1",64,0)
 I '$D(^OR(100,ORIFN,0)) S RET="-1^Invalid order number" Q
"RTN","ORWOR1",65,0)
 I DFN'=+$P(^OR(100,ORIFN,0),"^",2) S RET="-1^DFN does not match patient on order" Q
"RTN","ORWOR1",66,0)
 I '$D(^OR(100,ORIFN,8,ORACTION)) S RET="-1^Invalid order action passed" Q
"RTN","ORWOR1",67,0)
 S HASH=$P($G(^OR(100,ORIFN,8,ORACTION,2)),"^",3)
"RTN","ORWOR1",68,0)
 I '$L(HASH) S RET="-1^Order has no PKI Hash" Q
"RTN","ORWOR1",69,0)
 I '$O(^OR(100,ORIFN,8,ORACTION,.2,0)) S RET="-1^Order has no PKI Data" Q
"RTN","ORWOR1",70,0)
 S DATE=$P($G(^OR(100,ORIFN,8,ORACTION,.2,1,0)),"^")
"RTN","ORWOR1",71,0)
 I '$L(DATE) S RET="-1^No date associated with PKI Data" Q
"RTN","ORWOR1",72,0)
 S DATE=$$HL7TFM^XLFDT(DATE),I=0
"RTN","ORWOR1",73,0)
 F  S I=$O(^OR(100,ORIFN,8,ORACTION,.2,I)) Q:'I  S ^TMP("ORPKIDATA",$J,I)=^(I,0)
"RTN","ORWOR1",74,0)
 S RET=$$VERIFY^XUSSPKI(HASH,$NA(^TMP("ORPKIDATA",$J)),DATE)
"RTN","ORWOR1",75,0)
 I RET="OK" S RET=1 Q
"RTN","ORWOR1",76,0)
 I $E(RET,1,7)="-898020" S RET=$E(RET,2,99)
"RTN","ORWOR1",77,0)
 Q
"RTN","ORWOR1",78,0)
CHKDIG(REQ,ORDER)       ;Check if Digital Signature is required
"RTN","ORWOR1",79,0)
 N IFN,ACTION
"RTN","ORWOR1",80,0)
 S REQ=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",81,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,5) S REQ=1
"RTN","ORWOR1",82,0)
 Q
"RTN","ORWOR1",83,0)
GETDTEXT(TEXT,ORDER)    ;Get External Text
"RTN","ORWOR1",84,0)
 N IFN,ACTION
"RTN","ORWOR1",85,0)
 S IFN=+ORDER,ACTION=$P(ORDER,";",2),I=0
"RTN","ORWOR1",86,0)
 F  S I=$O(^OR(100,+IFN,8,+ACTION,.2,I)) Q:'I  S TEXT(I)=^(I,0)
"RTN","ORWOR1",87,0)
 Q
"RTN","ORWOR1",88,0)
GETDSIG(SIG,ORDER)      ;Get Digital Signature
"RTN","ORWOR1",89,0)
 N IFN,ACTION
"RTN","ORWOR1",90,0)
 S SIG=0,IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",91,0)
 I +$P($G(^OR(100,+IFN,8,+ACTION,2)),U,3) S SIG=$P(^(2),"^",3)
"RTN","ORWOR1",92,0)
 Q
"RTN","ORWOR1",93,0)
GETDEA(Y,ORUSER)        ;Get user DEA
"RTN","ORWOR1",94,0)
 S Y=$$DEA^XUSER(,$G(ORUSER))
"RTN","ORWOR1",95,0)
 Q
"RTN","ORWOR1",96,0)
GETDSCH(Y,ORDER)       ;Check if Drug Schedule
"RTN","ORWOR1",97,0)
 N IFN,ACTION
"RTN","ORWOR1",98,0)
 S IFN=+ORDER,ACTION=$P(ORDER,";",2)
"RTN","ORWOR1",99,0)
 S Y=$P($G(^OR(100,+IFN,8,+ACTION,2)),U,4)
"RTN","ORWOR1",100,0)
 Q
"RTN","ORWOR1",101,0)
SETDTEXT(Y,ORDER,ORDEA,ORSIGNER)        ;Set Digital Text data into file 100 & return the array
"RTN","ORWOR1",102,0)
 ;ORDER = ORIFN;ACTION
"RTN","ORWOR1",103,0)
 ;ORDEA = Schedule of Drug (2-5)
"RTN","ORWOR1",104,0)
 ;ORSIGNER = DUZ of signer
"RTN","ORWOR1",105,0)
 N ORSET,IFN,ACT,I
"RTN","ORWOR1",106,0)
 S Y="-1^Digital Text failed to build",IFN=+ORDER,ACT=$P(ORDER,";",2)
"RTN","ORWOR1",107,0)
 I '$G(ORDEA) Q
"RTN","ORWOR1",108,0)
 I '$G(ORSIGNER) S ORSIGNER=DUZ
"RTN","ORWOR1",109,0)
 D DIGTEXT^ORCSAVE1(IFN,ORDEA,ORSIGNER)
"RTN","ORWOR1",110,0)
 S Y=0
"RTN","ORWOR1",111,0)
 I '$G(ORSET) Q
"RTN","ORWOR1",112,0)
 K ^OR(100,IFN,8,ACT,.2)
"RTN","ORWOR1",113,0)
 F I=1:1:ORSET S (Y(I),^OR(100,IFN,8,ACT,.2,I,0))=ORSET(I)
"RTN","ORWOR1",114,0)
 S ^OR(100,IFN,8,ACT,.2,0)="^^"_ORSET_"^"_ORSET_"^"_DT_"^",Y=ORSET
"RTN","ORWOR1",115,0)
 Q
"RTN","ORWOR1",116,0)
GETDATA(Y,ORDER,DFN)    ;Get PKI Data
"RTN","ORWOR1",117,0)
 ;DBIA #3750
"RTN","ORWOR1",118,0)
 ;On error: Y = -1^Error message
"RTN","ORWOR1",119,0)
 ;Else: Y = 1^ Order # ^ Nature of order ^ Order Status ^ Date Signed
"RTN","ORWOR1",120,0)
 ;Y(1) = Patient name ^ Street1 ^ Street2 ^ Street3 ^ City ^ State ^ Zip
"RTN","ORWOR1",121,0)
 ;Y(2) = Drug name_strength_dosage form (Dispense drug) ^ Drug IEN (file 50) ^ Drug quantity prescribed ^ Schedule of medication ^ DEA Schedule
"RTN","ORWOR1",122,0)
 ;Y(3) = Directions for use (SIG)
"RTN","ORWOR1",123,0)
 ;Y(4) = Practitioner's name ^ DUZ ^ Practitioner's (DEA) registration number
"RTN","ORWOR1",124,0)
 ;Y(5) = SiteName ^ SiteStreet1  ^ SiteStreet2 ^ SiteCity  ^ SiteState ^ SiteZip
"RTN","ORWOR1",125,0)
 ;Y(6) = Orderable Item ^ Orderable Item IEN (file 101.43)
"RTN","ORWOR1",126,0)
 N X0,X1,X2,X3,X4,X5,X6,ORNAT,ORSTAT
"RTN","ORWOR1",127,0)
 I '$D(^OR(100,+$G(ORDER),0)) S Y="-1^INVALID ORDER #" Q
"RTN","ORWOR1",128,0)
 I $G(DFN)'=+$P(^OR(100,ORDER,0),"^",2) S Y="-1^INVALID PATIENT ID" Q
"RTN","ORWOR1",129,0)
 I '$D(^OR(100,ORDER,8,1,.2,0)) S Y="-1^MISSING DIGITAL SIGNATURE TEXT" Q
"RTN","ORWOR1",130,0)
 S X0=$G(^OR(100,ORDER,8,1,0))
"RTN","ORWOR1",131,0)
 I $P($G(^OR(100,ORDER,8,1,0)),"^",4)'=7 S Y="-1^ORDER HAS NOT BEEN DIGITALLY SIGNED" Q
"RTN","ORWOR1",132,0)
 S X1=$G(^OR(100,ORDER,8,1,.2,1,0))
"RTN","ORWOR1",133,0)
 I DFN'=$P(X1,"^",4) S Y="-1^PKI PATIENT ID DOES NOT MATCH DFN" Q
"RTN","ORWOR1",134,0)
 S ORNAT=$P(X0,"^",12),ORSTAT=$P($G(^OR(100,ORDER,3)),"^",3)
"RTN","ORWOR1",135,0)
 I ORNAT S ORNAT=$P($G(^ORD(100.02,ORNAT,0)),"^")
"RTN","ORWOR1",136,0)
 I ORSTAT S ORSTAT=ORSTAT_";"_$P(^ORD(100.01,ORSTAT,0),"^")
"RTN","ORWOR1",137,0)
 S Y="1^"_ORDER_"^"_ORNAT_"^"_ORSTAT_"^"_$P(X0,"^",6)
"RTN","ORWOR1",138,0)
 S X2=$G(^OR(100,ORDER,8,1,.2,2,0)),X3=$G(^OR(100,ORDER,8,1,.2,3,0)),X4=$G(^OR(100,ORDER,8,1,.2,4,0)),X5=$G(^OR(100,ORDER,8,1,.2,5,0)),X6=$G(^OR(100,ORDER,8,1,.2,6,0))
"RTN","ORWOR1",139,0)
 S X3=$$VALUE^ORX8(ORDER,"DRUG",,"E")_"^"_$$VALUE^ORX8(ORDER,"DRUG",,"I")_"^"_$P(X3,"^",3,99)
"RTN","ORWOR1",140,0)
 S Y(1)=$P(X1,"^",2)_"^"_X2
"RTN","ORWOR1",141,0)
 S Y(2)=X3,Y(3)=X4,Y(4)=X5,Y(5)=X6
"RTN","ORWOR1",142,0)
 S Y(6)=$$VALUE^ORX8(ORDER,"ORDERABLE",,"E")_"^"_$$VALUE^ORX8(ORDER,"ORDERABLE",,"I")
"RTN","ORWOR1",143,0)
 Q
"RTN","ORWPCE3")
0^5^B56135760
"RTN","ORWPCE3",1,0)
ORWPCE3 ; SLC/KCM/REV/JM/TC - Get a PCE encounter for a TIU document ;04/17/13  08:38
"RTN","ORWPCE3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,190,280,306,371**;Dec 17, 1997;Build 9
"RTN","ORWPCE3",3,0)
 Q
"RTN","ORWPCE3",4,0)
PCE4NOTE(LST,IEN,DFN,VSITSTR) ; Return encounter for an associated note
"RTN","ORWPCE3",5,0)
 ; LST(1)=HDR^AllowEdit^CPTRequired^VStr^Author^hasCPT
"RTN","ORWPCE3",6,0)
 ; LST(n)=TYP+^CODE^CAT^NARR^QUAL1^QUAL2 (QUAL1=Primary!Qty, QUAL2=Prv)
"RTN","ORWPCE3",7,0)
 N VISIT,VSTR,ILST,LOC,CODE,PRIM,QTY,CAT,NARR,PRV,X0,X12,X802,X811,VTYP
"RTN","ORWPCE3",8,0)
 N IPOV,ICPT,IPRV,IIMM,ISK,IPED,IHF,IXAM,ITRT,ICOM,MIDX,MIEN,MCNT,MODS
"RTN","ORWPCE3",9,0)
 I +$G(IEN)<1 D  I 1 ; Get PCE Data on a new note not yet saved
"RTN","ORWPCE3",10,0)
 . S (X0,X12)=""
"RTN","ORWPCE3",11,0)
 . S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE3",12,0)
 . S VSTR=VSITSTR
"RTN","ORWPCE3",13,0)
 E  D
"RTN","ORWPCE3",14,0)
 . S X0=^TIU(8925,IEN,0),X12=$G(^(12))
"RTN","ORWPCE3",15,0)
 . S VISIT=$P(X12,U,7)
"RTN","ORWPCE3",16,0)
 . I 'VISIT S VISIT=$P(X0,U,3)
"RTN","ORWPCE3",17,0)
 . D NOTEVSTR^ORWPCE(.VSTR,IEN)
"RTN","ORWPCE3",18,0)
 S VTYP=$P(VSTR,";",3)
"RTN","ORWPCE3",19,0)
 S ILST=1
"RTN","ORWPCE3",20,0)
 S ICOM=0
"RTN","ORWPCE3",21,0)
 S LST(1)="HDR"_U_("HID"[VTYP)_U_$P(X0,U,11)_U_VSTR_U_$P(X12,U,2)
"RTN","ORWPCE3",22,0)
 ;add hasCPT node
"RTN","ORWPCE3",23,0)
 S LST(1)=LST(1)_U_0
"RTN","ORWPCE3",24,0)
 I VISIT'>0 D  Q
"RTN","ORWPCE3",25,0)
 . I $G(VSTR)'="" M LST=^TMP("ORWPCE",$J,VSTR)  ; get cached visit data
"RTN","ORWPCE3",26,0)
 I $P(LST(1),U,2),VTYP="H" Q                    ; quit if admission
"RTN","ORWPCE3",27,0)
 K ^TMP("PXKENC",$J)
"RTN","ORWPCE3",28,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ORWPCE3",29,0)
 I '$D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0)) Q
"RTN","ORWPCE3",30,0)
 S $P(LST(1),U,6)=$D(^TMP("PXKENC",$J,VISIT,"CPT"))\10
"RTN","ORWPCE3",31,0)
 S X0=^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),LOC=+$P(X0,U,22)
"RTN","ORWPCE3",32,0)
 S ILST=ILST+1,LST(ILST)="VST^DT^"_$P(X0,U)
"RTN","ORWPCE3",33,0)
 S ILST=ILST+1,LST(ILST)="VST^PT^"_$P(X0,U,5)
"RTN","ORWPCE3",34,0)
 S ILST=ILST+1,LST(ILST)="VST^HL^"_LOC_"^^"_$P($G(^SC(LOC,0)),U)
"RTN","ORWPCE3",35,0)
 S ILST=ILST+1,LST(ILST)="VST^PS^0"  ;outpt
"RTN","ORWPCE3",36,0)
 ;S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800))
"RTN","ORWPCE3",37,0)
 N VAL
"RTN","ORWPCE3",38,0)
 D SCSEL^ORWPCE(.VAL,$P(X0,U,5),$P(X0,U),LOC,VISIT)
"RTN","ORWPCE3",39,0)
 S ILST=ILST+1,LST(ILST)="VST^SC^"_$P($P(VAL,";",1),U,2)
"RTN","ORWPCE3",40,0)
 S ILST=ILST+1,LST(ILST)="VST^AO^"_$P($P(VAL,";",2),U,2)
"RTN","ORWPCE3",41,0)
 S ILST=ILST+1,LST(ILST)="VST^IR^"_$P($P(VAL,";",3),U,2)
"RTN","ORWPCE3",42,0)
 S ILST=ILST+1,LST(ILST)="VST^EC^"_$P($P(VAL,";",4),U,2)
"RTN","ORWPCE3",43,0)
 S ILST=ILST+1,LST(ILST)="VST^MST^"_$P($P(VAL,";",5),U,2)
"RTN","ORWPCE3",44,0)
 I $P(VAL,";",6)'="" D
"RTN","ORWPCE3",45,0)
 .S ILST=ILST+1,LST(ILST)="VST^HNC^"_$P($P(VAL,";",6),U,2)
"RTN","ORWPCE3",46,0)
 I $P(VAL,";",7)'="" D
"RTN","ORWPCE3",47,0)
 .S ILST=ILST+1,LST(ILST)="VST^CV^"_$P($P(VAL,";",7),U,2)
"RTN","ORWPCE3",48,0)
 ;for provider
"RTN","ORWPCE3",49,0)
 ; LST(n)="PRV"^ien^^^name^primary/secondary flag
"RTN","ORWPCE3",50,0)
 S IPRV=0 F  S IPRV=$O(^TMP("PXKENC",$J,VISIT,"PRV",IPRV)) Q:'IPRV  D
"RTN","ORWPCE3",51,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PRV",IPRV,0)
"RTN","ORWPCE3",52,0)
 . ;Q:$P(X0,U,4)'="P"
"RTN","ORWPCE3",53,0)
 . S CODE=$P(X0,U),NARR=$P($G(^VA(200,CODE,0)),U)
"RTN","ORWPCE3",54,0)
 . S PRIM=($P(X0,U,4)="P")
"RTN","ORWPCE3",55,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",56,0)
 . S LST(ILST)="PRV"_U_CODE_"^^^"_NARR_"^"_PRIM
"RTN","ORWPCE3",57,0)
 S IPOV=0 F  S IPOV=$O(^TMP("PXKENC",$J,VISIT,"POV",IPOV)) Q:'IPOV  D
"RTN","ORWPCE3",58,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"POV",IPOV,0),X802=$G(^(802)),X811=$G(^(811))
"RTN","ORWPCE3",59,0)
 . S CODE=$P(X0,U),NARR=$P(X0,U,4)
"RTN","ORWPCE3",60,0)
 . I CODE D
"RTN","ORWPCE3",61,0)
 . . S CODE=$P($$ICDDX^ICDCODE(CODE),U,2)
"RTN","ORWPCE3",62,0)
 . . S NARR=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",63,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",64,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",65,0)
 . S PRIM=($P(X0,U,12)="P")
"RTN","ORWPCE3",66,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",67,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",68,0)
 . S LST(ILST)="POV"_U_CODE_U_CAT_U_NARR_U_PRIM_U_PRV
"RTN","ORWPCE3",69,0)
 . I X811]"" D
"RTN","ORWPCE3",70,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",71,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",72,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",73,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",74,0)
 S ICPT=0 F  S ICPT=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT)) Q:'ICPT  D
"RTN","ORWPCE3",75,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"CPT",ICPT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",76,0)
 . S CODE=$$CODEC^ICPTCOD($P(X0,U)) ;ICR #1995
"RTN","ORWPCE3",77,0)
 . S:CODE=-1 CODE=""
"RTN","ORWPCE3",78,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",79,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",80,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",81,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",82,0)
 . S QTY=$P(X0,U,16)
"RTN","ORWPCE3",83,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",84,0)
 . S MCNT=0,MIDX=0,MODS=""
"RTN","ORWPCE3",85,0)
 . F  S MIDX=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX)) Q:'MIDX  D
"RTN","ORWPCE3",86,0)
 . . S MIEN=$G(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX,0))
"RTN","ORWPCE3",87,0)
 . . I +MIEN S MCNT=MCNT+1,MODS=MODS_";/"_MIEN
"RTN","ORWPCE3",88,0)
 . I +MCNT S MODS=MCNT_MODS
"RTN","ORWPCE3",89,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",90,0)
 . S LST(ILST)="CPT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_U_U_MODS
"RTN","ORWPCE3",91,0)
 . I X811]"" D
"RTN","ORWPCE3",92,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",93,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",94,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",95,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",96,0)
 ;for immunization:
"RTN","ORWPCE3",97,0)
 ; LST(n)="IMM"^Code^^^Series^prv^Reaction^Contraindicated^Refused
"RTN","ORWPCE3",98,0)
 S IIMM=0 F  S IIMM=$O(^TMP("PXKENC",$J,VISIT,"IMM",IIMM)) Q:'IIMM  D
"RTN","ORWPCE3",99,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"IMM",IIMM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",100,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",101,0)
 . S:CODE NARR=$P(^AUTTIMM(CODE,0),U)
"RTN","ORWPCE3",102,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",103,0)
 . S CAT=""
"RTN","ORWPCE3",104,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",105,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",106,0)
 . S LST(ILST)="IMM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",107,0)
 . I X811]"" D
"RTN","ORWPCE3",108,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",109,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",110,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",111,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",112,0)
 ;for skin test:
"RTN","ORWPCE3",113,0)
 ; LST(n)="SK"^Code^^^result^prv^reading^d/t read^d/t given
"RTN","ORWPCE3",114,0)
 S ISK=0 F  S ISK=$O(^TMP("PXKENC",$J,VISIT,"SK",ISK)) Q:'ISK  D
"RTN","ORWPCE3",115,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"SK",ISK,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",116,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",117,0)
 . S:CODE NARR=$P(^AUTTSK(CODE,0),U)
"RTN","ORWPCE3",118,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",119,0)
 . S CAT=""
"RTN","ORWPCE3",120,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",121,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",122,0)
 . S LST(ILST)="SK"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,5,6)_U_$P(X12,U)
"RTN","ORWPCE3",123,0)
 . I X811]"" D
"RTN","ORWPCE3",124,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",125,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",126,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",127,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",128,0)
 ;for patient education:
"RTN","ORWPCE3",129,0)
 ; LST(n)="PED"^Code^^^level of understanding^prv
"RTN","ORWPCE3",130,0)
 S IPED=0 F  S IPED=$O(^TMP("PXKENC",$J,VISIT,"PED",IPED)) Q:'IPED  D
"RTN","ORWPCE3",131,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PED",IPED,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",132,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",133,0)
 . S:CODE NARR=$P(^AUTTEDT(CODE,0),U)
"RTN","ORWPCE3",134,0)
 . S QTY=$P(X0,U,6)
"RTN","ORWPCE3",135,0)
 . S CAT=""
"RTN","ORWPCE3",136,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",137,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",138,0)
 . S LST(ILST)="PED"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",139,0)
 . I X811]"" D
"RTN","ORWPCE3",140,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",141,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",142,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",143,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",144,0)
 ;for health factors:
"RTN","ORWPCE3",145,0)
 ; LST(n)="HF"^Code^^^level/severity^prv
"RTN","ORWPCE3",146,0)
 S IHF=0 F  S IHF=$O(^TMP("PXKENC",$J,VISIT,"HF",IHF)) Q:'IHF  D
"RTN","ORWPCE3",147,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"HF",IHF,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",148,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",149,0)
 . S:CODE NARR=$P(^AUTTHF(CODE,0),U)
"RTN","ORWPCE3",150,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",151,0)
 . S CAT=""
"RTN","ORWPCE3",152,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",153,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",154,0)
 . S LST(ILST)="HF"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",155,0)
 . I X811]"" D
"RTN","ORWPCE3",156,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",157,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",158,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",159,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",160,0)
 ;for exam:
"RTN","ORWPCE3",161,0)
 ; LST(n)="XAM"^Code^^^result^prv
"RTN","ORWPCE3",162,0)
 S IXAM=0 F  S IXAM=$O(^TMP("PXKENC",$J,VISIT,"XAM",IXAM)) Q:'IXAM  D
"RTN","ORWPCE3",163,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"XAM",IXAM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",164,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",165,0)
 . S:CODE NARR=$P(^AUTTEXAM(CODE,0),U)
"RTN","ORWPCE3",166,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",167,0)
 . S CAT=""
"RTN","ORWPCE3",168,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",169,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",170,0)
 . S LST(ILST)="XAM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",171,0)
 . I X811]"" D
"RTN","ORWPCE3",172,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",173,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",174,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",175,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",176,0)
 ;for treatment:
"RTN","ORWPCE3",177,0)
 ; LST(n)="TRT"^Code^CAT^NARR^QTY^prv
"RTN","ORWPCE3",178,0)
 S ITRT=0 F  S ITRT=$O(^TMP("PXKENC",$J,VISIT,"TRT",ITRT)) Q:'ITRT  D
"RTN","ORWPCE3",179,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"TRT",ITRT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",180,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",181,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",182,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",183,0)
 . S NARR=$P(X0,U,6)
"RTN","ORWPCE3",184,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",185,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",186,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",187,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",188,0)
 . S LST(ILST)="TRT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",189,0)
 . I X811]"" D
"RTN","ORWPCE3",190,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",191,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",192,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",193,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",194,0)
 Q
"RTN","ORWPCE3",195,0)
GETDXTXT(ORY,NARR,CODE) ; RPC to resolve Dx Text for PCE view
"RTN","ORWPCE3",196,0)
 S ORY=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",197,0)
 Q
"RTN","ORWPCE3",198,0)
SETNARR(NARR,CODE) ; Set narrative string
"RTN","ORWPCE3",199,0)
 N I
"RTN","ORWPCE3",200,0)
 I (NARR?1.N),($P($G(^AUTNPOV(+NARR,0)),U)]"") S NARR=$P($G(^AUTNPOV(+NARR,0)),U)
"RTN","ORWPCE3",201,0)
 ;S:(ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD)) NARR=$P(NARR," (")_" - "_ICDD_" - "_$S(NARR[" (":" (",1:"")_$P(NARR," (",2)
"RTN","ORWPCE3",202,0)
 ;S:NARR'[CODE NARR=$S(NARR["(SCT":$P(NARR,")")_", ",1:NARR_" (")_"ICD-9-CM "_CODE_")"
"RTN","ORWPCE3",203,0)
 I NARR["(SNOMED CT" S NARR=$P(NARR,"(")_"(SCT"_$P($P(NARR,")"),"(SNOMED CT",2)_")"
"RTN","ORWPCE3",204,0)
 E  I NARR["SNOMED CT" S NARR=$P(NARR,"SNOMED CT")_"(SCT"_$P($P(NARR,":"),"SNOMED CT",2)_")"
"RTN","ORWPCE3",205,0)
 I CODE["/" F I=1:1:$L(CODE,"/") D
"RTN","ORWPCE3",206,0)
 . N ICDC,ICDD S ICDC=$P(CODE,"/",I),ICDD=$$ICDDESC(ICDC)
"RTN","ORWPCE3",207,0)
 . S:(NARR'[ICDC)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" (ICD-9-CM "_ICDC_")"
"RTN","ORWPCE3",208,0)
 E  D
"RTN","ORWPCE3",209,0)
 . N ICDD S ICDD=$$ICDDESC(CODE)
"RTN","ORWPCE3",210,0)
 . S:(NARR'[CODE)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" (ICD-9-CM "_CODE_")"
"RTN","ORWPCE3",211,0)
 Q NARR
"RTN","ORWPCE3",212,0)
ICDDESC(ORCODE,ORDT) ; Get description for ICD9 Code
"RTN","ORWPCE3",213,0)
 N ICDD,ORY,ICDY S ORY="",ORDT=$G(ORDT,DT)
"RTN","ORWPCE3",214,0)
 S ICDY=$$ICDD^ICDCODE(ORCODE,"ICDD",ORDT)
"RTN","ORWPCE3",215,0)
 I 'ICDY G ICDDESQ
"RTN","ORWPCE3",216,0)
 S ORY=$$SENTENCE^XLFSTR($G(ICDD(1)))
"RTN","ORWPCE3",217,0)
ICDDESQ Q ORY
"RTN","ORY371")
0^1^B3828070
"RTN","ORY371",1,0)
ORY371 ;ISL/TC,JER - Pre- and Post-install for patch OR*3*371 ;03/27/13  04:56
"RTN","ORY371",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**371**;Dec 17, 1997;Build 9
"RTN","ORY371",3,0)
 ;
"RTN","ORY371",4,0)
PRE ; Initiate pre-init processes
"RTN","ORY371",5,0)
 Q
"RTN","ORY371",6,0)
 ;
"RTN","ORY371",7,0)
POST ; Initiate post-init processes
"RTN","ORY371",8,0)
 D DEA
"RTN","ORY371",9,0)
 Q
"RTN","ORY371",10,0)
 ;
"RTN","ORY371",11,0)
DEA ;
"RTN","ORY371",12,0)
 N ORMSG,ORERR
"RTN","ORY371",13,0)
 S ORMSG(1)="By completing the two-factor authentication protocol at this time, you are legally signing the prescription(s) and authorizing the transmission of the above information to the pharmacy for dispensing.  "
"RTN","ORY371",14,0)
 S ORMSG(2)="The two-factor authentication protocol may only be completed by the practitioner whose name and DEA registration number appear above."
"RTN","ORY371",15,0)
 D EN^XPAR("SYS","OR DEA TEXT",,.ORMSG,.ORERR)
"RTN","ORY371",16,0)
 Q
"SEC","^DIC",101.52,101.52,0,"AUDIT")
@
"SEC","^DIC",101.52,101.52,0,"DD")
@
"SEC","^DIC",101.52,101.52,0,"DEL")
@
"SEC","^DIC",101.52,101.52,0,"LAYGO")
@
"SEC","^DIC",101.52,101.52,0,"RD")

"SEC","^DIC",101.52,101.52,0,"WR")
@
"VER")
8.0^22.0
"^DD",101.52,101.52,0)
FIELD^^41^31
"^DD",101.52,101.52,0,"DDA")
N
"^DD",101.52,101.52,0,"DT")
3130219
"^DD",101.52,101.52,0,"IX","AC",101.52,.01)

"^DD",101.52,101.52,0,"IX","B",101.52,.01)

"^DD",101.52,101.52,0,"NM","ORDER DEA ARCHIVE INFO")

"^DD",101.52,101.52,.01,0)
CPRS ORDER NUMBER^RP100'a^OR(100,^0;1^Q
"^DD",101.52,101.52,.01,1,0)
^.1
"^DD",101.52,101.52,.01,1,1,0)
101.52^B
"^DD",101.52,101.52,.01,1,1,1)
S ^ORPA(101.52,"B",$E(X,1,30),DA)=""
"^DD",101.52,101.52,.01,1,1,2)
K ^ORPA(101.52,"B",$E(X,1,30),DA)
"^DD",101.52,101.52,.01,1,2,0)
101.52^AC^MUMPS
"^DD",101.52,101.52,.01,1,2,1)
D AUDIT^ORDEAAUD
"^DD",101.52,101.52,.01,1,2,2)
Q
"^DD",101.52,101.52,.01,1,2,"%D",0)
^^1^1^3130219^
"^DD",101.52,101.52,.01,1,2,"%D",1,0)
Populates the STACK field (#41).
"^DD",101.52,101.52,.01,1,2,"DT")
3130219
"^DD",101.52,101.52,.01,3)
Enter the CPRS order number associated with this archive entry.
"^DD",101.52,101.52,.01,21,0)
^^1^1^3121204^
"^DD",101.52,101.52,.01,21,1,0)
The CPRS order number that is associated with this archive entry.
"^DD",101.52,101.52,.01,"AUDIT")
y
"^DD",101.52,101.52,.01,"DT")
3130314
"^DD",101.52,101.52,1,0)
PRESCRIPTION NUMBER^P52'a^PSRX(^0;2^Q
"^DD",101.52,101.52,1,3)
Enter the prescription number associated with this archive entry.
"^DD",101.52,101.52,1,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,1,21,1,0)
The prescription number associated with this archive entry. This field is
"^DD",101.52,101.52,1,21,2,0)
populated once Outpatient Pharmacy has determined that the contents of the
"^DD",101.52,101.52,1,21,3,0)
prescription received match what was entered by the provider.
"^DD",101.52,101.52,1,"AUDIT")
y
"^DD",101.52,101.52,1,"DT")
3130314
"^DD",101.52,101.52,2,0)
DIG SIG HASH^Fa^^0;3^K:$L(X)>100!($L(X)<1) X
"^DD",101.52,101.52,2,3)
Enter the digital signature hash associated with this order (1-100 characters).
"^DD",101.52,101.52,2,21,0)
^^6^6^3121205^^
"^DD",101.52,101.52,2,21,1,0)
This is the digital signature hash associated with this order. This 
"^DD",101.52,101.52,2,21,2,0)
'hash' is calculated by a Microsoft API that is called by the Kernel code 
"^DD",101.52,101.52,2,21,3,0)
during the signature process in CPRS.
"^DD",101.52,101.52,2,21,4,0)
 
"^DD",101.52,101.52,2,21,5,0)
It is stored here so that, at any time, a hash can be calculated and 
"^DD",101.52,101.52,2,21,6,0)
compared to this value to ensure the contents have not changed.
"^DD",101.52,101.52,2,"AUDIT")
y
"^DD",101.52,101.52,2,"DT")
3130314
"^DD",101.52,101.52,4,0)
ISSUANCE DATE^D^^1;1^S %DT="EX" D ^%DT S X=Y K:3110701>X X
"^DD",101.52,101.52,4,3)
Enter the date of issuance for this order.
"^DD",101.52,101.52,4,21,0)
^^2^2^3121204^
"^DD",101.52,101.52,4,21,1,0)
This is the date this order was issued. In other words, what date was it 
"^DD",101.52,101.52,4,21,2,0)
entered into CPRS.
"^DD",101.52,101.52,4,"DT")
3121207
"^DD",101.52,101.52,6,0)
DRUG NAME^F^^1;2^K:$L(X)>40!($L(X)<1) X
"^DD",101.52,101.52,6,3)
Enter the drug name associated with this order (1-40 characters).
"^DD",101.52,101.52,6,21,0)
^^4^4^3121206^
"^DD",101.52,101.52,6,21,1,0)
This is the drug name associated with the CPRS orderable item for this 
"^DD",101.52,101.52,6,21,2,0)
order. It will only be present if the dispense drug is known at the time 
"^DD",101.52,101.52,6,21,3,0)
the archive entry is created. This information comes from the GENERIC 
"^DD",101.52,101.52,6,21,4,0)
NAME field (#.01) from the DRUG file (#50).
"^DD",101.52,101.52,6,"DT")
3121206
"^DD",101.52,101.52,8,0)
QTY PRESCRIBED^NJ11,2^^1;5^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."3.N) X
"^DD",101.52,101.52,8,3)
Enter the quantity ordered by the provider (1 and 99999999 maximum 2 decimal digits).
"^DD",101.52,101.52,8,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,8,21,1,0)
This is the quantity of pills/tablets/liquid specified by the provider 
"^DD",101.52,101.52,8,21,2,0)
for this order. This field correlates to the QTY field (#7) in the 
"^DD",101.52,101.52,8,21,3,0)
PRESCRIPTION file (#52).
"^DD",101.52,101.52,8,"DT")
3121206
"^DD",101.52,101.52,9,0)
DIRECTIONS FOR USE (SIG)^101.529A^^2;0
"^DD",101.52,101.52,9,21,0)
^^4^4^3121205^^
"^DD",101.52,101.52,9,21,1,0)
This is a multiple field for storing the directions for use. In this 
"^DD",101.52,101.52,9,21,2,0)
particular storage location, directions are stored in the format that 
"^DD",101.52,101.52,9,21,3,0)
they are transmitted via the HL7 array and protocols to Pharmacy, rather 
"^DD",101.52,101.52,9,21,4,0)
than in human readable format.
"^DD",101.52,101.52,10,0)
DEA #^F^^3;1^K:$L(X)>20!($L(X)<1) X
"^DD",101.52,101.52,10,3)
Enter the DEA # or the Facility DEA - VA # used by the provider to sign this order (1-20 characters).
"^DD",101.52,101.52,10,21,0)
^^10^10^3121206^
"^DD",101.52,101.52,10,21,1,0)
This is the DEA license number of the provider that signed the order. The 
"^DD",101.52,101.52,10,21,2,0)
DEA number is pulled from one of two places. If present and valid, it 
"^DD",101.52,101.52,10,21,3,0)
will be the DEA# field (#53.2) in the NEW PERSON file (#200) at the time
"^DD",101.52,101.52,10,21,4,0)
the order is signed.
"^DD",101.52,101.52,10,21,5,0)
 
"^DD",101.52,101.52,10,21,6,0)
If the provider doesn't have personal DEA credentials, this field will 
"^DD",101.52,101.52,10,21,7,0)
contain the facility DEA number, followed by a '-', followed by the
"^DD",101.52,101.52,10,21,8,0)
provider's VA suffix. This number pulls from the FACILITY DEA NUMBER field
"^DD",101.52,101.52,10,21,9,0)
(#52) in the INSTITUTION file (#4) and the VA# field (#53.3) in the NEW
"^DD",101.52,101.52,10,21,10,0)
PERSON file (#200).
"^DD",101.52,101.52,10,"DT")
3121206
"^DD",101.52,101.52,11,0)
DETOX #^F^^3;2^K:$L(X)>9!($L(X)<3) X
"^DD",101.52,101.52,11,3)
Enter the Detox/Maintenance number for this order (3-9 characters).
"^DD",101.52,101.52,11,21,0)
^^7^7^3121205^
"^DD",101.52,101.52,11,21,1,0)
This is the Detox/Maintenance license number associated with the provider 
"^DD",101.52,101.52,11,21,2,0)
that signed this order. This comes from the DETOX/MAINTENANCE ID 
"^DD",101.52,101.52,11,21,3,0)
NUMBER field (#53.11) from the NEW PERSON file (#200) at the time the
"^DD",101.52,101.52,11,21,4,0)
order is signed.
"^DD",101.52,101.52,11,21,5,0)
 
"^DD",101.52,101.52,11,21,6,0)
Not every medication requires a Detox/Maintenance license, so this field 
"^DD",101.52,101.52,11,21,7,0)
will frequently be blank.
"^DD",101.52,101.52,11,"DT")
3121205
"^DD",101.52,101.52,12,0)
PROVIDER NAME^F^^3;3^K:$L(X)>35!($L(X)<3) X
"^DD",101.52,101.52,12,3)
Enter the name of the provider associated with this order (3-35 characters).
"^DD",101.52,101.52,12,21,0)
^^2^2^3121205^
"^DD",101.52,101.52,12,21,1,0)
The name of the provider, from the NAME field (#.01) of the NEW PERSON
"^DD",101.52,101.52,12,21,2,0)
file (#200), at the time the order is signed.
"^DD",101.52,101.52,12,"DT")
3121205
"^DD",101.52,101.52,13,0)
PROVIDER ADDRESS #1^F^^4;1^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,13,3)
Enter the name of the VA facility where this order was signed (3-30 character).
"^DD",101.52,101.52,13,21,0)
^^2^2^3121206^
"^DD",101.52,101.52,13,21,1,0)
This is the VA facility name where this order was signed. This comes from
"^DD",101.52,101.52,13,21,2,0)
the NAME field (.01) of the INSTITUTION file (#4).
"^DD",101.52,101.52,13,"DT")
3121206
"^DD",101.52,101.52,14,0)
PROVIDER ADDRESS #2^F^^4;2^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,14,3)
Enter Street Address 1 for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,14,21,0)
^^3^3^3121206^^
"^DD",101.52,101.52,14,21,1,0)
This is the first line of the street address for the VA facility 
"^DD",101.52,101.52,14,21,2,0)
where this order was signed. This comes from the STREET ADDR. 1 field
"^DD",101.52,101.52,14,21,3,0)
(1.01) of the INSTITUTION file (#4).
"^DD",101.52,101.52,14,"DT")
3121206
"^DD",101.52,101.52,15,0)
PROVIDER ADDRESS #3^F^^4;3^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,15,3)
Enter Street Address 2 for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,15,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,15,21,1,0)
This is the second line of the street address of the VA facility 
"^DD",101.52,101.52,15,21,2,0)
where this order was signed. This comes from the STREET ADDR. 2 field
"^DD",101.52,101.52,15,21,3,0)
(#1.02) in the INSTITUTION file (#4).
"^DD",101.52,101.52,15,"DT")
3121206
"^DD",101.52,101.52,16,0)
PROVIDER CITY^F^^4;4^K:$L(X)>40!($L(X)<2) X
"^DD",101.52,101.52,16,3)
Enter the City for the VA facility where this order was signed (2-40 characters).
"^DD",101.52,101.52,16,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,16,21,1,0)
This is the city associated with the VA facility where this order was 
"^DD",101.52,101.52,16,21,2,0)
signed. This comes from the CITY field (#1.03) in the INSTITUTION file
"^DD",101.52,101.52,16,21,3,0)
(#4).
"^DD",101.52,101.52,16,"DT")
3121206
"^DD",101.52,101.52,17,0)
PROVIDER STATE^F^^4;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,17,3)
Enter the state for the VA facility where this order was signed (1-30 characters).
"^DD",101.52,101.52,17,21,0)
^^2^2^3121205^
"^DD",101.52,101.52,17,21,1,0)
This is the state associated with the VA facility where this order was 
"^DD",101.52,101.52,17,21,2,0)
signed. This is from the NAME field (.01) of the STATE file (#5).
"^DD",101.52,101.52,17,"DT")
3121205
"^DD",101.52,101.52,17.5,0)
PROVIDER ZIP+4^F^^4;6^K:$L(X)>10!($L(X)<5) X
"^DD",101.52,101.52,17.5,3)
Enter ZIP or ZIP+4 for the VA facility where this order was signed (5 - 10 characters).
"^DD",101.52,101.52,17.5,21,0)
^^3^3^3121206^
"^DD",101.52,101.52,17.5,21,1,0)
This is the ZIP or ZIP + 4 of the VA facility where this order was 
"^DD",101.52,101.52,17.5,21,2,0)
signed. This field comes from the ZIP field (#1.04) in the INSTITUTION
"^DD",101.52,101.52,17.5,21,3,0)
file (#4).
"^DD",101.52,101.52,17.5,"DT")
3121206
"^DD",101.52,101.52,18,0)
PATIENT NAME^F^^5;1^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,18,3)
Enter the name of the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,18,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,18,21,1,0)
This is the patient name of the patient for whom the prescription was 
"^DD",101.52,101.52,18,21,2,0)
written and signed. This is correlated to the NAME field (#.01) of the 
"^DD",101.52,101.52,18,21,3,0)
PATIENT file (#2).
"^DD",101.52,101.52,18,"DT")
3121205
"^DD",101.52,101.52,19,0)
PATIENT^P2'^DPT(^5;2^Q
"^DD",101.52,101.52,19,3)
Select the patient associated with this order.
"^DD",101.52,101.52,19,21,0)
^^1^1^3121205^
"^DD",101.52,101.52,19,21,1,0)
This is the patient associated with this order.
"^DD",101.52,101.52,19,"DT")
3121205
"^DD",101.52,101.52,20,0)
ICN^F^^5;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,20,3)
Enter the ICN for the patient associated with this order (1-30 characters).
"^DD",101.52,101.52,20,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,20,21,1,0)
This is the Integration Control Registration (ICN) number associated with 
"^DD",101.52,101.52,20,21,2,0)
the patient for which this order was written/signed. This is the value 
"^DD",101.52,101.52,20,21,3,0)
returned from GETICN^MPIF001. It may be a national ICN or a local ICN.
"^DD",101.52,101.52,20,"DT")
3121205
"^DD",101.52,101.52,21,0)
PATIENT ADDRESS #1^F^^6;1^K:$L(X)>35!($L(X)<3) X
"^DD",101.52,101.52,21,3)
Enter address line 1 for the patient associated with this order (3-35 characters).
"^DD",101.52,101.52,21,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,21,21,1,0)
This is the address of the patient at the time the order was placed. It 
"^DD",101.52,101.52,21,21,2,0)
is the VAPA(1) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,21,21,3,0)
temporary or foreign address, it would be the STREET ADDRESS [LINE 1]
"^DD",101.52,101.52,21,21,4,0)
field (#.111) from the PATIENT file (#2).
"^DD",101.52,101.52,21,"DT")
3121205
"^DD",101.52,101.52,22,0)
PATIENT ADDRESS #2^F^^6;2^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,22,3)
Enter address line 2 for the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,22,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,22,21,1,0)
This is address line 2 of the patient associated with this order. It is 
"^DD",101.52,101.52,22,21,2,0)
the VAPA(2) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,22,21,3,0)
temporary or foreign address, it would be the STREET ADDRESS [LINE 2]
"^DD",101.52,101.52,22,21,4,0)
field (#.112) from the PATIENT file (#2).
"^DD",101.52,101.52,22,"DT")
3121205
"^DD",101.52,101.52,24,0)
PATIENT ADDRESS #3^F^^6;3^K:$L(X)>30!($L(X)<3) X
"^DD",101.52,101.52,24,3)
Enter address line 3 for the patient associated with this order (3-30 characters).
"^DD",101.52,101.52,24,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,24,21,1,0)
This is address line 3 for the patient associated with this order. It is 
"^DD",101.52,101.52,24,21,2,0)
the VAPA(3) return value from the call to ADD^VADPT. Assuming no 
"^DD",101.52,101.52,24,21,3,0)
temporary or foreign address, it would the STREET ADDRESS [LINE 3] field 
"^DD",101.52,101.52,24,21,4,0)
(#.113) from the PATIENT file (#2).
"^DD",101.52,101.52,24,"DT")
3121205
"^DD",101.52,101.52,25,0)
PATIENT CITY^F^^6;4^K:$L(X)>15!($L(X)<2) X
"^DD",101.52,101.52,25,3)
Enter the city for the address of that patient associated with this order (2-15 characters).
"^DD",101.52,101.52,25,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,25,21,1,0)
This is the city associated with the address for the patient associated 
"^DD",101.52,101.52,25,21,2,0)
with this order. It is the VAPA(4) return value from the call to
"^DD",101.52,101.52,25,21,3,0)
ADD^VADPT. Assuming no temporary or foreign address, it would the CITY 
"^DD",101.52,101.52,25,21,4,0)
field (#.114) from the PATIENT file (#2).
"^DD",101.52,101.52,25,"DT")
3121206
"^DD",101.52,101.52,26,0)
PATIENT STATE^F^^6;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.52,101.52,26,3)
Enter the state for the patient associated with this order (1-30 characters).
"^DD",101.52,101.52,26,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,26,21,1,0)
This is the state for the address of the patient associated with this 
"^DD",101.52,101.52,26,21,2,0)
order. It is the VAPA(5) return value from the call to ADD^VADPT. Assuming
"^DD",101.52,101.52,26,21,3,0)
no temporary or foreign address, it would the STATE field (#.115) from the
"^DD",101.52,101.52,26,21,4,0)
PATIENT file (#2).
"^DD",101.52,101.52,26,"DT")
3121206
"^DD",101.52,101.52,27,0)
PATIENT ZIP+4^F^^6;6^K:$L(X)>10!($L(X)<5) X
"^DD",101.52,101.52,27,3)
Enter ZIP or ZIP + 4 for the address of the patient associated with this order.
"^DD",101.52,101.52,27,21,0)
^^4^4^3121205^
"^DD",101.52,101.52,27,21,1,0)
This is the ZIP or ZIP+4 code for the city of the address for the patient 
"^DD",101.52,101.52,27,21,2,0)
associated with this order. It is the VAPA(6) return value from the call
"^DD",101.52,101.52,27,21,3,0)
to ADD^VADPT. Assuming no temporary or foreign address, it would the ZIP
"^DD",101.52,101.52,27,21,4,0)
CODE field (#.116) from the PATIENT file (#2).
"^DD",101.52,101.52,27,"DT")
3121205
"^DD",101.52,101.52,28,0)
# OF REFILLS^NJ2,0^^1;6^K:+X'=X!(X>13)!(X<0)!(X?.E1"."1.N) X
"^DD",101.52,101.52,28,3)
Enter the number of refills for this order (a whole number from 0 to 13).
"^DD",101.52,101.52,28,21,0)
^^5^5^3121205^
"^DD",101.52,101.52,28,21,1,0)
This is the number of refills specified by the provider at the time the 
"^DD",101.52,101.52,28,21,2,0)
drug is ordered. There are some limitations on refills for controlled 
"^DD",101.52,101.52,28,21,3,0)
substances and there are times when Pharmacy may correct this after 
"^DD",101.52,101.52,28,21,4,0)
validating the hash. This is correlated to the # OF REFILLS (#9) of the 
"^DD",101.52,101.52,28,21,5,0)
PRESCRIPTION file (#52).
"^DD",101.52,101.52,28,"DT")
3121205
"^DD",101.52,101.52,29,0)
DISPENSE DRUG^P50'^PSDRUG(^1;3^Q
"^DD",101.52,101.52,29,3)
Select the Dispense Drug.
"^DD",101.52,101.52,29,21,0)
^^3^3^3121205^
"^DD",101.52,101.52,29,21,1,0)
This is the dispense drug associated with this order. It is possible this
"^DD",101.52,101.52,29,21,2,0)
field will be blank if there is no dispense drug known at the time the
"^DD",101.52,101.52,29,21,3,0)
order was signed in CPRS.
"^DD",101.52,101.52,29,"DT")
3121205
"^DD",101.52,101.52,30,0)
DEA SCHEDULE^F^^1;4^K:$L(X)>6!($L(X)<1) X
"^DD",101.52,101.52,30,3)
Enter the DEA Schedule for the dispense drug associated with this order (1-6 characters).
"^DD",101.52,101.52,30,21,0)
^^4^4^3121206^
"^DD",101.52,101.52,30,21,1,0)
This is the Drug Enforcement Agency (DEA) drug schedule associated with 
"^DD",101.52,101.52,30,21,2,0)
the medication on this order. For example: 2 for a schedule two 
"^DD",101.52,101.52,30,21,3,0)
non-narcotic or 2n for the schedule two narcotic. This comes from the 
"^DD",101.52,101.52,30,21,4,0)
DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",101.52,101.52,30,"DT")
3121206
"^DD",101.52,101.52,31,0)
PROVIDER^P200'^VA(200,^3;4^Q
"^DD",101.52,101.52,31,3)
Select the provider who signed this order.
"^DD",101.52,101.52,31,21,0)
^^1^1^3121205^
"^DD",101.52,101.52,31,21,1,0)
This is the provider who signed this order.
"^DD",101.52,101.52,31,"DT")
3121207
"^DD",101.52,101.52,40,0)
SOURCE^101.53^^7;0
"^DD",101.52,101.52,41,0)
STACK^F^^8;1^K:$L(X)>100!($L(X)<1) X
"^DD",101.52,101.52,41,3)
Enter the stack trace of the process that is creating this entry.
"^DD",101.52,101.52,41,21,0)
^^1^1^3130219^
"^DD",101.52,101.52,41,21,1,0)
Stores the stack trace of the process that created this entry.
"^DD",101.52,101.52,41,"DT")
3130219
"^DD",101.52,101.529,0)
DIRECTIONS FOR USE (SIG) SUB-FIELD^^.01^1
"^DD",101.52,101.529,0,"DT")
3110812
"^DD",101.52,101.529,0,"NM","DIRECTIONS FOR USE (SIG)")

"^DD",101.52,101.529,0,"UP")
101.52
"^DD",101.52,101.529,.01,0)
DIRECTIONS FOR USE (SIG)^F^^0;1^K:$L(X)>250!($L(X)<1) X
"^DD",101.52,101.529,.01,1,0)
^.1^^0
"^DD",101.52,101.529,.01,3)
Enter the directions for use associated with this order (1-250 characters).
"^DD",101.52,101.529,.01,21,0)
^^2^2^3121206^
"^DD",101.52,101.529,.01,21,1,0)
The directions for use associated with this order. The format will be the
"^DD",101.52,101.529,.01,21,2,0)
same as that in the HL7 message sent, via a protocol call, to Pharmacy.
"^DD",101.52,101.529,.01,"DT")
3121206
"^DD",101.52,101.53,0)
SOURCE SUB-FIELD^^2^2
"^DD",101.52,101.53,0,"DT")
3121210
"^DD",101.52,101.53,0,"IX","B",101.53,.01)

"^DD",101.52,101.53,0,"NM","SOURCE")

"^DD",101.52,101.53,0,"UP")
101.52
"^DD",101.52,101.53,.01,0)
SOURCE^F^^0;1^K:$L(X)>8!($L(X)<1) X
"^DD",101.52,101.53,.01,1,0)
^.1
"^DD",101.52,101.53,.01,1,1,0)
101.53^B
"^DD",101.52,101.53,.01,1,1,1)
Q
"^DD",101.52,101.53,.01,1,1,2)
Q
"^DD",101.52,101.53,.01,3)
Enter the routine name that generated the modification/entry (1-8 characters).
"^DD",101.52,101.53,.01,21,0)
^^2^2^3121210^
"^DD",101.52,101.53,.01,21,1,0)
This multiple will contain the routine that generated either the initial 
"^DD",101.52,101.53,.01,21,2,0)
entry or any modifications.
"^DD",101.52,101.53,.01,"DT")
3130219
"^DD",101.52,101.53,2,0)
TIME OF ENTRY^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",101.52,101.53,2,3)
Enter the date/time this entry was made.
"^DD",101.52,101.53,2,21,0)
^^2^2^3121210^
"^DD",101.52,101.53,2,21,1,0)
This is the date and time the entry was made/modified. This is part of 
"^DD",101.52,101.53,2,21,2,0)
the additional auditing of the archive entries.
"^DD",101.52,101.53,2,"DT")
3121210
"^DIC",101.52,101.52,0)
ORDER DEA ARCHIVE INFO^101.52
"^DIC",101.52,101.52,0,"GL")
^ORPA(101.52,
"^DIC",101.52,101.52,"%",0)
^1.005^^
"^DIC",101.52,101.52,"%D",0)
^^25^25^3130219^
"^DIC",101.52,101.52,"%D",1,0)
The purpose of this file is to satisfy the Drug Enforcement Agency (DEA) requirement
"^DIC",101.52,101.52,"%D",2,0)
for an electronic prescribing system to maintain an archive of all controlled 
"^DIC",101.52,101.52,"%D",3,0)
substance prescriptions that were electronically entered.
"^DIC",101.52,101.52,"%D",4,0)
 
"^DIC",101.52,101.52,"%D",5,0)
The file will store all the information that is considered a part of the 
"^DIC",101.52,101.52,"%D",6,0)
prescription.
"^DIC",101.52,101.52,"%D",7,0)
 
"^DIC",101.52,101.52,"%D",8,0)
The file should always be audited. In addition, the file should NEVER be
"^DIC",101.52,101.52,"%D",9,0)
edited using FileMan. These are both DEA requirements.
"^DIC",101.52,101.52,"%D",10,0)
 
"^DIC",101.52,101.52,"%D",11,0)
In order to satisfy the requirement that both the prescribing (CPRS) and 
"^DIC",101.52,101.52,"%D",12,0)
filling systems (Outpatient Pharmacy) create an archive, but to reduce the 
"^DIC",101.52,101.52,"%D",13,0)
need for additional storage space, both CPRS and Pharmacy will use the same 
"^DIC",101.52,101.52,"%D",14,0)
file. CPRS will create the entries when an order is signed or when a backdoor 
"^DIC",101.52,101.52,"%D",15,0)
order message is received from Pharmacy. Once Pharmacy verifies the data in 
"^DIC",101.52,101.52,"%D",16,0)
the Pharmacy system is an exact match for what CPRS stored, they will 
"^DIC",101.52,101.52,"%D",17,0)
subscribe to the entry in the archive file and will update the PRESCRIPTION 
"^DIC",101.52,101.52,"%D",18,0)
NUMBER (#1) field.
"^DIC",101.52,101.52,"%D",19,0)
 
"^DIC",101.52,101.52,"%D",20,0)
The file was defined in a different global name in order to handle the 
"^DIC",101.52,101.52,"%D",21,0)
volume set from the rest of the CPRS system (i.e., the ORDER file).
"^DIC",101.52,101.52,"%D",22,0)
It is important to note that to fully meet the DEA requirements, the fields 
"^DIC",101.52,101.52,"%D",23,0)
required by the DEA cannot be pointers. We must store the data completely. 
"^DIC",101.52,101.52,"%D",24,0)
The fields that are pointers are for our internal use, rather than for 
"^DIC",101.52,101.52,"%D",25,0)
the DEA purposes.
"^DIC",101.52,"B","ORDER DEA ARCHIVE INFO",101.52)

**END**
**END**
